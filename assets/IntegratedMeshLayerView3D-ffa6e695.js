import{ay as n,ag as p,az as m,ai as i,aj as e,aA as l,al as d}from"./index-4a2a8e32.js";import{x as h}from"./I3SMeshView3D-8307d11f.js";import{n as c}from"./LayerView3D-357435c1.js";import{d as u}from"./LayerView-0086d16f.js";import"./I3SOverrides-4911607f.js";import"./I3SNode-027eba91.js";import"./meshFeatureSet-199a8653.js";import"./MeshGeoreferencedRelativeVertexSpace-2d15e21d.js";import"./MeshLocalVertexSpace-ff29e29f.js";import"./georeference-0b768c20.js";import"./External-d2b9d83b.js";import"./FeatureLayerView3D-19c41144.js";import"./FeatureLayerViewBase3D-b0013a51.js";import"./FeatureLikeLayerView3D-309cc35b.js";import"./dehydratedFeatureComparison-8af36f04.js";import"./queryForSymbologySnapping-3151fb9e.js";import"./elevationInfoUtils-59ca4653.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-78412461.js";import"./optimizedFeatureQueryEngineAdapter-16bcdb07.js";import"./centroid-8e8cfa47.js";import"./PooledRBush-812c43b8.js";import"./quickselect-94603516.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-c9a04bbc.js";import"./normalizeUtils-fd2a5db8.js";import"./normalizeUtilsCommon-1cd3f30a.js";import"./WhereClause-914ffa63.js";import"./executionError-c92d3b85.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./utils-bbf63e79.js";import"./generateRendererUtils-2338da02.js";import"./FeatureStore-98253549.js";import"./BoundsStore-689e73da.js";import"./projectExtentUtils-2cab06fa.js";import"./query-dffe729f.js";import"./pbfQueryUtils-2c4c2b56.js";import"./pbf-5cbd0354.js";import"./EventedSet-988365f4.js";import"./RefreshableLayerView-51230066.js";import"./SceneModification-bbf6005d.js";import"./SceneLayerWorker-5fac4a39.js";const g=.2;let r=class extends h(c(u)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new m;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(l)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([d("esri.views.3d.layers.SceneLayerView3D")],r);const at=r;export{at as default};

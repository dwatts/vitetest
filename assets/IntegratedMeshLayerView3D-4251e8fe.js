import{ay as n,ag as p,az as m,ai as i,aj as e,aA as l,al as d}from"./index-c2655857.js";import{x as h}from"./I3SMeshView3D-30d3c0b5.js";import{n as c}from"./LayerView3D-35b6a341.js";import{d as u}from"./LayerView-6a87ca6a.js";import"./I3SOverrides-3ea0f945.js";import"./I3SNode-4e1dfdcf.js";import"./meshFeatureSet-f5696b71.js";import"./MeshGeoreferencedRelativeVertexSpace-13b8f062.js";import"./MeshLocalVertexSpace-25f04cf2.js";import"./georeference-e124cffe.js";import"./External-fd46e735.js";import"./FeatureLayerView3D-db75e83a.js";import"./FeatureLayerViewBase3D-dfe91748.js";import"./FeatureLikeLayerView3D-acbe9118.js";import"./dehydratedFeatureComparison-dd199238.js";import"./queryForSymbologySnapping-a78fbc0c.js";import"./elevationInfoUtils-f78c6364.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-ff930589.js";import"./optimizedFeatureQueryEngineAdapter-cbd41ac3.js";import"./centroid-8e8cfa47.js";import"./PooledRBush-adb57b31.js";import"./quickselect-d68fa842.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-6e2ab665.js";import"./normalizeUtils-983801c4.js";import"./normalizeUtilsCommon-ecf4c6e7.js";import"./WhereClause-47630fa1.js";import"./executionError-c92d3b85.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./utils-320a5b92.js";import"./generateRendererUtils-1b6e1b3d.js";import"./FeatureStore-a4339c70.js";import"./BoundsStore-17c4899d.js";import"./projectExtentUtils-738de624.js";import"./query-dae0ecc4.js";import"./pbfQueryUtils-1b958c5a.js";import"./pbf-261a804a.js";import"./EventedSet-961faba7.js";import"./RefreshableLayerView-b12aaf50.js";import"./SceneModification-f4ed142b.js";import"./SceneLayerWorker-b2e5cad6.js";const g=.2;let r=class extends h(c(u)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new m;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(l)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([d("esri.views.3d.layers.SceneLayerView3D")],r);const at=r;export{at as default};

import{ay as n,ag as p,az as m,ai as i,aj as e,aA as l,al as d}from"./index-86f9eeba.js";import{x as h}from"./I3SMeshView3D-e13ccf2b.js";import{n as c}from"./LayerView3D-856849a4.js";import{d as u}from"./LayerView-9b11ad19.js";import"./I3SOverrides-d105c04d.js";import"./I3SNode-34102e90.js";import"./meshFeatureSet-605b7313.js";import"./MeshGeoreferencedRelativeVertexSpace-76c6e1a4.js";import"./MeshLocalVertexSpace-2c1f7c8b.js";import"./georeference-f611e4e0.js";import"./External-c7455289.js";import"./FeatureLayerView3D-94073057.js";import"./FeatureLayerViewBase3D-4a97418e.js";import"./FeatureLikeLayerView3D-a21455f5.js";import"./dehydratedFeatureComparison-f42a1327.js";import"./queryForSymbologySnapping-d000bc21.js";import"./elevationInfoUtils-aa61b825.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-97a6404b.js";import"./optimizedFeatureQueryEngineAdapter-783662f4.js";import"./centroid-8e8cfa47.js";import"./PooledRBush-32e9f739.js";import"./quickselect-c3198316.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-42eb1bdd.js";import"./normalizeUtils-da0a6380.js";import"./normalizeUtilsCommon-dcbebb9e.js";import"./WhereClause-e4410e73.js";import"./executionError-c92d3b85.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./utils-79fd0aae.js";import"./generateRendererUtils-98da6fd5.js";import"./FeatureStore-adde8951.js";import"./BoundsStore-115c9e33.js";import"./projectExtentUtils-4fa5c90e.js";import"./query-06a7e906.js";import"./pbfQueryUtils-31002e9b.js";import"./pbf-3c53b7c6.js";import"./EventedSet-ee8c3e4a.js";import"./RefreshableLayerView-49a47e66.js";import"./SceneModification-ba86b2f2.js";import"./SceneLayerWorker-e447f7cd.js";const g=.2;let r=class extends h(c(u)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new m;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(l)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([d("esri.views.3d.layers.SceneLayerView3D")],r);const at=r;export{at as default};

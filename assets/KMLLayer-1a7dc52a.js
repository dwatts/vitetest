import{bK as S,fg as G,jw as z,er as J,cA as A,cE as I,jx as x,jy as w,jz as k,jA as W,a_ as L,ck as V,em as q,aJ as _,aw as m,av as $,cd as M,b_ as O,jB as B,au as F,ai as i,aj as a,jC as D,dq as j,al as C,fL as H,en as U,eo as Q,ep as X,dh as Y,di as Z,dj as ee,b5 as te,df as se,dm as re,cs as ie,ds as oe,bb as le}from"./index-c2655857.js";const ae={esriGeometryPoint:"points",esriGeometryPolyline:"polylines",esriGeometryPolygon:"polygons"};function R(e){const t=e.folders||[],r=t.slice(),s=new Map,o=new Map,h=new Map,b=new Map,v=new Map,f={esriGeometryPoint:o,esriGeometryPolyline:h,esriGeometryPolygon:b};(e.featureCollection&&e.featureCollection.layers||[]).forEach(l=>{const p=S(l);p.featureSet.features=[];const y=l.featureSet.geometryType;s.set(y,p);const c=l.layerDefinition.objectIdField;y==="esriGeometryPoint"?E(o,c,l.featureSet.features):y==="esriGeometryPolyline"?E(h,c,l.featureSet.features):y==="esriGeometryPolygon"&&E(b,c,l.featureSet.features)}),e.groundOverlays&&e.groundOverlays.forEach(l=>{v.set(l.id,l)}),t.forEach(l=>{l.networkLinkIds.forEach(p=>{const y=ue(p,l.id,e.networkLinks);y&&r.push(y)})}),r.forEach(l=>{var p;if(l.featureInfos){l.points=S(s.get("esriGeometryPoint")),l.polylines=S(s.get("esriGeometryPolyline")),l.polygons=S(s.get("esriGeometryPolygon")),l.mapImages=[];for(const y of l.featureInfos)switch(y.type){case"esriGeometryPoint":case"esriGeometryPolyline":case"esriGeometryPolygon":{const c=f[y.type].get(y.id);c&&((p=l[ae[y.type]])==null||p.featureSet.features.push(c));break}case"GroundOverlay":{const c=v.get(y.id);c&&l.mapImages.push(c);break}}l.fullExtent=P([l])}});const d=P(r);return{folders:t,sublayers:r,extent:d}}function T(e,t,r,s){const o=G&&G.findCredential(e);e=z(e,{token:o&&o.token});const h=J.kmlServiceUrl;return A(h,{query:{url:e,model:"simple",folders:"",refresh:r!==0||void 0,outSR:JSON.stringify(t)},responseType:"json",signal:s})}function K(e,t,r=null,s=[]){const o=[],h={},b=t.sublayers,v=t.folders.map(f=>f.id);return b.forEach(f=>{var l;const d=new e;if(r?d.read(f,r):d.read(f),s.length&&v.includes(d.id)&&(d.visible=s.includes(d.id)),h[f.id]=d,f.parentFolderId!=null&&f.parentFolderId!==-1){const p=h[f.parentFolderId];p.sublayers||(p.sublayers=[]),(l=p.sublayers)==null||l.unshift(d)}else o.unshift(d)}),o}function E(e,t,r){r.forEach(s=>{e.set(s.attributes[t],s)})}function ne(e,t){let r;return t.some(s=>s.id===e&&(r=s,!0)),r}function ue(e,t,r){const s=ne(e,r);return s&&(s.parentFolderId=t,s.networkLink=s),s}function P(e){const t=I(x),r=I(x);for(const s of e){if(s.polygons&&s.polygons.featureSet&&s.polygons.featureSet.features)for(const o of s.polygons.featureSet.features)w(t,o.geometry),k(r,t);if(s.polylines&&s.polylines.featureSet&&s.polylines.featureSet.features)for(const o of s.polylines.featureSet.features)w(t,o.geometry),k(r,t);if(s.points&&s.points.featureSet&&s.points.featureSet.features)for(const o of s.points.featureSet.features)w(t,o.geometry),k(r,t);if(s.mapImages)for(const o of s.mapImages)w(t,o.extent),k(r,t)}return W(r,x)?void 0:{xmin:r[0],ymin:r[1],zmin:r[2],xmax:r[3],ymax:r[4],zmax:r[5],spatialReference:L.WGS84}}var g;let u=g=class extends V.EventedMixin(q(H)){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.id=null,this.networkLink=null,this.parent=null,this.sublayers=null,this.title=null,this.sourceJSON=null,this.layer=null,this.addHandles([_(()=>this.sublayers,"after-add",({item:t})=>{t.parent=this,t.layer=this.layer},m),_(()=>this.sublayers,"after-remove",({item:t})=>{t.layer=t.parent=null},m),$(()=>this.sublayers,(t,r)=>{if(r)for(const s of r)s.layer=s.parent=null;if(t)for(const s of t)s.parent=this,s.layer=this.layer},m),$(()=>this.layer,t=>{if(this.sublayers)for(const r of this.sublayers)r.layer=t},m)])}initialize(){M(()=>this.networkLink).then(()=>M(()=>this.visible===!0)).then(()=>this.load())}load(e){var s;if(!this.networkLink||this.networkLink.viewFormat)return;const t=e!=null?e.signal:null,r=this._fetchService(((s=this._get("networkLink"))==null?void 0:s.href)??"",t).then(o=>{var v;const h=P(o.sublayers);this.fullExtent=O.fromJSON(h),this.sourceJSON=o;const b=B(F.ofType(g),K(g,o));this.sublayers?this.sublayers.addMany(b):this.sublayers=b,(v=this.layer)==null||v.emit("sublayer-update"),this.layer&&this.layer.notifyChange("visibleSublayers")});return this.addResolvingPromise(r),Promise.resolve(this)}get visible(){return this._get("visible")}set visible(e){this._get("visible")!==e&&(this._set("visible",e),this.layer&&this.layer.notifyChange("visibleSublayers"))}readVisible(e,t){return!!t.visibility}_fetchService(e,t){return T(e,this.layer.outSpatialReference,this.layer.refreshInterval,t).then(r=>R(r.data))}};i([a()],u.prototype,"description",void 0),i([a({type:O})],u.prototype,"fullExtent",void 0),i([a()],u.prototype,"id",void 0),i([a({readOnly:!0,value:null})],u.prototype,"networkLink",void 0),i([a({json:{write:{allowNull:!0}}})],u.prototype,"parent",void 0),i([a({type:F.ofType(g),json:{write:{allowNull:!0}}})],u.prototype,"sublayers",void 0),i([a({value:null,json:{read:{source:"name",reader:e=>D(e)}}})],u.prototype,"title",void 0),i([a({value:!0})],u.prototype,"visible",null),i([j("visible",["visibility"])],u.prototype,"readVisible",null),i([a()],u.prototype,"sourceJSON",void 0),i([a()],u.prototype,"layer",void 0),u=g=i([C("esri.layers.support.KMLSublayer")],u);const N=u,ye=["kml","xml"];let n=class extends U(Q(X(Y(Z(ee(le)))))){constructor(...e){super(...e),this._visibleFolders=[],this.allSublayers=new te({getCollections:()=>[this.sublayers],getChildrenFunction:t=>t.sublayers}),this.outSpatialReference=L.WGS84,this.path=null,this.legendEnabled=!1,this.operationalLayerType="KML",this.sublayers=null,this.type="kml",this.url=null}initialize(){this.addHandles([$(()=>this.sublayers,(e,t)=>{t&&t.forEach(r=>{r.parent=null,r.layer=null}),e&&e.forEach(r=>{r.parent=this,r.layer=this})},m),this.on("sublayer-update",()=>this.notifyChange("fullExtent"))])}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readSublayersFromItemOrWebMap(e,t){this._visibleFolders=t.visibleFolders}readSublayers(e,t,r){return K(N,t,r,this._visibleFolders)}writeSublayers(e,t){const r=[],s=e.toArray();for(;s.length;){const o=s[0];o.networkLink||(o.visible&&r.push(o.id),o.sublayers&&s.push(...o.sublayers.toArray())),s.shift()}t.visibleFolders=r}get title(){const e=this._get("title");return e&&this.originOf("title")!=="defaults"?e:this.url?se(this.url,ye)||"KML":e||""}set title(e){this._set("title",e)}get visibleSublayers(){const e=this.sublayers,t=[],r=s=>{s.visible&&(t.push(s),s.sublayers&&s.sublayers.forEach(r))};return e&&e.forEach(r),t}get fullExtent(){return this._recomputeFullExtent()}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"],supportsData:!1},e).catch(re).then(()=>this._fetchService(t))),Promise.resolve(this)}destroy(){super.destroy(),this.allSublayers.destroy()}async _fetchService(e){const t=await Promise.resolve().then(()=>this.resourceInfo?{ssl:!1,data:this.resourceInfo}:T(this.url??"",this.outSpatialReference,this.refreshInterval,e)),r=R(t.data);r&&this.read(r,{origin:"service"})}_recomputeFullExtent(){let e=null;this.extent!=null&&(e=this.extent.clone());const t=r=>{if(r.sublayers)for(const s of r.sublayers.items)t(s),s.visible&&s.fullExtent&&(e!=null?e.union(s.fullExtent):e=s.fullExtent.clone())};return t(this),e}};i([a({readOnly:!0})],n.prototype,"allSublayers",void 0),i([a({type:L})],n.prototype,"outSpatialReference",void 0),i([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],n.prototype,"path",void 0),i([a({readOnly:!0,json:{read:!1,write:!1}})],n.prototype,"legendEnabled",void 0),i([a({type:["show","hide","hide-children"]})],n.prototype,"listMode",void 0),i([a({type:["KML"]})],n.prototype,"operationalLayerType",void 0),i([a({})],n.prototype,"resourceInfo",void 0),i([a({type:F.ofType(N),json:{write:{ignoreOrigin:!0}}})],n.prototype,"sublayers",void 0),i([j(["web-map","portal-item"],"sublayers",["visibleFolders"])],n.prototype,"readSublayersFromItemOrWebMap",null),i([j("service","sublayers",["sublayers"])],n.prototype,"readSublayers",null),i([ie("sublayers")],n.prototype,"writeSublayers",null),i([a({readOnly:!0,json:{read:!1}})],n.prototype,"type",void 0),i([a({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}}})],n.prototype,"title",null),i([a(oe)],n.prototype,"url",void 0),i([a({readOnly:!0})],n.prototype,"visibleSublayers",null),i([a({type:O})],n.prototype,"extent",void 0),i([a()],n.prototype,"fullExtent",null),n=i([C("esri.layers.KMLLayer")],n);const fe=n;export{fe as default};

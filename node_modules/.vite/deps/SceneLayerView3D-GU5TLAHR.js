import {
  i as i2,
  j,
  l as l3,
  p,
  r,
  s as s3
} from "./chunk-IGOMD64Y.js";
import {
  i
} from "./chunk-N5A7N3L3.js";
import {
  L,
  d as d2,
  l as l2,
  o as o2
} from "./chunk-MYHVW7VU.js";
import {
  t2 as t3
} from "./chunk-6SPYK5IY.js";
import {
  E,
  c,
  xt
} from "./chunk-VSNGV5F4.js";
import {
  D2 as D,
  s2
} from "./chunk-2HZ6BJUS.js";
import "./chunk-CKDYQJAJ.js";
import "./chunk-LJPYEVZC.js";
import "./chunk-ETXJI6IO.js";
import "./chunk-UK4ZDRLR.js";
import "./chunk-ULFDJHIR.js";
import "./chunk-ZCXCGUT2.js";
import "./chunk-PL4QGMLB.js";
import "./chunk-HBJAGP7O.js";
import "./chunk-KSNS4RYW.js";
import "./chunk-MYPCEJEE.js";
import "./chunk-F6PJCZPH.js";
import "./chunk-32IFRFHL.js";
import {
  n as n3
} from "./chunk-XGIDQJNQ.js";
import "./chunk-TYEEWKIN.js";
import "./chunk-ANLIVU2T.js";
import "./chunk-67UNUI4B.js";
import {
  o
} from "./chunk-WON6TZX6.js";
import "./chunk-SS6BI3R6.js";
import "./chunk-BM4PSBXP.js";
import "./chunk-EQRBSFVE.js";
import "./chunk-QNL3GBGD.js";
import {
  n as n2
} from "./chunk-IMCUA6JI.js";
import "./chunk-NJB7437O.js";
import "./chunk-RZONPIMD.js";
import "./chunk-FAU6BZC4.js";
import "./chunk-D6UIL3LF.js";
import "./chunk-B5TYSRH2.js";
import "./chunk-XBN7M5OG.js";
import "./chunk-BPITJIFG.js";
import "./chunk-3BTM6YO4.js";
import "./chunk-6OVHX5ZO.js";
import "./chunk-N6RC4PHI.js";
import "./chunk-CPHFVZ42.js";
import "./chunk-LLQHB2ZB.js";
import "./chunk-CFEAJLOI.js";
import "./chunk-RBDJB3ZY.js";
import "./chunk-RRRAGAMB.js";
import "./chunk-ERFCZMKG.js";
import "./chunk-C2GW4T2D.js";
import "./chunk-FLA7Z76H.js";
import {
  f
} from "./chunk-LFQ3TKCC.js";
import "./chunk-ZD5B6I7X.js";
import "./chunk-HAYOKZGJ.js";
import "./chunk-SO7CVIZK.js";
import "./chunk-FJYIB7HF.js";
import "./chunk-BLRS5QI4.js";
import "./chunk-23N5B2NF.js";
import "./chunk-BUKSB3RJ.js";
import "./chunk-Y3PBROKK.js";
import "./chunk-7FGF24AQ.js";
import "./chunk-YOWAMJJI.js";
import "./chunk-PFDC65N2.js";
import "./chunk-6HOJZLKI.js";
import "./chunk-ZIIRSX6D.js";
import "./chunk-JQKL7AD5.js";
import "./chunk-6WY3ZZYN.js";
import "./chunk-CS6BZGQO.js";
import "./chunk-YZTKL3LQ.js";
import "./chunk-I7EXY23J.js";
import "./chunk-SCHIU6CT.js";
import "./chunk-XXN3TEOU.js";
import "./chunk-FIJZ6LYC.js";
import "./chunk-MUANV6E3.js";
import "./chunk-SFIT2AUF.js";
import "./chunk-DBIFU6GO.js";
import "./chunk-V33FVMPT.js";
import "./chunk-U67EYFX3.js";
import "./chunk-5GYSL2SB.js";
import "./chunk-3NWIYHNX.js";
import "./chunk-PLKG3UR7.js";
import "./chunk-BD4RGMMN.js";
import "./chunk-4BA5YJ7C.js";
import "./chunk-LBRZG7XH.js";
import {
  t as t2
} from "./chunk-644IM3NW.js";
import "./chunk-TE7N6C3J.js";
import "./chunk-WRC5WFEM.js";
import "./chunk-UYTAZUBJ.js";
import "./chunk-2EO2WRP7.js";
import "./chunk-IAWQREMS.js";
import "./chunk-EPDLDPS4.js";
import "./chunk-NBYHM3OO.js";
import "./chunk-CERU5LKM.js";
import "./chunk-JZVYLVFO.js";
import "./chunk-FAOMDC3K.js";
import "./chunk-SCAYUERS.js";
import "./chunk-B76MSEZ4.js";
import "./chunk-ZYHVS2T2.js";
import "./chunk-XYSQCP5F.js";
import "./chunk-W5D3JTKS.js";
import "./chunk-XACNEHDM.js";
import "./chunk-IRBH32SX.js";
import "./chunk-MPIXWRXJ.js";
import "./chunk-PC4A4CQR.js";
import "./chunk-VYGC2LVC.js";
import "./chunk-CXYYGJUL.js";
import "./chunk-FJA4J75M.js";
import "./chunk-AN3WFAN2.js";
import "./chunk-XKYCNHCM.js";
import "./chunk-YEDW7SLL.js";
import "./chunk-N4JKQR77.js";
import "./chunk-BDX5TRUE.js";
import "./chunk-LIXBKTBN.js";
import "./chunk-VDSNHCMM.js";
import "./chunk-6LC2JTLC.js";
import "./chunk-XM3YSFN6.js";
import "./chunk-NIZWDAMQ.js";
import "./chunk-DU3C7D26.js";
import "./chunk-YQALOTSV.js";
import "./chunk-T52K6PNI.js";
import "./chunk-UPDSQXLR.js";
import "./chunk-NOWEY45I.js";
import "./chunk-FNMOXP37.js";
import "./chunk-7BSXIYP2.js";
import "./chunk-ACTOBSLJ.js";
import "./chunk-XUU35WPC.js";
import "./chunk-6QR5R4JX.js";
import "./chunk-KSA6GV6M.js";
import "./chunk-K4WBDIIJ.js";
import "./chunk-ROPKVK6V.js";
import "./chunk-KM375BNF.js";
import "./chunk-H3DKDGMJ.js";
import "./chunk-FB6EWBGE.js";
import "./chunk-3TDCCT2R.js";
import "./chunk-CWXDLB2P.js";
import "./chunk-Z2RTGLQI.js";
import "./chunk-V6CD66ZZ.js";
import "./chunk-6FHMQNMS.js";
import "./chunk-5ZW42GDY.js";
import "./chunk-D7YAG5U3.js";
import "./chunk-LGDKASPG.js";
import "./chunk-YQDOKTNT.js";
import "./chunk-SH6HJSS2.js";
import "./chunk-KFDARCTS.js";
import "./chunk-TRGMWULG.js";
import "./chunk-WTPQKRQM.js";
import "./chunk-SMDDCTGQ.js";
import "./chunk-NU4UASX6.js";
import "./chunk-PKCLTDZO.js";
import "./chunk-4YXJLES6.js";
import "./chunk-EHQZFPMP.js";
import "./chunk-VC3BY3DV.js";
import "./chunk-WH76OAIT.js";
import "./chunk-B4ONZAW2.js";
import "./chunk-JHDKOKT6.js";
import "./chunk-YLTVH2K4.js";
import "./chunk-FB4A6PBH.js";
import "./chunk-CG3URTR2.js";
import "./chunk-UX3LCC3X.js";
import "./chunk-AB23UNQC.js";
import "./chunk-RDWKBYTH.js";
import "./chunk-IBJTEQQG.js";
import "./chunk-SADO52IH.js";
import "./chunk-WVOBJDWI.js";
import "./chunk-LIO6VZRI.js";
import "./chunk-7DFZCT3D.js";
import "./chunk-ASBUA7EG.js";
import "./chunk-FY4ZONHH.js";
import "./chunk-73PNWDTS.js";
import "./chunk-PKS3ZVLN.js";
import "./chunk-N3RXOITN.js";
import "./chunk-DOR4M5EA.js";
import "./chunk-3ROGWJVH.js";
import "./chunk-BUCIQGFS.js";
import "./chunk-CR5XNTAP.js";
import "./chunk-Z6IKMUOC.js";
import "./chunk-PV5KBAYL.js";
import "./chunk-YVVROPAO.js";
import "./chunk-2EWAI4LP.js";
import "./chunk-DNEN337Y.js";
import "./chunk-IWA3Q52A.js";
import "./chunk-4KPDZI74.js";
import "./chunk-WA4HIOYR.js";
import "./chunk-BFVOSCOB.js";
import "./chunk-QALEHGSZ.js";
import "./chunk-GYNE34WO.js";
import "./chunk-QS45OHBM.js";
import "./chunk-IVMJPIWO.js";
import "./chunk-3I3GE5YW.js";
import "./chunk-WRFNQB7U.js";
import "./chunk-UUW6REOV.js";
import "./chunk-2US5EKDI.js";
import "./chunk-Z3NHJA5D.js";
import "./chunk-BO2REVMA.js";
import "./chunk-V66LHQVK.js";
import "./chunk-UAIJDJWO.js";
import "./chunk-2CKXYQCA.js";
import "./chunk-JP7O2ZWE.js";
import "./chunk-4Y7ZTMES.js";
import "./chunk-ODTMOFOP.js";
import "./chunk-AHBQVOT4.js";
import "./chunk-Z6R62RNV.js";
import "./chunk-3LLZ72VA.js";
import "./chunk-4SIKLJSS.js";
import "./chunk-ALPCRJS4.js";
import "./chunk-WDZ5AAFL.js";
import "./chunk-XL7RF4A6.js";
import "./chunk-ZL3HOHNK.js";
import "./chunk-PR2OEILG.js";
import "./chunk-67BT7WH5.js";
import "./chunk-JPKFB2QL.js";
import "./chunk-KSBQD24F.js";
import "./chunk-UM64E5NS.js";
import "./chunk-2SZNVP5H.js";
import "./chunk-2XKILFME.js";
import "./chunk-G4LSNP77.js";
import "./chunk-S5RIUWET.js";
import "./chunk-MVWFPLOX.js";
import "./chunk-X3YW4YOG.js";
import "./chunk-IG234GCS.js";
import "./chunk-WTKN55TU.js";
import "./chunk-TDPKDZC3.js";
import "./chunk-M5UHI5WR.js";
import "./chunk-BA6PBZHC.js";
import "./chunk-M7PTINEZ.js";
import "./chunk-Z7LZRT7C.js";
import "./chunk-SGBMUZSF.js";
import "./chunk-3TMT4LDG.js";
import "./chunk-OX5TJXHM.js";
import "./chunk-BDWD2ZNU.js";
import "./chunk-FF5LS3YE.js";
import "./chunk-BCDDCNQ2.js";
import "./chunk-FIBWCATC.js";
import "./chunk-D3BOGOKY.js";
import "./chunk-QOWAKGE4.js";
import "./chunk-YC5U2RV5.js";
import "./chunk-ZNQYDNXF.js";
import {
  V,
  pe,
  ye
} from "./chunk-SLMR4CTS.js";
import {
  t
} from "./chunk-BFVDDR4R.js";
import "./chunk-FLVP2XLK.js";
import "./chunk-XKENZ7D5.js";
import "./chunk-GZTS5346.js";
import "./chunk-EK3Y2IYO.js";
import "./chunk-6S2FCH6S.js";
import "./chunk-BZL5MAFP.js";
import "./chunk-XY26YCFX.js";
import "./chunk-3TTW7E7W.js";
import "./chunk-FOEAKQNX.js";
import "./chunk-LEDSC236.js";
import "./chunk-NETCTS4Y.js";
import "./chunk-OKABUMQT.js";
import "./chunk-CW7LIPBH.js";
import "./chunk-TYOIANOD.js";
import "./chunk-VN2IXVGV.js";
import "./chunk-WWUAHPIM.js";
import "./chunk-BN6X2OXK.js";
import "./chunk-DZRIMGKU.js";
import {
  d
} from "./chunk-MRYR5ID7.js";
import "./chunk-EG6CFIHA.js";
import "./chunk-KE6VYSDW.js";
import "./chunk-XIYY37WZ.js";
import "./chunk-P4PDTNIU.js";
import "./chunk-CEFGWR5H.js";
import "./chunk-NX5NNI52.js";
import "./chunk-G2DTL6AE.js";
import "./chunk-Q6HN54VB.js";
import "./chunk-NDKDK4Y5.js";
import {
  b
} from "./chunk-O443WBFA.js";
import "./chunk-RGS3ANC3.js";
import "./chunk-Z3GCSCQI.js";
import "./chunk-PPNAO2PM.js";
import "./chunk-UU2XJGLA.js";
import "./chunk-CGJNVOU3.js";
import "./chunk-YA7WDOJK.js";
import "./chunk-IQRLZSBX.js";
import "./chunk-OZL6Q7O2.js";
import "./chunk-FVR25IMN.js";
import "./chunk-EV77QZBT.js";
import "./chunk-QZ6WR57P.js";
import "./chunk-467UETSR.js";
import "./chunk-SHFLRM67.js";
import "./chunk-YGUWDSEH.js";
import "./chunk-GOK4EI36.js";
import "./chunk-LO3LAMAS.js";
import "./chunk-ZWFMUHG3.js";
import "./chunk-EFRTD25L.js";
import {
  n
} from "./chunk-EAGDM3GO.js";
import "./chunk-GSS6WNQU.js";
import "./chunk-C2EHS6UI.js";
import "./chunk-GZTLZ6RD.js";
import "./chunk-CEUJOC5P.js";
import "./chunk-F4ILXEXC.js";
import "./chunk-D5NSNTGJ.js";
import "./chunk-63ERNIOV.js";
import "./chunk-DTEODQ6R.js";
import "./chunk-5KLICR5E.js";
import {
  I
} from "./chunk-KRCNIFX2.js";
import "./chunk-LVVQ2RQY.js";
import "./chunk-M6OG7C2T.js";
import "./chunk-GOK5MP3B.js";
import "./chunk-NLWV7Q6F.js";
import "./chunk-DSWGERIY.js";
import "./chunk-Y2ZDD3I4.js";
import "./chunk-RVS5HU2K.js";
import "./chunk-JB7FDW5N.js";
import "./chunk-SS3YG6J3.js";
import "./chunk-H37COY3W.js";
import "./chunk-NVGPNIR6.js";
import "./chunk-B4D7M7HT.js";
import "./chunk-3T2ETA25.js";
import "./chunk-5IYCCZ54.js";
import "./chunk-VMTVUE47.js";
import "./chunk-GDZM4A6K.js";
import {
  h as h2
} from "./chunk-XWGNMTES.js";
import "./chunk-6NNEHJYI.js";
import "./chunk-BNBT4QTW.js";
import "./chunk-3FQOSG5O.js";
import "./chunk-W4KI5YEI.js";
import "./chunk-CAFGOFIE.js";
import "./chunk-7EG7BYWF.js";
import "./chunk-JNDFAMXY.js";
import "./chunk-NTEKJWGF.js";
import "./chunk-TFIKV5RU.js";
import "./chunk-KW6QQDGN.js";
import "./chunk-AQ7R6V4L.js";
import "./chunk-DOQ3SAAR.js";
import "./chunk-4BXK4H4L.js";
import "./chunk-SLVNG7FV.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-DTYFMKYK.js";
import "./chunk-7S7LC3XK.js";
import "./chunk-XR4HIGQP.js";
import "./chunk-KK5CYPXW.js";
import "./chunk-JNO3YVNK.js";
import "./chunk-DKJBDKGA.js";
import "./chunk-4CZO65BK.js";
import "./chunk-SVCGLUNW.js";
import "./chunk-3KEIFTQ6.js";
import "./chunk-DEZCXTA3.js";
import "./chunk-RRJGZKNX.js";
import "./chunk-PL5Q4C6Y.js";
import "./chunk-A6VKJXIH.js";
import "./chunk-KFSY6ZZH.js";
import "./chunk-7EQSYZHW.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-GGOVZ2GK.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-WLWP35G2.js";
import "./chunk-JPW73GY2.js";
import "./chunk-HXPVVSLV.js";
import "./chunk-4OR73Y2R.js";
import "./chunk-EKJ2DJIR.js";
import "./chunk-TEHNQYQD.js";
import "./chunk-TPJLFGOT.js";
import "./chunk-CQX57DED.js";
import "./chunk-3CQBBMMD.js";
import "./chunk-2CTB7MKH.js";
import "./chunk-Z2ZUNW5S.js";
import "./chunk-7L7Z2HXM.js";
import "./chunk-75NKPXTR.js";
import "./chunk-EUVARFSM.js";
import "./chunk-3VUFACNT.js";
import "./chunk-ZEEBL7ZN.js";
import "./chunk-RTDN6KAT.js";
import "./chunk-GJ7PJ7XG.js";
import "./chunk-5EXFDBQJ.js";
import "./chunk-57CHUY45.js";
import "./chunk-SJ2GJCS2.js";
import {
  h
} from "./chunk-H7RDAEPY.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-S5OISW44.js";
import "./chunk-7KH4CLS5.js";
import "./chunk-WCHO7VLT.js";
import "./chunk-JL3TJGVW.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-43LWRDQS.js";
import "./chunk-R6YKST3K.js";
import "./chunk-ZJEWQGHG.js";
import "./chunk-YGB42LDG.js";
import "./chunk-F3KGLZDZ.js";
import "./chunk-MP6GH2AC.js";
import {
  y3 as y
} from "./chunk-V76KGJFU.js";
import {
  a2 as a
} from "./chunk-HB2SQRT2.js";
import "./chunk-U3J7253Q.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-ZWUBORGT.js";
import "./chunk-3R7FAT25.js";
import "./chunk-7I33FAWS.js";
import {
  l
} from "./chunk-DWOEYHKS.js";
import {
  s2 as s
} from "./chunk-HMVAPW5X.js";
import "./chunk-IYZKKFJM.js";
import "./chunk-JZJWZ6DN.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/views/3d/layers/SceneLayerView3D.js
var L2 = i2();
var U = class extends xt(t3(i(n3(j)))) {
  constructor() {
    super(...arguments), this.type = "scene-layer-3d", this._setVisibilityHiddenObjectIds = new s2(), this.progressiveLoadFactor = 1, this._elevationContext = "scene", this._isIntegratedMesh = false, this._supportsLabeling = true, this._interactiveEditingSessions = /* @__PURE__ */ new Map(), this._queryEngine = null;
  }
  get i3slayer() {
    return this.layer;
  }
  tryRecycleWith(e2, t4) {
    return e2.url === this.layer.url && this.i3sOverrides.isEmpty ? e2.load(t4).then(() => {
      var _a;
      ye(this.layer, e2, this.i3sOverrides), this.layer = e2, this.i3sOverrides.destroy();
      const t5 = (_a = this.view.resourceController) == null ? void 0 : _a.memoryController;
      this.i3sOverrides = new D({ view: this.view, layer: e2, memoryController: t5 }), this.resetHighlights();
    }) : null;
  }
  get layerPopupEnabledAndHasTemplate() {
    var _a;
    return this.layer.popupEnabled && t(this.layer, (_a = this.view.popup) == null ? void 0 : _a.defaultPopupTemplateEnabled);
  }
  get filter() {
    return this._get("filter");
  }
  set filter(e2) {
    this._set("filter", L.checkSupport(e2) ? e2 : null);
  }
  get viewFilter() {
    const e2 = this.filter, t4 = this.layerFilter;
    if (null == e2 && null == t4)
      return null;
    const i3 = this._get("viewFilter");
    return null == i3 ? new L({ layerFilter: t4, viewFilter: e2, layerFieldsIndex: this.layer.fieldsIndex, loadAsyncModule: (e3) => this._loadAsyncModule(e3), addSqlFilter: (e3, t5) => this.addSqlFilter(e3, t5, this.logError) }) : (i3.viewFilter = e2, i3.layerFilter = t4, i3);
  }
  get requiredFields() {
    var _a;
    return ((_a = this._fieldsHelper) == null ? void 0 : _a.requiredFields) ?? [];
  }
  get _floorFilterClause() {
    const e2 = o(this);
    return null != e2 ? f.create(e2, this.layer.fieldsIndex) : null;
  }
  get _excludeObjectIdsSorted() {
    const e2 = this.layer.excludeObjectIds.toArray();
    return e2.length ? e2.sort((e3, t4) => e3 - t4) : null;
  }
  get _setVisibilityHiddenObjectIdsSorted() {
    return this._setVisibilityHiddenObjectIds.size ? Array.from(this._setVisibilityHiddenObjectIds).sort((e2, t4) => e2 - t4) : null;
  }
  get _objectQualitySettings() {
    var _a, _b, _c;
    return (_c = (_b = (_a = this.view) == null ? void 0 : _a.qualitySettings) == null ? void 0 : _b.sceneService) == null ? void 0 : _c.object;
  }
  get lodFactor() {
    var _a;
    return ((_a = this._objectQualitySettings) == null ? void 0 : _a.lodFactor) ?? 1;
  }
  get lodCrossfadeinDuration() {
    return this._objectQualitySettings.lodCrossfadeinDuration ?? 0;
  }
  get lodCrossfadeoutDuration() {
    return this._objectQualitySettings.lodCrossfadeoutDuration ?? 0;
  }
  get lodCrossfadeUncoveredDuration() {
    return this._objectQualitySettings.lodCrossfadeUncoveredDuration ?? 0;
  }
  get updatingProgressValue() {
    var _a;
    return ((_a = this._controller) == null ? void 0 : _a.updatingProgress) ?? 0;
  }
  initialize() {
    this._fieldsHelper = new p({ layerView: this }), this.updatingHandles.add(() => this.layer.rangeInfos, (e3) => this._rangeInfosChanged(e3), h), this.updatingHandles.add(() => this.layer.renderer, (e3) => this.updatingHandles.addPromise(this._rendererChange(e3)), h);
    const e2 = () => this._filterChange();
    this.updatingHandles.add(() => this.parsedDefinitionExpression, e2), this.updatingHandles.add(() => this.filter, e2), this.updatingHandles.add(() => this._floorFilterClause, e2), this.updatingHandles.add(() => this._excludeObjectIdsSorted, e2), this.updatingHandles.add(() => this._setVisibilityHiddenObjectIdsSorted, e2), this.updatingHandles.add(() => null != this.viewFilter ? this.viewFilter.sortedObjectIds : null, e2), this.updatingHandles.add(() => null != this.viewFilter ? this.viewFilter.parsedWhereClause : null, e2), this.updatingHandles.add(() => [null != this.viewFilter ? this.viewFilter.parsedGeometry : null, null != this.filter ? this.filter.spatialRelationship : null, null != this.layer.filter ? this.layer.filter.spatialRelationship : null], () => this._geometryFilterChange()), n() && this.i3sOverrides.is3DOFL && this.updatingHandles.add(() => this.i3sOverrides.sortedGeometryChangedObjectIds, e2), this.handles.add(this.layer.on("apply-edits", (e3) => this.updatingHandles.addPromise(e3.result))), this.handles.add(this.layer.on("edits", (e3) => this._handleEdits(e3)));
  }
  destroy() {
    this._fieldsHelper = l(this._fieldsHelper);
  }
  _rangeInfosChanged(e2) {
    null != e2 && e2.length > 0 && s.getLogger(this).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.");
  }
  createQuery() {
    const e2 = { outFields: ["*"], returnGeometry: false, outSpatialReference: this.view.spatialReference };
    return null != this.filter ? this.filter.createQuery(e2) : new b(e2);
  }
  queryExtent(e2, t4) {
    return this._ensureQueryEngine().executeQueryForExtent(this._ensureQuery(e2), t4 == null ? void 0 : t4.signal);
  }
  queryFeatureCount(e2, t4) {
    return this._ensureQueryEngine().executeQueryForCount(this._ensureQuery(e2), t4 == null ? void 0 : t4.signal);
  }
  queryFeatures(e2, t4) {
    return this._ensureQueryEngine().executeQuery(this._ensureQuery(e2), t4 == null ? void 0 : t4.signal).then((e3) => {
      if (!(e3 == null ? void 0 : e3.features))
        return e3;
      const t5 = this.layer;
      for (const i3 of e3.features)
        i3.layer = t5, i3.sourceLayer = t5;
      return e3;
    });
  }
  queryObjectIds(e2, t4) {
    return this._ensureQueryEngine().executeQueryForIds(this._ensureQuery(e2), t4 == null ? void 0 : t4.signal);
  }
  _ensureQueryEngine() {
    return this._queryEngine || (this._queryEngine = this._createQueryEngine()), this._queryEngine;
  }
  _createQueryEngine() {
    const e2 = c(this.view.spatialReference, this.view.renderSpatialReference, this._collection);
    return new d2({ layerView: this, priority: I.FEATURE_QUERY_ENGINE, spatialIndex: new l2({ featureAdapter: new o2({ objectIdField: this.layer.objectIdField, attributeStorageInfo: this.layer.attributeStorageInfo ?? [], getFeatureExtent: e2 }), forAllFeatures: (e3, t4) => this._forAllFeatures((t5, i3, r2) => e3({ id: t5, index: i3, meta: r2 }), t4, E.QUERYABLE), getFeatureExtent: e2, sourceSpatialReference: pe(this.layer), viewSpatialReference: this.view.spatialReference }) });
  }
  highlight(e2) {
    const t4 = this._highlights;
    if (e2 instanceof b) {
      const { set: i3, handle: r2 } = t4.acquireSet();
      return this.queryObjectIds(e2).then((e3) => t4.setFeatureIds(i3, e3)), r2;
    }
    return super.highlight(e2);
  }
  createInteractiveEditSession(e2) {
    return r(this._attributeEditingContext, e2);
  }
  _createLayerGraphic(e2) {
    const i3 = new h2(null, null, e2);
    return i3.layer = this.layer, i3.sourceLayer = this.layer, i3;
  }
  getFilters() {
    const e2 = super.getFilters();
    n() && this.i3sOverrides.is3DOFL && this.i3sOverrides.sortedGeometryChangedObjectIds.length > 0 && e2.push((e3, t5) => {
      t5.node.index >= 0 && V(this.i3sOverrides.sortedGeometryChangedObjectIds, false, e3);
    });
    const t4 = this._setVisibilityHiddenObjectIdsSorted;
    null != t4 && e2.push((e3) => V(t4, false, e3));
    const i3 = this._excludeObjectIdsSorted;
    return null != i3 && e2.push((e3) => V(i3, false, e3)), this._floorFilterClause && this.addSqlFilter(e2, this._floorFilterClause, this.logError), this.addSqlFilter(e2, this.parsedDefinitionExpression, this.logError), null != this.viewFilter && this.viewFilter.addFilters(e2, this.view, this._controller.crsIndex, this._collection), e2;
  }
  setVisibility(e2, t4) {
    t4 ? this._setVisibilityHiddenObjectIds.delete(e2) : this._setVisibilityHiddenObjectIds.add(e2);
  }
  isUpdating() {
    return super.isUpdating() || this.layerFilterUpdating || null != this.viewFilter && this.viewFilter.updating || null != this.i3sOverrides && this.i3sOverrides.updating;
  }
  _ensureQuery(e2) {
    return this._addDefinitionExpressionToQuery(null == e2 ? this.createQuery() : b.from(e2));
  }
  get _attributeEditingContext() {
    return { sessions: this._interactiveEditingSessions, fieldsIndex: this.layer.fieldsIndex, objectIdField: this._getObjectIdField(), globalIdField: this._getGlobalIdField(), forEachNode: (e2) => this._forAllNodes((t4) => null != t4 ? e2(t4.node, t4.featureIds) : null), attributeStorageInfo: this.i3slayer.attributeStorageInfo ?? [], i3sOverrides: this.i3sOverrides, getAttributeData: (e2) => this.getAttributeData(e2), setAttributeData: (e2, t4) => this.setAttributeData(e2, t4), clearMemCache: () => this.clearMemCache() };
  }
  _handleEdits(e2) {
    n() && s3(this._attributeEditingContext, e2), l3(this._attributeEditingContext, e2);
  }
  get hasGeometryFilter() {
    const e2 = this.viewFilter;
    return null != e2 && null != e2.parsedGeometry;
  }
  computeNodeFiltering(e2) {
    const t4 = this.viewFilter;
    return null == t4 || !this.view.spatialReference || t4.isMBSGeometryVisible(e2, this.view.spatialReference, this._controller.crsIndex) ? n2.Unmodified : n2.Culled;
  }
};
e([y()], U.prototype, "i3slayer", null), e([y(t2)], U.prototype, "updatingProgress", void 0), e([y({ type: d })], U.prototype, "filter", null), e([y({ readOnly: true })], U.prototype, "viewFilter", null), e([y(L2.requiredFields)], U.prototype, "requiredFields", null), e([y(L2.availableFields)], U.prototype, "availableFields", void 0), e([y()], U.prototype, "_fieldsHelper", void 0), e([y()], U.prototype, "_floorFilterClause", null), e([y()], U.prototype, "_excludeObjectIdsSorted", null), e([y()], U.prototype, "_setVisibilityHiddenObjectIds", void 0), e([y()], U.prototype, "_setVisibilityHiddenObjectIdsSorted", null), e([y()], U.prototype, "_objectQualitySettings", null), e([y()], U.prototype, "lodFactor", null), e([y()], U.prototype, "updatingProgressValue", null), U = e([a("esri.views.3d.layers.SceneLayerView3D")], U);
var G = U;
export {
  G as default
};
//# sourceMappingURL=SceneLayerView3D-GU5TLAHR.js.map

import {
  V,
  c
} from "./chunk-DBIFU6GO.js";
import {
  C
} from "./chunk-2EO2WRP7.js";
import {
  w
} from "./chunk-NIZWDAMQ.js";
import {
  e
} from "./chunk-SMDDCTGQ.js";
import {
  h,
  l
} from "./chunk-H7RDAEPY.js";

// node_modules/@arcgis/core/views/3d/interactive/visualElements/VisualElementResources.js
var a = class {
  constructor(e2) {
    this._resourceFactory = e2, this._resources = null, this._visible = true, this._attached = false;
  }
  destroy() {
    this._destroyResources();
  }
  get object() {
    return null != this._resources ? this._resources.object : null;
  }
  get resources() {
    return null != this._resources ? this._resources.external : null;
  }
  get visible() {
    return this._visible;
  }
  set visible(e2) {
    e2 !== this._visible && (this._visible = e2, this._syncVisible());
  }
  get attached() {
    return this._attached;
  }
  set attached(e2) {
    e2 !== this._attached && (this._attached = e2, this._createOrDestroyResources());
  }
  recreate() {
    this.attached && this._createResources();
  }
  recreateGeometry() {
    if (!this._resourceFactory.recreateGeometry)
      return void this.recreate();
    const e2 = this._resourceFactory.view._stage;
    if (null == this._resources || !e2)
      return;
    const s = this._resources.object;
    this._resources.external.forEach((s2) => {
      s2.type !== e.Mesh && s2.type !== e.Line && s2.type !== e.Point || e2.remove(s2);
    }), s.removeAllGeometries(), this._resourceFactory.recreateGeometry(this._resources.external, s, this._resources.layer), this._resources.external.forEach((s2) => {
      s2.type !== e.Mesh && s2.type !== e.Line && s2.type !== e.Point || e2.add(s2);
    });
  }
  _createOrDestroyResources() {
    this._attached ? this._resources || this._createResources() : this._destroyResources();
  }
  _createResources() {
    this._destroyResources();
    const r = this._resourceFactory, a2 = r.view, h2 = a2._stage;
    if (!h2)
      return;
    const u = new c(h2, { pickable: false, updatePolicy: C.SYNC }), l2 = new V({ castShadow: false }), n = r.createResources(l2, u);
    n.forEach((e2) => {
      h2.add(e2), e2 instanceof w && h2.loadImmediate(e2);
    }), h2.add(l2), u.add(l2);
    const _ = r.cameraChanged, y = _ ? l(() => a2.state.camera, (e2) => _(e2), h) : null;
    this._resources = { layer: u, object: l2, external: n, cameraHandle: y }, this._syncVisible();
  }
  _destroyResources() {
    var _a2;
    if (null == this._resources)
      return;
    const e2 = this._resourceFactory.view._stage;
    e2 && (e2.remove(this._resources.object), this._resources.layer.destroy(), this._resources.external.forEach((s) => e2.remove(s))), this._resources.object.dispose(), (_a2 = this._resources.cameraHandle) == null ? void 0 : _a2.remove(), this._resourceFactory.destroyResources(this._resources.external), this._resources = null;
  }
  _syncVisible() {
    null != this._resources && (this._resources.object.visible = this._visible);
  }
};

export {
  a
};
//# sourceMappingURL=chunk-AWHGPLMH.js.map

{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/hud/HUDOcclusionPass.glsl.js", "../../@arcgis/core/chunks/HUDMaterial.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{AlignPixel as e}from\"./AlignPixel.glsl.js\";import{ReadLinearDepth as r}from\"../output/ReadLinearDepth.glsl.js\";import{multipassGeometryTest as t}from\"../shading/MultipassGeometryTest.glsl.js\";import{RgbaFloatEncoding as o}from\"../util/RgbaFloatEncoding.glsl.js\";import{Float2PassUniform as a}from\"../../shaderModules/Float2PassUniform.js\";import{glsl as i}from\"../../shaderModules/interfaces.js\";import{Texture2DPassUniform as s}from\"../../shaderModules/Texture2DPassUniform.js\";function n(n,p){const{vertex:l,fragment:d}=n;l.include(e),p.hasMultipassGeometry&&l.include(t),p.hasMultipassTerrain&&n.varyings.add(\"depth\",\"float\"),l.code.add(i`\n  void main(void) {\n    vec4 posProjCenter;\n    if (dot(position, position) > 0.0) {\n      // Render single point to center of the pixel to avoid subpixel\n      // filtering to affect the marker color\n      ProjectHUDAux projectAux;\n      vec4 posProj = projectPositionHUD(projectAux);\n      posProjCenter = alignToPixelCenter(posProj, viewport.zw);\n\n      ${p.hasMultipassGeometry?i`\n        // Don't draw vertices behind geometry\n        if(geometryDepthTest(.5 + .5 * posProjCenter.xy / posProjCenter.w, projectAux.posView.z)){\n          posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n        }`:\"\"}\n\n      ${p.hasMultipassTerrain?\"depth = projectAux.posView.z;\":\"\"}\n      vec3 vpos = projectAux.posModel;\n      if (rejectBySlice(vpos)) {\n        // Project out of clip space\n        posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n      }\n\n    } else {\n      // Project out of clip space\n      posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n    }\n\n    gl_Position = posProjCenter;\n    gl_PointSize = 1.0;\n  }\n  `),p.hasMultipassTerrain&&d.include(r),p.hasMultipassTerrain&&d.uniforms.add(new s(\"terrainDepthTexture\",((e,r)=>r.multipassTerrain.linearDepthTexture)),new a(\"nearFar\",((e,r)=>r.camera.nearFar))),d.include(o),d.code.add(i`\n  void main() {\n    fragColor = vec4(1);\n    ${p.hasMultipassTerrain?i`\n          // Read the rgba data from the texture linear depth\n          vec4 terrainDepthData = texelFetch(terrainDepthTexture, ivec2(gl_FragCoord.xy), 0);\n\n          float terrainDepth = linearDepthFromFloat(rgba2float(terrainDepthData), nearFar);\n\n          // If HUD vertex is behind terrain and the terrain depth is not the initialize value (e.g. we are not looking at the sky)\n          // Mark the HUD vertex as occluded by transparent terrain\n          if(depth < terrainDepth && terrainDepthData != vec4(0,0,0,1)){\n            fragColor.g = 0.5;\n          }`:\"\"}\n  }\n  `)}export{n as HUDOcclusionPass};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{s as e,j as o}from\"./vec2.js\";import{a as i}from\"./vec2f64.js\";import{Z as r}from\"./vec4f64.js\";import{DEFAULT_TEX_SIZE as l}from\"../views/3d/support/engineContent/sdfPrimitives.js\";import{ShaderOutput as t}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{ObjectAndLayerIdColor as s}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/ObjectAndLayerIdColor.glsl.js\";import{AlignPixel as n}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/AlignPixel.glsl.js\";import{HUD as c}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUD.glsl.js\";import{HUDOcclusionPass as d}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUDOcclusionPass.glsl.js\";import{OutputHighlight as u}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{VisualVariables as p}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{symbolAlphaCutoff as f,defaultMaskAlphaCutoff as g}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{ColorConversion as v}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{RgbaFloatEncoding as b}from\"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{ScreenSizePerspective as m,addScreenSizePerspective as h,addScreenSizePerspectiveAlignment as w}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ScreenSizePerspective.glsl.js\";import{addPixelRatio as x}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float2PassUniform as C}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float4PassUniform as P}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as j}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as S}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as z}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as y}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as A}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";import{VertexAttribute as O}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function $(o){const i=new z,$=o.signedDistanceFieldEnabled;if(i.include(c,o),i.include(a,o),o.occlusionPass)return i.include(d,o),i;const{vertex:B,fragment:H}=i;i.include(m),H.include(b),H.include(v),i.include(p,o),i.include(s,o),i.varyings.add(\"vcolor\",\"vec4\"),i.varyings.add(\"vtc\",\"vec2\"),i.varyings.add(\"vsize\",\"vec2\"),o.binaryHighlightOcclusionEnabled&&i.varyings.add(\"voccluded\",\"float\"),B.uniforms.add(new P(\"viewport\",((e,o)=>o.camera.fullViewport)),new C(\"screenOffset\",((o,i)=>e(F,2*o.screenOffset[0]*i.camera.pixelRatio,2*o.screenOffset[1]*i.camera.pixelRatio))),new C(\"anchorPosition\",(e=>D(e))),new P(\"materialColor\",(e=>e.color))),x(B,o),$&&(B.uniforms.add(new P(\"outlineColor\",(e=>e.outlineColor))),H.uniforms.add(new P(\"outlineColor\",(e=>L(e)?e.outlineColor:r)),new j(\"outlineSize\",(e=>L(e)?e.outlineSize:0)))),o.hasScreenSizePerspective&&(h(B),w(B)),(o.debugDrawLabelBorder||o.binaryHighlightOcclusionEnabled)&&i.varyings.add(\"debugBorderCoords\",\"vec4\"),i.attributes.add(O.UV0,\"vec2\"),i.attributes.add(O.COLOR,\"vec4\"),i.attributes.add(O.SIZE,\"vec2\"),i.attributes.add(O.AUXPOS2,\"vec4\"),B.code.add(S`\n    void main(void) {\n      ProjectHUDAux projectAux;\n      vec4 posProj = projectPositionHUD(projectAux);\n      forwardObjectAndLayerIdColor();\n\n      if (rejectBySlice(projectAux.posModel)) {\n        // Project outside of clip plane\n        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);\n        return;\n      }\n      vec2 inputSize;\n      ${o.hasScreenSizePerspective?S`\n      inputSize = screenSizePerspectiveScaleVec2(size, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspective);\n      vec2 screenOffsetScaled = screenSizePerspectiveScaleVec2(screenOffset, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspectiveAlignment);\n         `:S`\n      inputSize = size;\n      vec2 screenOffsetScaled = screenOffset;`}\n\n      ${o.vvSize?\"inputSize *= vvScale(auxpos2).xx;\":\"\"}\n\n      vec2 combinedSize = inputSize * pixelRatio;\n      vec4 quadOffset = vec4(0.0);\n\n      ${o.occlusionTestEnabled||o.binaryHighlightOcclusionEnabled?\"bool visible = testVisibilityHUD(posProj);\":\"\"}\n\n      ${o.binaryHighlightOcclusionEnabled?\"voccluded = visible ? 0.0 : 1.0;\":\"\"}\n    `);const T=S`vec2 uv01 = floor(uv0);\nvec2 uv = uv0 - uv01;\nquadOffset.xy = ((uv01 - anchorPosition) * 2.0 * combinedSize + screenOffsetScaled) / viewport.zw * posProj.w;`;o.pixelSnappingEnabled&&B.include(n);const E=o.pixelSnappingEnabled?$?S`posProj = alignToPixelOrigin(posProj, viewport.zw) + quadOffset;`:S`posProj += quadOffset;\nif (inputSize.x == size.x) {\nposProj = alignToPixelOrigin(posProj, viewport.zw);\n}`:S`posProj += quadOffset;`;B.code.add(S`\n    ${o.occlusionTestEnabled?\"if (visible) {\":\"\"}\n    ${T}\n    ${o.vvColor?\"vcolor = interpolateVVColor(auxpos2.y) * materialColor;\":\"vcolor = color / 255.0 * materialColor;\"}\n\n    ${o.output===t.ObjectAndLayerIdColor?S`vcolor.a = 1.0;`:\"\"}\n\n    bool alphaDiscard = vcolor.a < ${S.float(f)};\n    ${$?`alphaDiscard = alphaDiscard && outlineColor.a < ${S.float(f)};`:\"\"}\n    if (alphaDiscard) {\n      // \"early discard\" if both symbol color (= fill) and outline color (if applicable) are transparent\n      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n      return;\n    } else {\n      ${E}\n      gl_Position = posProj;\n    }\n\n    vtc = uv;\n\n    ${o.debugDrawLabelBorder?\"debugBorderCoords = vec4(uv01, 1.5 / combinedSize);\":\"\"}\n    vsize = inputSize;\n    ${o.occlusionTestEnabled?S`} else { vtc = vec2(0.0);\n      ${o.debugDrawLabelBorder?\"debugBorderCoords = vec4(0.5, 0.5, 1.5 / combinedSize);}\":\"}\"}`:\"\"}\n  }\n  `),H.uniforms.add(new y(\"tex\",(e=>e.texture)));const U=o.debugDrawLabelBorder?S`(isBorder > 0.0 ? 0.0 : ${S.float(g)})`:S.float(g),V=S`\n    ${o.debugDrawLabelBorder?S`\n      float isBorder = float(any(lessThan(debugBorderCoords.xy, debugBorderCoords.zw)) || any(greaterThan(debugBorderCoords.xy, 1.0 - debugBorderCoords.zw)));`:\"\"}\n\n    ${$?S`\n      vec4 fillPixelColor = vcolor;\n\n      // Attempt to sample texel centers to avoid that thin cross outlines\n      // disappear with large symbol sizes.\n      // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/7058#issuecomment-603041\n      const float txSize = ${S.float(l)};\n      const float texelSize = 1.0 / txSize;\n      // Calculate how much we have to add/subtract to/from each texel to reach the size of an onscreen pixel\n      vec2 scaleFactor = (vsize - txSize) * texelSize;\n      vec2 samplePos = vtc + (vec2(1.0, -1.0) * texelSize) * scaleFactor;\n\n      // Get distance and map it into [-0.5, 0.5]\n      float d = rgba2float(texture(tex, samplePos)) - 0.5;\n\n      // Distance in output units (i.e. pixels)\n      float dist = d * vsize.x;\n\n      // Create smooth transition from the icon into its outline\n      float fillAlphaFactor = clamp(0.5 - dist, 0.0, 1.0);\n      fillPixelColor.a *= fillAlphaFactor;\n\n      if (outlineSize > 0.25) {\n        vec4 outlinePixelColor = outlineColor;\n        float clampedOutlineSize = min(outlineSize, 0.5*vsize.x);\n\n        // Create smooth transition around outline\n        float outlineAlphaFactor = clamp(0.5 - (abs(dist) - 0.5*clampedOutlineSize), 0.0, 1.0);\n        outlinePixelColor.a *= outlineAlphaFactor;\n\n        if (\n          outlineAlphaFactor + fillAlphaFactor < ${U} ||\n          fillPixelColor.a + outlinePixelColor.a < ${S.float(f)}\n        ) {\n          discard;\n        }\n\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Description)\n        float compositeAlpha = outlinePixelColor.a + fillPixelColor.a * (1.0 - outlinePixelColor.a);\n        vec3 compositeColor = vec3(outlinePixelColor) * outlinePixelColor.a +\n          vec3(fillPixelColor) * fillPixelColor.a * (1.0 - outlinePixelColor.a);\n\n        fragColor = vec4(compositeColor, compositeAlpha);\n      } else {\n        if (fillAlphaFactor < ${U}) {\n          discard;\n        }\n\n        fragColor = premultiplyAlpha(fillPixelColor);\n      }\n\n      // visualize SDF:\n      // fragColor = vec4(clamp(-dist/vsize.x*2.0, 0.0, 1.0), clamp(dist/vsize.x*2.0, 0.0, 1.0), 0.0, 1.0);\n      `:S`\n          vec4 texColor = texture(tex, vtc, -0.5);\n          if (texColor.a < ${U}) {\n            discard;\n          }\n          fragColor = texColor * premultiplyAlpha(vcolor);\n          `}\n\n    // Draw debug border with transparency, so that original texels along border are still partially visible\n    ${o.debugDrawLabelBorder?S`fragColor = mix(fragColor, vec4(1.0, 0.0, 1.0, 1.0), isBorder * 0.5);`:\"\"}\n  `;return o.output===t.Alpha&&H.code.add(S`\n      void main() {\n        ${V}\n        fragColor = vec4(fragColor.a);\n      }\n      `),o.output===t.ObjectAndLayerIdColor&&H.code.add(S`\n      void main() {\n        ${V}\n        outputObjectAndLayerIdColor();\n      }\n      `),o.output===t.Color&&H.code.add(S`\n    void main() {\n      ${V}\n      ${o.transparencyPassType===A.FrontFace?\"fragColor.rgb /= fragColor.a;\":\"\"}\n    }\n    `),o.output===t.Highlight&&(i.include(u,o),H.code.add(S`\n    void main() {\n      ${V}\n      ${o.binaryHighlightOcclusionEnabled?S`\n          if (voccluded == 1.0) {\n            fragColor = vec4(1.0, 1.0, 0.0, 1.0);\n          } else {\n            fragColor = vec4(1.0, 0.0, 1.0, 1.0);\n          }`:\"outputHighlight();\"}\n    }\n    `)),i}function L(e){return e.outlineColor[3]>0&&e.outlineSize>0}function D(e,i=F){return e.textureIsSignedDistanceField?B(e.anchorPosition,e.distanceFieldBoundingBox,i):o(i,e.anchorPosition),i}function B(o,i,r){null!=i?e(r,o[0]*(i[2]-i[0])+i[0],o[1]*(i[3]-i[1])+i[1]):e(r,0,0)}const F=i(),H=Object.freeze(Object.defineProperty({__proto__:null,build:$,calculateAnchorPosForRendering:D},Symbol.toStringTag,{value:\"Module\"}));export{H,$ as b,D as c};\n"],
  "mappings": "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",
  "names": ["n", "l", "d", "o", "a", "e", "r", "o", "i", "$", "n", "B", "H", "a", "e", "l", "t", "r"]
}

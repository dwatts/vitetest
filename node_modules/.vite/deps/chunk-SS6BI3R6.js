import {
  g
} from "./chunk-YC5U2RV5.js";
import {
  Cn,
  Gn
} from "./chunk-BNBT4QTW.js";
import {
  j
} from "./chunk-4OR73Y2R.js";
import {
  r
} from "./chunk-RTDN6KAT.js";
import {
  l
} from "./chunk-MP6GH2AC.js";
import {
  y3 as y
} from "./chunk-V76KGJFU.js";
import {
  a2,
  s2 as s
} from "./chunk-HB2SQRT2.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  a
} from "./chunk-IYZKKFJM.js";

// node_modules/@arcgis/core/layers/support/SceneModification.js
var m;
var y2 = m = class extends l {
  constructor(e2) {
    super(e2), this.geometry = null, this.type = "clip";
  }
  writeGeometry(e2, r2, o, s2) {
    if (s2.layer && s2.layer.spatialReference && !s2.layer.spatialReference.equals(this.geometry.spatialReference)) {
      if (!Cn(e2.spatialReference, s2.layer.spatialReference))
        return void (s2 && s2.messages && s2.messages.push(new s("scenemodification:unsupported", "Scene modifications with incompatible spatial references are not supported", { modification: this, spatialReference: s2.layer.spatialReference, context: s2 })));
      const p = new j();
      Gn(e2, p, s2.layer.spatialReference), r2[o] = p.toJSON(s2);
    } else
      r2[o] = e2.toJSON(s2);
    delete r2[o].spatialReference;
  }
  clone() {
    return new m({ geometry: a(this.geometry), type: this.type });
  }
};
e([y({ type: j }), g()], y2.prototype, "geometry", void 0), e([r(["web-scene", "portal-item"], "geometry")], y2.prototype, "writeGeometry", null), e([y({ type: ["clip", "mask", "replace"], nonNullable: true }), g()], y2.prototype, "type", void 0), y2 = m = e([a2("esri.layers.support.SceneModification")], y2);
var f = y2;

export {
  f
};
//# sourceMappingURL=chunk-SS6BI3R6.js.map

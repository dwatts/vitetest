import {
  d,
  j,
  l,
  o,
  p,
  q,
  s
} from "./chunk-NLWV7Q6F.js";
import {
  n
} from "./chunk-SS3YG6J3.js";

// node_modules/@arcgis/core/views/support/geometry2dUtils.js
function h(t2, n2) {
  return t2[0] * n2[1] - t2[1] * n2[0];
}
function I(t2, n2, o2) {
  const u = j(o2, n2) / p(o2);
  return l(t2, o2, u);
}
function L(t2, n2, r, s2, e = r) {
  return o(b, s2, r), o(x, n2, e), I(A, x, b), s(t2, e, A);
}
function m2(t2, n2, r, s2) {
  o(b, n2, r);
  const e = s2 / q(b);
  return d(t2, r, b, e);
}
function j2(t2, n2) {
  const r = t2.start, s2 = t2.end, e = n2.start, u = n2.end, c = o(b, s2, r), i = o(k, u, e), f = h(c, i);
  if (Math.abs(f) <= M)
    return [];
  const p2 = o(x, r, e), E = h(i, p2) / f, I2 = h(c, p2) / f;
  if (E >= 0) {
    if (I2 >= 0 || n2.type === v.LINE)
      return [d(A, r, c, E)];
  } else if (t2.type === v.LINE && (I2 >= 0 || n2.type === v.LINE))
    return [d(A, r, c, E)];
  return [];
}
var v;
!function(t2) {
  t2[t2.RAY = 0] = "RAY", t2[t2.LINE = 1] = "LINE";
}(v || (v = {}));
var M = 1e-6;
var b = n();
var k = n();
var x = n();
var A = n();

export {
  L,
  m2 as m,
  j2 as j,
  v
};
//# sourceMappingURL=chunk-VIDC736D.js.map

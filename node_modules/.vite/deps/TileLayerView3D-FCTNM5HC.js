import {
  S,
  U
} from "./chunk-7LWWKPW7.js";
import {
  r
} from "./chunk-R5Y2SULF.js";
import {
  o
} from "./chunk-IT2KU2XD.js";
import {
  a as a2
} from "./chunk-32IFRFHL.js";
import {
  n
} from "./chunk-XGIDQJNQ.js";
import {
  d
} from "./chunk-TYEEWKIN.js";
import "./chunk-WON6TZX6.js";
import "./chunk-OLCZX7MC.js";
import "./chunk-ERFCZMKG.js";
import "./chunk-C2GW4T2D.js";
import "./chunk-5IRKUUA3.js";
import "./chunk-644IM3NW.js";
import "./chunk-TE7N6C3J.js";
import "./chunk-FJA4J75M.js";
import "./chunk-MVWFPLOX.js";
import "./chunk-X3YW4YOG.js";
import "./chunk-SGBMUZSF.js";
import "./chunk-BFVDDR4R.js";
import "./chunk-CMNAZRWU.js";
import "./chunk-YGUWDSEH.js";
import "./chunk-F4ILXEXC.js";
import "./chunk-KRCNIFX2.js";
import "./chunk-LVVQ2RQY.js";
import "./chunk-M6OG7C2T.js";
import "./chunk-GOK5MP3B.js";
import "./chunk-DSWGERIY.js";
import "./chunk-Y2ZDD3I4.js";
import "./chunk-RVS5HU2K.js";
import "./chunk-SS3YG6J3.js";
import "./chunk-NVGPNIR6.js";
import "./chunk-VMTVUE47.js";
import "./chunk-GDZM4A6K.js";
import "./chunk-XWGNMTES.js";
import "./chunk-6NNEHJYI.js";
import {
  Cn
} from "./chunk-BNBT4QTW.js";
import "./chunk-3FQOSG5O.js";
import "./chunk-W4KI5YEI.js";
import "./chunk-CAFGOFIE.js";
import "./chunk-7EG7BYWF.js";
import "./chunk-JNDFAMXY.js";
import "./chunk-NTEKJWGF.js";
import "./chunk-TFIKV5RU.js";
import "./chunk-KW6QQDGN.js";
import "./chunk-AQ7R6V4L.js";
import "./chunk-DOQ3SAAR.js";
import "./chunk-4BXK4H4L.js";
import "./chunk-SLVNG7FV.js";
import "./chunk-DEZCXTA3.js";
import "./chunk-RRJGZKNX.js";
import "./chunk-PL5Q4C6Y.js";
import "./chunk-A6VKJXIH.js";
import "./chunk-KFSY6ZZH.js";
import "./chunk-7EQSYZHW.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-GGOVZ2GK.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-WLWP35G2.js";
import "./chunk-JPW73GY2.js";
import "./chunk-HXPVVSLV.js";
import "./chunk-4OR73Y2R.js";
import "./chunk-EKJ2DJIR.js";
import "./chunk-TEHNQYQD.js";
import "./chunk-TPJLFGOT.js";
import "./chunk-CQX57DED.js";
import "./chunk-3CQBBMMD.js";
import "./chunk-Z2ZUNW5S.js";
import "./chunk-7L7Z2HXM.js";
import "./chunk-75NKPXTR.js";
import "./chunk-EUVARFSM.js";
import "./chunk-3VUFACNT.js";
import "./chunk-ZEEBL7ZN.js";
import "./chunk-RTDN6KAT.js";
import "./chunk-GJ7PJ7XG.js";
import "./chunk-SJ2GJCS2.js";
import "./chunk-H7RDAEPY.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-7KH4CLS5.js";
import "./chunk-WCHO7VLT.js";
import "./chunk-JL3TJGVW.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-43LWRDQS.js";
import "./chunk-R6YKST3K.js";
import "./chunk-ZJEWQGHG.js";
import "./chunk-YGB42LDG.js";
import "./chunk-F3KGLZDZ.js";
import "./chunk-MP6GH2AC.js";
import {
  y3 as y
} from "./chunk-V76KGJFU.js";
import {
  a2 as a
} from "./chunk-HB2SQRT2.js";
import "./chunk-U3J7253Q.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-ZWUBORGT.js";
import "./chunk-3R7FAT25.js";
import "./chunk-7I33FAWS.js";
import "./chunk-DWOEYHKS.js";
import {
  s3 as s
} from "./chunk-HMVAPW5X.js";
import "./chunk-IYZKKFJM.js";
import "./chunk-JZJWZ6DN.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/views/3d/layers/TileLayerView3D.js
var m = class extends a2(o(n(d))) {
  constructor() {
    super(...arguments), this.type = "tile-3d", this._popupHighlightHelper = null;
  }
  get imageFormatIsOpaque() {
    return "jpg" === this.layer.tileInfo.format;
  }
  get hasMixedImageFormats() {
    return "mixed" === this.layer.tileInfo.format;
  }
  get tileInfo() {
    return this.layer.tileInfo;
  }
  initialize() {
    if ("web-tile" === this.layer.type) {
      const e2 = this.layer.get("fullExtent.spatialReference"), r2 = this.layer.get("tileInfo.spatialReference");
      if (null == e2 || null == r2 || !Cn(e2, r2)) {
        const e3 = "defaults" === this.layer.originOf("fullExtent") || null == this.layer.fullExtent ? "SceneView requires fullExtent to be specified by the user on WebTileLayer" : "SceneView requires fullExtent to be specified in the same spatial reference as tileInfo on WebTileLayer";
        this.addResolvingPromise(Promise.reject(new s("layerview:incompatible-fullextent", e3)));
      }
    }
    S(this, this.layer) && (this._popupHighlightHelper = new U({ createFetchPopupFeaturesQueryGeometry: (e2, t) => r(e2, t, this.view), layerView: this, updatingHandles: this.updatingHandles })), this._addTilingSchemeMatchPromise();
  }
  destroy() {
    var _a;
    (_a = this._popupHighlightHelper) == null ? void 0 : _a.destroy();
  }
  async fetchPopupFeatures(e2, t) {
    return this._popupHighlightHelper ? this._popupHighlightHelper.fetchPopupFeatures(e2, t) : [];
  }
  async doRefresh() {
    this.suspended || this.emit("data-changed");
  }
};
e([y()], m.prototype, "imageFormatIsOpaque", null), e([y()], m.prototype, "hasMixedImageFormats", null), e([y()], m.prototype, "layer", void 0), e([y()], m.prototype, "tileInfo", null), m = e([a("esri.views.3d.layers.TileLayerView3D")], m);
var c = m;
export {
  c as default
};
//# sourceMappingURL=TileLayerView3D-FCTNM5HC.js.map

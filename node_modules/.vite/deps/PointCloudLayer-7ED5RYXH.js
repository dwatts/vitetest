import {
  a as a3,
  a2 as a4,
  a3 as a5,
  d as d2
} from "./chunk-Y4ZO2DJL.js";
import {
  K,
  N
} from "./chunk-6OH4SNKA.js";
import "./chunk-QPXU3YKY.js";
import "./chunk-T3UXUOZW.js";
import "./chunk-FLVP2XLK.js";
import "./chunk-FCLGNXEM.js";
import {
  i
} from "./chunk-LCS4FL4K.js";
import {
  l as l2
} from "./chunk-4JFWLHWB.js";
import {
  s as s3
} from "./chunk-2WJ2SRK2.js";
import {
  p as p2
} from "./chunk-GDP6ZU2A.js";
import "./chunk-NX5NNI52.js";
import "./chunk-G2DTL6AE.js";
import "./chunk-YA7WDOJK.js";
import {
  j as j2
} from "./chunk-ZX45U24W.js";
import "./chunk-KYWX7M3R.js";
import {
  t
} from "./chunk-QC2JMJXZ.js";
import {
  c as c2
} from "./chunk-GFPASUQP.js";
import {
  O
} from "./chunk-KDACHJ5G.js";
import {
  c,
  d,
  p
} from "./chunk-IQRLZSBX.js";
import "./chunk-OZL6Q7O2.js";
import "./chunk-ZWFMUHG3.js";
import "./chunk-EFRTD25L.js";
import {
  y as y2
} from "./chunk-GSS6WNQU.js";
import "./chunk-C2EHS6UI.js";
import "./chunk-NVGPNIR6.js";
import {
  i4 as i2,
  k
} from "./chunk-6NNEHJYI.js";
import "./chunk-BNBT4QTW.js";
import "./chunk-3FQOSG5O.js";
import "./chunk-W4KI5YEI.js";
import "./chunk-CAFGOFIE.js";
import "./chunk-7EG7BYWF.js";
import "./chunk-TFIKV5RU.js";
import "./chunk-4BXK4H4L.js";
import "./chunk-SLVNG7FV.js";
import "./chunk-SVCGLUNW.js";
import {
  b
} from "./chunk-3KEIFTQ6.js";
import "./chunk-DEZCXTA3.js";
import "./chunk-RRJGZKNX.js";
import "./chunk-A6VKJXIH.js";
import "./chunk-KFSY6ZZH.js";
import "./chunk-7EQSYZHW.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-GGOVZ2GK.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-WLWP35G2.js";
import {
  o as o3
} from "./chunk-JPW73GY2.js";
import "./chunk-HXPVVSLV.js";
import "./chunk-4OR73Y2R.js";
import "./chunk-EKJ2DJIR.js";
import "./chunk-TEHNQYQD.js";
import "./chunk-TPJLFGOT.js";
import "./chunk-CQX57DED.js";
import "./chunk-3CQBBMMD.js";
import "./chunk-2CTB7MKH.js";
import "./chunk-Z2ZUNW5S.js";
import "./chunk-7L7Z2HXM.js";
import "./chunk-75NKPXTR.js";
import "./chunk-EUVARFSM.js";
import "./chunk-3VUFACNT.js";
import "./chunk-ZEEBL7ZN.js";
import {
  o as o2,
  r
} from "./chunk-RTDN6KAT.js";
import "./chunk-GJ7PJ7XG.js";
import "./chunk-5EXFDBQJ.js";
import "./chunk-SJ2GJCS2.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-7KH4CLS5.js";
import "./chunk-WCHO7VLT.js";
import "./chunk-JL3TJGVW.js";
import "./chunk-JZM5YUHA.js";
import {
  j
} from "./chunk-43LWRDQS.js";
import "./chunk-R6YKST3K.js";
import {
  V
} from "./chunk-ZJEWQGHG.js";
import "./chunk-YGB42LDG.js";
import "./chunk-F3KGLZDZ.js";
import {
  l
} from "./chunk-MP6GH2AC.js";
import {
  y3 as y
} from "./chunk-V76KGJFU.js";
import {
  a2
} from "./chunk-HB2SQRT2.js";
import "./chunk-U3J7253Q.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-ZWUBORGT.js";
import {
  T
} from "./chunk-3R7FAT25.js";
import {
  f
} from "./chunk-7I33FAWS.js";
import "./chunk-DWOEYHKS.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-HMVAPW5X.js";
import {
  a,
  o
} from "./chunk-IYZKKFJM.js";
import "./chunk-JZJWZ6DN.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/pointCloudFilters/PointCloudFilter.js
var t2 = class extends l {
  constructor(r2) {
    super(r2), this.field = null, this.type = null;
  }
  clone() {
    return console.warn(".clone() is not implemented for " + this.declaredClass), null;
  }
};
e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], t2.prototype, "field", void 0), e([y({ readOnly: true, nonNullable: true, json: { read: false } })], t2.prototype, "type", void 0), t2 = e([a2("esri.layers.pointCloudFilters.PointCloudFilter")], t2);
var l3 = t2;

// node_modules/@arcgis/core/layers/pointCloudFilters/PointCloudBitfieldFilter.js
var d3;
var p3 = d3 = class extends l3 {
  constructor(e3) {
    super(e3), this.requiredClearBits = null, this.requiredSetBits = null, this.type = "bitfield";
  }
  clone() {
    return new d3({ field: this.field, requiredClearBits: a(this.requiredClearBits), requiredSetBits: a(this.requiredSetBits) });
  }
};
e([y({ type: [T], json: { write: { enabled: true, overridePolicy() {
  return { enabled: true, isRequired: !this.requiredSetBits };
} } } })], p3.prototype, "requiredClearBits", void 0), e([y({ type: [T], json: { write: { enabled: true, overridePolicy() {
  return { enabled: true, isRequired: !this.requiredClearBits };
} } } })], p3.prototype, "requiredSetBits", void 0), e([o3({ pointCloudBitfieldFilter: "bitfield" })], p3.prototype, "type", void 0), p3 = d3 = e([a2("esri.layers.pointCloudFilters.PointCloudBitfieldFilter")], p3);
var u = p3;

// node_modules/@arcgis/core/layers/pointCloudFilters/PointCloudReturnFilter.js
var n;
var p4 = n = class extends l3 {
  constructor(r2) {
    super(r2), this.includedReturns = [], this.type = "return";
  }
  clone() {
    return new n({ field: this.field, includedReturns: a(this.includedReturns) });
  }
};
e([y({ type: [["firstOfMany", "last", "lastOfMany", "single"]], json: { write: { enabled: true, isRequired: true } } })], p4.prototype, "includedReturns", void 0), e([o3({ pointCloudReturnFilter: "return" })], p4.prototype, "type", void 0), p4 = n = e([a2("esri.layers.pointCloudFilters.PointCloudReturnFilter")], p4);
var u2 = p4;

// node_modules/@arcgis/core/layers/pointCloudFilters/PointCloudValueFilter.js
var p5;
var l4 = p5 = class extends l3 {
  constructor(e3) {
    super(e3), this.mode = "exclude", this.type = "value", this.values = [];
  }
  clone() {
    return new p5({ field: this.field, mode: this.mode, values: a(this.values) });
  }
};
e([y({ type: ["exclude", "include"], json: { write: { enabled: true, isRequired: true } } })], l4.prototype, "mode", void 0), e([o3({ pointCloudValueFilter: "value" })], l4.prototype, "type", void 0), e([y({ type: [Number], json: { write: { enabled: true, isRequired: true } } })], l4.prototype, "values", void 0), l4 = p5 = e([a2("esri.layers.pointCloudFilters.PointCloudValueFilter")], l4);
var u3 = l4;

// node_modules/@arcgis/core/layers/pointCloudFilters/typeUtils.js
var e2 = { key: "type", base: l3, typeMap: { value: u3, bitfield: u, return: u2 } };

// node_modules/@arcgis/core/renderers/PointCloudRGBRenderer.js
var i3;
var c3 = i3 = class extends a3 {
  constructor(r2) {
    super(r2), this.type = "point-cloud-rgb", this.field = null;
  }
  clone() {
    return new i3({ ...this.cloneProperties(), field: a(this.field) });
  }
};
e([o3({ pointCloudRGBRenderer: "point-cloud-rgb" })], c3.prototype, "type", void 0), e([y({ type: String, json: { write: true } })], c3.prototype, "field", void 0), c3 = i3 = e([a2("esri.renderers.PointCloudRGBRenderer")], c3);
var n2 = c3;

// node_modules/@arcgis/core/renderers/support/pointCloud/typeUtils.js
var i4 = { key: "type", base: a3, typeMap: { "point-cloud-class-breaks": d2, "point-cloud-rgb": n2, "point-cloud-stretch": a4, "point-cloud-unique-value": a5 }, errorContext: "renderer" };

// node_modules/@arcgis/core/layers/PointCloudLayer.js
var C = s3();
var A = class extends N(l2(c2(j2(t(O(i(b))))))) {
  constructor(...e3) {
    super(...e3), this.operationalLayerType = "PointCloudLayer", this.popupEnabled = true, this.popupTemplate = null, this.opacity = 1, this.filters = [], this.fields = null, this.fieldsIndex = null, this.outFields = null, this.path = null, this.legendEnabled = true, this.renderer = null, this.type = "point-cloud";
  }
  normalizeCtorArgs(e3, r2) {
    return "string" == typeof e3 ? { url: e3, ...r2 } : e3;
  }
  get defaultPopupTemplate() {
    return this.attributeStorageInfo ? this.createPopupTemplate() : null;
  }
  getFieldDomain(e3) {
    const r2 = this.fieldsIndex.get(e3);
    return r2 && r2.domain ? r2.domain : null;
  }
  readServiceFields(e3, r2, t3) {
    return Array.isArray(e3) ? e3.map((e4) => {
      const r3 = new y2();
      return "FieldTypeInteger" === e4.type && ((e4 = a(e4)).type = "esriFieldTypeInteger"), r3.read(e4, t3), r3;
    }) : Array.isArray(r2.attributeStorageInfo) ? r2.attributeStorageInfo.map((e4) => new y2({ name: e4.name, type: "ELEVATION" === e4.name ? "double" : "integer" })) : null;
  }
  set elevationInfo(e3) {
    this._set("elevationInfo", e3), this._validateElevationInfo();
  }
  writeRenderer(e3, r2, t3, o4) {
    o("layerDefinition.drawingInfo.renderer", e3.write({}, o4), r2);
  }
  load(e3) {
    const r2 = null != e3 ? e3.signal : null, t3 = this.loadFromPortal({ supportedTypes: ["Scene Service"] }, e3).catch(f).then(() => this._fetchService(r2));
    return this.addResolvingPromise(t3), Promise.resolve(this);
  }
  createPopupTemplate(e3) {
    const r2 = p2(this, e3);
    return r2 && (this._formatPopupTemplateReturnsField(r2), this._formatPopupTemplateRGBField(r2)), r2;
  }
  _formatPopupTemplateReturnsField(e3) {
    var _a;
    const r2 = this.fieldsIndex.get("RETURNS");
    if (!r2)
      return;
    const t3 = (_a = e3.fieldInfos) == null ? void 0 : _a.find((e4) => e4.fieldName === r2.name);
    if (!t3)
      return;
    const o4 = new i2({ name: "pcl-returns-decoded", title: r2.alias || r2.name, expression: `
        var returnValue = $feature.${r2.name};
        return (returnValue % 16) + " / " + Floor(returnValue / 16);
      ` });
    e3.expressionInfos = [...e3.expressionInfos || [], o4], t3.fieldName = "expression/pcl-returns-decoded";
  }
  _formatPopupTemplateRGBField(e3) {
    var _a;
    const r2 = this.fieldsIndex.get("RGB");
    if (!r2)
      return;
    const t3 = (_a = e3.fieldInfos) == null ? void 0 : _a.find((e4) => e4.fieldName === r2.name);
    if (!t3)
      return;
    const o4 = new i2({ name: "pcl-rgb-decoded", title: r2.alias || r2.name, expression: `
        var rgb = $feature.${r2.name};
        var red = Floor(rgb / 65536, 0);
        var green = Floor((rgb - (red * 65536)) / 256,0);
        var blue = rgb - (red * 65536) - (green * 256);

        return "rgb(" + red + "," + green + "," + blue + ")";
      ` });
    e3.expressionInfos = [...e3.expressionInfos || [], o4], t3.fieldName = "expression/pcl-rgb-decoded";
  }
  async queryCachedStatistics(e3, r2) {
    if (await this.load(r2), !this.attributeStorageInfo)
      throw new s2("scenelayer:no-cached-statistics", "Cached statistics are not available for this layer");
    const i5 = this.fieldsIndex.get(e3);
    if (!i5)
      throw new s2("pointcloudlayer:field-unexisting", `Field '${e3}' does not exist on the layer`);
    for (const o4 of this.attributeStorageInfo)
      if (o4.name === i5.name) {
        const e4 = V(this.parsedUrl.path, `./statistics/${o4.key}`);
        return j(e4, { query: { f: "json", token: this.apiKey }, responseType: "json", signal: r2 ? r2.signal : null }).then((e5) => e5.data);
      }
    throw new s2("pointcloudlayer:no-cached-statistics", "Cached statistics for this attribute are not available");
  }
  async saveAs(e3, r2) {
    return this._debouncedSaveOperations(K.SAVE_AS, { ...r2, getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "point-cloud" }, e3);
  }
  async save() {
    const e3 = { getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "point-cloud" };
    return this._debouncedSaveOperations(K.SAVE, e3);
  }
  validateLayer(e3) {
    if (e3.layerType && "PointCloud" !== e3.layerType)
      throw new s2("pointcloudlayer:layer-type-not-supported", "PointCloudLayer does not support this layer type", { layerType: e3.layerType });
    if (isNaN(this.version.major) || isNaN(this.version.minor))
      throw new s2("layer:service-version-not-supported", "Service version is not supported.", { serviceVersion: this.version.versionString, supportedVersions: "1.x-2.x" });
    if (this.version.major > 2)
      throw new s2("layer:service-version-too-new", "Service version is too new.", { serviceVersion: this.version.versionString, supportedVersions: "1.x-2.x" });
  }
  hasCachedStatistics(e3) {
    return null != this.attributeStorageInfo && this.attributeStorageInfo.some((r2) => r2.name === e3);
  }
  _getTypeKeywords() {
    return ["PointCloud"];
  }
  _validateElevationInfo() {
    const e3 = this.elevationInfo;
    e3 && ("absolute-height" !== e3.mode && s.getLogger(this).warn(".elevationInfo=", "Point cloud layers only support absolute-height elevation mode"), e3.featureExpressionInfo && "0" !== e3.featureExpressionInfo.expression && s.getLogger(this).warn(".elevationInfo=", "Point cloud layers do not support featureExpressionInfo"));
  }
};
e([y({ type: ["PointCloudLayer"] })], A.prototype, "operationalLayerType", void 0), e([y(p)], A.prototype, "popupEnabled", void 0), e([y({ type: k, json: { name: "popupInfo", write: true } })], A.prototype, "popupTemplate", void 0), e([y({ readOnly: true, json: { read: false } })], A.prototype, "defaultPopupTemplate", null), e([y({ readOnly: true, json: { write: false, read: false, origins: { "web-document": { write: false, read: false } } } })], A.prototype, "opacity", void 0), e([y({ type: ["show", "hide"] })], A.prototype, "listMode", void 0), e([y({ types: [e2], json: { origins: { service: { read: { source: "filters" } } }, name: "layerDefinition.filters", write: true } })], A.prototype, "filters", void 0), e([y({ type: [y2] })], A.prototype, "fields", void 0), e([y(C.fieldsIndex)], A.prototype, "fieldsIndex", void 0), e([o2("service", "fields", ["fields", "attributeStorageInfo"])], A.prototype, "readServiceFields", null), e([y(C.outFields)], A.prototype, "outFields", void 0), e([y({ readOnly: true })], A.prototype, "attributeStorageInfo", void 0), e([y(d)], A.prototype, "elevationInfo", null), e([y({ type: String, json: { origins: { "web-scene": { read: true, write: true }, "portal-item": { read: true, write: true } }, read: false } })], A.prototype, "path", void 0), e([y(c)], A.prototype, "legendEnabled", void 0), e([y({ types: i4, json: { origins: { service: { read: { source: "drawingInfo.renderer" } } }, name: "layerDefinition.drawingInfo.renderer", write: { target: { "layerDefinition.drawingInfo.renderer": { types: i4 }, "layerDefinition.drawingInfo.transparency": { type: Number } } } } })], A.prototype, "renderer", void 0), e([r("renderer")], A.prototype, "writeRenderer", null), e([y({ json: { read: false }, readOnly: true })], A.prototype, "type", void 0), A = e([a2("esri.layers.PointCloudLayer")], A);
var N2 = A;
export {
  N2 as default
};
//# sourceMappingURL=PointCloudLayer-7ED5RYXH.js.map

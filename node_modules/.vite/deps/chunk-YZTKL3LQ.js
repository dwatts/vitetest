import {
  C
} from "./chunk-4BA5YJ7C.js";
import {
  e as e4
} from "./chunk-2EO2WRP7.js";
import {
  r2 as r
} from "./chunk-BDX5TRUE.js";
import {
  A,
  S,
  a as a2,
  c,
  l as l2
} from "./chunk-LIXBKTBN.js";
import {
  e as e3,
  f,
  o as o2
} from "./chunk-VDSNHCMM.js";
import {
  E as E2
} from "./chunk-6LC2JTLC.js";
import {
  s
} from "./chunk-XM3YSFN6.js";
import {
  e as e2,
  i,
  t as t2
} from "./chunk-V6CD66ZZ.js";
import {
  W,
  _,
  a,
  h as h2
} from "./chunk-6FHMQNMS.js";
import {
  t as t3
} from "./chunk-YQDOKTNT.js";
import {
  r as r2
} from "./chunk-KFDARCTS.js";
import {
  E
} from "./chunk-NU4UASX6.js";
import {
  t
} from "./chunk-FB4A6PBH.js";
import {
  o
} from "./chunk-SADO52IH.js";
import {
  h
} from "./chunk-73PNWDTS.js";
import {
  n
} from "./chunk-JP7O2ZWE.js";
import {
  H
} from "./chunk-Z7LZRT7C.js";
import {
  O
} from "./chunk-BN6X2OXK.js";
import {
  l
} from "./chunk-YGUWDSEH.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  has
} from "./chunk-JZJWZ6DN.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/ColorMaterialTechnique.js
var T = class _T extends e2 {
  initializeProgram(e5) {
    return new i(e5.rctx, _T.shader.get().build(this.configuration), E);
  }
  _createPipeline(e5, t4) {
    const i2 = this.configuration, s2 = e5 === o.NONE, c2 = e5 === o.FrontFace;
    return W({ blending: i2.output !== h.Color && i2.output !== h.Alpha || !i2.transparent ? null : s2 ? c : A(e5), culling: h2(i2.cullFace), depthTest: { func: l2(e5) }, depthWrite: (s2 || c2) && i2.writeDepth ? a : null, colorWrite: _, stencilWrite: i2.hasOccludees ? e3 : null, stencilTest: i2.hasOccludees ? t4 ? o2 : f : null, polygonOffset: s2 || c2 ? i2.polygonOffset ? S2 : null : a2(i2.enableOffset) });
  }
  initializePipeline() {
    return this._occludeePipelineState = this._createPipeline(this.configuration.transparencyPassType, true), this._createPipeline(this.configuration.transparencyPassType, false);
  }
  getPipelineState(e5, r3) {
    return r3 ? this._occludeePipelineState : super.getPipelineState(e5, r3);
  }
};
T.shader = new t2(C, () => import("./ColorMaterial.glsl-NIZAC4G5.js"));
var S2 = { factor: 1, units: 1 };

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/ColorMaterialTechniqueConfiguration.js
var p = class extends s {
  constructor() {
    super(...arguments), this.output = h.Color, this.cullFace = n.None, this.transparencyPassType = o.NONE, this.hasSlicePlane = false, this.hasVertexColors = false, this.transparent = false, this.polygonOffset = false, this.enableOffset = true, this.writeDepth = true, this.hasOccludees = false, this.hasMultipassTerrain = false, this.cullAboveGround = false, this.objectAndLayerIdColorInstanced = false, this.vvColor = false;
  }
};
e([r2({ count: h.COUNT })], p.prototype, "output", void 0), e([r2({ count: n.COUNT })], p.prototype, "cullFace", void 0), e([r2({ count: o.COUNT })], p.prototype, "transparencyPassType", void 0), e([r2()], p.prototype, "hasSlicePlane", void 0), e([r2()], p.prototype, "hasVertexColors", void 0), e([r2()], p.prototype, "transparent", void 0), e([r2()], p.prototype, "polygonOffset", void 0), e([r2()], p.prototype, "enableOffset", void 0), e([r2()], p.prototype, "writeDepth", void 0), e([r2()], p.prototype, "hasOccludees", void 0), e([r2()], p.prototype, "hasMultipassTerrain", void 0), e([r2()], p.prototype, "cullAboveGround", void 0), e([r2()], p.prototype, "objectAndLayerIdColorInstanced", void 0), e([r2()], p.prototype, "vvColor", void 0), e([r2({ constValue: true })], p.prototype, "hasVvInstancing", void 0), e([r2({ constValue: false })], p.prototype, "vvSize", void 0), e([r2({ constValue: false })], p.prototype, "vvOpacity", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/ColorMaterial.js
var f2 = class extends e4 {
  constructor(e5) {
    super(e5, new d()), this.supportsEdges = true, this._configuration = new p();
  }
  getConfiguration(e5, r3) {
    return this._configuration.output = e5, this._configuration.cullFace = this.parameters.cullFace, this._configuration.hasVertexColors = this.parameters.hasVertexColors && !this.parameters.vvColor, this._configuration.hasSlicePlane = this.parameters.hasSlicePlane, this._configuration.transparent = this.parameters.transparent, this._configuration.polygonOffset = this.parameters.polygonOffset, this._configuration.writeDepth = this.parameters.writeDepth, this._configuration.hasOccludees = this.parameters.hasOccludees, this._configuration.transparencyPassType = r3.transparencyPassType, this._configuration.enableOffset = r3.camera.relativeElevation < S, this._configuration.hasMultipassTerrain = r3.multipassTerrain.enabled, this._configuration.cullAboveGround = r3.multipassTerrain.cullAboveGround, this._configuration.vvColor = !!this.parameters.vvColor, this._configuration;
  }
  requiresSlot(e5, r3) {
    if (r3 === h.Color || r3 === h.Alpha || r3 === h.Highlight || r3 === h.Depth && this.parameters.writeLinearDepth || r3 === h.ObjectAndLayerIdColor) {
      if (e5 === E2.DRAPED_MATERIAL)
        return true;
      if (r3 === h.Highlight)
        return e5 === E2.OPAQUE_MATERIAL;
      return e5 === (this.parameters.transparent ? this.parameters.writeDepth ? E2.TRANSPARENT_MATERIAL : E2.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL : E2.OPAQUE_MATERIAL);
    }
    return false;
  }
  createGLMaterial(e5) {
    return new m(e5);
  }
  createBufferWriter() {
    const e5 = H().vec3f(O.POSITION);
    return has("enable-feature:objectAndLayerId-rendering") && e5.vec4u8(O.OBJECTANDLAYERIDCOLOR), this.parameters.vvColor ? e5.f32(O.COLORFEATUREATTRIBUTE) : e5.vec4u8(O.COLOR), new r(e5);
  }
};
var m = class extends t {
  _updateOccludeeState(e5) {
    e5.hasOccludees !== this._material.parameters.hasOccludees && this._material.setParameters({ hasOccludees: e5.hasOccludees });
  }
  beginSlot(e5) {
    return this._output !== h.Color && this._output !== h.Alpha || this._updateOccludeeState(e5), this.ensureTechnique(T, e5);
  }
};
var d = class extends t3 {
  constructor() {
    super(...arguments), this.color = l, this.transparent = false, this.writeDepth = true, this.writeLinearDepth = false, this.hasVertexColors = false, this.polygonOffset = false, this.hasSlicePlane = false, this.cullFace = n.None, this.hasOccludees = false;
  }
};

export {
  f2 as f
};
//# sourceMappingURL=chunk-YZTKL3LQ.js.map

{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/environment/PrecipitationTechniqueConfiguration.js", "../../@arcgis/core/chunks/Precipitation.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import{parameter as n,ShaderTechniqueConfiguration as o}from\"../webgl-engine/core/shaderTechnique/ShaderTechniqueConfiguration.js\";var t;!function(e){e[e.Rain=0]=\"Rain\",e[e.Snow=1]=\"Snow\",e[e.COUNT=2]=\"COUNT\"}(t||(t={}));class i extends o{constructor(){super(...arguments),this.type=t.Rain}}e([n({count:t.COUNT})],i.prototype,\"type\",void 0);export{i as PrecipitationTechniqueConfiguration,t as PrecipitationType};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{H as e,s as t,w as o,g as a,n as i,e as r,h as n}from\"./vec3.js\";import{c as s,f as d}from\"./vec3f64.js\";import{PrecipitationType as c}from\"../views/3d/environment/PrecipitationTechniqueConfiguration.js\";import{Float3PassUniform as m}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{FloatPassUniform as v}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as f}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4PassUniform as l}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";import{ShaderBuilder as p}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{VertexAttribute as u}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function h(e){const t=new p;return t.attributes.add(u.POSITION,\"vec3\"),t.attributes.add(u.INSTANCEFEATUREATTRIBUTE,\"float\"),t.vertex.uniforms.add(new m(\"cameraPosition\",((e,t)=>t.camera.eye))),t.vertex.uniforms.add(new m(\"offset\",((e,t)=>w(e,t)))),t.vertex.uniforms.add(new v(\"width\",(e=>e.width))),t.vertex.uniforms.add(new l(\"proj\",((e,t)=>t.camera.projectionMatrix))),t.vertex.uniforms.add(new l(\"view\",((e,t)=>t.camera.viewMatrix))),t.vertex.uniforms.add(new v(\"time\",(e=>e.time))),t.varyings.add(\"vUv\",\"vec2\"),t.vertex.code.add(f`\n    vec3 hash31(float p){\n      vec3 p3 = fract(vec3(p) * vec3(0.1031, 0.1030, 0.0973));\n      p3 += dot(p3, p3.yzx + 33.33);\n      return fract((p3.xxy + p3.yzz) * p3.zyx);\n    }\n\n    float hash11(float p){\n      p = fract(p * 0.1031);\n      p *= p + 33.33;\n      p *= p + p;\n      return fract(p);\n    }\n\n    //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n    vec3 rotateVectorByQuaternion(vec3 v, vec4 q){\n      return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n    }\n\n    void main(void) {\n\n      vUv = position.xz;\n\n      vec3 rand = hash31(instanceFeatureAttribute);\n\n      // Set random position for all particles\n      // The hash function space is not high resolution so offset particles by an additional random value\n      // This creates grids of 1000 particles which are shifted by random hundreths of the tile width\n      // overlaying multiple identical but offset grids\n      vec3 randomPosition = 2.0 * (rand + (0.01 + 0.01 * rand) * floor(0.001 * instanceFeatureAttribute)) - 1.0;\n\n      // Random orientation of rain drops\n      float angle = 3.1415 * hash11(instanceFeatureAttribute);\n\n      vec3 up = vec3(0, 0, 1);\n\n      // Gravity and wind direction\n      vec3 direction = normalize(cameraPosition);\n\n      vec3 tangent = normalize(cross(direction, up));\n\n      // Gravity\n      vec3 animatedPos = randomPosition + direction * -time;\n\n      // Rain particles fall straight down and are randomly oriented\n      // Snow particles have random sinusoid trajectories and are rotated to face the camera\n      ${e.type===c.Rain?f`\n            // Random rotation for particle\n            vec3 rotationAxis = up;\n            vec4 quat = vec4(rotationAxis * sin(angle), cos(angle));\n            vec3 transformedPos = rotateVectorByQuaternion(vec3(0.2, 0.2, 4.0) * (position - vec3(0.5, 0.0, 0.5)), quat);\n\n            // Rotate particle to planetary position\n            rotationAxis = tangent;\n            angle = 0.5 * -acos(dot(direction, up));\n            quat = vec4(rotationAxis * sin(angle), cos(angle));\n            transformedPos = rotateVectorByQuaternion(transformedPos, quat);\n\n            vec4 pos = mat4(mat3(view)) * vec4(transformedPos + (mod(width * animatedPos - offset, width) - 0.5 * width), 1.0);\n            gl_Position = proj * pos;\n      `:f`\n            vec3 rotationAxis = direction;\n            vec4 quat = vec4(rotationAxis * sin(angle), cos(angle));\n\n            tangent = rotateVectorByQuaternion(tangent, quat);\n            // Random sinusoid from friction\n            animatedPos += tangent * 0.25 * sin(dot(animatedPos, direction));\n            vec4 pos = mat4(mat3(view)) * vec4((mod(width * animatedPos - offset, width) - 0.5 * width), 1.0);\n            gl_Position = proj * (0.5 * vec4(position.xzy, 0.0) + pos);\n      `}\n    }\n  `),t.fragment.uniforms.add(new v(\"opacity\",(e=>e.opacity)),new m(\"particleColor\",((t,o)=>g(o,e)))),t.fragment.code.add(f`\n    void main() {\n\n      // Cut off corners of the triangle\n      if(vUv.x < 0.0 || vUv.y < 0.0){\n        discard;\n      }\n\n      float d = length(vUv - vec2(0.5));\n\n      ${e.type===c.Rain?f`d = 0.35 * smoothstep(0.5, 0.0, d);`:f`d = smoothstep(0.5, 0.1, d);`}\n      fragColor = opacity * vec4(particleColor * d, d);\n    }\n  `),t}function w(i,r){const n=r.camera.eye,s=.5*i.width,d=1/i.width,c=e(y,t(y,(n[0]+s)*d,(n[1]+s)*d,(n[2]+s)*d));return o(c,n,a(c,c,i.width))}function g(e,t){const o=t.type===c.Rain?P:b,s=a(y,o,j),d=e.camera.eye;i(x,d);const m=Math.max(0,r(x,e.lighting.mainLight.direction));return n(s,s,o,m)}const y=s(),x=s(),b=d(1,1,1),P=d(.85,.85,.85),j=.7,A=Object.freeze(Object.defineProperty({__proto__:null,build:h},Symbol.toStringTag,{value:\"Module\"}));export{A as P,h as b};\n"],
  "mappings": "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",
  "names": ["t", "e", "i", "r", "e", "t", "o", "g", "i", "r", "n", "P", "A"]
}

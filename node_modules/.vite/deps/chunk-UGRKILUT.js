import {
  e,
  i
} from "./chunk-EKJ2DJIR.js";

// node_modules/@arcgis/core/views/3d/layers/support/FeatureTileDescriptor3D.js
var t = class _t {
  constructor(e2, t2, h, r = null) {
    this.lij = [0, 0, 0], this.extent = i(), this.resolution = 0, this.loadPriority = 0, this.measures = { visibility: s.VISIBLE_ON_SURFACE, screenRect: i(), distance: 0, shouldSplit: false }, this.used = false, r && this.acquire(e2, t2, h, r);
  }
  acquire(i2, e2, s2, h) {
    this.tilingScheme = h, this.id = _t.id(i2, e2, s2), this.lij[0] = i2, this.lij[1] = e2, this.lij[2] = s2, h.getExtent(i2, e2, s2, this.extent), this.resolution = h.resolutionAtLevel(i2);
  }
  release() {
    this.tilingScheme = null;
  }
  getChildren(i2) {
    const e2 = this.lij[0] + 1, s2 = 2 * this.lij[1], h = 2 * this.lij[2];
    return i2 ? (i2[0].acquire(e2, s2, h, this.tilingScheme), i2[1].acquire(e2, s2 + 1, h, this.tilingScheme), i2[2].acquire(e2, s2, h + 1, this.tilingScheme), i2[3].acquire(e2, s2 + 1, h + 1, this.tilingScheme), i2) : [new _t(e2, s2, h, this.tilingScheme), new _t(e2, s2 + 1, h, this.tilingScheme), new _t(e2, s2, h + 1, this.tilingScheme), new _t(e2, s2 + 1, h + 1, this.tilingScheme)];
  }
  copyMeasurementsFrom(i2) {
    this.measures.visibility = i2.measures.visibility, this.measures.shouldSplit = i2.measures.shouldSplit, this.measures.distance = i2.measures.distance, e(i2.measures.screenRect, this.measures.screenRect);
  }
  static id(i2, e2, t2) {
    return `${i2}/${e2}/${t2}`;
  }
};
var s;
!function(i2) {
  i2[i2.INVISIBLE = 0] = "INVISIBLE", i2[i2.VISIBLE_WHEN_EXTENDED = 1] = "VISIBLE_WHEN_EXTENDED", i2[i2.VISIBLE_ON_SURFACE = 2] = "VISIBLE_ON_SURFACE";
}(s || (s = {}));

export {
  t,
  s
};
//# sourceMappingURL=chunk-UGRKILUT.js.map

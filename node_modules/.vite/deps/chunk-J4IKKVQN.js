import {
  i as i2
} from "./chunk-ANLIVU2T.js";
import {
  b as b2
} from "./chunk-SVMSZXNG.js";
import {
  l
} from "./chunk-V3PJRXNX.js";
import {
  t as t3
} from "./chunk-HZLL7U3X.js";
import {
  t as t4
} from "./chunk-JPPBETEK.js";
import {
  M as M2,
  P as P2,
  Z,
  d,
  p as p5
} from "./chunk-GMCFKBOJ.js";
import {
  A,
  p as p4
} from "./chunk-US3PAPRX.js";
import {
  B,
  E,
  F2 as F,
  Ge,
  I2 as I,
  J,
  Je,
  K,
  L,
  Le,
  Ne,
  O,
  P2 as P,
  Pe,
  Q,
  U,
  V,
  X,
  Y,
  Ye,
  _,
  _e,
  b,
  ce,
  fe,
  h as h2,
  i,
  ie,
  je,
  me,
  oe,
  pe,
  q,
  se,
  t as t2,
  te,
  v,
  w,
  ye,
  z,
  ze
} from "./chunk-6AMBGZK5.js";
import {
  c
} from "./chunk-YAWND7HF.js";
import {
  p as p3
} from "./chunk-HQEF5G5V.js";
import {
  e,
  t
} from "./chunk-FJYIB7HF.js";
import {
  p as p2
} from "./chunk-HXPVVSLV.js";
import {
  h,
  j,
  m2 as m,
  u
} from "./chunk-4OR73Y2R.js";
import {
  j as j2
} from "./chunk-Z2ZUNW5S.js";
import {
  M
} from "./chunk-3VUFACNT.js";
import {
  f,
  p,
  x2 as x
} from "./chunk-ZEEBL7ZN.js";
import {
  DateTime
} from "./chunk-ODFH3BSN.js";
import {
  c as c2
} from "./chunk-JZM5YUHA.js";
import {
  W
} from "./chunk-ZJEWQGHG.js";
import {
  T
} from "./chunk-7I33FAWS.js";
import {
  r
} from "./chunk-DWOEYHKS.js";

// node_modules/@arcgis/core/arcade/treeAnalysis.js
var e2 = { all: { min: 2, max: 2 }, getenvironment: { min: 0, max: 0 }, none: { min: 2, max: 2 }, any: { min: 2, max: 2 }, reduce: { min: 2, max: 3 }, map: { min: 2, max: 2 }, filter: { min: 2, max: 2 }, fromcodepoint: { min: 1, max: -1 }, fromcharcode: { min: 1, max: -1 }, tocodepoint: { min: 1, max: 2 }, tocharcode: { min: 1, max: 2 }, concatenate: { min: 0, max: -1 }, expects: { min: 1, max: -1 }, getfeatureset: { min: 1, max: 2 }, week: { min: 1, max: 2 }, fromjson: { min: 1, max: 1 }, length3d: { min: 1, max: 2 }, tohex: { min: 1, max: 1 }, hash: { min: 1, max: 1 }, timezone: { min: 1, max: 1 }, timezoneoffset: { min: 1, max: 1 }, changetimezone: { min: 2, max: 2 }, isoweek: { min: 1, max: 1 }, isoweekday: { min: 1, max: 1 }, hasvalue: { min: 2, max: 2 }, isomonth: { min: 1, max: 1 }, isoyear: { min: 1, max: 1 }, resize: { min: 2, max: 3 }, slice: { min: 0, max: -1 }, splice: { min: 0, max: -1 }, push: { min: 2, max: 2 }, pop: { min: 1, max: 1 }, includes: { min: 2, max: 2 }, array: { min: 0, max: 2 }, front: { min: 1, max: 1 }, back: { min: 1, max: 1 }, insert: { min: 3, max: 3 }, erase: { min: 2, max: 2 }, split: { min: 2, max: 4 }, guid: { min: 0, max: 1 }, standardizeguid: { min: 2, max: 2 }, today: { min: 0, max: 0 }, angle: { min: 2, max: 3 }, bearing: { min: 2, max: 3 }, urlencode: { min: 1, max: 1 }, now: { min: 0, max: 0 }, timestamp: { min: 0, max: 0 }, day: { min: 1, max: 1 }, month: { min: 1, max: 1 }, year: { min: 1, max: 1 }, hour: { min: 1, max: 1 }, second: { min: 1, max: 1 }, millisecond: { min: 1, max: 1 }, minute: { min: 1, max: 1 }, weekday: { min: 1, max: 1 }, toutc: { min: 1, max: 1 }, tolocal: { min: 1, max: 1 }, date: { min: 0, max: 8 }, datediff: { min: 2, max: 4 }, dateadd: { min: 2, max: 3 }, trim: { min: 1, max: 1 }, text: { min: 1, max: 2 }, left: { min: 2, max: 2 }, right: { min: 2, max: 2 }, mid: { min: 2, max: 3 }, upper: { min: 1, max: 1 }, proper: { min: 1, max: 2 }, lower: { min: 1, max: 1 }, find: { min: 2, max: 3 }, iif: { min: 3, max: 3 }, decode: { min: 2, max: -1 }, when: { min: 2, max: -1 }, defaultvalue: { min: 2, max: 2 }, isempty: { min: 1, max: 1 }, domaincode: { min: 2, max: 4 }, domainname: { min: 2, max: 4 }, polygon: { min: 1, max: 1 }, point: { min: 1, max: 1 }, polyline: { min: 1, max: 1 }, extent: { min: 1, max: 1 }, multipoint: { min: 1, max: 1 }, ringisclockwise: { min: 1, max: 1 }, geometry: { min: 1, max: 1 }, count: { min: 0, max: -1 }, number: { min: 1, max: 2 }, acos: { min: 1, max: 1 }, asin: { min: 1, max: 1 }, atan: { min: 1, max: 1 }, atan2: { min: 2, max: 2 }, ceil: { min: 1, max: 2 }, floor: { min: 1, max: 2 }, round: { min: 1, max: 2 }, cos: { min: 1, max: 1 }, exp: { min: 1, max: 1 }, log: { min: 1, max: 1 }, min: { min: 0, max: -1 }, constrain: { min: 3, max: 3 }, console: { min: 0, max: -1 }, max: { min: 0, max: -1 }, pow: { min: 2, max: 2 }, random: { min: 0, max: 0 }, sqrt: { min: 1, max: 1 }, sin: { min: 1, max: 1 }, tan: { min: 1, max: 1 }, abs: { min: 1, max: 1 }, isnan: { min: 1, max: 1 }, stdev: { min: 0, max: -1 }, average: { min: 0, max: -1 }, mean: { min: 0, max: -1 }, sum: { min: 0, max: -1 }, variance: { min: 0, max: -1 }, distinct: { min: 0, max: -1 }, first: { min: 1, max: 1 }, top: { min: 2, max: 2 }, boolean: { min: 1, max: 1 }, dictionary: { min: 0, max: -1 }, typeof: { min: 1, max: 1 }, reverse: { min: 1, max: 1 }, replace: { min: 3, max: 4 }, sort: { min: 1, max: 2 }, feature: { min: 1, max: -1 }, haskey: { min: 2, max: 2 }, indexof: { min: 2, max: 2 }, disjoint: { min: 2, max: 2 }, intersects: { min: 2, max: 2 }, touches: { min: 2, max: 2 }, crosses: { min: 2, max: 2 }, within: { min: 2, max: 2 }, contains: { min: 2, max: 2 }, overlaps: { min: 2, max: 2 }, equals: { min: 2, max: 2 }, relate: { min: 3, max: 3 }, intersection: { min: 2, max: 2 }, union: { min: 1, max: 2 }, difference: { min: 2, max: 2 }, symmetricdifference: { min: 2, max: 2 }, clip: { min: 2, max: 2 }, cut: { min: 2, max: 2 }, area: { min: 1, max: 2 }, areageodetic: { min: 1, max: 2 }, length: { min: 1, max: 2 }, lengthgeodetic: { min: 1, max: 2 }, distancegeodetic: { min: 2, max: 3 }, distance: { min: 2, max: 3 }, densify: { min: 2, max: 3 }, densifygeodetic: { min: 2, max: 3 }, generalize: { min: 2, max: 4 }, buffer: { min: 2, max: 3 }, buffergeodetic: { min: 2, max: 3 }, offset: { min: 2, max: 6 }, rotate: { min: 2, max: 3 }, issimple: { min: 1, max: 1 }, simplify: { min: 1, max: 1 }, convexhull: { min: 1, max: 1 }, centroid: { min: 1, max: 1 }, nearestcoordinate: { min: 2, max: 2 }, nearestvertex: { min: 2, max: 2 }, isselfintersecting: { min: 1, max: 1 }, multiparttosinglepart: { min: 1, max: 1 }, setgeometry: { min: 2, max: 2 }, portal: { min: 1, max: 1 }, getuser: { min: 0, max: 2 }, subtypes: { min: 1, max: 1 }, subtypecode: { min: 1, max: 1 }, subtypename: { min: 1, max: 1 }, domain: { min: 2, max: 3 }, convertdirection: { min: 3, max: 3 }, sqltimestamp: { min: 1, max: 3 }, schema: { min: 1, max: 1 } };
var n = { functionDefinitions: /* @__PURE__ */ new Map(), constantDefinitions: /* @__PURE__ */ new Map() };
var a = { functionDefinitions: /* @__PURE__ */ new Map(), constantDefinitions: /* @__PURE__ */ new Map() };
for (const b4 of ["pi", "infinity"])
  a.constantDefinitions.set(b4, { type: "constant" }), n.constantDefinitions.set(b4, { type: "constant" });
a.constantDefinitions.set("textformatting", { type: "namespace", key: "textformatting", members: [{ key: "backwardslash", type: "constant" }, { key: "doublequote", type: "constant" }, { key: "forwardslash", type: "constant" }, { key: "tab", type: "constant" }, { key: "singlequote", type: "constant" }, { key: "newline", type: "constant" }] }), n.constantDefinitions.set("textformatting", { type: "namespace", key: "textformatting", members: [{ key: "backwardslash", type: "constant" }, { key: "tab", type: "constant" }, { key: "singlequote", type: "constant" }, { key: "doublequote", type: "constant" }, { key: "forwardslash", type: "constant" }, { key: "newline", type: "constant" }] });
for (const b4 in e2) {
  const t6 = e2[b4];
  a.functionDefinitions.set(b4, { overloads: [{ type: "function", parametersInfo: { min: t6.min, max: t6.max } }] }), n.functionDefinitions.set(b4, { overloads: [{ type: "function", parametersInfo: { min: t6.min, max: t6.max } }] });
}
var t5 = ["featureset", "featuresetbyid", "featuresetbyname", "featuresetbyassociation", "featuresetbyrelationshipname", "featuresetbyurl", "getfeatureset", "getuser", "attachments", "featuresetbyportalitem"];
var i3 = ["disjoint", "intersects", "touches", "crosses", "within", "contains", "overlaps", "equals", "relate", "intersection", "nearestvertex", "nearestcoordinate", "union", "difference", "symmetricdifference", "clip", "cut", "area", "areageodetic", "length", "length3d", "lengthgeodetic", "distance", "distancegeodetic", "densify", "densifygeodetic", "generalize", "buffer", "buffergeodetic", "offset", "rotate", "issimple", "convexhull", "simplify", "multiparttosinglepart"];
function m2(e3) {
  return "string" == typeof e3 || e3 instanceof String;
}
function o(e3, t6) {
  var _a;
  const i4 = "sync" === t6 ? n : a;
  i4.functionDefinitions.has(e3.name.toLowerCase()) ? (_a = i4.functionDefinitions.get(e3.name.toLowerCase())) == null ? void 0 : _a.overloads.push({ type: "function", parametersInfo: { min: e3.min, max: e3.max } }) : i4.functionDefinitions.set(e3.name.toLowerCase(), { overloads: [{ type: "function", parametersInfo: { min: e3.min, max: e3.max } }] });
}
function s(e3, n2) {
  if (e3)
    for (const a3 of e3)
      r2(a3, n2);
}
function r2(e3, n2) {
  if (e3 && false !== n2(e3))
    switch (e3.type) {
      case "ImportDeclaration":
        s(e3.specifiers, n2), r2(e3.source, n2);
        break;
      case "ExportNamedDeclaration":
        r2(e3.declaration, n2);
        break;
      case "ArrayExpression":
        s(e3.elements, n2);
        break;
      case "AssignmentExpression":
      case "BinaryExpression":
      case "LogicalExpression":
        r2(e3.left, n2), r2(e3.right, n2);
        break;
      case "BlockStatement":
      case "Program":
        s(e3.body, n2);
        break;
      case "BreakStatement":
      case "ContinueStatement":
      case "EmptyStatement":
      case "Identifier":
      case "Literal":
        break;
      case "CallExpression":
        r2(e3.callee, n2), s(e3.arguments, n2);
        break;
      case "ExpressionStatement":
        r2(e3.expression, n2);
        break;
      case "ForInStatement":
        r2(e3.left, n2), r2(e3.right, n2), r2(e3.body, n2);
        break;
      case "ForStatement":
        r2(e3.init, n2), r2(e3.test, n2), r2(e3.update, n2), r2(e3.body, n2);
        break;
      case "WhileStatement":
        r2(e3.test, n2), r2(e3.body, n2);
        break;
      case "FunctionDeclaration":
        r2(e3.id, n2), s(e3.params, n2), r2(e3.body, n2);
        break;
      case "IfStatement":
        r2(e3.test, n2), r2(e3.consequent, n2), r2(e3.alternate, n2);
        break;
      case "MemberExpression":
        r2(e3.object, n2), r2(e3.property, n2);
        break;
      case "ObjectExpression":
        s(e3.properties, n2);
        break;
      case "Property":
        r2(e3.key, n2), r2(e3.value, n2);
        break;
      case "ReturnStatement":
      case "UnaryExpression":
      case "UpdateExpression":
        r2(e3.argument, n2);
        break;
      case "VariableDeclaration":
        s(e3.declarations, n2);
        break;
      case "VariableDeclarator":
        r2(e3.id, n2), r2(e3.init, n2);
        break;
      case "TemplateLiteral":
        s(e3.expressions, n2), s(e3.quasis, n2);
    }
}
function c3(e3, n2) {
  let a3 = false;
  const t6 = n2.toLowerCase();
  return r2(e3, (e4) => !a3 && ("Identifier" === e4.type && e4.name && e4.name.toLowerCase() === t6 && (a3 = true), true)), a3;
}
function x2(e3) {
  const n2 = [];
  return r2(e3, (e4) => ("ImportDeclaration" === e4.type && e4.source && e4.source.value && n2.push({ libname: e4.specifiers[0].local.name.toLowerCase(), source: e4.source.value }), true)), n2;
}
function p6(e3, n2) {
  let a3 = false;
  const t6 = n2.toLowerCase();
  return r2(e3, (e4) => !a3 && ("CallExpression" !== e4.type || "Identifier" !== e4.callee.type || !e4.callee.name || e4.callee.name.toLowerCase() !== t6 || (a3 = true, false))), a3;
}
function l2(e3) {
  const n2 = [];
  return r2(e3, (e4) => {
    var _a;
    return "MemberExpression" !== e4.type || "Identifier" !== e4.object.type || (false === e4.computed && e4.object && e4.object.name && e4.property && "Identifier" === e4.property.type && e4.property.name ? n2.push(e4.object.name.toLowerCase() + "." + e4.property.name.toLowerCase()) : e4.object && e4.object.name && e4.property && "Literal" === e4.property.type && "string" == typeof e4.property.value && n2.push(e4.object.name.toLowerCase() + "." + ((_a = e4.property.value) == null ? void 0 : _a.toString().toLowerCase())), false);
  }), n2;
}
function u2(e3) {
  const n2 = [];
  return r2(e3, (e4) => {
    var _a;
    if ("CallExpression" === e4.type) {
      if ("Identifier" === e4.callee.type && "expects" === e4.callee.name.toLowerCase()) {
        let a3 = "";
        for (let t6 = 0; t6 < (e4.arguments || []).length; t6++)
          0 === t6 ? "Identifier" === e4.arguments[t6].type && (a3 = e4.arguments[t6].name.toLowerCase()) : a3 && "Literal" === e4.arguments[t6].type && m2(e4.arguments[t6].value) && n2.push(a3 + "." + e4.arguments[t6].value.toLowerCase());
        return false;
      }
      if ("Identifier" === e4.callee.type && ["domainname", "domaincode", "domain", "haskey"].includes(e4.callee.name.toLowerCase()) && e4.arguments.length >= 2) {
        let a3 = "";
        return "Identifier" === e4.arguments[0].type && (a3 = e4.arguments[0].name.toLowerCase()), a3 && "Literal" === e4.arguments[1].type && m2(e4.arguments[1].value) && n2.push(a3 + "." + e4.arguments[1].value.toLowerCase()), false;
      }
    }
    return "MemberExpression" !== e4.type || "Identifier" !== e4.object.type || (false === e4.computed && e4.object && e4.object.name && e4.property && "Identifier" === e4.property.type && e4.property.name ? n2.push(e4.object.name.toLowerCase() + "." + e4.property.name.toLowerCase()) : e4.object && e4.object.name && e4.property && "Literal" === e4.property.type && "string" == typeof e4.property.value && n2.push(e4.object.name.toLowerCase() + "." + ((_a = e4.property.value) == null ? void 0 : _a.toString().toLowerCase())), false);
  }), n2;
}
function y(e3) {
  const n2 = [];
  return r2(e3, (e4) => ("CallExpression" === e4.type && "Identifier" === e4.callee.type && n2.push(e4.callee.name.toLowerCase()), true)), n2;
}
function d2(e3, n2 = []) {
  let a3 = null;
  if (void 0 === e3.usesFeatureSet) {
    null === a3 && (a3 = y(e3)), e3.usesFeatureSet = false;
    for (let n3 = 0; n3 < a3.length; n3++)
      t5.includes(a3[n3]) && (e3.usesFeatureSet = true, e3.isAsync = true);
    if (false === e3.usesFeatureSet && n2 && n2.length > 0) {
      for (const a4 of n2)
        if (c3(e3, a4)) {
          e3.usesFeatureSet = true, e3.isAsync = true;
          break;
        }
    }
  }
  if (void 0 === e3.usesModules) {
    e3.usesModules = false;
    x2(e3).length > 0 && (e3.usesModules = true);
  }
  if (void 0 === e3.usesGeometry) {
    e3.usesGeometry = false, null === a3 && (a3 = y(e3));
    for (let n3 = 0; n3 < a3.length; n3++)
      i3.includes(a3[n3]) && (e3.usesGeometry = true);
  }
}

// node_modules/@arcgis/core/chunks/array.js
function F2(F4) {
  function p9(n2, o2, u3) {
    if (n2 instanceof t2)
      return n2.toArray();
    if (z(n2))
      return n2;
    throw new t(o2, e.InvalidParameter, u3);
  }
  function y4(n2, t6) {
    const r3 = n2.length, e3 = Math.floor(r3 / 2);
    return 0 === r3 ? [] : 1 === r3 ? [n2[0]] : v3(y4(n2.slice(0, e3), t6), y4(n2.slice(e3, r3), t6), t6);
  }
  function v3(n2, t6, r3) {
    const e3 = [];
    for (; n2.length > 0 || t6.length > 0; )
      if (n2.length > 0 && t6.length > 0) {
        let o2 = r3(n2[0], t6[0]);
        isNaN(o2) && (o2 = 0), o2 <= 0 ? (e3.push(n2[0]), n2 = n2.slice(1)) : (e3.push(t6[0]), t6 = t6.slice(1));
      } else
        n2.length > 0 ? (e3.push(n2[0]), n2 = n2.slice(1)) : t6.length > 0 && (e3.push(t6[0]), t6 = t6.slice(1));
    return e3;
  }
  async function P4(n2, t6) {
    const r3 = n2.length, e3 = Math.floor(r3 / 2);
    if (0 === r3)
      return [];
    if (1 === r3)
      return [n2[0]];
    const o2 = [await P4(n2.slice(0, e3), t6), await P4(n2.slice(e3, r3), t6)];
    return I3(o2[0], o2[1], t6, []);
  }
  async function I3(n2, t6, r3, e3) {
    const o2 = e3;
    if (!(n2.length > 0 || t6.length > 0))
      return e3;
    if (n2.length > 0 && t6.length > 0) {
      let i4 = await r3(n2[0], t6[0]);
      return isNaN(i4) && (i4 = 1), i4 <= 0 ? (o2.push(n2[0]), n2 = n2.slice(1)) : (o2.push(t6[0]), t6 = t6.slice(1)), I3(n2, t6, r3, e3);
    }
    return n2.length > 0 ? (o2.push(n2[0]), I3(n2 = n2.slice(1), t6, r3, e3)) : t6.length > 0 ? (o2.push(t6[0]), I3(n2, t6 = t6.slice(1), r3, e3)) : void 0;
  }
  function O3(n2, e3, u3, a3) {
    Q(u3, 1, 2, n2, e3);
    let s3 = u3[0];
    if (q(s3) && (s3 = s3.toArray()), false === z(s3))
      throw new t(n2, e.InvalidParameter, e3);
    if (u3.length > 1) {
      if (false === O(u3[1]))
        throw new t(n2, e.InvalidParameter, e3);
      let o2 = s3;
      const i4 = u3[1].createFunction(n2);
      return a3 ? P4(o2, i4) : (o2 = y4(o2, (n3, t6) => i4(n3, t6)), o2);
    }
    let l5 = s3;
    if (0 === l5.length)
      return [];
    const d4 = {};
    for (let t6 = 0; t6 < l5.length; t6++) {
      const n3 = _(l5[t6]);
      "" !== n3 && (d4[n3] = true);
    }
    if (true === d4.Array || true === d4.Dictionary || true === d4.Feature || true === d4.Point || true === d4.Polygon || true === d4.Polyline || true === d4.Multipoint || true === d4.Extent || true === d4.Function)
      return l5.slice(0);
    let m4 = 0, F5 = "";
    for (const t6 in d4)
      m4++, F5 = t6;
    return l5 = m4 > 1 || "String" === F5 ? y4(l5, (n3, t6) => {
      if (null == n3 || n3 === F)
        return null == t6 || t6 === F ? 0 : 1;
      if (null == t6 || t6 === F)
        return -1;
      const r3 = oe(n3), e4 = oe(t6);
      return r3 < e4 ? -1 : r3 === e4 ? 0 : 1;
    }) : "Number" === F5 ? y4(l5, (n3, t6) => n3 - t6) : "Boolean" === F5 ? y4(l5, (n3, t6) => n3 === t6 ? 0 : t6 ? -1 : 1) : "Date" === F5 ? y4(l5, (n3, t6) => t6 - n3) : l5.slice(0), l5;
  }
  F4.functions.array = function(e3, f3) {
    return F4.standardFunction(e3, f3, (d4, h4, w4) => {
      if (Q(w4, 0, 2, e3, f3), 0 === w4.length)
        return new Array();
      if (1 === w4.length && null === w4[0])
        return new Array();
      if (z(w4[0])) {
        if (2 === w4.length && false === Y(w4[1]))
          throw new t(e3, e.InvalidParameter, f3);
        return true === v(w4[1], false) ? p4(w4[0]) : w4[0].slice(0);
      }
      if (q(w4[0])) {
        if (2 === w4.length && false === Y(w4[1]))
          throw new t(e3, e.InvalidParameter, f3);
        return true === v(w4[1], false) ? p4(w4[0]) : w4[0].toArray().slice(0);
      }
      const g2 = fe(w4[0]);
      if (isNaN(g2) || false === P(g2))
        throw new t(e3, e.InvalidParameter, f3);
      const m4 = v(w4[1], null), F5 = new Array(g2);
      return F5.fill(m4), F5;
    });
  }, F4.functions.front = function(n2, e3) {
    return F4.standardFunction(n2, e3, (u3, a3, s3) => {
      if (Q(s3, 1, 1, n2, e3), q(s3[0])) {
        if (s3[0].length() <= 0)
          throw new t(n2, e.OutOfBounds, e3);
        return s3[0].get(0);
      }
      if (z(s3[0])) {
        if (s3[0].length <= 0)
          throw new t(n2, e.OutOfBounds, e3);
        return s3[0][0];
      }
      throw new t(n2, e.InvalidParameter, e3);
    });
  }, F4.functions.back = function(n2, e3) {
    return F4.standardFunction(n2, e3, (u3, a3, s3) => {
      if (Q(s3, 1, 1, n2, e3), q(s3[0])) {
        if (s3[0].length() <= 0)
          throw new t(n2, e.OutOfBounds, e3);
        return s3[0].get(s3[0].length() - 1);
      }
      if (z(s3[0])) {
        if (s3[0].length <= 0)
          throw new t(n2, e.OutOfBounds, e3);
        return s3[0][s3[0].length - 1];
      }
      throw new t(n2, e.InvalidParameter, e3);
    });
  }, F4.functions.push = function(n2, e3) {
    return F4.standardFunction(n2, e3, (u3, a3, c4) => {
      if (Q(c4, 1, 2, n2, e3), z(c4[0]))
        return c4[0][c4[0].length] = c4[1], c4[0].length;
      throw new t(n2, e.InvalidParameter, e3);
    });
  }, F4.functions.pop = function(n2, e3) {
    return F4.standardFunction(n2, e3, (u3, a3, c4) => {
      if (Q(c4, 1, 1, n2, e3), z(c4[0])) {
        if (c4[0].length <= 0)
          throw new t(n2, e.OutOfBounds, e3);
        const o2 = c4[0][c4[0].length - 1];
        return c4[0].length = c4[0].length - 1, o2;
      }
      throw new t(n2, e.InvalidParameter, e3);
    });
  }, F4.functions.erase = function(n2, e3) {
    return F4.standardFunction(n2, e3, (u3, a3, c4) => {
      if (Q(c4, 2, 2, n2, e3), z(c4[0])) {
        let o2 = fe(c4[1]);
        if (isNaN(o2) || false === P(o2))
          throw new t(n2, e.InvalidParameter, e3);
        const i4 = c4[0];
        if (i4.length <= 0)
          throw new t(n2, e.OutOfBounds, e3);
        if (o2 < 0 && (o2 = i4.length + o2), o2 < 0)
          throw new t(n2, e.OutOfBounds, e3);
        if (o2 >= i4.length)
          throw new t(n2, e.OutOfBounds, e3);
        return i4.splice(o2, 1), F;
      }
      throw new t(n2, e.InvalidParameter, e3);
    });
  }, F4.functions.insert = function(n2, e3) {
    return F4.standardFunction(n2, e3, (u3, a3, c4) => {
      if (Q(c4, 3, 3, n2, e3), z(c4[0])) {
        const o2 = fe(c4[1]);
        if (isNaN(o2) || false === P(o2))
          throw new t(n2, e.InvalidParameter, e3);
        const i4 = c4[2], u4 = c4[0];
        if (o2 > u4.length)
          throw new t(n2, e.OutOfBounds, e3);
        if (o2 < 0 && o2 < -1 * u4.length)
          throw new t(n2, e.OutOfBounds, e3);
        return o2 === u4.length ? (u4[o2] = i4, F) : (u4.splice(o2, 0, i4), F);
      }
      throw new t(n2, e.InvalidParameter, e3);
    });
  }, F4.functions.resize = function(n2, e3) {
    return F4.standardFunction(n2, e3, (u3, c4, d4) => {
      if (Q(d4, 2, 3, n2, e3), z(d4[0])) {
        const o2 = fe(d4[1]);
        if (isNaN(o2) || false === P(o2))
          throw new t(n2, e.InvalidParameter, e3);
        if (o2 < 0)
          throw new t(n2, e.InvalidParameter, e3);
        const i4 = v(d4[2], null), u4 = d4[0];
        if (u4.length >= o2)
          return u4.length = o2, F;
        const c5 = u4.length;
        u4.length = o2;
        for (let n3 = c5; n3 < u4.length; n3++)
          u4[n3] = i4;
        return F;
      }
      throw new t(n2, e.InvalidParameter, e3);
    });
  }, F4.functions.includes = function(n2, e3) {
    return F4.standardFunction(n2, e3, (u3, a3, s3) => {
      if (Q(s3, 2, 2, n2, e3), z(s3[0])) {
        const n3 = s3[1];
        return s3[0].findIndex((t6) => ie(t6, n3)) > -1;
      }
      if (q(s3[0])) {
        const n3 = s3[1];
        return s3[0].toArray().findIndex((t6) => ie(t6, n3)) > -1;
      }
      throw new t(n2, e.InvalidParameter, e3);
    });
  }, F4.functions.slice = function(n2, e3) {
    return F4.standardFunction(n2, e3, (u3, f3, d4) => {
      if (Q(d4, 1, 3, n2, e3), z(d4[0])) {
        const o2 = fe(v(d4[1], 0)), i4 = fe(v(d4[2], d4[0].length));
        if (isNaN(o2) || false === P(o2))
          throw new t(n2, e.InvalidParameter, e3);
        if (isNaN(i4) || false === P(i4))
          throw new t(n2, e.InvalidParameter, e3);
        return d4[0].slice(o2, i4);
      }
      if (q(d4[0])) {
        const o2 = d4[0], i4 = fe(v(d4[1], 0)), u4 = fe(v(d4[2], o2.length()));
        if (isNaN(i4) || false === P(i4))
          throw new t(n2, e.InvalidParameter, e3);
        if (isNaN(u4) || false === P(u4))
          throw new t(n2, e.InvalidParameter, e3);
        return o2.toArray().slice(i4, u4);
      }
      throw new t(n2, e.InvalidParameter, e3);
    });
  }, F4.functions.splice = function(n2, t6) {
    return F4.standardFunction(n2, t6, (n3, t7, r3) => {
      const e3 = [];
      for (let o2 = 0; o2 < r3.length; o2++)
        z(r3[o2]) ? e3.push(...r3[o2]) : q(r3[o2]) ? e3.push(...r3[o2].toArray()) : e3.push(r3[o2]);
      return e3;
    });
  }, F4.functions.top = function(n2, e3) {
    return F4.standardFunction(n2, e3, (u3, a3, l5) => {
      if (Q(l5, 2, 2, n2, e3), z(l5[0]))
        return fe(l5[1]) >= l5[0].length ? l5[0].slice(0) : l5[0].slice(0, fe(l5[1]));
      if (q(l5[0]))
        return fe(l5[1]) >= l5[0].length() ? l5[0].slice(0) : l5[0].slice(0, fe(l5[1]));
      throw new t(n2, e.InvalidParameter, e3);
    });
  }, F4.functions.first = function(n2, t6) {
    return F4.standardFunction(n2, t6, (r3, e3, u3) => (Q(u3, 1, 1, n2, t6), z(u3[0]) ? 0 === u3[0].length ? null : u3[0][0] : q(u3[0]) ? 0 === u3[0].length() ? null : u3[0].get(0) : null));
  }, "sync" === F4.mode && (F4.functions.sort = function(n2, t6) {
    return F4.standardFunction(n2, t6, (r3, e3, o2) => O3(n2, t6, o2, false));
  }, F4.functions.any = function(n2, t6) {
    return F4.standardFunction(n2, t6, (r3, e3, i4) => {
      Q(i4, 2, 2, n2, t6);
      const a3 = i4[1].createFunction(n2), c4 = p9(i4[0], n2, t6);
      for (const n3 of c4) {
        const t7 = a3(n3);
        if (Y(t7) && true === t7)
          return true;
      }
      return false;
    });
  }, F4.functions.all = function(n2, t6) {
    return F4.standardFunction(n2, t6, (r3, e3, i4) => {
      Q(i4, 2, 2, n2, t6);
      const u3 = i4[1].createFunction(n2), a3 = p9(i4[0], n2, t6);
      for (const n3 of a3) {
        if (true !== u3(n3))
          return false;
      }
      return true;
    });
  }, F4.functions.none = function(n2, t6) {
    return F4.standardFunction(n2, t6, (r3, e3, i4) => {
      Q(i4, 2, 2, n2, t6);
      const u3 = i4[1].createFunction(n2), a3 = p9(i4[0], n2, t6);
      for (const n3 of a3) {
        if (true === u3(n3))
          return false;
      }
      return true;
    });
  }, F4.functions.reduce = function(n2, t6) {
    return F4.standardFunction(n2, t6, (r3, e3, i4) => {
      Q(i4, 2, 3, n2, t6);
      const u3 = i4[1].createFunction(n2), a3 = p9(i4[0], n2, t6);
      return 2 === i4.length ? 0 === a3.length ? null : a3.reduce((n3, t7) => {
        const r4 = u3(n3, t7);
        return n3 = void 0 !== r4 && r4 !== F ? r4 : null;
      }) : a3.reduce((n3, t7) => {
        const r4 = u3(n3, t7);
        return n3 = void 0 !== r4 && r4 !== F ? r4 : null;
      }, i4[2]);
    });
  }, F4.functions.map = function(n2, t6) {
    return F4.standardFunction(n2, t6, (r3, e3, i4) => {
      Q(i4, 2, 2, n2, t6);
      const u3 = i4[1].createFunction(n2), a3 = p9(i4[0], n2, t6), c4 = [];
      for (const n3 of a3) {
        const t7 = u3(n3);
        void 0 !== t7 && t7 !== F ? c4.push(t7) : c4.push(null);
      }
      return c4;
    });
  }, F4.functions.filter = function(n2, t6) {
    return F4.standardFunction(n2, t6, (r3, e3, i4) => {
      Q(i4, 2, 2, n2, t6);
      const u3 = i4[1].createFunction(n2), a3 = p9(i4[0], n2, t6), c4 = [];
      for (const n3 of a3) {
        true === u3(n3) && c4.push(n3);
      }
      return c4;
    });
  }), "async" === F4.mode && (F4.functions.sort = function(n2, t6) {
    return F4.standardFunctionAsync(n2, t6, (r3, e3, o2) => O3(n2, t6, o2, true));
  }, F4.functions.any = function(n2, t6) {
    return F4.standardFunctionAsync(n2, t6, async (r3, e3, i4) => {
      Q(i4, 2, 2, n2, t6);
      const a3 = i4[1].createFunction(n2), c4 = p9(i4[0], n2, t6);
      for (const n3 of c4) {
        const t7 = await a3(n3);
        let r4 = null;
        if (r4 = T(r4) ? await t7 : t7, Y(r4) && true === r4)
          return true;
      }
      return false;
    });
  }, F4.functions.all = function(n2, t6) {
    return F4.standardFunctionAsync(n2, t6, async (r3, e3, i4) => {
      Q(i4, 2, 2, n2, t6);
      const u3 = i4[1].createFunction(n2), a3 = p9(i4[0], n2, t6);
      for (const n3 of a3) {
        const t7 = await u3(n3);
        let r4 = null;
        if (r4 = T(r4) ? await t7 : t7, true !== r4)
          return false;
      }
      return true;
    });
  }, F4.functions.none = function(n2, t6) {
    return F4.standardFunctionAsync(n2, t6, async (r3, e3, i4) => {
      Q(i4, 2, 2, n2, t6);
      const u3 = i4[1].createFunction(n2), a3 = p9(i4[0], n2, t6);
      for (const n3 of a3) {
        const t7 = await u3(n3);
        let r4 = null;
        if (r4 = T(r4) ? await t7 : t7, true === r4)
          return false;
      }
      return true;
    });
  }, F4.functions.filter = function(n2, t6) {
    return F4.standardFunctionAsync(n2, t6, async (r3, e3, i4) => {
      Q(i4, 2, 2, n2, t6);
      const u3 = i4[1].createFunction(n2), a3 = p9(i4[0], n2, t6), c4 = [];
      for (const n3 of a3) {
        const t7 = await u3(n3);
        let r4 = null;
        r4 = T(r4) ? await t7 : t7, true === r4 && c4.push(n3);
      }
      return c4;
    });
  }, F4.functions.reduce = function(n2, t6) {
    return F4.standardFunctionAsync(n2, t6, (r3, e3, i4) => {
      Q(i4, 2, 3, n2, t6);
      const u3 = i4[1].createFunction(n2), c4 = p9(i4[0], n2, t6);
      let s3 = null;
      if (i4.length > 2) {
        const n3 = v(i4[2], null);
        s3 = c4.reduce(async (n4, t7) => {
          let r4 = await n4;
          return void 0 !== r4 && r4 !== F || (r4 = null), u3(r4, t7);
        }, Promise.resolve(n3));
      } else {
        if (0 === c4.length)
          return null;
        s3 = c4.reduce(async (n3, t7, r4) => {
          if (r4 <= 1)
            return u3(n3, t7);
          let e4 = await n3;
          return void 0 !== e4 && e4 !== F || (e4 = null), u3(e4, t7);
        });
      }
      return s3.then((n3) => void 0 !== n3 && n3 !== F ? n3 : null);
    });
  }, F4.functions.map = function(n2, t6) {
    return F4.standardFunctionAsync(n2, t6, async (r3, e3, i4) => {
      Q(i4, 2, 2, n2, t6);
      const u3 = i4[1].createFunction(n2), a3 = p9(i4[0], n2, t6), c4 = [];
      for (const n3 of a3) {
        const t7 = await u3(n3);
        let r4 = null;
        r4 = T(r4) ? await t7 : t7, void 0 !== r4 && r4 !== F ? c4.push(r4) : c4.push(null);
      }
      return c4;
    });
  });
}
var p7 = Object.freeze(Object.defineProperty({ __proto__: null, registerFunctions: F2 }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/arcade/functions/date.js
function h3(n2, e3, t6) {
  return n2 + (N(t6) ? A2 : y2)[e3];
}
function N(n2) {
  return n2 % 4 == 0 && (n2 % 100 != 0 || n2 % 400 == 0);
}
var y2 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
var A2 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
function w2(n2) {
  return null === n2 ? n2 : false === n2.isValid ? null : n2;
}
function D(n2, e3) {
  return "" === n2 || "default" === n2.toLowerCase().trim() ? Pe(e3) : n2;
}
function T2(N4, y4) {
  N4.today = function(r3, o2) {
    return y4(r3, o2, (a3, s3, u3) => {
      Q(u3, 0, 0, r3, o2);
      const c4 = /* @__PURE__ */ new Date();
      return c4.setHours(0, 0, 0, 0), c.dateJSAndZoneToArcadeDate(c4, Pe(r3));
    });
  }, N4.changetimezone = function(a3, s3) {
    return y4(a3, s3, (u3, c4, l5) => {
      Q(l5, 2, 2, a3, s3);
      const i4 = ce(l5[0], Pe(a3));
      if (null === i4)
        return null;
      const f3 = c.arcadeDateAndZoneToArcadeDate(i4, D(oe(l5[1]), a3));
      return false === f3.isValid ? null : f3;
    });
  }, N4.timezone = function(o2, a3) {
    return y4(o2, a3, (s3, u3, c4) => {
      Q(c4, 1, 2, o2, a3);
      const l5 = ce(c4[0], Pe(o2));
      if (null === l5)
        return null;
      const i4 = l5.timeZone;
      return "system" === i4 ? c.systemTimeZoneCanonicalName : i4;
    });
  }, N4.timezoneoffset = function(n2, o2) {
    return y4(n2, o2, (a3, s3, u3) => {
      Q(u3, 1, 1, n2, o2);
      const c4 = ce(u3[0], Pe(n2));
      return null === c4 ? null : c4.timeZoneOffset;
    });
  }, N4.now = function(r3, o2) {
    return y4(r3, o2, (a3, s3, u3) => {
      Q(u3, 0, 0, r3, o2);
      const c4 = c.nowToArcadeDate(Pe(r3));
      return false === c4.isValid ? null : c4;
    });
  }, N4.timestamp = function(t6, r3) {
    return y4(t6, r3, (o2, a3, s3) => {
      Q(s3, 0, 0, t6, r3);
      const u3 = c.nowUTCToArcadeDate();
      return false === u3.isValid ? null : u3;
    });
  }, N4.toutc = function(n2, o2) {
    return y4(n2, o2, (a3, s3, u3) => {
      Q(u3, 1, 1, n2, o2);
      const c4 = ce(u3[0], Pe(n2));
      return null === c4 ? null : c4.toUTC();
    });
  }, N4.tolocal = function(n2, o2) {
    return y4(n2, o2, (a3, s3, u3) => {
      Q(u3, 1, 1, n2, o2);
      const c4 = ce(u3[0], Pe(n2));
      return null === c4 ? null : c4.toLocal();
    });
  }, N4.day = function(n2, o2) {
    return y4(n2, o2, (a3, s3, u3) => {
      Q(u3, 1, 1, n2, o2);
      const c4 = ce(u3[0], Pe(n2));
      return null === c4 ? NaN : c4.day;
    });
  }, N4.month = function(n2, o2) {
    return y4(n2, o2, (a3, s3, u3) => {
      Q(u3, 1, 1, n2, o2);
      const c4 = ce(u3[0], Pe(n2));
      return null === c4 ? NaN : c4.monthJS;
    });
  }, N4.year = function(n2, o2) {
    return y4(n2, o2, (a3, s3, u3) => {
      Q(u3, 1, 1, n2, o2);
      const c4 = ce(u3[0], Pe(n2));
      return null === c4 ? NaN : c4.year;
    });
  }, N4.hour = function(n2, o2) {
    return y4(n2, o2, (a3, s3, u3) => {
      Q(u3, 1, 1, n2, o2);
      const c4 = ce(u3[0], Pe(n2));
      return null === c4 ? NaN : c4.hour;
    });
  }, N4.second = function(n2, o2) {
    return y4(n2, o2, (a3, s3, u3) => {
      Q(u3, 1, 1, n2, o2);
      const c4 = ce(u3[0], Pe(n2));
      return null === c4 ? NaN : c4.second;
    });
  }, N4.millisecond = function(n2, o2) {
    return y4(n2, o2, (a3, s3, u3) => {
      Q(u3, 1, 1, n2, o2);
      const c4 = ce(u3[0], Pe(n2));
      return null === c4 ? NaN : c4.millisecond;
    });
  }, N4.minute = function(n2, o2) {
    return y4(n2, o2, (a3, s3, u3) => {
      Q(u3, 1, 1, n2, o2);
      const c4 = ce(u3[0], Pe(n2));
      return null === c4 ? NaN : c4.minute;
    });
  }, N4.week = function(n2, o2) {
    return y4(n2, o2, (u3, c4, l5) => {
      Q(l5, 1, 2, n2, o2);
      const d4 = ce(l5[0], Pe(n2));
      if (null === d4)
        return NaN;
      const m4 = fe(v(l5[1], 0));
      if (m4 < 0 || m4 > 6)
        throw new t(n2, e.InvalidParameter, o2);
      const N5 = d4.day, y5 = d4.monthJS, A5 = d4.year, w4 = d4.dayOfWeekJS, D3 = h3(N5, y5, A5) - 1, T4 = Math.floor(D3 / 7);
      return w4 - m4 + (w4 - m4 < 0 ? 7 : 0) < D3 - 7 * T4 ? T4 + 1 : T4;
    });
  }, N4.weekday = function(n2, o2) {
    return y4(n2, o2, (a3, s3, u3) => {
      Q(u3, 1, 1, n2, o2);
      const c4 = ce(u3[0], Pe(n2));
      return null === c4 ? NaN : c4.dayOfWeekJS;
    });
  }, N4.isoweekday = function(n2, o2) {
    return y4(n2, o2, (a3, s3, u3) => {
      Q(u3, 1, 1, n2, o2);
      const c4 = ce(u3[0], Pe(n2));
      return null === c4 ? NaN : c4.dayOfWeekISO;
    });
  }, N4.isomonth = function(n2, o2) {
    return y4(n2, o2, (a3, s3, u3) => {
      Q(u3, 1, 1, n2, o2);
      const c4 = ce(u3[0], Pe(n2));
      return null === c4 ? NaN : c4.monthISO;
    });
  }, N4.isoweek = function(n2, o2) {
    return y4(n2, o2, (a3, s3, u3) => {
      Q(u3, 1, 1, n2, o2);
      const c4 = ce(u3[0], Pe(n2));
      return null === c4 ? NaN : c4.weekISO;
    });
  }, N4.isoyear = function(n2, o2) {
    return y4(n2, o2, (a3, s3, u3) => {
      Q(u3, 1, 1, n2, o2);
      const c4 = ce(u3[0], Pe(n2));
      return null === c4 ? NaN : c4.yearISO;
    });
  }, N4.date = function(s3, l5) {
    return y4(s3, l5, (i4, f3, h4) => {
      if (Q(h4, 0, 8, s3, l5), 3 === h4.length)
        return w2(c.fromParts(fe(h4[0]), fe(h4[1]) + 1, fe(h4[2]), 0, 0, 0, 0, Pe(s3)));
      if (4 === h4.length)
        return w2(c.fromParts(fe(h4[0]), fe(h4[1]) + 1, fe(h4[2]), fe(h4[3]), 0, 0, 0, Pe(s3)));
      if (5 === h4.length)
        return w2(c.fromParts(fe(h4[0]), fe(h4[1]) + 1, fe(h4[2]), fe(h4[3]), fe(h4[4]), 0, 0, Pe(s3)));
      if (6 === h4.length)
        return w2(c.fromParts(fe(h4[0]), fe(h4[1]) + 1, fe(h4[2]), fe(h4[3]), fe(h4[4]), fe(h4[5]), 0, Pe(s3)));
      if (7 === h4.length)
        return w2(c.fromParts(fe(h4[0]), fe(h4[1]) + 1, fe(h4[2]), fe(h4[3]), fe(h4[4]), fe(h4[5]), fe(h4[6]), Pe(s3)));
      if (8 === h4.length)
        return w2(c.fromParts(fe(h4[0]), fe(h4[1]) + 1, fe(h4[2]), fe(h4[3]), fe(h4[4]), fe(h4[5]), fe(h4[6]), D(oe(h4[7]), s3)));
      if (2 === h4.length) {
        let e3, t6 = oe(h4[1]);
        return "" === t6 ? null : (t6 = te(t6), e3 = "X" === t6 ? DateTime.fromSeconds(fe(h4[0])) : "x" === t6 ? DateTime.fromMillis(fe(h4[0])) : DateTime.fromFormat(oe(h4[0]), t6, { locale: c2(), numberingSystem: "latn" }), e3.isValid ? c.dateTimeToArcadeDate(e3) : null);
      }
      if (1 === h4.length) {
        if (L(h4[0])) {
          if ("" === h4[0].replaceAll(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ""))
            return null;
          if (true === /^[0-9][0-9][0-9][0-9]$/.test(h4[0]))
            return ce(h4[0] + "-01-01", Pe(s3));
        }
        const e3 = fe(h4[0]);
        if (false === isNaN(e3)) {
          const r3 = DateTime.fromMillis(e3);
          return r3.isValid ? c.dateTimeAndZoneToArcadeDate(r3, Pe(s3)) : null;
        }
        return ce(h4[0], Pe(s3));
      }
      return 0 === h4.length ? c.nowToArcadeDate(Pe(s3)) : null;
    });
  }, N4.datediff = function(a3, u3) {
    return y4(a3, u3, (c4, l5, i4) => {
      Q(i4, 2, 4, a3, u3);
      let f3 = ce(i4[0], Pe(a3)), d4 = ce(i4[1], Pe(a3));
      if (null === f3 || null === d4)
        return NaN;
      let m4 = v(i4[3], "");
      switch ("" !== m4 && null !== m4 ? (m4 = oe(m4), f3 = c.arcadeDateAndZoneToArcadeDate(f3, m4), d4 = c.arcadeDateAndZoneToArcadeDate(d4, m4)) : f3.timeZone !== d4.timeZone && (f3.isUnknownTimeZone ? f3 = c.arcadeDateAndZoneToArcadeDate(f3, d4.timeZone) : d4 = (d4.isUnknownTimeZone, c.arcadeDateAndZoneToArcadeDate(d4, f3.timeZone))), oe(i4[2]).toLowerCase()) {
        case "days":
        case "day":
        case "d":
          return f3.diff(d4, "days");
        case "months":
        case "month":
          return f3.diff(d4, "months");
        case "minutes":
        case "minute":
        case "m":
          return "M" === i4[2] ? f3.diff(d4, "months") : f3.diff(d4, "minutes");
        case "seconds":
        case "second":
        case "s":
          return f3.diff(d4, "seconds");
        case "milliseconds":
        case "millisecond":
        case "ms":
        default:
          return f3.diff(d4);
        case "hours":
        case "hour":
        case "h":
          return f3.diff(d4, "hours");
        case "years":
        case "year":
        case "y":
          return f3.diff(d4, "years");
      }
    });
  }, N4.dateadd = function(n2, s3) {
    return y4(n2, s3, (u3, c4, i4) => {
      Q(i4, 2, 3, n2, s3);
      const f3 = ce(i4[0], Pe(n2));
      if (null === f3)
        return null;
      let d4 = fe(i4[1]);
      if (isNaN(d4))
        return f3;
      let m4 = "milliseconds";
      switch (oe(i4[2]).toLowerCase()) {
        case "days":
        case "day":
        case "d":
          m4 = "days", d4 = X(d4);
          break;
        case "months":
        case "month":
          m4 = "months", d4 = X(d4);
          break;
        case "minutes":
        case "minute":
        case "m":
          m4 = "M" === i4[2] ? "months" : "minutes";
          break;
        case "seconds":
        case "second":
        case "s":
          m4 = "seconds";
          break;
        case "milliseconds":
        case "millisecond":
        case "ms":
          m4 = "milliseconds";
          break;
        case "hours":
        case "hour":
        case "h":
          m4 = "hours";
          break;
        case "years":
        case "year":
        case "y":
          m4 = "years";
      }
      return f3.plus({ [m4]: d4 });
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/geometry.js
function C(e3) {
  return e3 && "esri.arcade.Feature" === e3.arcadeDeclaredClass;
}
function Z2(z3, Z5) {
  z3.ringisclockwise = function(e3, t6) {
    return Z5(e3, t6, (o2, s3, l5) => {
      Q(l5, 1, 1, e3, t6);
      let c4 = [], f3 = false, u3 = false;
      if (null === l5[0])
        return false;
      if (z(l5[0])) {
        for (const n2 of l5[0]) {
          if (!(n2 instanceof x))
            throw new t(e3, e.InvalidParameter, t6);
          c4.push(n2.hasZ ? n2.hasM ? [n2.x, n2.y, n2.z, n2.m] : [n2.x, n2.y, n2.z] : [n2.x, n2.y]);
        }
        c4.length > 0 && (f3 = l5[0][0].hasZ, u3 = l5[0][0].hasM);
      } else if (l5[0] instanceof i)
        c4 = l5[0]._elements, c4.length > 0 && (f3 = l5[0]._hasZ, u3 = l5[0]._hasM);
      else {
        if (!q(l5[0]))
          throw new t(e3, e.InvalidParameter, t6);
        for (const n2 of l5[0].toArray()) {
          if (!(n2 instanceof x))
            throw new t(e3, e.InvalidParameter, t6);
          c4.push(n2.hasZ ? n2.hasM ? [n2.x, n2.y, n2.z, n2.m] : [n2.x, n2.y, n2.z] : [n2.x, n2.y]);
        }
        c4.length > 0 && (f3 = l5[0].get(0).hasZ, u3 = l5[0].get(0).hasM);
      }
      return !(c4.length < 3) && h(c4, u3, f3);
    });
  }, z3.polygon = function(n2, a3) {
    return Z5(n2, a3, (i4, l5, c4) => {
      Q(c4, 1, 1, n2, a3);
      let f3 = null;
      if (c4[0] instanceof A) {
        if (f3 = ye(b2.parseGeometryFromDictionary(c4[0]), n2.spatialReference), f3 instanceof j == false)
          throw new t(n2, e.InvalidParameter, a3);
      } else
        f3 = c4[0] instanceof j ? p2(c4[0].toJSON()) : ye(new j(JSON.parse(c4[0])), n2.spatialReference);
      if (null !== f3 && false === f3.spatialReference.equals(n2.spatialReference))
        throw new t(n2, e.WrongSpatialReference, a3);
      return pe(f3);
    });
  }, z3.polyline = function(n2, a3) {
    return Z5(n2, a3, (i4, l5, c4) => {
      Q(c4, 1, 1, n2, a3);
      let f3 = null;
      if (c4[0] instanceof A) {
        if (f3 = ye(b2.parseGeometryFromDictionary(c4[0]), n2.spatialReference), f3 instanceof m == false)
          throw new t(n2, e.InvalidParameter, a3);
      } else
        f3 = c4[0] instanceof m ? p2(c4[0].toJSON()) : ye(new m(JSON.parse(c4[0])), n2.spatialReference);
      if (null !== f3 && false === f3.spatialReference.equals(n2.spatialReference))
        throw new t(n2, e.WrongSpatialReference, a3);
      return pe(f3);
    });
  }, z3.point = function(n2, a3) {
    return Z5(n2, a3, (i4, l5, c4) => {
      Q(c4, 1, 1, n2, a3);
      let f3 = null;
      if (c4[0] instanceof A) {
        if (f3 = ye(b2.parseGeometryFromDictionary(c4[0]), n2.spatialReference), f3 instanceof x == false)
          throw new t(n2, e.InvalidParameter, a3);
      } else
        f3 = c4[0] instanceof x ? p2(c4[0].toJSON()) : ye(new x(JSON.parse(c4[0])), n2.spatialReference);
      if (null !== f3 && false === f3.spatialReference.equals(n2.spatialReference))
        throw new t(n2, e.WrongSpatialReference, a3);
      return pe(f3);
    });
  }, z3.multipoint = function(n2, a3) {
    return Z5(n2, a3, (i4, l5, c4) => {
      Q(c4, 1, 1, n2, a3);
      let f3 = null;
      if (c4[0] instanceof A) {
        if (f3 = ye(b2.parseGeometryFromDictionary(c4[0]), n2.spatialReference), f3 instanceof u == false)
          throw new t(n2, e.InvalidParameter, a3);
      } else
        f3 = c4[0] instanceof u ? p2(c4[0].toJSON()) : ye(new u(JSON.parse(c4[0])), n2.spatialReference);
      if (null !== f3 && false === f3.spatialReference.equals(n2.spatialReference))
        throw new t(n2, e.WrongSpatialReference, a3);
      return pe(f3);
    });
  }, z3.extent = function(n2, a3) {
    return Z5(n2, a3, (i4, c4, f3) => {
      var _a;
      f3 = Ne(f3), Q(f3, 1, 1, n2, a3);
      let u3 = null;
      if (f3[0] instanceof A)
        u3 = ye(b2.parseGeometryFromDictionary(f3[0]), n2.spatialReference);
      else if (f3[0] instanceof x) {
        const e3 = { xmin: f3[0].x, ymin: f3[0].y, xmax: f3[0].x, ymax: f3[0].y, spatialReference: f3[0].spatialReference.toJSON() }, t6 = f3[0];
        t6.hasZ ? (e3.zmin = t6.z, e3.zmax = t6.z) : t6.hasM && (e3.mmin = t6.m, e3.mmax = t6.m), u3 = p2(e3);
      } else
        u3 = f3[0] instanceof j || f3[0] instanceof m || f3[0] instanceof u ? p2((_a = f3[0].extent) == null ? void 0 : _a.toJSON()) : f3[0] instanceof M ? p2(f3[0].toJSON()) : ye(new M(JSON.parse(f3[0])), n2.spatialReference);
      if (null !== u3 && false === u3.spatialReference.equals(n2.spatialReference))
        throw new t(n2, e.WrongSpatialReference, a3);
      return pe(u3);
    });
  }, z3.geometry = function(n2, a3) {
    return Z5(n2, a3, (i4, l5, c4) => {
      Q(c4, 1, 1, n2, a3);
      let f3 = null;
      if (null === c4[0])
        return null;
      if (f3 = C(c4[0]) ? ye(c4[0].geometry(), n2.spatialReference) : c4[0] instanceof A ? ye(b2.parseGeometryFromDictionary(c4[0]), n2.spatialReference) : ye(p2(JSON.parse(c4[0])), n2.spatialReference), null !== f3 && false === f3.spatialReference.equals(n2.spatialReference))
        throw new t(n2, e.WrongSpatialReference, a3);
      return pe(f3);
    });
  }, z3.setgeometry = function(e3, t6) {
    return Z5(e3, t6, (n2, a3, i4) => {
      if (Q(i4, 2, 2, e3, t6), !C(i4[0]))
        throw new t(e3, e.InvalidParameter, t6);
      if (true === i4[0].immutable)
        throw new t(e3, e.Immutable, t6);
      if (!(i4[1] instanceof p || null === i4[1]))
        throw new t(e3, e.InvalidParameter, t6);
      return i4[0]._geometry = i4[1], F;
    });
  }, z3.feature = function(n2, r3) {
    return Z5(n2, r3, (a3, i4, s3) => {
      if (0 === s3.length)
        throw new t(n2, e.WrongNumberOfParameters, r3);
      let l5 = null;
      if (1 === s3.length)
        if (L(s3[0]))
          l5 = b2.fromJson(JSON.parse(s3[0]), n2.timeReference);
        else if (C(s3[0]))
          l5 = b2.createFromArcadeFeature(s3[0]);
        else if (s3[0] instanceof p)
          l5 = b2.createFromGraphicLikeObject(s3[0], null, null, n2.timeReference);
        else {
          if (!(s3[0] instanceof A))
            throw new t(n2, e.InvalidParameter, r3);
          {
            let r4 = s3[0].hasField("geometry") ? s3[0].field("geometry") : null, a4 = s3[0].hasField("attributes") ? s3[0].field("attributes") : null;
            null !== r4 && r4 instanceof A && (r4 = b2.parseGeometryFromDictionary(r4)), null !== a4 && (a4 = b2.parseAttributesFromDictionary(a4)), l5 = b2.createFromGraphicLikeObject(r4, a4, null, n2.timeReference);
          }
        }
      else if (2 === s3.length) {
        let a4 = null, i5 = null;
        if (null !== s3[0])
          if (s3[0] instanceof p)
            a4 = s3[0];
          else {
            if (!(a4 instanceof A))
              throw new t(n2, e.InvalidParameter, r3);
            a4 = b2.parseGeometryFromDictionary(s3[0]);
          }
        if (null !== s3[1]) {
          if (!(s3[1] instanceof A))
            throw new t(n2, e.InvalidParameter, r3);
          i5 = b2.parseAttributesFromDictionary(s3[1]);
        }
        l5 = b2.createFromGraphicLikeObject(a4, i5, null, n2.timeReference);
      } else {
        let a4 = null;
        const i5 = {};
        if (null !== s3[0])
          if (s3[0] instanceof p)
            a4 = s3[0];
          else {
            if (!(a4 instanceof A))
              throw new t(n2, e.InvalidParameter, r3);
            a4 = b2.parseGeometryFromDictionary(s3[0]);
          }
        for (let e3 = 1; e3 < s3.length; e3 += 2) {
          const t6 = oe(s3[e3]), a5 = s3[e3 + 1];
          if (!(null == a5 || L(a5) || isNaN(a5) || B(a5) || J(a5) || Y(a5)))
            throw new t(n2, e.InvalidParameter, r3);
          if (O(a5) || false === w(a5))
            throw new t(n2, e.InvalidParameter, r3);
          i5[t6] = a5 === F ? null : a5;
        }
        l5 = b2.createFromGraphicLikeObject(a4, i5, null, n2.timeReference);
      }
      return l5._geometry = ye(l5.geometry(), n2.spatialReference), l5.immutable = false, l5;
    });
  }, z3.dictionary = function(t6, n2) {
    return Z5(t6, n2, (r3, o2, s3) => {
      if (0 === s3.length || 1 === s3.length && null === s3[0]) {
        const t7 = new A();
        return t7.immutable = false, t7;
      }
      if (1 === s3.length && L(s3[0]))
        try {
          const n3 = JSON.parse(s3[0]), r4 = A.convertObjectToArcadeDictionary(n3, Pe(t6), false);
          return r4.immutable = false, r4;
        } catch (R2) {
          throw new t(t6, e.InvalidParameter, n2);
        }
      if (1 === s3.length && s3[0] instanceof p)
        try {
          const n3 = s3[0].toJSON();
          n3.hasZ = true === s3[0].hasZ, n3.hasM = true === s3[0].hasM;
          const r4 = A.convertObjectToArcadeDictionary(n3, Pe(t6), false);
          return r4.immutable = false, r4;
        } catch (R2) {
          throw new t(t6, e.InvalidParameter, n2);
        }
      if (1 === s3.length && E(s3[0]))
        try {
          const t7 = new A();
          t7.immutable = false, t7.setField("geometry", s3[0].geometry());
          const n3 = new A();
          n3.immutable = false, t7.setField("attributes", n3);
          for (const e3 of s3[0].keys())
            n3.setField(e3, s3[0].field(e3));
          return t7;
        } catch (R2) {
          throw new t(t6, e.InvalidParameter, n2);
        }
      if (1 === s3.length && s3[0] instanceof A)
        try {
          const t7 = new A();
          t7.immutable = false;
          for (const e3 of s3[0].keys())
            t7.setField(e3, s3[0].field(e3));
          return t7;
        } catch (R2) {
          throw new t(t6, e.InvalidParameter, n2);
        }
      if (2 === s3.length && s3[0] instanceof A && Y(s3[1]))
        try {
          if (!(true === s3[1])) {
            const t7 = new A();
            t7.immutable = false;
            for (const e3 of s3[0].keys())
              t7.setField(e3, s3[0].field(e3));
            return t7;
          }
          return s3[0].deepClone();
        } catch (R2) {
          throw new t(t6, e.InvalidParameter, n2);
        }
      if (s3.length % 2 != 0)
        throw new t(t6, e.WrongNumberOfParameters, n2);
      const l5 = {};
      for (let e3 = 0; e3 < s3.length; e3 += 2) {
        const r4 = oe(s3[e3]), o3 = s3[e3 + 1];
        if (!(null == o3 || L(o3) || isNaN(o3) || B(o3) || J(o3) || Y(o3) || z(o3) || q(o3)))
          throw new t(t6, e.InvalidParameter, n2);
        if (O(o3))
          throw new t(t6, e.InvalidParameter, n2);
        l5[r4] = o3 === F ? null : o3;
      }
      const d4 = new A(l5);
      return d4.immutable = false, d4;
    });
  }, z3.haskey = function(t6, n2) {
    return Z5(t6, n2, (a3, i4, o2) => {
      Q(o2, 2, 2, t6, n2);
      const s3 = oe(o2[1]);
      if (C(o2[0]))
        return o2[0].hasField(s3);
      if (o2[0] instanceof A)
        return o2[0].hasField(s3);
      if (o2[0] instanceof p) {
        const e3 = W2(o2[0], s3, null, null, 2);
        return !e3 || "notfound" !== e3.keystate;
      }
      throw new t(t6, e.InvalidParameter, n2);
    });
  }, z3.hasvalue = function(t6, n2) {
    return Z5(t6, n2, (a3, i4, o2) => {
      if (Q(o2, 2, 2, t6, n2), null === o2[0] || null === o2[1])
        return false;
      const s3 = oe(o2[1]);
      if (E(o2[0]))
        return !!o2[0].hasField(s3) && null !== o2[0].field(s3);
      if (o2[0] instanceof A)
        return !!o2[0].hasField(s3) && null !== o2[0].field(s3);
      if (o2[0] instanceof p) {
        return null !== W2(o2[0], s3, null, null, 0);
      }
      return false;
    });
  }, z3.indexof = function(e3, t6) {
    return Z5(e3, t6, (n2, o2, s3) => {
      Q(s3, 2, 2, e3, t6);
      const l5 = s3[1];
      if (z(s3[0])) {
        for (let e4 = 0; e4 < s3[0].length; e4++)
          if (ie(l5, s3[0][e4]))
            return e4;
        return -1;
      }
      if (q(s3[0])) {
        const e4 = s3[0].length();
        for (let t7 = 0; t7 < e4; t7++)
          if (ie(l5, s3[0].get(t7)))
            return t7;
        return -1;
      }
      throw new t(e3, e.InvalidParameter, t6);
    });
  }, z3.angle = function(e3, t6) {
    return Z5(e3, t6, (n2, a3, i4) => {
      if (i4 = Ne(i4), Q(i4, 2, 3, e3, t6), !(i4[0] instanceof x))
        throw new t(e3, e.InvalidParameter, t6);
      if (!(i4[1] instanceof x))
        throw new t(e3, e.InvalidParameter, t6);
      if (i4.length > 2 && !(i4[2] instanceof x))
        throw new t(e3, e.InvalidParameter, t6);
      return 2 === i4.length ? p5(i4[0], i4[1]) : P2(i4[0], i4[1], i4[2]);
    });
  }, z3.bearing = function(e3, t6) {
    return Z5(e3, t6, (n2, a3, i4) => {
      if (i4 = Ne(i4), Q(i4, 2, 3, e3, t6), !(i4[0] instanceof x))
        throw new t(e3, e.InvalidParameter, t6);
      if (!(i4[1] instanceof x))
        throw new t(e3, e.InvalidParameter, t6);
      if (i4.length > 2 && !(i4[2] instanceof x))
        throw new t(e3, e.InvalidParameter, t6);
      return 2 === i4.length ? M2(i4[0], i4[1]) : d(i4[0], i4[1], i4[2]);
    });
  }, z3.isselfintersecting = function(e3, t6) {
    return Z5(e3, t6, (n2, o2, s3) => {
      s3 = Ne(s3), Q(s3, 1, 1, e3, t6);
      let c4 = s3[0];
      if (c4 instanceof j)
        return c4.isSelfIntersecting;
      if (c4 instanceof m)
        return c4 = c4.paths, Z(c4);
      if (c4 instanceof u) {
        const e4 = c4.points;
        for (let t7 = 0; t7 < e4.length; t7++)
          for (let n3 = 0; n3 < e4.length; n3++)
            if (n3 !== t7) {
              let r3 = true;
              for (let a3 = 0; a3 < e4[t7].length; a3++)
                if (e4[t7][a3] !== e4[n3][a3]) {
                  r3 = false;
                  break;
                }
              if (true === r3)
                return true;
            }
      }
      return !(!z(c4) && !q(c4)) && (c4 = je(c4, e3.spatialReference), null !== c4 && (c4 = c4.paths), Z(c4));
    });
  };
}
var A3 = 0;
function W2(t6, r3, a3, i4, o2 = 1) {
  let s3;
  switch (r3 = r3.toLowerCase()) {
    case "hasz": {
      const e3 = t6.hasZ;
      return void 0 !== e3 && e3;
    }
    case "hasm": {
      const e3 = t6.hasM;
      return void 0 !== e3 && e3;
    }
    case "spatialreference": {
      let n2 = t6.spatialReference._arcadeCacheId;
      if (void 0 === n2) {
        let e3 = true;
        Object.freeze && Object.isFrozen(t6.spatialReference) && (e3 = false), e3 && (A3++, t6.spatialReference._arcadeCacheId = A3, n2 = A3);
      }
      const r4 = new A({ wkt: t6.spatialReference.wkt, wkid: t6.spatialReference.wkid });
      return void 0 !== n2 && (r4._arcadeCacheId = "SPREF" + n2.toString()), r4;
    }
  }
  switch (t6.type) {
    case "extent":
      switch (r3) {
        case "xmin":
        case "xmax":
        case "ymin":
        case "ymax":
        case "zmin":
        case "zmax":
        case "mmin":
        case "mmax": {
          const e3 = t6[r3];
          return void 0 !== e3 ? e3 : null;
        }
        case "type":
          return "Extent";
      }
      break;
    case "polygon":
      switch (r3) {
        case "rings":
          s3 = t6.cache._arcadeCacheId, void 0 === s3 && (A3++, s3 = A3, t6.cache._arcadeCacheId = s3);
          return new h2(t6.rings, t6.spatialReference, true === t6.hasZ, true === t6.hasM, s3);
        case "type":
          return "Polygon";
      }
      break;
    case "point":
      switch (r3) {
        case "x":
        case "y":
        case "z":
        case "m":
          return void 0 !== t6[r3] ? t6[r3] : null;
        case "type":
          return "Point";
      }
      break;
    case "polyline":
      switch (r3) {
        case "paths":
          s3 = t6.cache._arcadeCacheId, void 0 === s3 && (A3++, s3 = A3, t6.cache._arcadeCacheId = s3);
          return new h2(t6.paths, t6.spatialReference, true === t6.hasZ, true === t6.hasM, s3);
        case "type":
          return "Polyline";
      }
      break;
    case "multipoint":
      switch (r3) {
        case "points":
          s3 = t6.cache._arcadeCacheId, void 0 === s3 && (A3++, s3 = A3, t6.cache._arcadeCacheId = s3);
          return new i(t6.points, t6.spatialReference, true === t6.hasZ, true === t6.hasM, s3, 1);
        case "type":
          return "Multipoint";
      }
  }
  if (1 === o2)
    throw new t(a3, e.InvalidIdentifier, i4);
  return 2 === o2 ? { keystate: "notfound" } : null;
}

// node_modules/@arcgis/core/arcade/functions/maths.js
function l3(n2, t6, r3) {
  return void 0 === r3 || 0 == +r3 ? Math[n2](t6) : (t6 = +t6, r3 = +r3, isNaN(t6) || "number" != typeof r3 || r3 % 1 != 0 ? NaN : (t6 = t6.toString().split("e"), +((t6 = (t6 = Math[n2](+(t6[0] + "e" + (t6[1] ? +t6[1] - r3 : -r3)))).toString().split("e"))[0] + "e" + (t6[1] ? +t6[1] + r3 : r3))));
}
function N2(N4, h4) {
  function m4(n2, t6, r3) {
    const u3 = fe(n2);
    return isNaN(u3) ? u3 : isNaN(t6) || isNaN(r3) || t6 > r3 ? NaN : u3 < t6 ? t6 : u3 > r3 ? r3 : u3;
  }
  N4.number = function(a3, f3) {
    return h4(a3, f3, (s3, l5, N5) => {
      Q(N5, 1, 2, a3, f3);
      const h5 = N5[0];
      if (J(h5))
        return h5;
      if (null === h5)
        return 0;
      if (B(h5))
        return h5.toNumber();
      if (Y(h5))
        return Number(h5);
      if (z(h5))
        return NaN;
      if ("" === h5)
        return Number(h5);
      if (void 0 === h5)
        return Number(h5);
      if (L(h5)) {
        if (void 0 !== N5[1]) {
          let n2 = I(N5[1], "‰", "");
          return n2 = I(n2, "¤", ""), p3(h5, { pattern: n2 });
        }
        return Number(h5.trim());
      }
      return Number(h5);
    });
  }, N4.abs = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => (Q(o2, 1, 1, t6, r3), Math.abs(fe(o2[0]))));
  }, N4.acos = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => (Q(o2, 1, 1, t6, r3), Math.acos(fe(o2[0]))));
  }, N4.asin = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => (Q(o2, 1, 1, t6, r3), Math.asin(fe(o2[0]))));
  }, N4.atan = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => (Q(o2, 1, 1, t6, r3), Math.atan(fe(o2[0]))));
  }, N4.atan2 = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => (Q(o2, 2, 2, t6, r3), Math.atan2(fe(o2[0]), fe(o2[1]))));
  }, N4.ceil = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => {
      if (Q(o2, 1, 2, t6, r3), 2 === o2.length) {
        let n2 = fe(o2[1]);
        return isNaN(n2) && (n2 = 0), l3("ceil", fe(o2[0]), -1 * n2);
      }
      return Math.ceil(fe(o2[0]));
    });
  }, N4.round = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => {
      if (Q(o2, 1, 2, t6, r3), 2 === o2.length) {
        let n2 = fe(o2[1]);
        return isNaN(n2) && (n2 = 0), l3("round", fe(o2[0]), -1 * n2);
      }
      return Math.round(fe(o2[0]));
    });
  }, N4.floor = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => {
      if (Q(o2, 1, 2, t6, r3), 2 === o2.length) {
        let n2 = fe(o2[1]);
        return isNaN(n2) && (n2 = 0), l3("floor", fe(o2[0]), -1 * n2);
      }
      return Math.floor(fe(o2[0]));
    });
  }, N4.cos = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => (Q(o2, 1, 1, t6, r3), Math.cos(fe(o2[0]))));
  }, N4.isnan = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => (Q(o2, 1, 1, t6, r3), "number" == typeof o2[0] && isNaN(o2[0])));
  }, N4.exp = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => (Q(o2, 1, 1, t6, r3), Math.exp(fe(o2[0]))));
  }, N4.log = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => (Q(o2, 1, 1, t6, r3), Math.log(fe(o2[0]))));
  }, N4.pow = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => (Q(o2, 2, 2, t6, r3), fe(o2[0]) ** fe(o2[1])));
  }, N4.random = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => (Q(o2, 0, 0, t6, r3), Math.random()));
  }, N4.sin = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => (Q(o2, 1, 1, t6, r3), Math.sin(fe(o2[0]))));
  }, N4.sqrt = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => (Q(o2, 1, 1, t6, r3), Math.sqrt(fe(o2[0]))));
  }, N4.tan = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => (Q(o2, 1, 1, t6, r3), Math.tan(fe(o2[0]))));
  }, N4.defaultvalue = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => (Q(o2, 2, 2, t6, r3), null === o2[0] || "" === o2[0] || void 0 === o2[0] ? o2[1] : o2[0]));
  }, N4.isempty = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => (Q(o2, 1, 1, t6, r3), null === o2[0] || ("" === o2[0] || void 0 === o2[0])));
  }, N4.boolean = function(t6, r3) {
    return h4(t6, r3, (u3, e3, o2) => {
      Q(o2, 1, 1, t6, r3);
      const i4 = o2[0];
      return me(i4);
    });
  }, N4.constrain = function(t6, r3) {
    return h4(t6, r3, (u3, o2, i4) => {
      Q(i4, 3, 3, t6, r3);
      const f3 = fe(i4[1]), c4 = fe(i4[2]);
      if (z(i4[0])) {
        const n2 = [];
        for (const t7 of i4[0])
          n2.push(m4(t7, f3, c4));
        return n2;
      }
      if (q(i4[0])) {
        const n2 = [];
        for (let t7 = 0; t7 < i4[0].length(); t7++)
          n2.push(m4(i4[0].get(t7), f3, c4));
        return n2;
      }
      return m4(i4[0], f3, c4);
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/stats.js
function a2(n2, r3, t6, i4) {
  if (1 === i4.length) {
    if (z(i4[0]))
      return l(n2, i4[0], -1);
    if (q(i4[0]))
      return l(n2, i4[0].toArray(), -1);
  }
  return l(n2, i4, -1);
}
function f2(o2, f3) {
  o2.stdev = function(n2, r3) {
    return f3(n2, r3, (n3, r4, t6) => a2("stdev", n3, r4, t6));
  }, o2.variance = function(n2, r3) {
    return f3(n2, r3, (n3, r4, t6) => a2("variance", n3, r4, t6));
  }, o2.average = function(n2, r3) {
    return f3(n2, r3, (n3, r4, t6) => a2("mean", n3, r4, t6));
  }, o2.mean = function(n2, r3) {
    return f3(n2, r3, (n3, r4, t6) => a2("mean", n3, r4, t6));
  }, o2.sum = function(n2, r3) {
    return f3(n2, r3, (n3, r4, t6) => a2("sum", n3, r4, t6));
  }, o2.min = function(n2, r3) {
    return f3(n2, r3, (n3, r4, t6) => a2("min", n3, r4, t6));
  }, o2.max = function(n2, r3) {
    return f3(n2, r3, (n3, r4, t6) => a2("max", n3, r4, t6));
  }, o2.distinct = function(n2, r3) {
    return f3(n2, r3, (n3, r4, t6) => a2("distinct", n3, r4, t6));
  }, o2.count = function(o3, a3) {
    return f3(o3, a3, (f4, c4, m4) => {
      if (Q(m4, 1, 1, o3, a3), z(m4[0]) || L(m4[0]))
        return m4[0].length;
      if (q(m4[0]))
        return m4[0].length();
      throw new t(o3, e.InvalidParameter, a3);
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/convertdirection.js
var l4 = (e3) => (n2, t6, r3) => (r3 = r3 || 14, +e3(n2, t6).toFixed(r3));
var d3 = (e3, n2) => e3 + n2;
var m3 = (e3, n2) => e3 * n2;
var g = (e3, n2) => e3 / n2;
var _2 = (e3, n2, t6) => l4(d3)(e3, n2, t6);
var w3 = (e3, n2, t6) => l4(m3)(e3, n2, t6);
var A4 = (e3, n2, t6) => l4(g)(e3, n2, t6);
var D2 = 360;
var p8 = 400;
var E2 = 2 * Math.PI;
var T3 = 3600;
var S = 3240;
var R = 60;
var M3 = 60;
var F3 = 180 * T3 / Math.PI;
var v2 = D2 * R * M3;
var L2 = 90 * T3;
var U2 = 180 * T3;
var N3 = 270 * T3;
var x3 = String.fromCharCode(7501);
var z2 = "°";
function O2(e3) {
  if (false === L(e3))
    throw new t(null, e.InvalidParameter, null);
  return e3;
}
function G(e3, n2) {
  const t6 = 10 ** n2;
  return Math.round(e3 * t6) / t6;
}
function I2(e3, n2) {
  return e3 % n2;
}
function b3(e3) {
  const n2 = parseFloat(e3.toString().replace(Math.trunc(e3).toString(), "0")) * Math.sign(e3);
  if (e3 < 0) {
    return { fraction: n2, integer: Math.ceil(e3) };
  }
  return { fraction: n2, integer: Math.floor(e3) };
}
var H;
var y3;
var q2;
var k;
function C2(e3, n2) {
  switch (e3) {
    case H.north:
      return "SHORT" === n2 ? "N" : "North";
    case H.east:
      return "SHORT" === n2 ? "E" : "East";
    case H.south:
      return "SHORT" === n2 ? "S" : "South";
    case H.west:
      return "SHORT" === n2 ? "W" : "West";
  }
}
function P3(e3, n2, t6) {
  for (; e3.length < t6; )
    e3 = n2 + e3;
  return e3;
}
function Q2(e3, n2) {
  return e3 - Math.floor(e3 / n2) * n2;
}
function j3(e3) {
  switch (e3) {
    case y3.truncated_degrees:
    case y3.decimal_degrees:
      return D2;
    case y3.radians:
      return E2;
    case y3.gradians:
      return p8;
    case y3.seconds:
      return v2;
    case y3.fractional_degree_minutes:
      return R;
    case y3.fractional_minute_seconds:
      return M3;
    default:
      throw new t(null, e.LogicError, null, { reason: "unsupported evaluations" });
  }
}
function W3(e3) {
  switch (e3.toUpperCase().trim()) {
    case "NORTH":
    case "NORTHAZIMUTH":
    case "NORTH AZIMUTH":
      return q2.north_azimuth;
    case "POLAR":
      return q2.polar;
    case "QUADRANT":
      return q2.quadrant;
    case "SOUTH":
    case "SOUTHAZIMUTH":
    case "SOUTH AZIMUTH":
      return q2.south_azimuth;
  }
  throw new t(null, e.LogicError, null, { reason: "unsupported directionType" });
}
function Z3(e3) {
  switch (e3.toUpperCase().trim()) {
    case "D":
    case "DD":
    case "DECIMALDEGREE":
    case "DECIMAL DEGREE":
    case "DEGREE":
    case "DECIMALDEGREES":
    case "DECIMAL DEGREES":
    case "DEGREES":
      return y3.decimal_degrees;
    case "DMS":
    case "DEGREESMINUTESSECONDS":
    case "DEGREES MINUTES SECONDS":
      return y3.degrees_minutes_seconds;
    case "R":
    case "RAD":
    case "RADS":
    case "RADIAN":
    case "RADIANS":
      return y3.radians;
    case "G":
    case "GON":
    case "GONS":
    case "GRAD":
    case "GRADS":
    case "GRADIAN":
    case "GRADIANS":
      return y3.gradians;
  }
  throw new t(null, e.LogicError, null, { reason: "unsupported units" });
}
!function(e3) {
  e3[e3.north = 0] = "north", e3[e3.east = 1] = "east", e3[e3.south = 2] = "south", e3[e3.west = 3] = "west";
}(H || (H = {})), function(e3) {
  e3[e3.decimal_degrees = 1] = "decimal_degrees", e3[e3.seconds = 2] = "seconds", e3[e3.degrees_minutes_seconds = 3] = "degrees_minutes_seconds", e3[e3.radians = 4] = "radians", e3[e3.gradians = 5] = "gradians", e3[e3.truncated_degrees = 6] = "truncated_degrees", e3[e3.fractional_degree_minutes = 7] = "fractional_degree_minutes", e3[e3.fractional_minute_seconds = 8] = "fractional_minute_seconds";
}(y3 || (y3 = {})), function(e3) {
  e3[e3.north_azimuth = 1] = "north_azimuth", e3[e3.polar = 2] = "polar", e3[e3.quadrant = 3] = "quadrant", e3[e3.south_azimuth = 4] = "south_azimuth";
}(q2 || (q2 = {})), function(e3) {
  e3[e3.meridian = 0] = "meridian", e3[e3.direction = 1] = "direction";
}(k || (k = {}));
var B2 = class _B {
  constructor(e3, n2, t6) {
    this.m_degrees = e3, this.m_minutes = n2, this.m_seconds = t6;
  }
  getField(e3) {
    switch (e3) {
      case y3.decimal_degrees:
      case y3.truncated_degrees:
        return this.m_degrees;
      case y3.fractional_degree_minutes:
        return this.m_minutes;
      case y3.seconds:
      case y3.fractional_minute_seconds:
        return this.m_seconds;
      default:
        throw new t(null, e.LogicError, null, { reason: "unexpected evaluation" });
    }
  }
  static secondsToDMS(e3) {
    const n2 = b3(e3).fraction;
    let t6 = b3(e3).integer;
    const r3 = Math.floor(t6 / T3);
    t6 -= r3 * T3;
    const s3 = Math.floor(t6 / M3);
    return t6 -= s3 * M3, new _B(r3, s3, t6 + n2);
  }
  static numberToDms(e3) {
    const n2 = b3(e3).fraction, t6 = b3(e3).integer, r3 = w3(b3(100 * n2).fraction, 100), s3 = b3(100 * n2).integer;
    return new _B(t6, s3, r3);
  }
  format(e3, n2) {
    let t6 = G(this.m_seconds, n2), r3 = this.m_minutes, s3 = this.m_degrees;
    if (e3 === y3.seconds || e3 === y3.fractional_minute_seconds)
      M3 <= t6 && (t6 -= M3, ++r3), R <= r3 && (r3 = 0, ++s3), D2 <= s3 && (s3 = 0);
    else if (e3 === y3.fractional_degree_minutes)
      t6 = 0, r3 = 30 <= this.m_seconds ? this.m_minutes + 1 : this.m_minutes, s3 = this.m_degrees, R <= r3 && (r3 = 0, ++s3), D2 <= s3 && (s3 = 0);
    else if (e3 === y3.decimal_degrees || e3 === y3.truncated_degrees) {
      const e4 = A4(this.m_seconds, T3), n3 = A4(this.m_minutes, R);
      s3 = Math.round(this.m_degrees + n3 + e4), r3 = 0, t6 = 0;
    }
    return new _B(s3, r3, t6);
  }
  static dmsToSeconds(e3, n2, t6) {
    return e3 * T3 + n2 * M3 + t6;
  }
};
var V2 = class {
  constructor(e3, n2, t6) {
    this.meridian = e3, this.angle = n2, this.direction = t6;
  }
  fetchAzimuth(e3) {
    return e3 === k.meridian ? this.meridian : this.direction;
  }
};
var X2 = class _X {
  constructor(e3) {
    this._angle = e3;
  }
  static createFromAngleAndDirection(e3, n2) {
    return new _X(new K2(_X._convertDirectionFormat(e3.extractAngularUnits(y3.seconds), n2, q2.north_azimuth)));
  }
  getAngle(e3) {
    const n2 = this._angle.extractAngularUnits(y3.seconds);
    switch (e3) {
      case q2.north_azimuth:
      case q2.south_azimuth:
      case q2.polar:
        return new K2(_X._convertDirectionFormat(n2, q2.north_azimuth, e3));
      case q2.quadrant: {
        const e4 = _X.secondsNorthAzimuthToQuadrant(n2);
        return new K2(e4.angle);
      }
    }
  }
  getMeridian(e3) {
    const n2 = this._angle.extractAngularUnits(y3.seconds);
    switch (e3) {
      case q2.north_azimuth:
        return H.north;
      case q2.south_azimuth:
        return H.south;
      case q2.polar:
        return H.east;
      case q2.quadrant:
        return _X.secondsNorthAzimuthToQuadrant(n2).meridian;
    }
  }
  getDirection(e3) {
    const n2 = this._angle.extractAngularUnits(y3.seconds);
    switch (e3) {
      case q2.north_azimuth:
        return H.east;
      case q2.south_azimuth:
        return H.west;
      case q2.polar:
        return H.north;
      case q2.quadrant:
        return _X.secondsNorthAzimuthToQuadrant(n2).direction;
    }
  }
  static secondsNorthAzimuthToQuadrant(e3) {
    const n2 = e3 <= L2 || e3 >= N3 ? H.north : H.south, t6 = n2 === H.north ? Math.min(v2 - e3, e3) : Math.abs(e3 - U2), r3 = e3 > U2 ? H.west : H.east;
    return new V2(n2, t6, r3);
  }
  static createFromAngleMeridianAndDirection(e3, n2, t6) {
    return new _X(new K2(_X.secondsQuadrantToNorthAzimuth(e3.extractAngularUnits(y3.seconds), n2, t6)));
  }
  static secondsQuadrantToNorthAzimuth(e3, n2, t6) {
    return n2 === H.north ? t6 === H.east ? e3 : v2 - e3 : t6 === H.east ? U2 - e3 : U2 + e3;
  }
  static _convertDirectionFormat(e3, r3, s3) {
    let a3 = 0;
    switch (r3) {
      case q2.north_azimuth:
        a3 = e3;
        break;
      case q2.polar:
        a3 = L2 - e3;
        break;
      case q2.quadrant:
        throw new t(null, e.LogicError, null, { reason: "unexpected evaluation" });
      case q2.south_azimuth:
        a3 = e3 + U2;
    }
    let i4 = 0;
    switch (s3) {
      case q2.north_azimuth:
        i4 = a3;
        break;
      case q2.polar:
        i4 = L2 - a3;
        break;
      case q2.quadrant:
        throw new t(null, e.LogicError, null, { reason: "unexpected evaluation" });
      case q2.south_azimuth:
        i4 = a3 - U2;
    }
    return i4 = I2(i4, v2), i4 < 0 ? v2 + i4 : i4;
  }
};
function J2(e3, r3, s3) {
  let a3 = null;
  switch (r3) {
    case y3.decimal_degrees:
      a3 = w3(e3, T3);
      break;
    case y3.seconds:
      a3 = e3;
      break;
    case y3.gradians:
      a3 = w3(e3, S);
      break;
    case y3.radians:
      a3 = w3(e3, F3);
      break;
    default:
      throw new t(null, e.LogicError, null, { reason: "unexpected evaluation" });
  }
  switch (s3) {
    case y3.decimal_degrees:
      return A4(a3, T3);
    case y3.seconds:
      return a3;
    case y3.gradians:
      return A4(a3, S);
    case y3.radians:
      return a3 / F3;
    default:
      throw new t(null, e.LogicError, null, { reason: "unexpected evaluation" });
  }
}
var K2 = class _K {
  constructor(e3) {
    this._seconds = e3;
  }
  static createFromAngleAndUnits(e3, n2) {
    return new _K(J2(e3, n2, y3.seconds));
  }
  extractAngularUnits(e3) {
    return J2(this._seconds, y3.seconds, Y2(e3));
  }
  static createFromDegreesMinutesSeconds(e3, n2, t6) {
    return new _K(_2(_2(w3(e3, T3), w3(n2, M3)), t6));
  }
};
function Y2(e3) {
  switch (r(e3), e3) {
    case y3.decimal_degrees:
    case y3.truncated_degrees:
    case y3.degrees_minutes_seconds:
      return y3.decimal_degrees;
    case y3.gradians:
      return y3.gradians;
    case y3.fractional_degree_minutes:
      return y3.fractional_degree_minutes;
    case y3.radians:
      return y3.radians;
    case y3.seconds:
    case y3.fractional_minute_seconds:
      return y3.seconds;
  }
}
var $ = class _$ {
  constructor(e3, n2, t6, r3) {
    this.view = e3, this.angle = n2, this.merdian = t6, this.direction = r3, this._dms = null, this._formattedDms = null;
  }
  static createFromStringAndBearing(e3, n2, t6) {
    return new _$(e3, n2.getAngle(t6), n2.getMeridian(t6), n2.getDirection(t6));
  }
  fetchAngle() {
    return this.angle;
  }
  fetchMeridian() {
    return this.merdian;
  }
  fetchDirection() {
    return this.direction;
  }
  fetchView() {
    return this.view;
  }
  fetchDms() {
    return null === this._dms && this._calculateDms(), this._dms;
  }
  fetchFormattedDms() {
    return null === this._formattedDms && this._calculateDms(), this._formattedDms;
  }
  _calculateDms() {
    let e3 = null, n2 = y3.truncated_degrees, t6 = 0;
    for (let r3 = 0; r3 < this.view.length; r3++) {
      const s3 = this.view[r3];
      switch (s3) {
        case "m":
          e3 = de(this.view, r3, s3), n2 = n2 === y3.truncated_degrees ? y3.fractional_degree_minutes : n2, r3 = e3.newpos;
          continue;
        case "s":
          e3 = de(this.view, r3, s3), n2 = y3.fractional_minute_seconds, t6 = t6 < e3.rounding ? e3.rounding : t6, r3 = e3.newpos;
          continue;
        default:
          continue;
      }
    }
    this._dms = B2.secondsToDMS(this.angle.extractAngularUnits(y3.seconds)), this._formattedDms = B2.secondsToDMS(this.angle.extractAngularUnits(y3.seconds)).format(n2, t6);
  }
};
function ee(e3, r3, s3, a3, i4) {
  let o2 = null;
  switch (r3) {
    case y3.decimal_degrees:
    case y3.radians:
    case y3.gradians:
      return o2 = Q2(G(e3.extractAngularUnits(r3), a3), j3(r3)), P3(o2.toFixed(a3), "0", s3 + a3 + (a3 > 0 ? 1 : 0));
    case y3.truncated_degrees:
    case y3.fractional_degree_minutes:
      return o2 = Q2(i4.fetchFormattedDms().getField(r3), j3(r3)), P3(o2.toFixed(a3), "0", s3 + a3 + (a3 > 0 ? 1 : 0));
    case y3.fractional_minute_seconds:
      return o2 = Q2(G(i4.fetchDms().getField(r3), a3), j3(r3)), P3(o2.toFixed(a3), "0", s3 + a3 + (a3 > 0 ? 1 : 0));
    default:
      throw new t(null, e.LogicError, null, { reason: "unexpected evaluation" });
  }
}
function ne(e3, r3, s3) {
  if (s3 === q2.quadrant)
    throw new t(null, e.LogicError, null, { reason: "conversion error" });
  if (r3 === y3.degrees_minutes_seconds) {
    const n2 = B2.numberToDms(e3);
    return X2.createFromAngleAndDirection(K2.createFromDegreesMinutesSeconds(n2.m_degrees, n2.m_minutes, n2.m_seconds), s3);
  }
  return X2.createFromAngleAndDirection(K2.createFromAngleAndUnits(e3, Y2(r3)), s3);
}
function te2(e3) {
  switch (fe(e3)) {
    case 1:
      return { first: H.north, second: H.east };
    case 2:
      return { first: H.south, second: H.east };
    case 3:
      return { first: H.south, second: H.west };
    case 4:
      return { first: H.north, second: H.west };
  }
  return null;
}
function re(e3) {
  switch (e3.toUpperCase().trim()) {
    case "N":
    case "NORTH":
      return H.north;
    case "E":
    case "EAST":
      return H.east;
    case "S":
    case "SOUTH":
      return H.south;
    case "W":
    case "WEST":
      return H.west;
  }
  return null;
}
function se2(e3) {
  const r3 = parseFloat(e3);
  if (J(r3)) {
    if (isNaN(r3))
      throw new t(null, e.LogicError, null, { reason: "invalid conversion" });
    return r3;
  }
  throw new t(null, e.LogicError, null, { reason: "invalid conversion" });
}
function ae(e3, s3, a3) {
  const i4 = a3 === q2.quadrant;
  let o2 = null, c4 = null, u3 = 0, l5 = 0, d4 = 0;
  if (i4) {
    if (e3.length < 2)
      throw new t(null, e.LogicError, null, { reason: "conversion error" });
    d4 = 1;
    const s4 = te2(oe(e3[e3.length - 1]));
    if (s4 ? (o2 = s4.first, c4 = s4.second) : (u3 = 1, o2 = re(oe(e3[0])), c4 = re(oe(e3[e3.length - 1]))), null === o2 || null === c4)
      throw new t(null, e.LogicError, null, { reason: "invalid conversion" });
  }
  switch (s3) {
    case y3.decimal_degrees:
    case y3.radians:
    case y3.gradians:
      if (0 === e3.length)
        throw new t(null, e.LogicError, null, { reason: "invalid conversion" });
      return i4 ? X2.createFromAngleMeridianAndDirection(K2.createFromAngleAndUnits(se2(e3[u3]), Y2(s3)), o2, c4) : X2.createFromAngleAndDirection(K2.createFromAngleAndUnits(se2(e3[u3]), Y2(s3)), a3);
    case y3.degrees_minutes_seconds:
      if (l5 = e3.length - d4 - u3, 3 === l5) {
        const n2 = K2.createFromDegreesMinutesSeconds(se2(e3[u3]), se2(e3[u3 + 1]), se2(e3[u3 + 2]));
        return i4 ? X2.createFromAngleMeridianAndDirection(n2, o2, c4) : X2.createFromAngleAndDirection(n2, a3);
      }
      if (1 === l5) {
        const n2 = se2(e3[u3]), t6 = B2.numberToDms(n2), r3 = K2.createFromDegreesMinutesSeconds(t6.m_degrees, t6.m_minutes, t6.m_seconds);
        return i4 ? X2.createFromAngleMeridianAndDirection(r3, o2, c4) : X2.createFromAngleAndDirection(r3, a3);
      }
  }
  throw new t(null, e.LogicError, null, { reason: "invalid conversion" });
}
function ie2(e3) {
  const n2 = [" ", "-", "/", "'", '"', "\\", "^", z2, x3, "	", "\r", "\n", "*"];
  let t6 = "";
  for (let r3 = 0; r3 < e3.length; r3++) {
    const s3 = e3.charAt(r3);
    n2.includes(s3) ? t6 += "RRSPLITRRSPLITRR" : t6 += s3;
  }
  return t6.split("RRSPLITRRSPLITRR").filter((e4) => "" !== e4);
}
function oe2(e3, r3, u3) {
  if (J(e3))
    return ne(fe(e3), r3, u3);
  if (L(e3))
    return ae(ie2(e3), r3, u3);
  if (z(e3))
    return ae(e3, r3, u3);
  if (q(e3))
    return ae(e3.toArray(), r3, u3);
  throw new t(null, e.LogicError, null, { reason: "conversion error" });
}
function ce2(e3, r3, s3) {
  const a3 = Y2(s3);
  if (a3 && s3 !== y3.degrees_minutes_seconds) {
    return e3.getAngle(r3).extractAngularUnits(a3);
  }
  throw new t(null, e.LogicError, null, { reason: "conversion error" });
}
function ue(e3, n2, t6) {
  const r3 = e3.getAngle(n2);
  if (n2 === q2.quadrant && t6 === y3.degrees_minutes_seconds) {
    const t7 = B2.secondsToDMS(r3.extractAngularUnits(y3.seconds));
    return [C2(e3.getMeridian(n2), "SHORT"), t7.m_degrees, t7.m_minutes, t7.m_seconds, C2(e3.getDirection(n2), "SHORT")];
  }
  if (t6 === y3.degrees_minutes_seconds) {
    const e4 = B2.secondsToDMS(r3.extractAngularUnits(y3.seconds));
    return [e4.m_degrees, e4.m_minutes, e4.m_seconds];
  }
  return n2 === q2.quadrant ? [C2(e3.getMeridian(n2), "SHORT"), r3.extractAngularUnits(t6), C2(e3.getDirection(n2), "SHORT")] : [r3.extractAngularUnits(t6)];
}
function le(e3, r3) {
  let s3 = "";
  switch (e3) {
    case y3.decimal_degrees:
      s3 = r3 === q2.quadrant ? "DD.DD" + z2 : "DDD.DD" + z2;
      break;
    case y3.degrees_minutes_seconds:
      s3 = r3 === q2.quadrant ? "dd" + z2 + ` mm' ss"` : "ddd" + z2 + ` mm' ss.ss"`;
      break;
    case y3.radians:
      s3 = "R.RR";
      break;
    case y3.gradians:
      s3 = "GGG.GG" + x3;
      break;
    default:
      throw new t(null, e.LogicError, null, { reason: "conversion error" });
  }
  return r3 === q2.quadrant && (s3 = "p " + s3 + " b"), s3;
}
function de(e3, n2, t6) {
  const r3 = { padding: 0, rounding: 0, newpos: n2 };
  let s3 = false;
  for (; n2 < e3.length; ) {
    const a3 = e3[n2];
    if (a3 === t6)
      s3 ? r3.rounding++ : r3.padding++, n2++;
    else {
      if ("." !== a3)
        break;
      s3 = true, n2++;
    }
  }
  return r3.newpos = n2 - 1, r3;
}
function he(e3, n2, t6) {
  const r3 = { escaped: "", newpos: n2 };
  for (n2++; n2 < e3.length; ) {
    const t7 = e3[n2];
    if (n2++, "]" === t7)
      break;
    r3.escaped += t7;
  }
  return r3.newpos = n2 - 1, r3;
}
function me2(e3, n2, t6) {
  let r3 = "", s3 = null, a3 = null;
  const i4 = $.createFromStringAndBearing(n2, e3, t6), o2 = { D: y3.decimal_degrees, d: y3.truncated_degrees, m: y3.fractional_degree_minutes, s: y3.fractional_minute_seconds, R: y3.radians, G: y3.gradians };
  for (let c4 = 0; c4 < n2.length; c4++) {
    const u3 = n2[c4];
    switch (u3) {
      case "[":
        s3 = he(n2, c4), r3 += s3.escaped, c4 = s3.newpos;
        continue;
      case "D":
      case "d":
      case "m":
      case "s":
      case "R":
      case "G":
        s3 = de(n2, c4, u3), a3 = e3.getAngle(t6), r3 += ee(a3, o2[u3], s3.padding, s3.rounding, i4), c4 = s3.newpos;
        continue;
      case "P":
      case "p":
        r3 += C2(i4.fetchMeridian(), "p" === u3 ? "SHORT" : "LONG");
        continue;
      case "B":
      case "b":
        r3 += C2(i4.fetchDirection(), "b" === u3 ? "SHORT" : "LONG");
        continue;
      default:
        r3 += u3;
    }
  }
  return r3;
}
function ge(s3, a3, i4) {
  if (!(a3 instanceof A))
    throw new t(null, e.InvalidParameter, null);
  if (false === a3.hasField("directionType"))
    throw new t(null, e.LogicError, null, { reason: "missing directionType" });
  if (false === a3.hasField("angleType"))
    throw new t(null, e.LogicError, null, { reason: "missing angleType" });
  const o2 = W3(O2(a3.field("directiontype"))), c4 = oe2(s3, Z3(O2(a3.field("angletype"))), o2);
  if (!(i4 instanceof A))
    throw new t(null, e.InvalidParameter, null);
  if (false === i4.hasField("directionType"))
    throw new t(null, e.LogicError, null, { reason: "missing directionType" });
  if (false === i4.hasField("outputType"))
    throw new t(null, e.LogicError, null, { reason: "missing angleType" });
  const u3 = W3(O2(i4.field("directiontype"))), l5 = i4.hasField("angleType") ? Z3(O2(i4.field("angletype"))) : null, d4 = O2(i4.field("outputType")).toUpperCase().trim();
  if (!u3 || !d4)
    throw new t(null, e.LogicError, null, { reason: "conversion error" });
  if (!(l5 || "TEXT" === d4 && i4.hasField("format")))
    throw new t(null, e.LogicError, null, { reason: "invalid unit" });
  switch (d4) {
    case "VALUE":
      return u3 === q2.quadrant || l5 === y3.degrees_minutes_seconds ? ue(c4, u3, l5) : ce2(c4, u3, l5);
    case "TEXT": {
      let e3 = "";
      return i4.hasField("format") && (e3 = oe(i4.field("format"))), null !== e3 && "" !== e3 || (e3 = le(l5, u3)), me2(c4, e3, u3);
    }
    default:
      throw new t(null, e.InvalidParameter, null);
  }
}

// node_modules/@arcgis/core/arcade/functions/string.js
function B3(t6) {
  if ("loaded" === t6.loadStatus && t6.user && t6.user.sourceJSON) {
    return t6.user.sourceJSON;
  }
  return null;
}
function E3(t6, e3) {
  return !!t6 && W(t6, (e3 == null ? void 0 : e3.restUrl) || "");
}
function Z4(t6, e3) {
  if (!t6 || !e3)
    return t6 === e3;
  if (t6.x === e3.x && t6.y === e3.y) {
    if (t6.hasZ) {
      if (t6.z !== e3.z)
        return false;
    } else if (e3.hasZ)
      return false;
    if (t6.hasM) {
      if (t6.m !== e3.m)
        return false;
    } else if (e3.hasM)
      return false;
    return true;
  }
  return false;
}
function q3(o2, i4, u3) {
  if (null !== o2)
    if (z(o2)) {
      if (i4.updateUint8Array([61]), u3.map.has(o2)) {
        const t6 = u3.map.get(o2);
        i4.updateIntArray([61237541 ^ t6]);
      } else {
        u3.map.set(o2, u3.currentLength++);
        for (const t6 of o2)
          q3(t6, i4, u3);
        u3.map.delete(o2), u3.currentLength--;
      }
      i4.updateUint8Array([199]);
    } else if (q(o2)) {
      if (i4.updateUint8Array([61]), u3.map.has(o2)) {
        const t6 = u3.map.get(o2);
        i4.updateIntArray([61237541 ^ t6]);
      } else {
        u3.map.set(o2, u3.currentLength++);
        for (const t6 of o2.toArray())
          q3(t6, i4, u3);
        u3.map.delete(o2), u3.currentLength--;
      }
      i4.updateUint8Array([199]);
    } else {
      if (B(o2))
        return i4.updateIntArray([o2.toNumber()]), void i4.updateUint8Array([241]);
      if (L(o2))
        return i4.updateIntArray([o2.length]), i4.updateWithString(o2), void i4.updateUint8Array([41]);
      if (Y(o2))
        i4.updateUint8Array([true === o2 ? 1 : 0, 113]);
      else {
        if (J(o2))
          return i4.updateFloatArray([o2]), void i4.updateUint8Array([173]);
        if (o2 instanceof t4)
          throw new t(u3.context, e.UnsupportedHashType, u3.node);
        if (o2 instanceof t3)
          throw new t(u3.context, e.UnsupportedHashType, u3.node);
        if (!(o2 instanceof A)) {
          if (E(o2))
            throw new t(u3.context, e.UnsupportedHashType, u3.node);
          if (o2 instanceof x)
            return i4.updateIntArray([3833836621]), i4.updateIntArray([0]), i4.updateFloatArray([o2.x]), i4.updateIntArray([1]), i4.updateFloatArray([o2.y]), o2.hasZ && (i4.updateIntArray([2]), i4.updateFloatArray([o2.z])), o2.hasM && (i4.updateIntArray([3]), i4.updateFloatArray([o2.m])), i4.updateIntArray([3765347959]), void q3(o2.spatialReference.wkid, i4, u3);
          if (o2 instanceof j) {
            i4.updateIntArray([1266616829]);
            for (let t6 = 0; t6 < o2.rings.length; t6++) {
              const e3 = o2.rings[t6], r3 = [];
              let n2 = null, a3 = null;
              for (let i5 = 0; i5 < e3.length; i5++) {
                const u4 = o2.getPoint(t6, i5);
                if (0 === i5)
                  n2 = u4;
                else if (Z4(a3, u4))
                  continue;
                a3 = u4, i5 === e3.length - 1 && Z4(n2, u4) || r3.push(u4);
              }
              i4.updateIntArray([1397116793, r3.length]);
              for (let t7 = 0; t7 < r3.length; t7++) {
                const e4 = r3[t7];
                i4.updateIntArray([3962308117, t7]), q3(e4, i4, u3), i4.updateIntArray([2716288009]);
              }
              i4.updateIntArray([2278822459]);
            }
            return i4.updateIntArray([3878477243]), void q3(o2.spatialReference.wkid, i4, u3);
          }
          if (o2 instanceof m) {
            i4.updateIntArray([4106883559]);
            for (let t6 = 0; t6 < o2.paths.length; t6++) {
              const e3 = o2.paths[t6];
              i4.updateIntArray([1397116793, e3.length]);
              for (let r3 = 0; r3 < e3.length; r3++)
                i4.updateIntArray([3962308117, r3]), q3(o2.getPoint(t6, r3), i4, u3), i4.updateIntArray([2716288009]);
              i4.updateIntArray([2278822459]);
            }
            return i4.updateIntArray([2568784753]), void q3(o2.spatialReference.wkid, i4, u3);
          }
          if (o2 instanceof u) {
            i4.updateIntArray([588535921, o2.points.length]);
            for (let t6 = 0; t6 < o2.points.length; t6++) {
              const e3 = o2.getPoint(t6);
              i4.updateIntArray([t6]), q3(e3, i4, u3);
            }
            return i4.updateIntArray([1700171621]), void q3(o2.spatialReference.wkid, i4, u3);
          }
          if (o2 instanceof M)
            return i4.updateIntArray([3483648373]), i4.updateIntArray([0]), i4.updateFloatArray([o2.xmax]), i4.updateIntArray([1]), i4.updateFloatArray([o2.xmin]), i4.updateIntArray([2]), i4.updateFloatArray([o2.ymax]), i4.updateIntArray([3]), i4.updateFloatArray([o2.ymin]), o2.hasZ && (i4.updateIntArray([4]), i4.updateFloatArray([o2.zmax]), i4.updateIntArray([5]), i4.updateFloatArray([o2.zmin])), o2.hasM && (i4.updateIntArray([6]), i4.updateFloatArray([o2.mmax]), i4.updateIntArray([7]), i4.updateFloatArray([o2.mmin])), i4.updateIntArray([3622027469]), void q3(o2.spatialReference.wkid, i4, u3);
          if (o2 instanceof f)
            return i4.updateIntArray([14]), void 0 !== o2.wkid && null !== o2.wkid && i4.updateIntArray([o2.wkid]), void (o2.wkt && i4.updateWithString(o2.wkt));
          if (O(o2))
            throw new t(u3.context, e.UnsupportedHashType, u3.node);
          if (V(o2))
            throw new t(u3.context, e.UnsupportedHashType, u3.node);
          if (U(o2))
            throw new t(u3.context, e.UnsupportedHashType, u3.node);
          if (o2 === F)
            throw new t(u3.context, e.UnsupportedHashType, u3.node);
          throw new t(u3.context, e.UnsupportedHashType, u3.node);
        }
        if (i4.updateUint8Array([223]), u3.map.has(o2)) {
          const t6 = u3.map.get(o2);
          i4.updateIntArray([61237541 ^ t6]);
        } else {
          u3.map.set(o2, u3.currentLength++);
          for (const t6 of o2.keys()) {
            i4.updateIntArray([t6.length]), i4.updateWithString(t6), i4.updateUint8Array([251]);
            q3(o2.field(t6), i4, u3), i4.updateUint8Array([239]);
          }
          u3.map.delete(o2), u3.currentLength--;
        }
        i4.updateUint8Array([73]);
      }
    }
  else
    i4.updateUint8Array([0, 139]);
}
function G2(e3, P4) {
  e3.portal = function(e4, r3) {
    return P4(e4, r3, (n2, a3, u3) => (Q(u3, 1, 1, e4, r3), new t3(oe(u3[0]))));
  }, e3.typeof = function(t6, e4) {
    return P4(t6, e4, (r3, i4, s3) => {
      Q(s3, 1, 1, t6, e4);
      const l5 = _(s3[0]);
      if ("Unrecognised Type" === l5)
        throw new t(t6, e.UnrecognisedType, e4);
      return l5;
    });
  }, e3.trim = function(t6, e4) {
    return P4(t6, e4, (r3, n2, a3) => (Q(a3, 1, 1, t6, e4), oe(a3[0]).trim()));
  }, e3.tohex = function(t6, e4) {
    return P4(t6, e4, (r3, n2, a3) => {
      Q(a3, 1, 1, t6, e4);
      const i4 = fe(a3[0]);
      return isNaN(i4) ? i4 : i4.toString(16);
    });
  }, e3.upper = function(t6, e4) {
    return P4(t6, e4, (r3, n2, a3) => (Q(a3, 1, 1, t6, e4), oe(a3[0]).toUpperCase()));
  }, e3.proper = function(t6, e4) {
    return P4(t6, e4, (r3, n2, a3) => {
      Q(a3, 1, 2, t6, e4);
      let u3 = 1;
      2 === a3.length && "firstword" === oe(a3[1]).toLowerCase() && (u3 = 2);
      const s3 = /\s/, l5 = oe(a3[0]);
      let c4 = "", p9 = true;
      for (let t7 = 0; t7 < l5.length; t7++) {
        let e5 = l5[t7];
        if (s3.test(e5))
          1 === u3 && (p9 = true);
        else {
          e5.toUpperCase() !== e5.toLowerCase() && (p9 ? (e5 = e5.toUpperCase(), p9 = false) : e5 = e5.toLowerCase());
        }
        c4 += e5;
      }
      return c4;
    });
  }, e3.lower = function(t6, e4) {
    return P4(t6, e4, (r3, n2, a3) => (Q(a3, 1, 1, t6, e4), oe(a3[0]).toLowerCase()));
  }, e3.guid = function(t6, e4) {
    return P4(t6, e4, (r3, n2, a3) => {
      if (Q(a3, 0, 1, t6, e4), a3.length > 0)
        switch (oe(a3[0]).toLowerCase()) {
          case "digits":
            return K().replace("-", "").replace("-", "").replace("-", "").replace("-", "");
          case "digits-hyphen":
            return K();
          case "digits-hyphen-braces":
            return "{" + K() + "}";
          case "digits-hyphen-parentheses":
            return "(" + K() + ")";
        }
      return "{" + K() + "}";
    });
  }, e3.standardizeguid = function(t6, e4) {
    return P4(t6, e4, (r3, n2, a3) => {
      Q(a3, 2, 2, t6, e4);
      let u3 = oe(a3[0]);
      if ("" === u3 || null === u3)
        return "";
      const s3 = /^(\{|\()?(?<partA>[0-9a-z]{8})(\-?)(?<partB>[0-9a-z]{4})(\-?)(?<partC>[0-9a-z]{4})(\-?)(?<partD>[0-9a-z]{4})(\-?)(?<partE>[0-9a-z]{12})(\}|\))?$/gim.exec(u3);
      if (!s3)
        return "";
      const l5 = s3.groups;
      switch (u3 = l5.partA + "-" + l5.partB + "-" + l5.partC + "-" + l5.partD + "-" + l5.partE, oe(a3[1]).toLowerCase()) {
        case "digits":
          return u3.replace("-", "").replace("-", "").replace("-", "").replace("-", "");
        case "digits-hyphen":
          return u3;
        case "digits-hyphen-braces":
          return "{" + u3 + "}";
        case "digits-hyphen-parentheses":
          return "(" + u3 + ")";
      }
      return "{" + u3 + "}";
    });
  }, e3.console = function(t6, e4) {
    return P4(t6, e4, (e5, r3, n2) => (0 === n2.length || (1 === n2.length ? t6.console(oe(n2[0])) : t6.console(oe(n2))), F));
  }, e3.mid = function(t6, e4) {
    return P4(t6, e4, (r3, n2, a3) => {
      Q(a3, 2, 3, t6, e4);
      let u3 = fe(a3[1]);
      if (isNaN(u3))
        return "";
      if (u3 < 0 && (u3 = 0), 2 === a3.length)
        return oe(a3[0]).substr(u3);
      let l5 = fe(a3[2]);
      return isNaN(l5) ? "" : (l5 < 0 && (l5 = 0), oe(a3[0]).substr(u3, l5));
    });
  }, e3.find = function(t6, e4) {
    return P4(t6, e4, (r3, n2, a3) => {
      Q(a3, 2, 3, t6, e4);
      let u3 = 0;
      if (a3.length > 2) {
        if (u3 = fe(v(a3[2], 0)), isNaN(u3))
          return -1;
        u3 < 0 && (u3 = 0);
      }
      return oe(a3[1]).indexOf(oe(a3[0]), u3);
    });
  }, e3.left = function(t6, e4) {
    return P4(t6, e4, (r3, n2, a3) => {
      Q(a3, 2, 2, t6, e4);
      let u3 = fe(a3[1]);
      return isNaN(u3) ? "" : (u3 < 0 && (u3 = 0), oe(a3[0]).substr(0, u3));
    });
  }, e3.right = function(t6, e4) {
    return P4(t6, e4, (r3, n2, a3) => {
      Q(a3, 2, 2, t6, e4);
      let u3 = fe(a3[1]);
      return isNaN(u3) ? "" : (u3 < 0 && (u3 = 0), oe(a3[0]).substr(-1 * u3, u3));
    });
  }, e3.split = function(t6, e4) {
    return P4(t6, e4, (r3, n2, a3) => {
      let u3;
      Q(a3, 2, 4, t6, e4);
      let l5 = fe(v(a3[2], -1));
      const c4 = me(v(a3[3], false));
      if (-1 === l5 || null === l5 || true === c4 ? u3 = oe(a3[0]).split(oe(a3[1])) : (isNaN(l5) && (l5 = -1), l5 < -1 && (l5 = -1), u3 = oe(a3[0]).split(oe(a3[1]), l5)), false === c4)
        return u3;
      const f3 = [];
      for (let t7 = 0; t7 < u3.length && !(-1 !== l5 && f3.length >= l5); t7++)
        "" !== u3[t7] && void 0 !== u3[t7] && f3.push(u3[t7]);
      return f3;
    });
  }, e3.text = function(t6, e4) {
    return P4(t6, e4, (r3, n2, a3) => (Q(a3, 1, 2, t6, e4), se(a3[0], a3[1])));
  }, e3.concatenate = function(t6, e4) {
    return P4(t6, e4, (t7, e5, r3) => {
      const n2 = [];
      if (r3.length < 1)
        return "";
      if (z(r3[0])) {
        const t8 = v(r3[2], "");
        for (let e6 = 0; e6 < r3[0].length; e6++)
          n2[e6] = se(r3[0][e6], t8);
        return r3.length > 1 ? n2.join(r3[1]) : n2.join("");
      }
      if (q(r3[0])) {
        const t8 = v(r3[2], "");
        for (let e6 = 0; e6 < r3[0].length(); e6++)
          n2[e6] = se(r3[0].get(e6), t8);
        return r3.length > 1 ? n2.join(r3[1]) : n2.join("");
      }
      for (let a3 = 0; a3 < r3.length; a3++)
        n2[a3] = se(r3[a3]);
      return n2.join("");
    });
  }, e3.reverse = function(t6, e4) {
    return P4(t6, e4, (r3, i4, u3) => {
      if (Q(u3, 1, 1, t6, e4), z(u3[0])) {
        const t7 = u3[0].slice(0);
        return t7.reverse(), t7;
      }
      if (q(u3[0])) {
        const t7 = u3[0].toArray().slice(0);
        return t7.reverse(), t7;
      }
      throw new t(t6, e.InvalidParameter, e4);
    });
  }, e3.replace = function(t6, e4) {
    return P4(t6, e4, (r3, n2, a3) => {
      Q(a3, 3, 4, t6, e4);
      const u3 = oe(a3[0]), s3 = oe(a3[1]), l5 = oe(a3[2]);
      return 4 !== a3.length || me(a3[3]) ? I(u3, s3, l5) : u3.replace(s3, l5);
    });
  }, e3.schema = function(t6, e4) {
    return P4(t6, e4, (o2, i4, u3) => {
      if (E(u3[0])) {
        const e5 = Ge(u3[0]);
        return e5 ? A.convertObjectToArcadeDictionary(e5, Pe(t6)) : null;
      }
      throw new t(t6, e.InvalidParameter, e4);
    });
  }, e3.subtypes = function(t6, e4) {
    return P4(t6, e4, (i4, u3, s3) => {
      if (Q(s3, 1, 1, t6, e4), E(s3[0])) {
        const e5 = Le(s3[0]);
        return e5 ? A.convertObjectToArcadeDictionary(e5, Pe(t6)) : null;
      }
      throw new t(t6, e.InvalidParameter, e4);
    });
  }, e3.subtypecode = function(t6, e4) {
    return P4(t6, e4, (r3, i4, u3) => {
      if (Q(u3, 1, 1, t6, e4), E(u3[0])) {
        const t7 = Le(u3[0]);
        if (!t7)
          return null;
        if (t7.subtypeField && u3[0].hasField(t7.subtypeField)) {
          const e5 = u3[0].field(t7.subtypeField);
          for (const r4 of t7.subtypes)
            if (r4.code === e5)
              return r4.code;
          return null;
        }
        return null;
      }
      throw new t(t6, e.InvalidParameter, e4);
    });
  }, e3.subtypename = function(t6, e4) {
    return P4(t6, e4, (r3, i4, u3) => {
      if (Q(u3, 1, 1, t6, e4), E(u3[0])) {
        const t7 = Le(u3[0]);
        if (!t7)
          return "";
        if (t7.subtypeField && u3[0].hasField(t7.subtypeField)) {
          const e5 = u3[0].field(t7.subtypeField);
          for (const r4 of t7.subtypes)
            if (r4.code === e5)
              return r4.name;
          return "";
        }
        return "";
      }
      throw new t(t6, e.InvalidParameter, e4);
    });
  }, e3.gdbversion = function(t6, e4) {
    return P4(t6, e4, (r3, i4, u3) => {
      if (Q(u3, 1, 1, t6, e4), E(u3[0]))
        return u3[0].gdbVersion();
      throw new t(t6, e.InvalidParameter, e4);
    });
  }, e3.domain = function(t6, e4) {
    return P4(t6, e4, (u3, s3, l5) => {
      if (Q(l5, 2, 3, t6, e4), E(l5[0])) {
        const e5 = _e(l5[0], oe(l5[1]), void 0 === l5[2] ? void 0 : l5[2]);
        return e5 && e5.domain ? "coded-value" === e5.domain.type || "codedValue" === e5.domain.type ? A.convertObjectToArcadeDictionary({ type: "codedValue", name: e5.domain.name, dataType: b[e5.field.type], codedValues: e5.domain.codedValues.map((t7) => ({ name: t7.name, code: t7.code })) }, Pe(t6)) : A.convertObjectToArcadeDictionary({ type: "range", name: e5.domain.name, dataType: b[e5.field.type], min: e5.domain.min, max: e5.domain.max }, Pe(t6)) : null;
      }
      throw new t(t6, e.InvalidParameter, e4);
    });
  }, e3.domainname = function(t6, e4) {
    return P4(t6, e4, (r3, u3, s3) => {
      if (Q(s3, 2, 4, t6, e4), E(s3[0]))
        return Ye(s3[0], oe(s3[1]), s3[2], void 0 === s3[3] ? void 0 : s3[3]);
      throw new t(t6, e.InvalidParameter, e4);
    });
  }, e3.domaincode = function(t6, e4) {
    return P4(t6, e4, (r3, u3, s3) => {
      if (Q(s3, 2, 4, t6, e4), E(s3[0]))
        return Je(s3[0], oe(s3[1]), s3[2], void 0 === s3[3] ? void 0 : s3[3]);
      throw new t(t6, e.InvalidParameter, e4);
    });
  }, e3.urlencode = function(t6, e4) {
    return P4(t6, e4, (n2, a3, u3) => {
      if (Q(u3, 1, 1, t6, e4), null === u3[0])
        return "";
      if (u3[0] instanceof A) {
        let t7 = "";
        for (const e5 of u3[0].keys()) {
          const r3 = u3[0].field(e5);
          "" !== t7 && (t7 += "&"), t7 += null === r3 ? encodeURIComponent(e5) + "=" : encodeURIComponent(e5) + "=" + encodeURIComponent(r3);
        }
        return t7;
      }
      return encodeURIComponent(oe(u3[0]));
    });
  }, e3.hash = function(t6, e4) {
    return P4(t6, e4, (r3, n2, a3) => {
      Q(a3, 1, 1, t6, e4);
      const i4 = new i2(0);
      return q3(a3[0], i4, { context: t6, node: e4, map: /* @__PURE__ */ new Map(), currentLength: 0 }), i4.digest();
    });
  }, e3.convertdirection = function(t6, e4) {
    return P4(t6, e4, (r3, n2, a3) => (Q(a3, 3, 3, t6, e4), ge(a3[0], a3[1], a3[2])));
  }, e3.fromjson = function(t6, e4) {
    return P4(t6, e4, (u3, s3, l5) => {
      if (Q(l5, 1, 1, t6, e4), false === L(l5[0]))
        throw new t(t6, e.InvalidParameter, e4);
      return A.convertJsonToArcade(JSON.parse(oe(l5[0])), Pe(t6));
    });
  }, e3.expects = function(t6, e4) {
    return P4(t6, e4, (r3, o2, i4) => {
      if (i4.length < 1)
        throw new t(t6, e.WrongNumberOfParameters, e4);
      return F;
    });
  }, e3.tocharcode = function(t6, e4) {
    return P4(t6, e4, (r3, u3, l5) => {
      Q(l5, 1, 2, t6, e4);
      const c4 = fe(v(l5[1], 0)), d4 = oe(l5[0]);
      if (0 === d4.length && 1 === l5.length)
        return null;
      if (d4.length <= c4 || c4 < 0)
        throw new t(t6, e.OutOfBounds, e4);
      return d4.charCodeAt(c4);
    });
  }, e3.tocodepoint = function(t6, e4) {
    return P4(t6, e4, (r3, u3, l5) => {
      Q(l5, 1, 2, t6, e4);
      const c4 = fe(v(l5[1], 0)), d4 = oe(l5[0]);
      if (0 === d4.length && 1 === l5.length)
        return null;
      if (d4.length <= c4 || c4 < 0)
        throw new t(t6, e.OutOfBounds, e4);
      return d4.codePointAt(c4);
    });
  }, e3.fromcharcode = function(t6, e4) {
    return P4(t6, e4, (r3, o2, i4) => {
      if (i4.length < 1)
        throw new t(t6, e.WrongNumberOfParameters, e4);
      const u3 = i4.map((t7) => Math.trunc(fe(t7))).filter((t7) => t7 >= 0 && t7 <= 65535);
      return 0 === u3.length ? null : String.fromCharCode.apply(null, u3);
    });
  }, e3.fromcodepoint = function(t6, e4) {
    return P4(t6, e4, (r3, o2, i4) => {
      if (i4.length < 1)
        throw new t(t6, e.WrongNumberOfParameters, e4);
      let u3;
      try {
        u3 = i4.map((t7) => Math.trunc(fe(t7))).filter((t7) => t7 <= 1114111 && t7 >>> 0 === t7);
      } catch (l5) {
        return null;
      }
      return 0 === u3.length ? null : String.fromCodePoint.apply(null, u3);
    });
  }, e3.getuser = function(e4, u3) {
    return P4(e4, u3, (s3, l5, c4) => {
      Q(c4, 0, 2, e4, u3);
      let d4 = v(c4[1], "");
      if (d4 = true === d4 || false === d4 ? "" : oe(d4), null !== d4 && "" !== d4)
        return null;
      if (0 === c4.length || c4[0] instanceof t3) {
        let t6 = null;
        if (t6 = e4.services && e4.services.portal ? e4.services.portal : j2.getDefault(), c4.length > 0) {
          if (!E3(c4[0].field("url"), t6))
            return null;
        }
        if (!t6)
          return null;
        if ("" === d4) {
          const n2 = B3(t6);
          if (n2) {
            const t7 = JSON.parse(JSON.stringify(n2));
            for (const e5 of ["lastLogin", "created", "modified"])
              void 0 !== t7[e5] && null !== t7[e5] && (t7[e5] = new Date(t7[e5]));
            return A.convertObjectToArcadeDictionary(t7, Pe(e4));
          }
        }
        return null;
      }
      throw new t(e4, e.InvalidParameter, u3);
    });
  }, e3.getenvironment = function(t6, e4) {
    return P4(t6, e4, (n2, a3, i4) => (Q(i4, 0, 0, t6, e4), A.convertObjectToArcadeDictionary(ze(Pe(t6), t6.spatialReference), Pe(t6), true)));
  };
}

// node_modules/@arcgis/core/arcade/ArcadeModuleLoader.js
var s2 = class {
  constructor(s3, t6) {
    this._moduleSingletons = s3, this._syntaxModules = t6;
  }
  loadLibrary(s3) {
    if (null == this._syntaxModules)
      return null;
    const t6 = this._syntaxModules[s3.toLowerCase()];
    return t6 ? { syntax: t6.script, uri: t6.uri } : null;
  }
};

export {
  o,
  c3 as c,
  x2 as x,
  p6 as p,
  l2 as l,
  u2 as u,
  y,
  d2 as d,
  p7 as p2,
  T2 as T,
  Z2 as Z,
  W2 as W,
  N2 as N,
  f2 as f,
  G2 as G,
  s2 as s
};
//# sourceMappingURL=chunk-J4IKKVQN.js.map

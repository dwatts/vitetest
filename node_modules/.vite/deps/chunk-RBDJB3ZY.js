import {
  t
} from "./chunk-SO7CVIZK.js";
import {
  Rn,
  en
} from "./chunk-BNBT4QTW.js";
import {
  M,
  x,
  y
} from "./chunk-ZEEBL7ZN.js";
import {
  A,
  S2 as S,
  s
} from "./chunk-RTDN6KAT.js";
import {
  R
} from "./chunk-JZJWZ6DN.js";

// node_modules/@arcgis/core/layers/graphics/data/projectionSupport.js
var l = [0, 0];
function h(s2, t2) {
  if (!t2)
    return null;
  if ("x" in t2) {
    const e = { x: 0, y: 0 };
    return [e.x, e.y] = s2(t2.x, t2.y, l), null != t2.z && (e.z = t2.z), null != t2.m && (e.m = t2.m), e;
  }
  if ("xmin" in t2) {
    const e = { xmin: 0, ymin: 0, xmax: 0, ymax: 0 };
    return [e.xmin, e.ymin] = s2(t2.xmin, t2.ymin, l), [e.xmax, e.ymax] = s2(t2.xmax, t2.ymax, l), t2.hasZ && (e.zmin = t2.zmin, e.zmax = t2.zmax, e.hasZ = true), t2.hasM && (e.mmin = t2.mmin, e.mmax = t2.mmax, e.hasM = true), e;
  }
  return "rings" in t2 ? { rings: c(t2.rings, s2), hasM: t2.hasM, hasZ: t2.hasZ } : "paths" in t2 ? { paths: c(t2.paths, s2), hasM: t2.hasM, hasZ: t2.hasZ } : "points" in t2 ? { points: p(t2.points, s2), hasM: t2.hasM, hasZ: t2.hasZ } : null;
}
function c(s2, t2) {
  const e = [];
  for (const n of s2)
    e.push(p(n, t2));
  return e;
}
function p(s2, t2) {
  const e = [];
  for (const n of s2) {
    const s3 = t2(n[0], n[1], [0, 0]);
    e.push(s3), n.length > 2 && s3.push(n[2]), n.length > 3 && s3.push(n[3]);
  }
  return e;
}
async function f(e, n) {
  if (!e || !n)
    return;
  const r = Array.isArray(e) ? e.map((s2) => null != s2.geometry ? s2.geometry.spatialReference : null).filter(R) : [e];
  await Rn(r.map((s2) => ({ source: s2, dest: n })));
}
var x2 = h.bind(null, M);
var y2 = h.bind(null, y);
function g(s2, t2, a, m) {
  if (!s2)
    return s2;
  if (a || (a = t2, t2 = s2.spatialReference), !s(t2) || !s(a) || S(t2, a))
    return s2;
  if (x(t2, a)) {
    const t3 = A(a) ? x2(s2) : y2(s2);
    return t3.spatialReference = a, t3;
  }
  return en(t, [s2], t2, a, null, m)[0];
}
var _ = class {
  constructor() {
    this._jobs = [], this._timer = null, this._process = this._process.bind(this);
  }
  async push(s2, t2, e) {
    if (!s2 || !s2.length || !t2 || !e || S(t2, e))
      return s2;
    const n = { geometries: s2, inSpatialReference: t2, outSpatialReference: e, resolve: null };
    return this._jobs.push(n), new Promise((s3) => {
      n.resolve = s3, null === this._timer && (this._timer = setTimeout(this._process, 10));
    });
  }
  _process() {
    this._timer = null;
    const s2 = this._jobs.shift();
    if (!s2)
      return;
    const { geometries: t2, inSpatialReference: r, outSpatialReference: i, resolve: a } = s2;
    x(r, i) ? A(i) ? a(t2.map(x2)) : a(t2.map(y2)) : a(en(t, t2, r, i, null, null)), this._jobs.length > 0 && (this._timer = setTimeout(this._process, 10));
  }
};
var j = new _();
function M2(s2, t2, e) {
  return j.push(s2, t2, e);
}

export {
  f,
  g,
  M2 as M
};
//# sourceMappingURL=chunk-RBDJB3ZY.js.map

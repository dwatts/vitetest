import {
  o
} from "./chunk-V66LHQVK.js";
import {
  O
} from "./chunk-BN6X2OXK.js";
import {
  n
} from "./chunk-4CZO65BK.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js
var d;
function o2(o3, v) {
  switch (v.textureCoordinateType) {
    case d.Default:
      return o3.attributes.add(O.UV0, "vec2"), o3.varyings.add("vuv0", "vec2"), void o3.vertex.code.add(o`void forwardTextureCoordinates() {
vuv0 = uv0;
}`);
    case d.Compressed:
      return o3.attributes.add(O.UV0, "vec2"), o3.varyings.add("vuv0", "vec2"), void o3.vertex.code.add(o`vec2 getUV0() {
return uv0 / 16384.0;
}
void forwardTextureCoordinates() {
vuv0 = getUV0();
}`);
    case d.Atlas:
      return o3.attributes.add(O.UV0, "vec2"), o3.varyings.add("vuv0", "vec2"), o3.attributes.add(O.UVREGION, "vec4"), o3.varyings.add("vuvRegion", "vec4"), void o3.vertex.code.add(o`void forwardTextureCoordinates() {
vuv0 = uv0;
vuvRegion = uvRegion;
}`);
    default:
      n(v.textureCoordinateType);
    case d.None:
      return void o3.vertex.code.add(o`void forwardTextureCoordinates() {}`);
    case d.COUNT:
      return;
  }
}
!function(e) {
  e[e.None = 0] = "None", e[e.Default = 1] = "Default", e[e.Atlas = 2] = "Atlas", e[e.Compressed = 3] = "Compressed", e[e.COUNT = 4] = "COUNT";
}(d || (d = {}));

export {
  d,
  o2 as o
};
//# sourceMappingURL=chunk-VC3BY3DV.js.map

import {
  n
} from "./chunk-IBJTEQQG.js";
import {
  o as o2
} from "./chunk-SADO52IH.js";
import {
  e as e3
} from "./chunk-WVOBJDWI.js";
import {
  p
} from "./chunk-DOR4M5EA.js";
import {
  e as e2
} from "./chunk-QS45OHBM.js";
import {
  e
} from "./chunk-WRFNQB7U.js";
import {
  i2 as i
} from "./chunk-BO2REVMA.js";
import {
  o
} from "./chunk-V66LHQVK.js";
import {
  O
} from "./chunk-BN6X2OXK.js";

// node_modules/@arcgis/core/chunks/CheckerBoard.glsl.js
function n2(n3) {
  const c2 = new i(), { vertex: v, fragment: u } = c2;
  return p(v, n3), c2.attributes.add(O.POSITION, "vec3"), c2.attributes.add(O.UV0, "vec2"), c2.varyings.add("vUV", "vec2"), n3.hasMultipassTerrain && c2.varyings.add("depth", "float"), v.code.add(o`
    void main(void) {
      vUV = uv0;
      ${n3.hasMultipassTerrain ? "depth = (view * vec4(position, 1.0)).z;" : ""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `), c2.include(n, n3), u.uniforms.add(new e("size", (e4) => e4.size)), u.uniforms.add(new e2("color1", (e4) => e4.color1)), u.uniforms.add(new e2("color2", (e4) => e4.color2)), u.include(e3), u.code.add(o`
    void main() {
      ${n3.hasMultipassTerrain ? "terrainDepthTest(gl_FragCoord, depth);" : ""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      fragColor = mix(color2, color1, t);
      ${n3.transparencyPassType === o2.Color ? "fragColor = premultiplyAlpha(fragColor);" : ""}
    }
  `), c2;
}
var c = Object.freeze(Object.defineProperty({ __proto__: null, build: n2 }, Symbol.toStringTag, { value: "Module" }));

export {
  n2 as n,
  c
};
//# sourceMappingURL=chunk-NBIX5G6B.js.map

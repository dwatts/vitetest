import {
  n,
  p
} from "./chunk-BFVDDR4R.js";
import {
  Ae,
  b
} from "./chunk-4BXK4H4L.js";
import {
  a2 as a
} from "./chunk-HB2SQRT2.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  s3 as s
} from "./chunk-HMVAPW5X.js";

// node_modules/@arcgis/core/views/3d/layers/support/PopupSceneLayerView.js
var i = (i2) => {
  let c = class extends i2 {
    _validateFetchPopupFeatures(e2) {
      const { layer: s2 } = this, { popupEnabled: t } = s2;
      if (!t)
        throw new s("scenelayerview3d:fetchPopupFeatures", "Popups are disabled", { layer: s2 });
      if (!p(s2, e2))
        throw new s("scenelayerview3d:fetchPopupFeatures", "Layer does not define a popup template", { layer: s2 });
    }
    async prepareFetchPopupFeatures(e2) {
    }
    async fetchPopupFeatures(e2, r) {
      this._validateFetchPopupFeatures(r);
      const s2 = null != r ? r.clientGraphics : null;
      if (!s2 || 0 === s2.length)
        return [];
      const i3 = "scene" === this.layer.type && null != this.layer.associatedLayer ? this.layer.associatedLayer : this.layer;
      let c2 = [];
      "fieldsIndex" in this.layer && (c2 = b(this.layer.fieldsIndex, await n(i3, p(this.layer, r)))), await this.prepareFetchPopupFeatures(c2);
      const l = /* @__PURE__ */ new Set(), n2 = [], u = [];
      for (const t of s2)
        Ae(c2, t, l) ? u.push(t) : n2.push(t);
      return 0 === u.length ? n2 : this.whenGraphicAttributes(u, [...l]).catch(() => u).then((e3) => n2.concat(e3));
    }
  };
  return c = e([a("esri.views.3d.layers.support.PopupSceneLayerView")], c), c;
};

export {
  i
};
//# sourceMappingURL=chunk-N5A7N3L3.js.map

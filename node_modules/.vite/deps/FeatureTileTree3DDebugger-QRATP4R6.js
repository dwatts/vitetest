import {
  y as y2
} from "./chunk-XBDZ5RTM.js";
import {
  c
} from "./chunk-GDZM4A6K.js";
import "./chunk-XWGNMTES.js";
import "./chunk-6NNEHJYI.js";
import "./chunk-JNDFAMXY.js";
import "./chunk-NTEKJWGF.js";
import "./chunk-TFIKV5RU.js";
import "./chunk-KW6QQDGN.js";
import "./chunk-AQ7R6V4L.js";
import "./chunk-DOQ3SAAR.js";
import "./chunk-4BXK4H4L.js";
import "./chunk-SLVNG7FV.js";
import "./chunk-DEZCXTA3.js";
import "./chunk-RRJGZKNX.js";
import "./chunk-PL5Q4C6Y.js";
import "./chunk-KFSY6ZZH.js";
import "./chunk-7EQSYZHW.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-GGOVZ2GK.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-WLWP35G2.js";
import "./chunk-JPW73GY2.js";
import "./chunk-HXPVVSLV.js";
import {
  j
} from "./chunk-4OR73Y2R.js";
import "./chunk-EKJ2DJIR.js";
import "./chunk-TEHNQYQD.js";
import "./chunk-TPJLFGOT.js";
import "./chunk-CQX57DED.js";
import "./chunk-3CQBBMMD.js";
import "./chunk-Z2ZUNW5S.js";
import "./chunk-7L7Z2HXM.js";
import "./chunk-75NKPXTR.js";
import "./chunk-EUVARFSM.js";
import "./chunk-3VUFACNT.js";
import "./chunk-ZEEBL7ZN.js";
import "./chunk-RTDN6KAT.js";
import "./chunk-GJ7PJ7XG.js";
import "./chunk-SJ2GJCS2.js";
import {
  h
} from "./chunk-H7RDAEPY.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-7KH4CLS5.js";
import "./chunk-JL3TJGVW.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-43LWRDQS.js";
import "./chunk-R6YKST3K.js";
import "./chunk-ZJEWQGHG.js";
import "./chunk-YGB42LDG.js";
import "./chunk-F3KGLZDZ.js";
import "./chunk-MP6GH2AC.js";
import {
  t2 as t,
  y3 as y
} from "./chunk-V76KGJFU.js";
import {
  a2 as a
} from "./chunk-HB2SQRT2.js";
import "./chunk-U3J7253Q.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-ZWUBORGT.js";
import "./chunk-3R7FAT25.js";
import "./chunk-7I33FAWS.js";
import {
  l
} from "./chunk-DWOEYHKS.js";
import "./chunk-HMVAPW5X.js";
import "./chunk-IYZKKFJM.js";
import "./chunk-JZJWZ6DN.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/views/3d/layers/support/FeatureTileTree3DDebugger.js
var c2 = class extends y2 {
  get updating() {
    var _a;
    return ((_a = this._watchUpdatingTracking) == null ? void 0 : _a.updating) ?? false;
  }
  constructor(t2) {
    super(t2), this._watchUpdatingTracking = new c(), this._handles = new t();
  }
  initialize() {
    const { featureTiles: t2 } = this.view;
    this._handles.add(t2.addClient()), this._watchUpdatingTracking.addOnCollectionChange(() => t2 == null ? void 0 : t2.tiles, () => this.update(), h);
  }
  destroy() {
    this._handles = l(this._handles), this._watchUpdatingTracking.destroy();
  }
  getTiles() {
    const t2 = (t3) => {
      const [e2, r, o] = t3.lij;
      return j.fromExtent(this.view.featureTiles.tilingScheme.getExtentGeometry(e2, r, o));
    };
    return this.view.featureTiles.tiles.toArray().sort((t3, e2) => t3.loadPriority - e2.loadPriority).map((e2) => ({ ...e2, geometry: t2(e2) }));
  }
};
e([y()], c2.prototype, "_watchUpdatingTracking", void 0), e([y()], c2.prototype, "updating", null), e([y()], c2.prototype, "view", void 0), c2 = e([a("esri.views.3d.layers.support.FeatureTileTree3DDebugger")], c2);
export {
  c2 as FeatureTileTree3DDebugger
};
//# sourceMappingURL=FeatureTileTree3DDebugger-QRATP4R6.js.map

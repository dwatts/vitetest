import {
  d as d2
} from "./chunk-JPZZRVHU.js";
import {
  C
} from "./chunk-PFUZUHLB.js";
import {
  i as i2
} from "./chunk-5WTMIJW5.js";
import "./chunk-GTUBINZG.js";
import "./chunk-SLMR4CTS.js";
import "./chunk-BFVDDR4R.js";
import "./chunk-LJ3FBGIN.js";
import {
  K,
  N
} from "./chunk-6OH4SNKA.js";
import "./chunk-QPXU3YKY.js";
import "./chunk-T3UXUOZW.js";
import "./chunk-FLVP2XLK.js";
import "./chunk-XKENZ7D5.js";
import "./chunk-FCLGNXEM.js";
import "./chunk-GZTS5346.js";
import "./chunk-EK3Y2IYO.js";
import "./chunk-6S2FCH6S.js";
import "./chunk-BZL5MAFP.js";
import "./chunk-XY26YCFX.js";
import "./chunk-3TTW7E7W.js";
import "./chunk-FOEAKQNX.js";
import "./chunk-LEDSC236.js";
import "./chunk-NETCTS4Y.js";
import "./chunk-OKABUMQT.js";
import "./chunk-CW7LIPBH.js";
import "./chunk-TYOIANOD.js";
import "./chunk-VN2IXVGV.js";
import "./chunk-WWUAHPIM.js";
import "./chunk-BN6X2OXK.js";
import "./chunk-3C6NSN3C.js";
import "./chunk-J7GVLYC6.js";
import "./chunk-HWCVRBK2.js";
import "./chunk-WQH5IZQP.js";
import {
  i
} from "./chunk-LCS4FL4K.js";
import {
  l as l2
} from "./chunk-4JFWLHWB.js";
import "./chunk-Y7OTFSYN.js";
import "./chunk-S7JBLP35.js";
import "./chunk-DZRIMGKU.js";
import "./chunk-MRYR5ID7.js";
import "./chunk-I3MRHING.js";
import "./chunk-RWWB77SD.js";
import "./chunk-Y7MP63H6.js";
import "./chunk-2WJ2SRK2.js";
import "./chunk-ZVHSORNP.js";
import "./chunk-XUV5GLNE.js";
import "./chunk-ZMFGNDTK.js";
import "./chunk-UL64BLDS.js";
import "./chunk-EG6CFIHA.js";
import "./chunk-CMNAZRWU.js";
import "./chunk-KE6VYSDW.js";
import "./chunk-SJEOKSSU.js";
import "./chunk-5GE3CZPD.js";
import "./chunk-WZRJMJNH.js";
import "./chunk-GDP6ZU2A.js";
import "./chunk-XIYY37WZ.js";
import "./chunk-P4PDTNIU.js";
import "./chunk-SRDSGSDW.js";
import "./chunk-IMXPH7BL.js";
import "./chunk-ENOZ3X2B.js";
import "./chunk-DRCIVBVA.js";
import "./chunk-CEFGWR5H.js";
import "./chunk-NX5NNI52.js";
import "./chunk-G2DTL6AE.js";
import "./chunk-Q6HN54VB.js";
import "./chunk-NDKDK4Y5.js";
import "./chunk-O443WBFA.js";
import "./chunk-RGS3ANC3.js";
import "./chunk-Z3GCSCQI.js";
import "./chunk-PPNAO2PM.js";
import "./chunk-UU2XJGLA.js";
import "./chunk-CGJNVOU3.js";
import "./chunk-YA7WDOJK.js";
import "./chunk-C6OHOFP6.js";
import {
  j as j3
} from "./chunk-ZX45U24W.js";
import "./chunk-KYWX7M3R.js";
import "./chunk-7H2AXTDH.js";
import {
  t as t2
} from "./chunk-QC2JMJXZ.js";
import {
  c as c2
} from "./chunk-GFPASUQP.js";
import {
  O
} from "./chunk-KDACHJ5G.js";
import {
  c,
  d,
  j as j2,
  y as y2
} from "./chunk-IQRLZSBX.js";
import "./chunk-OZL6Q7O2.js";
import "./chunk-FVR25IMN.js";
import "./chunk-EV77QZBT.js";
import "./chunk-QZ6WR57P.js";
import "./chunk-467UETSR.js";
import "./chunk-SHFLRM67.js";
import "./chunk-YGUWDSEH.js";
import "./chunk-6RU2CUTK.js";
import "./chunk-GOK4EI36.js";
import "./chunk-LO3LAMAS.js";
import "./chunk-ZWFMUHG3.js";
import "./chunk-EFRTD25L.js";
import "./chunk-EAGDM3GO.js";
import "./chunk-GSS6WNQU.js";
import "./chunk-C2EHS6UI.js";
import "./chunk-RVS5HU2K.js";
import "./chunk-JB7FDW5N.js";
import "./chunk-SS3YG6J3.js";
import "./chunk-H37COY3W.js";
import "./chunk-NVGPNIR6.js";
import "./chunk-B4D7M7HT.js";
import "./chunk-3T2ETA25.js";
import "./chunk-5IYCCZ54.js";
import "./chunk-JLSXEPY6.js";
import "./chunk-VMTVUE47.js";
import "./chunk-GDZM4A6K.js";
import "./chunk-XWGNMTES.js";
import "./chunk-6NNEHJYI.js";
import "./chunk-BNBT4QTW.js";
import "./chunk-3FQOSG5O.js";
import "./chunk-W4KI5YEI.js";
import "./chunk-CAFGOFIE.js";
import "./chunk-7EG7BYWF.js";
import {
  t as t3
} from "./chunk-JNDFAMXY.js";
import "./chunk-NTEKJWGF.js";
import "./chunk-TFIKV5RU.js";
import "./chunk-KW6QQDGN.js";
import "./chunk-AQ7R6V4L.js";
import "./chunk-DOQ3SAAR.js";
import "./chunk-4BXK4H4L.js";
import "./chunk-SLVNG7FV.js";
import "./chunk-OZXJDVTE.js";
import {
  t
} from "./chunk-JNO3YVNK.js";
import {
  n as n2
} from "./chunk-DU6E4DU3.js";
import "./chunk-DKJBDKGA.js";
import "./chunk-4CZO65BK.js";
import "./chunk-SVCGLUNW.js";
import {
  b
} from "./chunk-3KEIFTQ6.js";
import "./chunk-DEZCXTA3.js";
import "./chunk-RRJGZKNX.js";
import "./chunk-PL5Q4C6Y.js";
import "./chunk-A6VKJXIH.js";
import "./chunk-KFSY6ZZH.js";
import {
  V
} from "./chunk-7EQSYZHW.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-GGOVZ2GK.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-WLWP35G2.js";
import {
  o as o2
} from "./chunk-JPW73GY2.js";
import "./chunk-HXPVVSLV.js";
import "./chunk-4OR73Y2R.js";
import "./chunk-EKJ2DJIR.js";
import "./chunk-TEHNQYQD.js";
import "./chunk-TPJLFGOT.js";
import "./chunk-CQX57DED.js";
import "./chunk-3CQBBMMD.js";
import "./chunk-2CTB7MKH.js";
import "./chunk-Z2ZUNW5S.js";
import {
  _
} from "./chunk-7L7Z2HXM.js";
import "./chunk-75NKPXTR.js";
import "./chunk-EUVARFSM.js";
import "./chunk-3VUFACNT.js";
import {
  f as f2
} from "./chunk-ZEEBL7ZN.js";
import {
  o
} from "./chunk-RTDN6KAT.js";
import "./chunk-GJ7PJ7XG.js";
import {
  n
} from "./chunk-5EXFDBQJ.js";
import "./chunk-57CHUY45.js";
import "./chunk-SJ2GJCS2.js";
import "./chunk-H7RDAEPY.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-S5OISW44.js";
import "./chunk-7KH4CLS5.js";
import "./chunk-WCHO7VLT.js";
import {
  m
} from "./chunk-JL3TJGVW.js";
import "./chunk-JZM5YUHA.js";
import {
  j
} from "./chunk-43LWRDQS.js";
import "./chunk-R6YKST3K.js";
import {
  V as V2
} from "./chunk-ZJEWQGHG.js";
import "./chunk-YGB42LDG.js";
import "./chunk-F3KGLZDZ.js";
import {
  l
} from "./chunk-MP6GH2AC.js";
import {
  y3 as y
} from "./chunk-V76KGJFU.js";
import {
  a2
} from "./chunk-HB2SQRT2.js";
import "./chunk-U3J7253Q.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-ZWUBORGT.js";
import "./chunk-3R7FAT25.js";
import {
  f
} from "./chunk-7I33FAWS.js";
import "./chunk-DWOEYHKS.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-HMVAPW5X.js";
import {
  a
} from "./chunk-IYZKKFJM.js";
import "./chunk-JZJWZ6DN.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfo.js
var e2 = class extends l {
  constructor() {
    super(...arguments), this.type = null;
  }
};
e([y({ type: String, readOnly: true, json: { write: true } })], e2.prototype, "type", void 0), e2 = e([a2("esri.layers.support.BuildingFilterAuthoringInfo")], e2);
var p = e2;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoType.js
var p2;
var i3 = p2 = class extends l {
  constructor() {
    super(...arguments), this.filterType = null, this.filterValues = null;
  }
  clone() {
    return new p2({ filterType: this.filterType, filterValues: a(this.filterValues) });
  }
};
e([y({ type: String, json: { write: true } })], i3.prototype, "filterType", void 0), e([y({ type: [String], json: { write: true } })], i3.prototype, "filterValues", void 0), i3 = p2 = e([a2("esri.layers.support.BuildingFilterAuthoringInfoType")], i3);
var l3 = i3;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoBlock.js
var c3;
var l4 = V.ofType(l3);
var n3 = c3 = class extends l {
  clone() {
    return new c3({ filterTypes: a(this.filterTypes) });
  }
};
e([y({ type: l4, json: { write: true } })], n3.prototype, "filterTypes", void 0), n3 = c3 = e([a2("esri.layers.support.BuildingFilterAuthoringInfoBlock")], n3);
var m2 = n3;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoCheckbox.js
var p3;
var l5 = V.ofType(m2);
var n4 = p3 = class extends p {
  constructor() {
    super(...arguments), this.type = "checkbox";
  }
  clone() {
    return new p3({ filterBlocks: a(this.filterBlocks) });
  }
};
e([y({ type: ["checkbox"] })], n4.prototype, "type", void 0), e([y({ type: l5, json: { write: true } })], n4.prototype, "filterBlocks", void 0), n4 = p3 = e([a2("esri.layers.support.BuildingFilterAuthoringInfoCheckbox")], n4);
var u = n4;

// node_modules/@arcgis/core/layers/support/BuildingFilterMode.js
var t4 = class extends l {
};
e([y({ readOnly: true, json: { read: false } })], t4.prototype, "type", void 0), t4 = e([a2("esri.layers.support.BuildingFilterMode")], t4);
var p4 = t4;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeSolid.js
var t5;
var p5 = t5 = class extends p4 {
  constructor() {
    super(...arguments), this.type = "solid";
  }
  clone() {
    return new t5();
  }
};
e([y({ type: ["solid"], readOnly: true, json: { write: true } })], p5.prototype, "type", void 0), p5 = t5 = e([a2("esri.layers.support.BuildingFilterModeSolid")], p5);
var i4 = p5;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeWireFrame.js
var c4;
var m3 = c4 = class extends p4 {
  constructor() {
    super(...arguments), this.type = "wire-frame", this.edges = null;
  }
  clone() {
    return new c4({ edges: a(this.edges) });
  }
};
e([o2({ wireFrame: "wire-frame" })], m3.prototype, "type", void 0), e([y(t3)], m3.prototype, "edges", void 0), m3 = c4 = e([a2("esri.layers.support.BuildingFilterModeWireFrame")], m3);
var a3 = m3;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeXRay.js
var t6;
var p6 = t6 = class extends p4 {
  constructor() {
    super(...arguments), this.type = "x-ray";
  }
  clone() {
    return new t6();
  }
};
e([y({ type: ["x-ray"], readOnly: true, json: { write: true } })], p6.prototype, "type", void 0), p6 = t6 = e([a2("esri.layers.support.BuildingFilterModeXRay")], p6);
var c5 = p6;

// node_modules/@arcgis/core/layers/support/BuildingFilterBlock.js
var d3;
var a4 = { nonNullable: true, types: { key: "type", base: p4, typeMap: { solid: i4, "wire-frame": a3, "x-ray": c5 } }, json: { read: (e3) => {
  switch (e3 && e3.type) {
    case "solid":
      return i4.fromJSON(e3);
    case "wireFrame":
      return a3.fromJSON(e3);
    case "x-ray":
      return c5.fromJSON(e3);
    default:
      return;
  }
}, write: { enabled: true, isRequired: true } } };
var u2 = d3 = class extends l {
  constructor() {
    super(...arguments), this.filterExpression = null, this.filterMode = new i4(), this.title = "";
  }
  clone() {
    return new d3({ filterExpression: this.filterExpression, filterMode: a(this.filterMode), title: this.title });
  }
};
e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], u2.prototype, "filterExpression", void 0), e([y(a4)], u2.prototype, "filterMode", void 0), e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], u2.prototype, "title", void 0), u2 = d3 = e([a2("esri.layers.support.BuildingFilterBlock")], u2);
var c6 = u2;

// node_modules/@arcgis/core/layers/support/BuildingFilter.js
var u3;
var d4 = V.ofType(c6);
var m4 = u3 = class extends l {
  constructor() {
    super(...arguments), this.description = null, this.filterBlocks = null, this.id = n(), this.name = null;
  }
  clone() {
    return new u3({ description: this.description, filterBlocks: a(this.filterBlocks), id: this.id, name: this.name, filterAuthoringInfo: a(this.filterAuthoringInfo) });
  }
};
e([y({ type: String, json: { write: true } })], m4.prototype, "description", void 0), e([y({ type: d4, json: { write: { enabled: true, isRequired: true } } })], m4.prototype, "filterBlocks", void 0), e([y({ types: { key: "type", base: p, typeMap: { checkbox: u } }, json: { read: (o3) => "checkbox" === (o3 && o3.type) ? u.fromJSON(o3) : null, write: true } })], m4.prototype, "filterAuthoringInfo", void 0), e([y({ type: String, constructOnly: true, json: { write: { enabled: true, isRequired: true } } })], m4.prototype, "id", void 0), e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], m4.prototype, "name", void 0), m4 = u3 = e([a2("esri.layers.support.BuildingFilter")], m4);
var f3 = m4;

// node_modules/@arcgis/core/layers/support/BuildingSummaryStatistics.js
var p7 = class extends l {
  constructor() {
    super(...arguments), this.fieldName = null, this.modelName = null, this.label = null, this.min = null, this.max = null, this.mostFrequentValues = null, this.subLayerIds = null;
  }
};
e([y({ type: String })], p7.prototype, "fieldName", void 0), e([y({ type: String })], p7.prototype, "modelName", void 0), e([y({ type: String })], p7.prototype, "label", void 0), e([y({ type: Number })], p7.prototype, "min", void 0), e([y({ type: Number })], p7.prototype, "max", void 0), e([y({ json: { read: (e3) => Array.isArray(e3) && (e3.every((e4) => "string" == typeof e4) || e3.every((e4) => "number" == typeof e4)) ? e3.slice() : null } })], p7.prototype, "mostFrequentValues", void 0), e([y({ type: [Number] })], p7.prototype, "subLayerIds", void 0), p7 = e([a2("esri.layers.support.BuildingFieldStatistics")], p7);
var n5 = class extends _.LoadableMixin(m(l)) {
  constructor() {
    super(...arguments), this.url = null;
  }
  get fields() {
    return this.loaded || "loading" === this.loadStatus ? this._get("fields") : (s.getLogger(this).error("building summary statistics are not loaded"), null);
  }
  load(e3) {
    const r = null != e3 ? e3.signal : null;
    return this.addResolvingPromise(this._fetchService(r)), Promise.resolve(this);
  }
  async _fetchService(e3) {
    const t7 = (await j(this.url, { query: { f: "json" }, responseType: "json", signal: e3 })).data;
    this.read(t7, { origin: "service" });
  }
};
e([y({ constructOnly: true, type: String })], n5.prototype, "url", void 0), e([y({ readOnly: true, type: [p7], json: { read: { source: "summary" } } })], n5.prototype, "fields", null), n5 = e([a2("esri.layers.support.BuildingSummaryStatistics")], n5);
var u4 = n5;

// node_modules/@arcgis/core/layers/BuildingSceneLayer.js
var F = V.ofType(f3);
var B = a(d2.sublayersProperty);
var _a;
var P = (_a = B.json) == null ? void 0 : _a.origins;
P && (P["web-scene"] = { type: [C], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } }, P["portal-item"] = { type: [C], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } });
var K2 = class extends N(l2(c2(j3(t2(O(i(b))))))) {
  constructor(e3) {
    super(e3), this.operationalLayerType = "BuildingSceneLayer", this.allSublayers = new n2({ getCollections: () => [this.sublayers], getChildrenFunction: (e4) => "building-group" === e4.type ? e4.sublayers : null }), this.sublayers = null, this._sublayerOverrides = null, this.filters = new F(), this.activeFilterId = null, this.summaryStatistics = null, this.outFields = null, this.legendEnabled = true, this.type = "building-scene";
  }
  normalizeCtorArgs(e3) {
    return "string" == typeof e3 ? { url: e3 } : e3 ?? {};
  }
  destroy() {
    this.allSublayers.destroy();
  }
  readSublayers(e3, r, t7) {
    const s3 = d2.readSublayers(e3, r, t7);
    return d2.forEachSublayer(s3, (e4) => e4.layer = this), this._sublayerOverrides && (this.applySublayerOverrides(s3, this._sublayerOverrides), this._sublayerOverrides = null), s3;
  }
  applySublayerOverrides(e3, { overrides: r, context: t7 }) {
    d2.forEachSublayer(e3, (e4) => e4.read(r.get(e4.id), t7));
  }
  readSublayerOverrides(e3, r) {
    var _a2;
    const t7 = /* @__PURE__ */ new Map();
    for (const i5 of e3)
      null != i5 && "object" == typeof i5 && "number" == typeof i5.id ? t7.set(i5.id, i5) : (_a2 = r.messages) == null ? void 0 : _a2.push(new s2("building-scene-layer:invalid-sublayer-override", "Invalid value for sublayer override. Not an object or no id specified.", { value: i5 }));
    return { overrides: t7, context: r };
  }
  writeSublayerOverrides(e3, r, t7) {
    const s3 = [];
    d2.forEachSublayer(this.sublayers, (e4) => {
      const r2 = e4.write({}, t7);
      Object.keys(r2).length > 1 && s3.push(r2);
    }), s3.length > 0 && (r.sublayers = s3);
  }
  writeUnappliedOverrides(e3, r) {
    r.sublayers = [], e3.overrides.forEach((e4) => {
      r.sublayers.push(a(e4));
    });
  }
  write(e3, r) {
    return e3 = super.write(e3, r), !r || "web-scene" !== r.origin && "portal-item" !== r.origin || (this.sublayers ? this.writeSublayerOverrides(this.sublayers, e3, r) : this._sublayerOverrides && this.writeUnappliedOverrides(this._sublayerOverrides, e3)), e3;
  }
  read(e3, r) {
    if (super.read(e3, r), r && ("web-scene" === r.origin || "portal-item" === r.origin) && null != e3 && Array.isArray(e3.sublayers)) {
      const t7 = this.readSublayerOverrides(e3.sublayers, r);
      this.sublayers ? this.applySublayerOverrides(this.sublayers, t7) : this._sublayerOverrides = t7;
    }
  }
  readSummaryStatistics(e3, r) {
    var _a2;
    if ("string" == typeof r.statisticsHRef) {
      const e4 = V2((_a2 = this.parsedUrl) == null ? void 0 : _a2.path, r.statisticsHRef);
      return new u4({ url: e4 });
    }
    return null;
  }
  set elevationInfo(e3) {
    this._set("elevationInfo", e3), this._validateElevationInfo();
  }
  load(e3) {
    const r = null != e3 ? e3.signal : null, t7 = this.loadFromPortal({ supportedTypes: ["Scene Service"] }, e3).catch(f).then(() => this._fetchService(r)).then(() => this._fetchAssociatedFeatureService(r));
    return this.addResolvingPromise(t7), Promise.resolve(this);
  }
  loadAll() {
    return t(this, (e3) => {
      d2.forEachSublayer(this.sublayers, (r) => {
        "building-group" !== r.type && e3(r);
      }), this.summaryStatistics && e3(this.summaryStatistics);
    });
  }
  async saveAs(e3, r) {
    return this._debouncedSaveOperations(K.SAVE_AS, { ...r, getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" }, e3);
  }
  async save() {
    const e3 = { getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" };
    return this._debouncedSaveOperations(K.SAVE, e3);
  }
  validateLayer(e3) {
    if (!e3.layerType || "Building" !== e3.layerType)
      throw new s2("buildingscenelayer:layer-type-not-supported", "BuildingSceneLayer does not support this layer type", { layerType: e3.layerType });
  }
  _getTypeKeywords() {
    return ["Building"];
  }
  _validateElevationInfo() {
    const e3 = this.elevationInfo;
    e3 && ("absolute-height" !== e3.mode && s.getLogger(this).warn(".elevationInfo=", "Building scene layers only support absolute-height elevation mode"), e3.featureExpressionInfo && "0" !== e3.featureExpressionInfo.expression && s.getLogger(this).warn(".elevationInfo=", "Building scene layers do not support featureExpressionInfo"));
  }
  async _fetchAssociatedFeatureService(e3) {
    const r = new i2(this.parsedUrl, this.portalItem, this.apiKey, e3);
    try {
      this.associatedFeatureServiceItem = await r.fetchPortalItem();
    } catch (t7) {
      s.getLogger(this).warn("Associated feature service item could not be loaded", t7);
    }
  }
};
e([y({ type: ["BuildingSceneLayer"] })], K2.prototype, "operationalLayerType", void 0), e([y({ readOnly: true })], K2.prototype, "allSublayers", void 0), e([y(B)], K2.prototype, "sublayers", void 0), e([o("service", "sublayers")], K2.prototype, "readSublayers", null), e([y({ type: F, nonNullable: true, json: { write: true } })], K2.prototype, "filters", void 0), e([y({ type: String, json: { write: true } })], K2.prototype, "activeFilterId", void 0), e([y({ readOnly: true, type: u4 })], K2.prototype, "summaryStatistics", void 0), e([o("summaryStatistics", ["statisticsHRef"])], K2.prototype, "readSummaryStatistics", null), e([y({ type: [String], json: { read: false } })], K2.prototype, "outFields", void 0), e([y(j2)], K2.prototype, "fullExtent", void 0), e([y(c)], K2.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide", "hide-children"] })], K2.prototype, "listMode", void 0), e([y(y2(f2))], K2.prototype, "spatialReference", void 0), e([y(d)], K2.prototype, "elevationInfo", null), e([y({ json: { read: false }, readOnly: true })], K2.prototype, "type", void 0), e([y()], K2.prototype, "associatedFeatureServiceItem", void 0), K2 = e([a2("esri.layers.BuildingSceneLayer")], K2);
var R = K2;
export {
  R as default
};
//# sourceMappingURL=BuildingSceneLayer-QALCLR6S.js.map

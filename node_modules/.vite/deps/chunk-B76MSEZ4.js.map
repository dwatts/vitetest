{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/WaterDistortion.glsl.js", "../../@arcgis/core/chunks/WaterSurface.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{s as e}from\"../../../../../../chunks/vec2.js\";import{a as t}from\"../../../../../../chunks/vec2f64.js\";import{s as r}from\"../../../../../../chunks/vec4.js\";import{c as a}from\"../../../../../../chunks/vec4f64.js\";import{FoamIntensity as o}from\"./FoamRendering.glsl.js\";import{ReadShadowMapPassParameters as m}from\"./ReadShadowMap.glsl.js\";import{Float2PassUniform as s}from\"../../shaderModules/Float2PassUniform.js\";import{Float4PassUniform as v}from\"../../shaderModules/Float4PassUniform.js\";import{glsl as l}from\"../../shaderModules/interfaces.js\";import{Texture2DPassUniform as u}from\"../../shaderModules/Texture2DPassUniform.js\";function i(t){t.fragment.uniforms.add(new u(\"texWaveNormal\",(e=>e.waveNormal)),new u(\"texWavePerturbation\",(e=>e.wavePertubation)),new v(\"waveParams\",(e=>r(f,e.waveStrength,e.waveTextureRepeat,e.flowStrength,e.flowOffset))),new s(\"waveDirection\",(t=>e(c,t.waveDirection[0]*t.waveVelocity,t.waveDirection[1]*t.waveVelocity)))),t.include(o),t.fragment.code.add(l`const vec2  FLOW_JUMP = vec2(6.0/25.0, 5.0/24.0);\nvec2 textureDenormalized2D(sampler2D _tex, vec2 _uv) {\nreturn 2.0 * texture(_tex, _uv).rg - 1.0;\n}\nfloat sampleNoiseTexture(vec2 _uv) {\nreturn texture(texWavePerturbation, _uv).b;\n}\nvec3 textureDenormalized3D(sampler2D _tex, vec2 _uv) {\nreturn 2.0 * texture(_tex, _uv).rgb - 1.0;\n}\nfloat computeProgress(vec2 uv, float time) {\nreturn fract(time);\n}\nfloat computeWeight(vec2 uv, float time) {\nfloat progress = computeProgress(uv, time);\nreturn 1.0 - abs(1.0 - 2.0 * progress);\n}\nvec3 computeUVPerturbedWeigth(sampler2D texFlow, vec2 uv, float time, float phaseOffset) {\nfloat flowStrength = waveParams[2];\nfloat flowOffset = waveParams[3];\nvec2 flowVector = textureDenormalized2D(texFlow, uv) * flowStrength;\nfloat progress = computeProgress(uv, time + phaseOffset);\nfloat weight = computeWeight(uv, time + phaseOffset);\nvec2 result = uv;\nresult -= flowVector * (progress + flowOffset);\nresult += phaseOffset;\nresult += (time - progress) * FLOW_JUMP;\nreturn vec3(result, weight);\n}\nconst float TIME_NOISE_TEXTURE_REPEAT = 0.3737;\nconst float TIME_NOISE_STRENGTH = 7.77;\nvec3 getWaveLayer(sampler2D _texNormal, sampler2D _dudv, vec2 _uv, vec2 _waveDir, float time) {\nfloat waveStrength = waveParams[0];\nvec2 waveMovement = time * -_waveDir;\nfloat timeNoise = sampleNoiseTexture(_uv * TIME_NOISE_TEXTURE_REPEAT) * TIME_NOISE_STRENGTH;\nvec3 uv_A = computeUVPerturbedWeigth(_dudv, _uv + waveMovement, time + timeNoise, 0.0);\nvec3 uv_B = computeUVPerturbedWeigth(_dudv, _uv + waveMovement, time + timeNoise, 0.5);\nvec3 normal_A = textureDenormalized3D(_texNormal, uv_A.xy) * uv_A.z;\nvec3 normal_B = textureDenormalized3D(_texNormal, uv_B.xy) * uv_B.z;\nvec3 mixNormal = normalize(normal_A + normal_B);\nmixNormal.xy *= waveStrength;\nmixNormal.z = sqrt(1.0 - dot(mixNormal.xy, mixNormal.xy));\nreturn mixNormal;\n}\nvec4 getSurfaceNormalAndFoam(vec2 _uv, float _time) {\nfloat waveTextureRepeat = waveParams[1];\nvec3 normal = getWaveLayer(texWaveNormal, texWavePerturbation, _uv * waveTextureRepeat, waveDirection, _time);\nfloat foam  = normals2FoamIntensity(normal, waveParams[0]);\nreturn vec4(normal, foam);\n}`)}class n extends m{}const f=a(),c=t();export{i as WaterDistortion,n as WaterDistortionPassParameters};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{ForwardLinearDepth as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{ShaderOutput as r}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as o}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as i}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{ObjectAndLayerIdColor as a}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/ObjectAndLayerIdColor.glsl.js\";import{OutputHighlight as s}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{EvaluateAmbientLighting as n}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientLighting.glsl.js\";import{MainLighting as t,addMainLightDirection as d,addMainLightIntensity as l}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{multipassTerrainTest as v}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{NormalUtils as g}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/NormalUtils.glsl.js\";import{PBRMode as c}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapDraw as m}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{Water as p}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Water.glsl.js\";import{WaterDistortion as u}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/WaterDistortion.glsl.js\";import{symbolAlphaCutoff as w}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{ColorConversion as h}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{addProjViewLocalOrigin as f,addCameraPosition as b}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float4PassUniform as y}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as j}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as C}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as L}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{TransparencyPassType as P}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";import{VertexAttribute as M}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function S(S){const x=new L,{vertex:_,fragment:F}=x;f(_,S),x.include(i,S),x.attributes.add(M.POSITION,\"vec3\"),x.attributes.add(M.UV0,\"vec2\");const T=new y(\"waterColor\",(e=>e.color));if(S.output===r.Color&&S.isDraped)return x.varyings.add(\"vpos\",\"vec3\"),_.uniforms.add(T),_.code.add(C`\n        void main(void) {\n          if (waterColor.a < ${C.float(w)}) {\n            // Discard this vertex\n            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n            return;\n          }\n\n          vpos = position;\n          gl_Position = transformPosition(proj, view, vpos);\n        }\n    `),F.uniforms.add(T),F.code.add(C`void main() {\nfragColor = waterColor;\n}`),x;switch(S.output!==r.Color&&S.output!==r.Alpha||(x.include(g,S),x.include(e,S),x.varyings.add(\"vuv\",\"vec2\"),x.varyings.add(\"vpos\",\"vec3\"),x.varyings.add(\"vnormal\",\"vec3\"),x.varyings.add(\"vtbnMatrix\",\"mat3\"),S.hasMultipassTerrain&&x.varyings.add(\"depth\",\"float\"),_.uniforms.add(T),_.code.add(C`\n      void main(void) {\n        if (waterColor.a < ${C.float(w)}) {\n          // Discard this vertex\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n          return;\n        }\n\n        vuv = uv0;\n        vpos = position;\n\n        vnormal = getLocalUp(vpos, localOrigin);\n        vtbnMatrix = getTBNMatrix(vnormal);\n\n        ${S.hasMultipassTerrain?\"depth = (view * vec4(vpos, 1.0)).z;\":\"\"}\n\n        gl_Position = transformPosition(proj, view, vpos);\n        ${S.output===r.Color?\"forwardLinearDepth();\":\"\"}\n      }\n    `)),x.include(v,S),S.output){case r.Alpha:x.include(o,S),F.uniforms.add(T),F.code.add(C`\n        void main() {\n          discardBySlice(vpos);\n          ${S.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n\n          fragColor = vec4(waterColor.a);\n        }\n      `);break;case r.Color:x.include(t),x.include(n,{pbrMode:c.Disabled,lightingSphericalHarmonicsOrder:2}),x.include(u),x.include(o,S),x.include(m,S),x.include(p,S),F.uniforms.add(T,new j(\"timeElapsed\",(e=>e.timeElapsed)),_.uniforms.get(\"view\"),_.uniforms.get(\"localOrigin\")),b(F,S),F.include(h),d(F),l(F),F.code.add(C`\n      void main() {\n        discardBySlice(vpos);\n        ${S.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n        vec3 localUp = vnormal;\n        // the created normal is in tangent space\n        vec4 tangentNormalFoam = getSurfaceNormalAndFoam(vuv, timeElapsed);\n\n        // we rotate the normal according to the tangent-bitangent-normal-Matrix\n        vec3 n = normalize(vtbnMatrix * tangentNormalFoam.xyz);\n        vec3 v = -normalize(vpos - cameraPosition);\n        float shadow = ${S.receiveShadows?C`1.0 - readShadowMap(vpos, linearDepth)`:\"1.0\"};\n        vec4 vPosView = view * vec4(vpos, 1.0);\n        vec4 final = vec4(getSeaColor(n, v, mainLightDirection, waterColor.rgb, mainLightIntensity, localUp, shadow, tangentNormalFoam.w, vPosView.xyz, vpos + localOrigin), waterColor.w);\n\n        // gamma correction\n        fragColor = delinearizeGamma(final);\n        fragColor = highlightSlice(fragColor, vpos);\n        ${S.transparencyPassType===P.Color?\"fragColor = premultiplyAlpha(fragColor);\":\"\"}\n      }\n    `);break;case r.Normal:x.include(g,S),x.include(u,S),x.include(o,S),x.varyings.add(\"vpos\",\"vec3\"),x.varyings.add(\"vuv\",\"vec2\"),_.uniforms.add(T),_.code.add(C`\n        void main(void) {\n          if (waterColor.a < ${C.float(w)}) {\n            // Discard this vertex\n            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n            return;\n          }\n\n          vuv = uv0;\n          vpos = position;\n\n          gl_Position = transformPosition(proj, view, vpos);\n        }\n    `),F.uniforms.add(new j(\"timeElapsed\",(e=>e.timeElapsed))),F.code.add(C`void main() {\ndiscardBySlice(vpos);\nvec4 tangentNormalFoam = getSurfaceNormalAndFoam(vuv, timeElapsed);\ntangentNormalFoam.xyz = normalize(tangentNormalFoam.xyz);\nfragColor = vec4((tangentNormalFoam.xyz + vec3(1.0)) * 0.5, tangentNormalFoam.w);\n}`);break;case r.Highlight:x.include(s,S),x.varyings.add(\"vpos\",\"vec3\"),_.uniforms.add(T),_.code.add(C`\n      void main(void) {\n        if (waterColor.a < ${C.float(w)}) {\n          // Discard this vertex\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n          return;\n        }\n\n        vpos = position;\n        gl_Position = transformPosition(proj, view, vpos);\n      }\n    `),x.include(o,S),F.code.add(C`void main() {\ndiscardBySlice(vpos);\noutputHighlight();\n}`);break;case r.ObjectAndLayerIdColor:x.include(a,S),x.varyings.add(\"vpos\",\"vec3\"),_.uniforms.add(T),_.code.add(C`\n      void main(void) {\n        if (waterColor.a < ${C.float(w)}) {\n          // Discard this vertex\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n          return;\n        }\n\n        vpos = position;\n        gl_Position = transformPosition(proj, view, vpos);\n        forwardObjectAndLayerIdColor();\n      }\n    `),x.include(o,S),F.code.add(C`void main() {\ndiscardBySlice(vpos);\noutputObjectAndLayerIdColor();\n}`)}return x}const x=Object.freeze(Object.defineProperty({__proto__:null,build:S},Symbol.toStringTag,{value:\"Module\"}));export{x as W,S as b};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAI8nB,SAASA,GAAEC,IAAE;AAAC,EAAAA,GAAE,SAAS,SAAS,IAAI,IAAI,EAAE,iBAAiB,CAAAC,OAAGA,GAAE,UAAW,GAAE,IAAI,EAAE,uBAAuB,CAAAA,OAAGA,GAAE,eAAgB,GAAE,IAAIA,GAAE,cAAc,CAAAA,OAAG,EAAEC,IAAED,GAAE,cAAaA,GAAE,mBAAkBA,GAAE,cAAaA,GAAE,UAAU,CAAE,GAAE,IAAI,EAAE,iBAAiB,CAAAD,OAAGG,GAAEC,IAAEJ,GAAE,cAAc,CAAC,IAAEA,GAAE,cAAaA,GAAE,cAAc,CAAC,IAAEA,GAAE,YAAY,CAAE,CAAC,GAAEA,GAAE,QAAQK,EAAC,GAAEL,GAAE,SAAS,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiDn+B;AAAC;AAAoB,IAAMM,KAAE,EAAE;AAAV,IAAYC,KAAEC,GAAE;;;ACjDo1E,SAAS,EAAEC,IAAE;AAAC,QAAMC,KAAE,IAAI,KAAE,EAAC,QAAO,GAAE,UAAS,EAAC,IAAEA;AAAE,IAAE,GAAED,EAAC,GAAEC,GAAE,QAAQC,IAAEF,EAAC,GAAEC,GAAE,WAAW,IAAI,EAAE,UAAS,MAAM,GAAEA,GAAE,WAAW,IAAI,EAAE,KAAI,MAAM;AAAE,QAAM,IAAE,IAAIE,GAAE,cAAc,CAAAA,OAAGA,GAAE,KAAM;AAAE,MAAGH,GAAE,WAAS,EAAE,SAAOA,GAAE;AAAS,WAAOC,GAAE,SAAS,IAAI,QAAO,MAAM,GAAE,EAAE,SAAS,IAAI,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA,+BAEtnF,EAAE,MAAM,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASpC,GAAE,EAAE,SAAS,IAAI,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA,EAElC,GAAEA;AAAE,UAAOD,GAAE,WAAS,EAAE,SAAOA,GAAE,WAAS,EAAE,UAAQC,GAAE,QAAQG,IAAEJ,EAAC,GAAEC,GAAE,QAAQ,GAAED,EAAC,GAAEC,GAAE,SAAS,IAAI,OAAM,MAAM,GAAEA,GAAE,SAAS,IAAI,QAAO,MAAM,GAAEA,GAAE,SAAS,IAAI,WAAU,MAAM,GAAEA,GAAE,SAAS,IAAI,cAAa,MAAM,GAAED,GAAE,uBAAqBC,GAAE,SAAS,IAAI,SAAQ,OAAO,GAAE,EAAE,SAAS,IAAI,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA,6BAE3Q,EAAE,MAAM,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAY7BD,GAAE,sBAAoB,wCAAsC,EAAE;AAAA;AAAA;AAAA,UAG9DA,GAAE,WAAS,EAAE,QAAM,0BAAwB,EAAE;AAAA;AAAA,KAElD,IAAGC,GAAE,QAAQI,IAAEL,EAAC,GAAEA,GAAE,QAAO;AAAA,IAAC,KAAK,EAAE;AAAM,MAAAC,GAAE,QAAQ,GAAED,EAAC,GAAE,EAAE,SAAS,IAAI,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA,YAG9EA,GAAE,sBAAoB,2CAAyC,EAAE;AAAA;AAAA;AAAA;AAAA,OAItE;AAAE;AAAA,IAAM,KAAK,EAAE;AAAM,MAAAC,GAAE,QAAQC,EAAC,GAAED,GAAE,QAAQ,GAAE,EAAC,SAAQ,EAAE,UAAS,iCAAgC,EAAC,CAAC,GAAEA,GAAE,QAAQK,EAAC,GAAEL,GAAE,QAAQ,GAAED,EAAC,GAAEC,GAAE,QAAQ,GAAED,EAAC,GAAEC,GAAE,QAAQM,IAAEP,EAAC,GAAE,EAAE,SAAS,IAAI,GAAE,IAAIE,GAAE,eAAe,CAAAC,OAAGA,GAAE,WAAY,GAAE,EAAE,SAAS,IAAI,MAAM,GAAE,EAAE,SAAS,IAAI,aAAa,CAAC,GAAE,EAAE,GAAEH,EAAC,GAAE,EAAE,QAAQG,EAAC,GAAEK,GAAE,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA,UAGrTR,GAAE,sBAAoB,2CAAyC,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAQlDA,GAAE,iBAAe,4CAA0C,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAO/EA,GAAE,yBAAuBE,GAAE,QAAM,6CAA2C,EAAE;AAAA;AAAA,KAEnF;AAAE;AAAA,IAAM,KAAK,EAAE;AAAO,MAAAD,GAAE,QAAQG,IAAEJ,EAAC,GAAEC,GAAE,QAAQK,IAAEN,EAAC,GAAEC,GAAE,QAAQ,GAAED,EAAC,GAAEC,GAAE,SAAS,IAAI,QAAO,MAAM,GAAEA,GAAE,SAAS,IAAI,OAAM,MAAM,GAAE,EAAE,SAAS,IAAI,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA,+BAEjI,EAAE,MAAM,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWpC,GAAE,EAAE,SAAS,IAAI,IAAIC,GAAE,eAAe,CAAAC,OAAGA,GAAE,WAAY,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAKxE;AAAE;AAAA,IAAM,KAAK,EAAE;AAAU,MAAAF,GAAE,QAAQ,GAAED,EAAC,GAAEC,GAAE,SAAS,IAAI,QAAO,MAAM,GAAE,EAAE,SAAS,IAAI,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA,6BAExE,EAAE,MAAM,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASlC,GAAEA,GAAE,QAAQ,GAAED,EAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA,EAG/B;AAAE;AAAA,IAAM,KAAK,EAAE;AAAsB,MAAAC,GAAE,QAAQQ,IAAET,EAAC,GAAEC,GAAE,SAAS,IAAI,QAAO,MAAM,GAAE,EAAE,SAAS,IAAI,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA,6BAEpF,EAAE,MAAM,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUlC,GAAEA,GAAE,QAAQ,GAAED,EAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA,EAG/B;AAAA,EAAC;AAAC,SAAOC;AAAC;AAAC,IAAM,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,OAAM,EAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["i", "t", "e", "f", "r", "c", "o", "f", "c", "n", "S", "x", "o", "e", "r", "n", "i", "c", "t", "d"]
}

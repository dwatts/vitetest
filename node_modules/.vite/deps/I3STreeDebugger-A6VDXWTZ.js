import {
  y as y2
} from "./chunk-XBDZ5RTM.js";
import {
  e as e2
} from "./chunk-CW7LIPBH.js";
import "./chunk-XWGNMTES.js";
import "./chunk-6NNEHJYI.js";
import {
  yn
} from "./chunk-BNBT4QTW.js";
import "./chunk-3FQOSG5O.js";
import {
  A
} from "./chunk-7EG7BYWF.js";
import "./chunk-JNDFAMXY.js";
import "./chunk-NTEKJWGF.js";
import "./chunk-TFIKV5RU.js";
import "./chunk-KW6QQDGN.js";
import "./chunk-AQ7R6V4L.js";
import "./chunk-DOQ3SAAR.js";
import "./chunk-4BXK4H4L.js";
import "./chunk-SLVNG7FV.js";
import "./chunk-DEZCXTA3.js";
import "./chunk-RRJGZKNX.js";
import "./chunk-PL5Q4C6Y.js";
import "./chunk-KFSY6ZZH.js";
import "./chunk-7EQSYZHW.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-GGOVZ2GK.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-WLWP35G2.js";
import "./chunk-JPW73GY2.js";
import "./chunk-HXPVVSLV.js";
import {
  j
} from "./chunk-4OR73Y2R.js";
import "./chunk-EKJ2DJIR.js";
import "./chunk-TEHNQYQD.js";
import {
  O,
  r
} from "./chunk-TPJLFGOT.js";
import {
  n
} from "./chunk-CQX57DED.js";
import "./chunk-3CQBBMMD.js";
import "./chunk-Z2ZUNW5S.js";
import "./chunk-7L7Z2HXM.js";
import "./chunk-75NKPXTR.js";
import "./chunk-EUVARFSM.js";
import "./chunk-3VUFACNT.js";
import "./chunk-ZEEBL7ZN.js";
import "./chunk-RTDN6KAT.js";
import "./chunk-GJ7PJ7XG.js";
import "./chunk-SJ2GJCS2.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-7KH4CLS5.js";
import "./chunk-WCHO7VLT.js";
import "./chunk-JL3TJGVW.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-43LWRDQS.js";
import "./chunk-R6YKST3K.js";
import "./chunk-ZJEWQGHG.js";
import "./chunk-YGB42LDG.js";
import "./chunk-F3KGLZDZ.js";
import "./chunk-MP6GH2AC.js";
import {
  y3 as y
} from "./chunk-V76KGJFU.js";
import {
  a2 as a
} from "./chunk-HB2SQRT2.js";
import "./chunk-U3J7253Q.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-ZWUBORGT.js";
import "./chunk-3R7FAT25.js";
import "./chunk-7I33FAWS.js";
import "./chunk-DWOEYHKS.js";
import "./chunk-HMVAPW5X.js";
import "./chunk-IYZKKFJM.js";
import {
  R
} from "./chunk-JZJWZ6DN.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/views/3d/layers/support/I3STreeDebugger.js
var m = class extends y2 {
  constructor(e3) {
    super(e3);
  }
  getTiles() {
    const e3 = this.lv.getVisibleNodes(), s = this.view.renderSpatialReference, o = this.nodeSR;
    return e3.map((e4) => h(e4, s, o)).filter(R).sort((e4, r2) => e4.lij[0] === r2.lij[0] ? e4.label > r2.label ? -1 : 1 : e4.lij[0] - r2.lij[0]);
  }
};
function h(e3, r2, s) {
  const o = e3.serviceObb;
  if (null == o || null == r2)
    return null;
  A(f, o.quaternion), r(j2, o.center), yn(j2, s, 0, j2, r2, 0, 1), f[12] = j2[0], f[13] = j2[1], f[14] = j2[2];
  const i = [[], [], []];
  r(j2, o.halfSize), O(j2, j2, f), yn(j2, r2, 0, j2, s, 0, 1), i[0].push([j2[0], j2[1]]), r(j2, o.halfSize), j2[0] = -j2[0], O(j2, j2, f), yn(j2, r2, 0, j2, s, 0, 1), i[0].push([j2[0], j2[1]]), r(j2, o.halfSize), j2[0] = -j2[0], j2[1] = -j2[1], O(j2, j2, f), yn(j2, r2, 0, j2, s, 0, 1), i[0].push([j2[0], j2[1]]), r(j2, o.halfSize), j2[1] = -j2[1], O(j2, j2, f), yn(j2, r2, 0, j2, s, 0, 1), i[0].push([j2[0], j2[1]]), i[1].push(i[0][0]), i[1].push(i[0][1]), r(j2, o.halfSize), j2[0] = -j2[0], j2[2] = -j2[2], O(j2, j2, f), yn(j2, r2, 0, j2, s, 0, 1), i[1].push([j2[0], j2[1]]), r(j2, o.halfSize), j2[2] = -j2[2], O(j2, j2, f), yn(j2, r2, 0, j2, s, 0, 1), i[1].push([j2[0], j2[1]]), i[2].push(i[0][0]), i[2].push(i[0][3]), r(j2, o.halfSize), j2[1] = -j2[1], j2[2] = -j2[2], O(j2, j2, f), yn(j2, r2, 0, j2, s, 0, 1), i[2].push([j2[0], j2[1]]), i[2].push(i[1][3]);
  const c = new j({ rings: i, spatialReference: s });
  return { lij: [e3.level, e3.childCount, 0], label: e3.id, geometry: c };
}
e([y({ constructOnly: true })], m.prototype, "lv", void 0), e([y({ constructOnly: true })], m.prototype, "nodeSR", void 0), m = e([a("esri.views.3d.layers.support.I3STreeDebugger")], m);
var f = e2();
var j2 = n();
export {
  m as I3STreeDebugger
};
//# sourceMappingURL=I3STreeDebugger-A6VDXWTZ.js.map

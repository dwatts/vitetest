import {
  d,
  m,
  u
} from "./chunk-HTGM7KAM.js";
import {
  t
} from "./chunk-ZAPLLPYK.js";
import {
  e
} from "./chunk-YVVROPAO.js";
import {
  o as o2
} from "./chunk-UUW6REOV.js";
import {
  s
} from "./chunk-Z3NHJA5D.js";
import {
  i2 as i
} from "./chunk-BO2REVMA.js";
import {
  o
} from "./chunk-V66LHQVK.js";

// node_modules/@arcgis/core/chunks/BlendLayers.glsl.js
var l;
function g(g2) {
  const u3 = new i();
  if (u3.include(d), g2.background === l.Only) {
    const o3 = g2.output === u.ColorComposite;
    return o3 ? u3.fragment.uniforms.add(new e("backgroundColor", (e2) => e2.backgroundColor)) : u3.fragment.include(t), u3.fragment.code.add(o`
    void main() {
      fragColor = vec4(${o3 ? o`backgroundColor` : o`gridColor(uv)`}, 1.0);
    }
  `), u3;
  }
  return u3.include(m, g2), u3.fragment.uniforms.add(new s("tex", (e2) => e2.texture)), u3.fragment.uniforms.add(new o2("opacity", (e2) => e2.opacity)), u3.fragment.code.add(o`void main() {
vec4 bgColor = getBackground(uv);
fragColor = blendLayers(bgColor, texture(tex, uv), opacity);
}`), u3;
}
!function(e2) {
  e2[e2.BelowLayer = 0] = "BelowLayer", e2[e2.Only = 1] = "Only", e2[e2.COUNT = 2] = "COUNT";
}(l || (l = {}));
var u2 = Object.freeze(Object.defineProperty({ __proto__: null, get BackgroundMode() {
  return l;
}, build: g }, Symbol.toStringTag, { value: "Module" }));

export {
  l,
  g,
  u2 as u
};
//# sourceMappingURL=chunk-BC3GW7NA.js.map

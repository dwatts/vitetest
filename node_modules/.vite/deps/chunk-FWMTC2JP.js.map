{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/ShadowHighlight.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{a as e,w as o}from\"./mat4.js\";import{c as r}from\"./mat4f64.js\";import{s as i}from\"./vec2.js\";import{Z as t,a}from\"./vec2f64.js\";import{n as l,m as s}from\"./vec3.js\";import{c as h}from\"./vec3f64.js\";import{ScreenSpacePass as d}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";import{unoccludedHighlightFlag as n}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{ReadLinearDepth as c}from\"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js\";import{ReadShadowMapDraw as p}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{CameraSpace as g}from\"../views/3d/webgl-engine/core/shaderLibrary/util/CameraSpace.glsl.js\";import{RgbaFloatEncoding as f}from\"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{Float2PassUniform as m}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float3PassUniform as v}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as u}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as w}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as x}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4PassUniform as P}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";import{ShaderBuilder as D}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as b}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{SnapshotSlot as M}from\"../views/3d/webgl-engine/lib/ShadowMap.js\";const S={highlightedThreshold:.99999,selfShadowThreshold:.025};function F(r){const a=new D;a.include(p,r);const h=a.fragment;return h.include(f),h.include(c),a.include(g),a.include(d),h.uniforms.add(new b(\"defaultDepthTex\",((e,o)=>o.shadowMap.getSnapshot(M.Default))),new b(\"highlightDepthTex\",((e,o)=>o.shadowMap.getSnapshot(M.Highlight))),new b(\"depthMap\",((e,o)=>o.linearDepthTexture)),new b(\"highlightMap\",((e,o)=>o.highlightColorTexture)),new u(\"uColor\",(e=>e.shadowColor)),new m(\"nearFar\",((e,o)=>o.camera.nearFar)),new w(\"opacity\",(e=>e.shadowOpacity)),new w(\"occludedOpacity\",(e=>e.occludedShadowOpacity)),new w(\"terminationFactor\",(e=>e.opacityElevation*e.dayNightTerminator)),new v(\"lightingMainDirectionView\",((e,o)=>l(z,s(z,o.lighting.mainLight.direction,o.camera.viewInverseTransposeMatrix)))),new m(\"texelSize\",((e,o)=>null!=o.linearDepthTexture?i(T,1/o.linearDepthTexture.descriptor.width,1/o.linearDepthTexture.descriptor.height):t)),new P(\"inverseViewMatrix\",((r,i)=>e(y,o(y,i.camera.viewMatrix,i.camera.center))))),h.constants.add(\"unoccludedHighlightFlag\",\"vec4\",n).add(\"highlightedThreshold\",\"float\",S.highlightedThreshold).add(\"selfShadowThreshold\",\"float\",S.selfShadowThreshold),h.code.add(x`vec3 normalFromDepth(vec3 pixelPos, vec2 fragCoord, vec2 uv, vec2 texelSize, sampler2D depthMap, vec2 nearFar) {\nfloat leftPixelDepth = linearDepthFromTexture(depthMap, uv + vec2(-1.0, 0.0) * texelSize, nearFar);\nfloat rightPixelDepth = linearDepthFromTexture(depthMap, uv + vec2(1.0, 0.0) * texelSize, nearFar);\nfloat bottomPixelDepth = linearDepthFromTexture(depthMap, uv + vec2(0.0, -1.0) * texelSize, nearFar);\nfloat topPixelDepth = linearDepthFromTexture(depthMap, uv + vec2(0.0, 1.0) * texelSize, nearFar);\nbool pickLeft = abs(pixelPos.z - leftPixelDepth) < abs(pixelPos.z - rightPixelDepth);\nbool pickBottom = abs(pixelPos.z - bottomPixelDepth) < abs(pixelPos.z - topPixelDepth);\nvec3 fragCoordHorizontal = pickLeft\n? vec3(fragCoord + vec2(-1.0, 0.0), leftPixelDepth)\n: vec3(fragCoord + vec2(1.0, 0.0), rightPixelDepth);\nvec3 fragCoordVertical = pickBottom\n? vec3(fragCoord + vec2(0.0, -1.0), bottomPixelDepth)\n: vec3(fragCoord + vec2(0.0, 1.0), topPixelDepth);\nvec3 verticalPixelPos = reconstructPosition(fragCoordHorizontal.xy, fragCoordHorizontal.z);\nvec3 horizontalPixelPos = reconstructPosition(fragCoordVertical.xy, fragCoordVertical.z);\nvec3 normal = normalize(cross(verticalPixelPos - pixelPos, horizontalPixelPos - pixelPos));\nreturn pickLeft == pickBottom ? normal : -normal;\n}`),h.code.add(x`void main(void) {\nvec4 highlightInfo = texture(highlightMap, uv);\nfloat visiblyHighlighted = (1.0 - clamp(distance(unoccludedHighlightFlag, highlightInfo), 0.0, 1.0)) * highlightInfo.a;\nif (visiblyHighlighted > highlightedThreshold) {\ndiscard;\n}\nfloat depth = rgba2float(texture(depthMap, uv));\nif (depth == 0.0) {\ndiscard;\n}\nfloat currentPixelDepth = linearDepthFromFloat(depth, nearFar);\nif (-currentPixelDepth>nearFar.y || -currentPixelDepth<nearFar.x) {\ndiscard;\n}\nvec4 currentPixelPos = vec4(reconstructPosition(gl_FragCoord.xy, currentPixelDepth), 1.0);\nvec4 worldSpacePos = inverseViewMatrix * currentPixelPos;\nmat4 shadowMatrix;\nfloat linearDepth = -currentPixelDepth;\nint i = chooseCascade(linearDepth, shadowMatrix);\nif (i >= numCascades) {\ndiscard;\n}\nvec3 lvpos = lightSpacePosition(worldSpacePos.xyz, shadowMatrix);\nif (lvpos.z >= 1.0 || lvpos.x < 0.0 || lvpos.x > 1.0 || lvpos.y < 0.0 || lvpos.y > 1.0) {\ndiscard;\n}\nvec2 uvShadow = cascadeCoordinates(i, lvpos);\nfloat depthHighlight = readShadowMapDepth(uvShadow, highlightDepthTex);\nbool shadowHighlight = depthHighlight < lvpos.z;\nif (!shadowHighlight) {\ndiscard;\n}\nfloat depthDefault = readShadowMapDepth(uvShadow, defaultDepthTex);\nbool shadowDefault = depthDefault < lvpos.z;\nvec3 normal = normalFromDepth(currentPixelPos.xyz, gl_FragCoord.xy, uv, texelSize, depthMap, nearFar);\nbool shaded = dot(normal, lightingMainDirectionView) < selfShadowThreshold;\nfloat fragOpacity = (shadowDefault || shaded) ? occludedOpacity : opacity;\nfragColor = vec4(uColor.rgb, uColor.a * fragOpacity * terminationFactor);\n}`),a}const y=r(),z=h(),T=a(),j=Object.freeze(Object.defineProperty({__proto__:null,build:F},Symbol.toStringTag,{value:\"Module\"}));export{j as S,F as b};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIgrD,IAAM,IAAE,EAAC,sBAAqB,SAAO,qBAAoB,MAAI;AAAE,SAAS,EAAEA,IAAE;AAAC,QAAMC,KAAE,IAAIC;AAAE,EAAAD,GAAE,QAAQ,GAAED,EAAC;AAAE,QAAMG,KAAEF,GAAE;AAAS,SAAOE,GAAE,QAAQ,CAAC,GAAEA,GAAE,QAAQF,EAAC,GAAEA,GAAE,QAAQG,EAAC,GAAEH,GAAE,QAAQI,EAAC,GAAEF,GAAE,SAAS,IAAI,IAAI,EAAE,mBAAmB,CAACG,IAAED,OAAIA,GAAE,UAAU,YAAY,EAAE,OAAO,CAAE,GAAE,IAAI,EAAE,qBAAqB,CAACC,IAAED,OAAIA,GAAE,UAAU,YAAY,EAAE,SAAS,CAAE,GAAE,IAAI,EAAE,YAAY,CAACC,IAAED,OAAIA,GAAE,kBAAmB,GAAE,IAAI,EAAE,gBAAgB,CAACC,IAAED,OAAIA,GAAE,qBAAsB,GAAE,IAAIC,GAAE,UAAU,CAAAA,OAAGA,GAAE,WAAY,GAAE,IAAIA,GAAE,WAAW,CAACA,IAAED,OAAIA,GAAE,OAAO,OAAQ,GAAE,IAAIA,GAAE,WAAW,CAAAC,OAAGA,GAAE,aAAc,GAAE,IAAID,GAAE,mBAAmB,CAAAC,OAAGA,GAAE,qBAAsB,GAAE,IAAID,GAAE,qBAAqB,CAAAC,OAAGA,GAAE,mBAAiBA,GAAE,kBAAmB,GAAE,IAAIA,GAAE,6BAA6B,CAACA,IAAED,OAAI,EAAEE,IAAE,EAAEA,IAAEF,GAAE,SAAS,UAAU,WAAUA,GAAE,OAAO,0BAA0B,CAAC,CAAE,GAAE,IAAIC,GAAE,aAAa,CAACA,IAAED,OAAI,QAAMA,GAAE,qBAAmB,EAAE,GAAE,IAAEA,GAAE,mBAAmB,WAAW,OAAM,IAAEA,GAAE,mBAAmB,WAAW,MAAM,IAAE,CAAE,GAAE,IAAIC,GAAE,qBAAqB,CAACN,IAAEE,OAAI,EAAE,GAAE,EAAE,GAAEA,GAAE,OAAO,YAAWA,GAAE,OAAO,MAAM,CAAC,CAAE,CAAC,GAAEC,GAAE,UAAU,IAAI,2BAA0B,QAAO,CAAC,EAAE,IAAI,wBAAuB,SAAQ,EAAE,oBAAoB,EAAE,IAAI,uBAAsB,SAAQ,EAAE,mBAAmB,GAAEA,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiB12F,GAAEA,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsCb,GAAEF;AAAC;AAAC,IAAM,IAAE,EAAE;AAAV,IAAYM,KAAE,EAAE;AAAhB,IAAkB,IAAEH,GAAE;AAAtB,IAAwB,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,OAAM,EAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["r", "a", "i", "h", "n", "o", "e", "z"]
}

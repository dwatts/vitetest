{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/environment/CloudsCompositionParameters.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderModules/TextureCubePassUniform.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/CloudsParallaxShading.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{c as t}from\"../../../chunks/mat4f64.js\";import{c as s}from\"../../../chunks/vec3f64.js\";import{CloudsTextureChannels as a,CloudsRenderingStages as e}from\"./CloudsData.js\";class i{constructor(){this.readChannels=a.RG,this.renderingStage=e.FINISHED,this.startTime=0,this.startTimeHeightFade=0,this.cameraPositionLastFrame=s(),this.isCameraPositionFinal=!0,this.parallax=new o,this.parallaxNew=new o,this.crossFade={enabled:!1,factor:1,distanceThresholdFactor:.3},this.fadeInOut={stage:I.FINISHED,factor:1,distanceThresholdFactor:.6},this.fadeIn={stage:r.FINISHED,factor:1,distanceThresholdFactor:2},this.fadeInOutHeight={stage:n.FINISHED,factor:-1}}get isFading(){return this.fadeInOut.stage===I.FADE_OUT||this.fadeInOut.stage===I.FADE_IN||this.fadeIn.stage===r.FADE_IN||this.fadeInOutHeight.stage!==n.FINISHED||this.renderingStage===e.FADING_TEXTURE_CHANNELS}}var r,I,n;!function(t){t[t.FINISHED=0]=\"FINISHED\",t[t.CHANGE_ANCHOR=1]=\"CHANGE_ANCHOR\",t[t.FADE_IN=2]=\"FADE_IN\"}(r||(r={})),function(t){t[t.FINISHED=0]=\"FINISHED\",t[t.FADE_OUT=1]=\"FADE_OUT\",t[t.SWITCH=2]=\"SWITCH\",t[t.FADE_IN=3]=\"FADE_IN\"}(I||(I={})),function(t){t[t.FINISHED=0]=\"FINISHED\",t[t.HEIGHT_FADE=1]=\"HEIGHT_FADE\"}(n||(n={}));class o{constructor(){this.anchorPointClouds=s(),this.cloudsHeight=1e5,this.radiusCurvatureCorrectionFactor=0,this.transform=t()}}export{i as CloudsFadeParameters,n as FadeHeightStages,I as FadeInOutStages,r as FadeInStages};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{Uniform as e}from\"./Uniform.js\";import{BindType as r}from\"../shaderTechnique/BindType.js\";class s extends e{constructor(e,s){super(e,\"samplerCube\",r.Pass,((r,o,t)=>r.bindTexture(e,s(o,t))))}}export{s as TextureCubePassUniform};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{clamp as o}from\"../../../../../../core/mathUtils.js\";import{earth as a}from\"../../../../../../geometry/support/Ellipsoid.js\";import{FadeInOutStages as t}from\"../../../../environment/CloudsCompositionParameters.js\";import{CloudsTextureChannels as e,CloudsRenderingStages as r}from\"../../../../environment/CloudsData.js\";import{addMainLightDirection as d,addMainLightIntensity as i}from\"../shading/MainLighting.glsl.js\";import{BooleanPassUniform as n}from\"../../shaderModules/BooleanPassUniform.js\";import{Float3PassUniform as c}from\"../../shaderModules/Float3PassUniform.js\";import{FloatPassUniform as l}from\"../../shaderModules/FloatPassUniform.js\";import{glsl as s}from\"../../shaderModules/interfaces.js\";import{Matrix4PassUniform as u}from\"../../shaderModules/Matrix4PassUniform.js\";import{TextureCubePassUniform as C}from\"../../shaderModules/TextureCubePassUniform.js\";function m(m){const v=m.fragment;v.uniforms.add(new u(\"rotationMatrixClouds\",((o,a)=>a.cloudsFade.parallax.transform)),new u(\"rotationMatrixCloudsCrossFade\",((o,a)=>a.cloudsFade.parallaxNew.transform)),new c(\"anchorPosition\",((o,a)=>a.cloudsFade.parallax.anchorPointClouds)),new c(\"anchorPositionCrossFade\",((o,a)=>a.cloudsFade.parallaxNew.anchorPointClouds)),new l(\"cloudsHeight\",((o,a)=>a.cloudsFade.parallax.cloudsHeight)),new l(\"radiusCurvatureCorrectionFactor\",((o,a)=>a.cloudsFade.parallax.radiusCurvatureCorrectionFactor)),new l(\"totalFadeInOut\",((o,a)=>a.cloudsFade.fadeInOut.stage===t.FINISHED?a.cloudsFade.fadeInOutHeight.factor+1-a.cloudsFade.fadeIn.factor:a.cloudsFade.fadeInOutHeight.factor+1-a.cloudsFade.fadeInOut.factor)),new l(\"crossFadeAnchorFactor\",((a,t)=>o(t.cloudsFade.crossFade.factor,0,1))),new C(\"cubeMap\",((o,a)=>a.cloudsFade.data?.cubeMap?a.cloudsFade.data.cubeMap.colorTexture:null)),new n(\"crossFade\",((o,a)=>a.cloudsFade.crossFade.enabled)),new n(\"readChannelsRG\",((o,a)=>a.cloudsFade.readChannels===e.RG)),new n(\"fadeTextureChannels\",((o,a)=>a.cloudsFade.renderingStage===r.FADING_TEXTURE_CHANNELS))),v.constants.add(\"planetRadius\",\"float\",a.radius),v.code.add(s`vec3 intersectWithCloudLayer(vec3 dir, vec3 cameraPosition, vec3 spherePos)\n{\nfloat radiusClouds = planetRadius + cloudsHeight;\nfloat B = 2.0 * dot(cameraPosition, dir);\nfloat C = dot(cameraPosition, cameraPosition) - radiusClouds * radiusClouds;\nfloat det = B * B - 4.0 * C;\nfloat pointIntDist = max(0.0, 0.5 *(-B + sqrt(det)));\nvec3 intersectionPont = cameraPosition + dir * pointIntDist;\nintersectionPont =  intersectionPont - spherePos;\nreturn intersectionPont;\n}`),v.code.add(s`vec3 correctForPlanetCurvature(vec3 dir)\n{\ndir.z = dir.z*(1.-radiusCurvatureCorrectionFactor) + radiusCurvatureCorrectionFactor;\nreturn dir;\n}`),v.code.add(s`vec3 rotateDirectionToAnchorPoint(mat4 rotMat, vec3 inVec)\n{\nreturn (rotMat * vec4(inVec, 0.0)).xyz;\n}`),d(v),i(v),v.code.add(s`const float SUNSET_TRANSITION_FACTOR = 0.3;\nconst vec3 RIM_COLOR = vec3(0.28, 0.175, 0.035);\nconst float RIM_SCATTERING_FACTOR = 140.0;\nconst float BACKLIGHT_FACTOR = 0.2;\nconst float BACKLIGHT_SCATTERING_FACTOR = 10.0;\nconst float BACKLIGHT_TRANSITION_FACTOR = 0.3;\nvec3 calculateCloudColor(vec3 cameraPosition, vec3 worldSpaceRay, vec4 clouds)\n{\nfloat upDotLight = dot(normalize(cameraPosition), normalize(mainLightDirection));\nfloat dirDotLight = max(dot(normalize(-worldSpaceRay), normalize(mainLightDirection)), 0.0);\nfloat sunsetTransition = clamp(pow(max(upDotLight, 0.0), SUNSET_TRANSITION_FACTOR), 0.0, 1.0);\nvec3 ambientLight = calculateAmbientIrradiance(normalize(cameraPosition),  0.0);\nvec3 mainLight = evaluateMainLighting(normalize(cameraPosition),  0.0);\nvec3 combinedLight = clamp((mainLightIntensity + ambientLight )/PI, vec3(0.0), vec3(1.0));\nvec3 baseCloudColor = pow(combinedLight * pow(clouds.xyz, vec3(GAMMA)), vec3(INV_GAMMA));\nfloat scatteringMod = max(clouds.a < 0.5 ? clouds.a / 0.5 : - clouds.a / 0.5 + 2.0, 0.0);\nfloat rimLightIntensity = 0.5 + 0.5 *pow(max(upDotLight, 0.0), 0.35);\nvec3 directSunScattering = RIM_COLOR * rimLightIntensity * (pow(dirDotLight, RIM_SCATTERING_FACTOR)) * scatteringMod;\nfloat additionalLight = BACKLIGHT_FACTOR * pow(dirDotLight, BACKLIGHT_SCATTERING_FACTOR) * (1. - pow(sunsetTransition, BACKLIGHT_TRANSITION_FACTOR)) ;\nreturn vec3(baseCloudColor * (1. + additionalLight) + directSunScattering);\n}`),v.code.add(s`vec4 getCloudData(vec3 rayDir, bool readOtherChannel)\n{\nvec4 cloudData = texture(cubeMap, rayDir);\nfloat mu = dot(rayDir, vec3(0, 0, 1));\nbool readChannels = readChannelsRG ^^ readOtherChannel;\nif (readChannels) {\ncloudData = vec4(vec3(cloudData.r), cloudData.g);\n} else {\ncloudData = vec4(vec3(cloudData.b), cloudData.a);\n}\nif (length(cloudData) == 0.0) {\nreturn vec4(cloudData.rgb, 1.0);\n}\nreturn cloudData;\n}`),v.code.add(s`vec4 renderCloudsNoFade(vec3 worldRay, vec3 cameraPosition)\n{\nvec3 intersectionPoint = intersectWithCloudLayer(normalize(worldRay), cameraPosition, anchorPosition);\nvec3 worldRayRotated = rotateDirectionToAnchorPoint(rotationMatrixClouds, normalize(intersectionPoint));\nvec3 worldRayRotatedCorrected = correctForPlanetCurvature(worldRayRotated);\nvec4 cloudData = getCloudData(worldRayRotatedCorrected, false);\nfloat totalTransmittance = clamp(cloudData.a * (1.0 - totalFadeInOut) + totalFadeInOut, 0.0 , 1.0);\nif (length(cloudData.rgb) == 0.0) {\ntotalTransmittance = 1.0;\n}\nreturn vec4(calculateCloudColor(cameraPosition, normalize(-worldRay), cloudData), totalTransmittance);\n}`),v.code.add(s`vec4 renderCloudsCrossFade(vec3 worldRay, vec3 cameraPosition)\n{\nvec3 intersectionPoint = intersectWithCloudLayer(normalize(worldRay), cameraPosition, anchorPosition);\nvec3 worldRayRotated = rotateDirectionToAnchorPoint(rotationMatrixClouds, normalize(intersectionPoint));\nvec3 worldRayRotatedCorrected = correctForPlanetCurvature(worldRayRotated);\nvec4 cloudData = getCloudData(worldRayRotatedCorrected, false);\nvec4 cloudColor = vec4(calculateCloudColor(cameraPosition, normalize(-worldRay), cloudData), cloudData.a);\nintersectionPoint = intersectWithCloudLayer(normalize(worldRay), cameraPosition, anchorPositionCrossFade);\nworldRayRotated = rotateDirectionToAnchorPoint(rotationMatrixCloudsCrossFade, normalize(intersectionPoint));\nworldRayRotatedCorrected = correctForPlanetCurvature(worldRayRotated);\ncloudData = getCloudData(worldRayRotatedCorrected, fadeTextureChannels);\nvec4 cloudColorCrossFade = vec4(calculateCloudColor(cameraPosition, normalize(-worldRay), cloudData), cloudData.a);\ncloudColor = mix(cloudColor, cloudColorCrossFade, crossFadeAnchorFactor);\nfloat totalTransmittance = clamp(cloudColor.a * (1.0 - totalFadeInOut) + totalFadeInOut, 0.0 , 1.0);\nif (length(cloudColor.rgb) == 0.0) {\ntotalTransmittance = 1.0;\n}\nreturn vec4(cloudColor.rgb, totalTransmittance);\n}`),v.code.add(s`vec4 renderClouds(vec3 worldRay, vec3 cameraPosition)\n{\nreturn crossFade ? renderCloudsCrossFade(worldRay, cameraPosition) : renderCloudsNoFade(worldRay, cameraPosition);\n}`)}export{m as CloudsParallaxShading};\n"],
  "mappings": "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",
  "names": ["i", "o", "n", "t", "s", "i", "e", "r", "o", "t", "m", "e", "o", "a", "t", "s"]
}

{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/ImageMaterial.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{ShaderOutput as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as r}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as o}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{multipassTerrainTest as i}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{defaultMaskAlphaCutoff as a}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{ColorConversion as s}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{addProjViewLocalOrigin as t}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{FloatPassUniform as d}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as l}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as n}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as p}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as g}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";import{VertexAttribute as c}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function v(v){const f=new n,{vertex:u,fragment:m}=f;return t(u,v),f.include(o,v),f.attributes.add(c.POSITION,\"vec3\"),f.attributes.add(c.UV0,\"vec2\"),f.varyings.add(\"vpos\",\"vec3\"),v.hasMultipassTerrain&&f.varyings.add(\"depth\",\"float\"),u.code.add(l`\n    void main(void) {\n      vpos = position;\n      ${v.hasMultipassTerrain?\"depth = (view * vec4(vpos, 1.0)).z;\":\"\"}\n      vTexCoord = uv0;\n      gl_Position = transformPosition(proj, view, vpos);\n    }\n  `),f.include(r,v),f.include(i,v),m.uniforms.add(new p(\"tex\",(e=>e.texture)),new d(\"opacity\",(e=>e.opacity))),f.varyings.add(\"vTexCoord\",\"vec2\"),v.output===e.Alpha?m.code.add(l`\n    void main() {\n      discardBySlice(vpos);\n      ${v.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n\n      float alpha = texture(tex, vTexCoord).a * opacity;\n      if (alpha  < ${l.float(a)}) {\n        discard;\n      }\n\n      fragColor = vec4(alpha);\n    }\n    `):(m.include(s),m.code.add(l`\n    void main() {\n      discardBySlice(vpos);\n      ${v.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n      fragColor = texture(tex, vTexCoord) * opacity;\n\n      if (fragColor.a < ${l.float(a)}) {\n        discard;\n      }\n\n      fragColor = highlightSlice(fragColor, vpos);\n      ${v.transparencyPassType===g.Color?\"fragColor = premultiplyAlpha(fragColor);\":\"\"}\n    }\n    `)),f}const f=Object.freeze(Object.defineProperty({__proto__:null,build:v},Symbol.toStringTag,{value:\"Module\"}));export{f as I,v as b};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIwuC,SAAS,EAAEA,IAAE;AAAC,QAAMC,KAAE,IAAI,KAAE,EAAC,QAAO,GAAE,UAAS,EAAC,IAAEA;AAAE,SAAO,EAAE,GAAED,EAAC,GAAEC,GAAE,QAAQC,IAAEF,EAAC,GAAEC,GAAE,WAAW,IAAI,EAAE,UAAS,MAAM,GAAEA,GAAE,WAAW,IAAI,EAAE,KAAI,MAAM,GAAEA,GAAE,SAAS,IAAI,QAAO,MAAM,GAAED,GAAE,uBAAqBC,GAAE,SAAS,IAAI,SAAQ,OAAO,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA,QAGp9CD,GAAE,sBAAoB,wCAAsC,EAAE;AAAA;AAAA;AAAA;AAAA,GAInE,GAAEC,GAAE,QAAQ,GAAED,EAAC,GAAEC,GAAE,QAAQ,GAAED,EAAC,GAAE,EAAE,SAAS,IAAI,IAAI,EAAE,OAAO,CAAAG,OAAGA,GAAE,OAAQ,GAAE,IAAID,GAAE,WAAW,CAAAC,OAAGA,GAAE,OAAQ,CAAC,GAAEF,GAAE,SAAS,IAAI,aAAY,MAAM,GAAED,GAAE,WAAS,EAAE,QAAM,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA,QAGxKA,GAAE,sBAAoB,2CAAyC,EAAE;AAAA;AAAA;AAAA,qBAGpD,EAAE,MAAME,EAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAM1B,KAAG,EAAE,QAAQ,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA,QAGxBF,GAAE,sBAAoB,2CAAyC,EAAE;AAAA;AAAA;AAAA,0BAG/C,EAAE,MAAME,EAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,QAK5BF,GAAE,yBAAuBE,GAAE,QAAM,6CAA2C,EAAE;AAAA;AAAA,KAEjF,IAAGD;AAAC;AAAC,IAAM,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,OAAM,EAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["v", "f", "o", "e"]
}

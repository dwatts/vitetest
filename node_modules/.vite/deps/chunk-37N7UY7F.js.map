{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/collections/Component/Material/shader/VertexDiscardByOpacity.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/collections/Component/Material/ComponentTechniqueConfiguration.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ComputeMaterialColor.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ComputeShadingNormal.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ReadBaseColorTexture.glsl.js", "../../@arcgis/core/chunks/ComponentShader.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../../../core/shaderModules/interfaces.js\";var a;function r(r,c){const i=r.vertex;switch(i.code.add(e`#define VERTEX_DISCARD_CUTOFF (1.0 - 1.0 / 255.0)`),c.vertexDiscardMode){case a.None:i.code.add(e`#define vertexDiscardByOpacity(_opacity_) {}`);break;case a.Opaque:i.code.add(e`#define vertexDiscardByOpacity(_opacity_) { if (_opacity_ >  VERTEX_DISCARD_CUTOFF) {  gl_Position = vec4(1e38, 1e38, 1e38, 1.0); return; } }`);break;case a.Transparent:i.code.add(e`#define vertexDiscardByOpacity(_opacity_) { if (_opacity_ <= VERTEX_DISCARD_CUTOFF) {  gl_Position = vec4(1e38, 1e38, 1e38, 1.0); return; } }`)}}!function(e){e[e.None=0]=\"None\",e[e.Transparent=1]=\"Transparent\",e[e.Opaque=2]=\"Opaque\",e[e.COUNT=3]=\"COUNT\"}(a||(a={}));export{r as VertexDiscardByOpacity,a as VertexDiscardMode};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{_ as o}from\"../../../../../../chunks/tslib.es6.js\";import{ComponentDataType as e}from\"./shader/ComponentData.glsl.js\";import{VertexDiscardMode as t}from\"./shader/VertexDiscardByOpacity.glsl.js\";import{ShaderOutput as r}from\"../../../core/shaderLibrary/ShaderOutput.js\";import{NormalType as s}from\"../../../core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{TextureCoordinateAttributeType as i}from\"../../../core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{NormalsDoubleSidedMode as a}from\"../../../core/shaderLibrary/shading/Normals.glsl.js\";import{PBRMode as p}from\"../../../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{EllipsoidMode as d}from\"../../../core/shaderLibrary/util/EllipsoidMode.js\";import{BindType as n}from\"../../../core/shaderTechnique/BindType.js\";import{parameter as l,ShaderTechniqueConfiguration as c}from\"../../../core/shaderTechnique/ShaderTechniqueConfiguration.js\";import{CullFaceOptions as h,AlphaDiscardMode as u}from\"../../../lib/basicInterfaces.js\";import{TransparencyPassType as y}from\"../../../lib/TransparencyPassType.js\";var v;!function(o){o[o.None=0]=\"None\",o[o.NoOverlay=1]=\"NoOverlay\",o[o.ColorOverlay=2]=\"ColorOverlay\",o[o.ColorOverlayWithWater=3]=\"ColorOverlayWithWater\",o[o.COUNT=4]=\"COUNT\"}(v||(v={}));class m extends c{constructor(){super(...arguments),this.output=r.Color,this.textureCoordinateType=i.None,this.componentData=e.Uniform,this.cullFace=h.Back,this.vertexDiscardMode=t.None,this.doubleSidedMode=a.WindingOrder,this.alphaDiscardMode=u.Opaque,this.integratedMeshMode=v.None,this.transparencyPassType=y.NONE,this.ellipsoidMode=d.Earth,this.pbrMode=p.Disabled,this.normalType=s.Attribute,this.spherical=!1,this.doublePrecisionRequiresObfuscation=!1,this.hasVertexColors=!1,this.hasNormals=!1,this.hasSlicePlane=!1,this.hasBaseColorTexture=!1,this.receiveAmbientOcclusion=!0,this.receiveShadows=!0,this.blendingEnabled=!0,this.hasScreenSpaceReflections=!1,this.hasPolygonOffset=!1,this.hasMetallicRoughnessTexture=!1,this.hasEmissionTexture=!1,this.hasOcclusionTexture=!1,this.hasNormalTexture=!1,this.hasOccludees=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1,this.hasCloudsReflections=!0,this.snowCover=!1,this.objectAndLayerIdColor=!1}}o([l({count:r.COUNT})],m.prototype,\"output\",void 0),o([l({count:i.COUNT})],m.prototype,\"textureCoordinateType\",void 0),o([l({count:e.COUNT})],m.prototype,\"componentData\",void 0),o([l({count:h.COUNT})],m.prototype,\"cullFace\",void 0),o([l({count:t.COUNT})],m.prototype,\"vertexDiscardMode\",void 0),o([l({count:a.COUNT})],m.prototype,\"doubleSidedMode\",void 0),o([l({count:u.COUNT})],m.prototype,\"alphaDiscardMode\",void 0),o([l({count:v.COUNT})],m.prototype,\"integratedMeshMode\",void 0),o([l({count:y.COUNT})],m.prototype,\"transparencyPassType\",void 0),o([l({count:d.COUNT})],m.prototype,\"ellipsoidMode\",void 0),o([l({count:p.COUNT})],m.prototype,\"pbrMode\",void 0),o([l({count:s.COUNT})],m.prototype,\"normalType\",void 0),o([l()],m.prototype,\"spherical\",void 0),o([l()],m.prototype,\"doublePrecisionRequiresObfuscation\",void 0),o([l()],m.prototype,\"hasVertexColors\",void 0),o([l()],m.prototype,\"hasNormals\",void 0),o([l()],m.prototype,\"hasSlicePlane\",void 0),o([l()],m.prototype,\"hasBaseColorTexture\",void 0),o([l()],m.prototype,\"receiveAmbientOcclusion\",void 0),o([l()],m.prototype,\"receiveShadows\",void 0),o([l()],m.prototype,\"blendingEnabled\",void 0),o([l()],m.prototype,\"hasScreenSpaceReflections\",void 0),o([l()],m.prototype,\"hasPolygonOffset\",void 0),o([l()],m.prototype,\"hasMetallicRoughnessTexture\",void 0),o([l()],m.prototype,\"hasEmissionTexture\",void 0),o([l()],m.prototype,\"hasOcclusionTexture\",void 0),o([l()],m.prototype,\"hasNormalTexture\",void 0),o([l()],m.prototype,\"hasOccludees\",void 0),o([l()],m.prototype,\"hasMultipassTerrain\",void 0),o([l()],m.prototype,\"cullAboveGround\",void 0),o([l()],m.prototype,\"hasCloudsReflections\",void 0),o([l()],m.prototype,\"snowCover\",void 0),o([l()],m.prototype,\"objectAndLayerIdColor\",void 0),o([l({constValue:n.Draw})],m.prototype,\"pbrTextureBindType\",void 0),o([l({constValue:!0})],m.prototype,\"hasSliceHighlight\",void 0),o([l({constValue:!1})],m.prototype,\"hasSliceInVertexProgram\",void 0),o([l({constValue:!1})],m.prototype,\"useCustomDTRExponentForWater\",void 0),o([l({constValue:!1})],m.prototype,\"hasVertexTangents\",void 0),o([l({constValue:!0})],m.prototype,\"supportsTextureAtlas\",void 0),o([l({constValue:!1})],m.prototype,\"highStepCount\",void 0),o([l({constValue:!1})],m.prototype,\"instancedDoublePrecision\",void 0),o([l({constValue:!0})],m.prototype,\"useFillLights\",void 0),o([l({constValue:!1})],m.prototype,\"objectAndLayerIdColorInstanced\",void 0);export{m as ComponentTechniqueConfiguration,v as IntegratedMeshMode};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{VertexColor as o}from\"../attributes/VertexColor.glsl.js\";import{MixExternalColor as r}from\"../util/MixExternalColor.glsl.js\";import{Float4DrawUniform as e}from\"../../shaderModules/Float4DrawUniform.js\";import{FloatDrawUniform as a}from\"../../shaderModules/FloatDrawUniform.js\";import{glsl as t}from\"../../shaderModules/interfaces.js\";function l(l,s){l.include(o,s),l.fragment.include(r);const i=l.fragment;i.uniforms.add(new e(\"baseColor\",(o=>o.baseColor))),i.uniforms.add(new a(\"objectOpacity\",(o=>o.objectOpacity))),s.hasVertexColors?i.code.add(t`vec3 _baseColor() {\nreturn baseColor.rgb * vColor.rgb;\n}\nfloat _baseOpacity() {\nreturn baseColor.a * vColor.a;\n}`):i.code.add(t`vec3 _baseColor() {\nreturn baseColor.rgb;\n}\nfloat _baseOpacity() {\nreturn baseColor.a;\n}`),i.code.add(t`vec4 computeMaterialColor(vec4 textureColor, vec4 externalColor, int externalColorMixMode) {\nvec3 baseColor = _baseColor();\nfloat baseOpacity = _baseOpacity();\nvec3 color = mixExternalColor(\nbaseColor,\ntextureColor.rgb,\nexternalColor.rgb,\nexternalColorMixMode\n);\nfloat opacity = objectOpacity * mixExternalOpacity(\nbaseOpacity,\ntextureColor.a,\nexternalColor.a,\nexternalColorMixMode\n);\nreturn vec4(color, opacity);\n}`)}export{l as ComputeMaterialColor};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{neverReached as e}from\"../../../../../../core/compilerUtils.js\";import{NormalType as r}from\"../attributes/NormalAttribute.glsl.js\";import{VertexNormal as o}from\"../attributes/VertexNormal.glsl.js\";import{VertexPosition as a}from\"../attributes/VertexPosition.glsl.js\";import{NormalsDoubleSidedMode as d}from\"./Normals.glsl.js\";import{glsl as i}from\"../../shaderModules/interfaces.js\";function l(l,n){const s=l.fragment;switch(n.doubleSidedMode){case d.None:s.code.add(i`vec3 _adjustDoublesided(vec3 normal) {\nreturn normal;\n}`);break;case d.View:l.include(a,n),s.code.add(i`vec3 _adjustDoublesided(vec3 normal) {\nreturn dot(normal, vPositionWorldCameraRelative) > 0.0 ? -normal : normal;\n}`);break;case d.WindingOrder:s.code.add(i`vec3 _adjustDoublesided(vec3 normal) {\nreturn gl_FrontFacing ? normal : -normal;\n}`);break;default:e(n.doubleSidedMode);case d.COUNT:}switch(n.normalType){case r.Attribute:case r.Compressed:l.include(o,n),s.code.add(i`vec3 shadingNormalWorld() {\nreturn _adjustDoublesided(normalize(vNormalWorld));\n}\nvec3 shadingNormal_view() {\nvec3 normal = normalize(vNormalView);\nreturn gl_FrontFacing ? normal : -normal;\n}`);break;case r.ScreenDerivative:l.include(a,n),s.code.add(i`vec3 shadingNormalWorld() {\nreturn normalize(cross(\ndFdx(vPositionWorldCameraRelative),\ndFdy(vPositionWorldCameraRelative)\n));\n}\nvec3 shadingNormal_view() {\nreturn normalize(cross(dFdx(vPosition_view),dFdy(vPosition_view)));\n}`);break;case r.Ground:n.spherical?(l.include(a,n),s.code.add(i`vec3 shadingNormalWorld() {\nreturn normalize(positionWorld());\n}`)):s.code.add(i`vec3 shadingNormalWorld() {\nreturn vec3(0.0, 0.0, 1.0);\n}`),s.code.add(i`vec3 shadingNormal_view() {\nreturn normalize(cross(dFdx(vPosition_view),dFdy(vPosition_view))).xyz;\n}`);break;default:e(n.normalType);case r.COUNT:}}export{l as ComputeShadingNormal};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{ShaderOutput as e}from\"../ShaderOutput.js\";import{TextureCoordinateAttributeType as r}from\"../attributes/TextureCoordinateAttribute.glsl.js\";import{VertexTextureCoordinates as t}from\"../attributes/VertexTextureCoordinates.glsl.js\";import{TextureAtlasLookup as o}from\"../util/TextureAtlasLookup.glsl.js\";import{glsl as u}from\"../../shaderModules/interfaces.js\";import{Texture2DDrawUniform as s}from\"../../shaderModules/Texture2DDrawUniform.js\";import{AlphaDiscardMode as a}from\"../../../lib/basicInterfaces.js\";function d(d,i){const l=d.fragment;if(i.hasBaseColorTexture&&(i.output===e.Color||i.alphaDiscardMode!==a.Opaque)){d.include(t,i);const e=i.textureCoordinateType===r.Atlas;l.uniforms.add(new s(\"baseColorTexture\",(e=>e.texture))),e?(d.include(o),l.code.add(u`vec4 readBaseColorTexture() {\nreturn textureAtlasLookup(baseColorTexture, vuv0, vuvRegion);\n}`)):l.code.add(u`vec4 readBaseColorTexture() {\nreturn texture(baseColorTexture, vuv0);\n}`)}else l.code.add(u`vec4 readBaseColorTexture() { return vec4(1.0); }`)}export{d as ReadBaseColorTexture};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{earth as e,mars as o,moon as r}from\"../geometry/support/Ellipsoid.js\";import{OverlayIndex as a,RenderTargetType as i}from\"../views/3d/terrain/interfaces.js\";import{IntegratedMeshMode as l}from\"../views/3d/webgl-engine/collections/Component/Material/ComponentTechniqueConfiguration.js\";import{ComponentData as t,ComponentDataType as d}from\"../views/3d/webgl-engine/collections/Component/Material/shader/ComponentData.glsl.js\";import{VertexDiscardByOpacity as n}from\"../views/3d/webgl-engine/collections/Component/Material/shader/VertexDiscardByOpacity.glsl.js\";import{ForwardLinearDepth as s}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{ShaderOutput as c}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SlicePass as m}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{NormalType as g}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{TextureCoordinateAttribute as v}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{VertexColor as u}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{VertexNormal as h}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js\";import{VertexPosition as p}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexPosition.glsl.js\";import{OutputDepth as C}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputDepth.glsl.js\";import{OutputHighlight as w}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{ReadLinearDepth as b}from\"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js\";import{ComputeMaterialColor as f}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeMaterialColor.glsl.js\";import{ComputeNormalTexture as y}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js\";import{ComputeShadingNormal as x}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeShadingNormal.glsl.js\";import{EvaluateSceneLighting as L,addLightingGlobalFactor as M}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{addMainLightIntensity as j}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{multipassTerrainTest as T}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{PBRMode as O,PhysicallyBasedRenderingParameters as S}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadBaseColorTexture as N}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadBaseColorTexture.glsl.js\";import{ReadShadowMapPass as W}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{OverlayIM as A,getColorTexture as P}from\"../views/3d/webgl-engine/core/shaderLibrary/terrain/Overlay.glsl.js\";import{symbolAlphaCutoff as B}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{DiscardOrAdjustAlphaDraw as R}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";import{EllipsoidMode as D}from\"../views/3d/webgl-engine/core/shaderLibrary/util/EllipsoidMode.js\";import{glsl as $}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as z}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as E}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as _}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";function V(a){const i=new z;i.include(p,a),i.include(h,a),i.include(u,a),i.include(v,a),i.include(s,a),i.include(t,a),i.include(R,a),i.include(m,a),i.include(N,a),i.include(n,a);const{vertex:V,fragment:F}=i;a.pbrMode!==O.Normal&&a.pbrMode!==O.Schematic||(i.include(S,a),a.hasNormalTexture&&i.include(y,a));const G=a.output===c.Shadow||a.output===c.ShadowHighlight||a.output===c.ShadowExcludeHighlight;G&&a.componentData===d.Varying?V.code.add($`#define discardShadows(castShadows) { if(!castShadows) { gl_Position = vec4(1e38, 1e38, 1e38, 1.0); return; } }`):V.code.add($`#define discardShadows(castShadows) {}`);const H=a.integratedMeshMode===l.ColorOverlay||a.integratedMeshMode===l.ColorOverlayWithWater,k=H&&a.output===c.Color&&a.pbrMode===O.WaterOnIntegratedMesh;return H&&(i.include(L,a),i.include(A,a),a.spherical?V.code.add($`\n      const float invEllipsoidRadius = ${$.float(1/(a.ellipsoidMode===D.Earth?e.radius:a.ellipsoidMode===D.Mars?o.radius:r.radius))};\n      vec2 projectOverlay(vec3 pos) {\n        return pos.xy / (1.0 + invEllipsoidRadius * pos.z);\n      }\n      `):V.code.add($`vec2 projectOverlay(vec3 pos) { return pos.xy; }`)),k&&(i.varyings.add(\"tbnTangent\",\"vec3\"),i.varyings.add(\"tbnBiTangent\",\"vec3\"),i.varyings.add(\"groundNormal\",\"vec3\")),V.code.add($`\n    void main() {\n      bool castShadows;\n      vec4 externalColor = forwardExternalColor(castShadows);\n      discardShadows(castShadows);\n\n      vertexDiscardByOpacity(externalColor.a);\n\n      ${a.output===c.ObjectAndLayerIdColor?$`externalColor.a = 1.0;`:\"\"}\n\n      if (externalColor.a < ${$.float(B)}) {\n        // Discard this vertex\n        gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n        return;\n      }\n\n      forwardPosition(readElevationOffset());\n      forwardNormal();\n      forwardTextureCoordinates();\n      forwardVertexColor();\n      forwardLinearDepth();\n      ${a.output===c.ObjectAndLayerIdColor?$`forwardObjectAndLayerIdColor();`:\"\"}\n      ${k?a.spherical?$`\n                groundNormal = normalize(positionWorld());\n                tbnTangent = normalize(cross(vec3(0.0, 0.0, 1.0), groundNormal));\n                tbnBiTangent = normalize(cross(groundNormal, tbnTangent));`:$`\n                groundNormal = vec3(0.0, 0.0, 1.0);\n                tbnTangent = vec3(1.0, 0.0, 0.0);\n                tbnBiTangent = vec3(0.0, 1.0, 0.0);`:\"\"}\n      ${H?$`setOverlayVTC(projectOverlay(position));`:\"\"}\n    }\n  `),a.output===c.Alpha&&(F.include(b),i.include(T,a),i.include(f,a),H&&F.uniforms.add(new E(\"ovColorTex\",((e,o)=>P(e,o)))),F.code.add($`\n      void main() {\n        discardBySlice(vPositionWorldCameraRelative);\n        ${a.hasMultipassTerrain?$`terrainDepthTest(gl_FragCoord, vPosition_view.z);`:\"\"}\n\n        vec4 textureColor = readBaseColorTexture();\n        discardOrAdjustAlpha(textureColor);\n\n        vec4 externalColor;\n        int externalColorMixMode;\n        readExternalColor(externalColor, externalColorMixMode);\n\n        vec4 materialColor = computeMaterialColor(\n          textureColor,\n          externalColor,\n          externalColorMixMode\n        );\n        ${H?$`\n                vec4 overlayColor = getOverlayColor(ovColorTex, vtcOverlay);\n                materialColor = materialColor * (1.0 - overlayColor.a) + overlayColor;`:\"\"}\n\n        fragColor = vec4(materialColor.a);\n      }\n    `)),a.output===c.Color&&(F.include(b),i.include(T,a),i.include(f,a),i.include(x,a),i.include(L,a),a.receiveShadows?(i.include(W,a),F.code.add($`float evaluateShadow() {\nreturn readShadowMap(vPositionWorldCameraRelative, linearDepth);\n}`)):F.code.add($`float evaluateShadow() { return 0.0; }`),H&&F.uniforms.add(new E(\"ovColorTex\",((e,o)=>P(e,o)))),F.code.add($`\n      void main() {\n        discardBySlice(vPositionWorldCameraRelative);\n        ${a.hasMultipassTerrain?$`terrainDepthTest(gl_FragCoord, vPosition_view.z);`:\"\"}\n\n        vec4 textureColor = readBaseColorTexture();\n        discardOrAdjustAlpha(textureColor);\n\n        vec4 externalColor;\n        int externalColorMixMode;\n        readExternalColor(externalColor, externalColorMixMode);\n\n        vec4 materialColor = computeMaterialColor(\n          textureColor,\n          externalColor,\n          externalColorMixMode\n        );\n        ${H?$`vec4 overlayColor = getOverlayColor(ovColorTex, vtcOverlay);`:\"\"}\n    `),a.pbrMode===O.Normal||a.pbrMode===O.Schematic?(j(F),F.code.add($`\n        ${a.pbrMode===O.Normal?$`\n                applyPBRFactors();\n                if (int(externalColorMixMode) == 3) {\n                  mrr = vec3(0.0, 0.6, 0.2);\n                }`:\"\"}\n        vec3 normalVertex = shadingNormalWorld();\n        float additionalIrradiance = 0.02 * mainLightIntensity[2];\n      `),a.hasNormalTexture?F.code.add($`mat3 tangentSpace = computeTangentSpace(normalVertex, vPositionWorldCameraRelative, vuv0);\nvec3 shadingNormal = computeTextureNormal(tangentSpace, vuv0);`):F.code.add($`vec3 shadingNormal = normalVertex;`),F.code.add($`${a.spherical?$`vec3 normalGround = normalize(positionWorld());`:$`vec3 normalGround = vec3(0.0, 0.0, 1.0);`}\n      `),F.code.add($`\n        vec3 viewDir = normalize(vPositionWorldCameraRelative);\n        float ssao = 1.0 - occlusion * (1.0 - evaluateAmbientOcclusion());\n\n        ${a.snowCover?$`\n                vec3 surfaceNormal = normalize(shadingNormalWorld());\n                float snow = smoothstep(0.5, 0.55, dot(surfaceNormal, normalize(positionWorld())));\n                materialColor.rgb = mix(materialColor.rgb, vec3(1), snow);\n\n                shadingNormal = mix(shadingNormal, surfaceNormal, snow);\n                ssao = mix(ssao, 0.0, snow);\n                mrr = mix(mrr, vec3(0.0, 1.0, 0.04), snow);\n                emission = mix(emission, vec3(0.0), snow);`:\"\"}\n\n        ${H?$` materialColor = materialColor * (1.0 - overlayColor.a) + overlayColor;`:\"\"}\n\n        vec3 additionalLight = evaluateAdditionalLighting(ssao, positionWorld());\n        vec4 shadedColor = vec4(evaluateSceneLightingPBR(shadingNormal, materialColor.rgb, evaluateShadow(), ssao, additionalLight, viewDir, normalGround, mrr, emission, additionalIrradiance), materialColor.a);\n        `)):(a.receiveShadows?F.code.add($`float shadow = evaluateShadow();`):a.spherical?(M(F),F.code.add($`float additionalAmbientScale = additionalDirectedAmbientLight(positionWorld());\nfloat shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);`)):F.code.add($`float shadow = 0.0;`),k&&F.uniforms.add(new E(\"ovNormalTex\",((e,o)=>I(o)))),a.snowCover&&F.code.add($`vec3 surfaceNormal = normalize(cross(dFdx(vPositionWorldCameraRelative), dFdy(vPositionWorldCameraRelative)));\nfloat snow = smoothstep(0.5, 0.55, dot(surfaceNormal, normalize(positionWorld())));\nmaterialColor.rgb = mix(materialColor.rgb, vec3(1), snow);`),F.code.add($`\n        float ambientOcclusion = evaluateAmbientOcclusion();\n        vec3 additionalLight = evaluateAdditionalLighting(ambientOcclusion, positionWorld());\n\n        ${H?$` materialColor = materialColor * (1.0 - overlayColor.a) + overlayColor;`:\"\"}\n\n        vec4 shadedColor = vec4(evaluateSceneLighting(shadingNormalWorld(), materialColor.rgb, shadow, ambientOcclusion, additionalLight), materialColor.a);\n      ${k?$`\n              vec4 overlayWaterMask = getOverlayColor(ovNormalTex, vtcOverlay);\n              float waterNormalLength = length(overlayWaterMask);\n              if (waterNormalLength > 0.95) {\n                mat3 tbnMatrix = mat3(tbnTangent, tbnBiTangent, groundNormal);\n                vec4 waterColorLinear = getOverlayWaterColor(overlayWaterMask, overlayColor, -normalize(vPositionWorldCameraRelative), shadow, groundNormal, tbnMatrix, vPosition_view, positionWorld());\n                vec4 waterColorNonLinear = delinearizeGamma(vec4(waterColorLinear.xyz, 1.0));\n                // un-gamma the ground color to mix in linear space\n                shadedColor = mix(shadedColor, waterColorNonLinear, waterColorLinear.w);\n              }`:\"\"}\n      `)),F.code.add($`\n        fragColor = highlightSlice(shadedColor, vPositionWorldCameraRelative);\n        ${a.transparencyPassType===_.Color?\"fragColor = premultiplyAlpha(fragColor);\":\"\"}\n      }\n    `)),(a.output===c.Depth||G)&&(i.include(C,a),F.code.add($`void main() {\ndiscardBySlice(vPositionWorldCameraRelative);\nvec4 textureColor = readBaseColorTexture();\ndiscardOrAdjustAlpha(textureColor);\noutputDepth(linearDepth);\n}`)),a.output===c.Normal&&(i.include(x,a),F.code.add($`\n      void main() {\n        discardBySlice(vPositionWorldCameraRelative);\n\n        vec4 textureColor = readBaseColorTexture();\n        discardOrAdjustAlpha(textureColor);\n\n        // note: the alpha component needs to be 1.0 in order for this material\n        // to influence ambient occlusion, see the ssao fragment shader\n        float alpha = ${a.normalType===g.Ground?\"0.0\":\"1.0\"};\n        fragColor = vec4(vec3(.5) + .5 * shadingNormal_view(), alpha);\n      }\n    `)),a.output===c.ObjectAndLayerIdColor&&i.fragment.code.add($`\n      void main() {\n        discardBySlice(vPositionWorldCameraRelative);\n\n        vec4 textureColor = readBaseColorTexture();\n        discardOrAdjustAlpha(textureColor);\n\n        ${H?$`fragColor = getOverlayColorTexel(vtcOverlay);`:\"outputObjectAndLayerIdColor();\"}\n      }\n    `),a.output===c.Highlight&&(i.include(w,a),F.code.add($`\n      void main() {\n        discardBySlice(vPositionWorldCameraRelative);\n\n        vec4 textureColor = readBaseColorTexture();\n        discardOrAdjustAlpha(textureColor);\n\n        ${H?$`\n                vec4 overlayColor = getCombinedOverlayColor();\n                if (overlayColor.a == 0.0) {\n                  fragColor = vec4(0.0);\n                  return;\n                }`:\"\"}\n\n        outputHighlight();\n      }\n    `)),i}function I(e){return 0===e.overlays.length?null:e.overlays[a.INNER].getValidTexture(i.Water)}const F=Object.freeze(Object.defineProperty({__proto__:null,build:V,getOverlayNormalTexture:I},Symbol.toStringTag,{value:\"Module\"}));export{F as C,V as b,I as g};\n"],
  "mappings": "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",
  "names": ["a", "r", "c", "i", "e", "v", "o", "m", "t", "s", "n", "a", "i", "l", "s", "e", "i", "o", "l", "n", "s", "i", "c", "d", "i", "l", "s", "e", "a", "i", "c", "e", "o", "d", "m", "t", "r", "V", "F", "s", "v", "n", "l", "g"]
}

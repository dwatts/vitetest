{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/IsNaN.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/AdjustProjectedPosition.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardByCoverage.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardNonSilhouetteEdges.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/EdgeUtil.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/UnpackAttributes.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/LineAmplitude.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/LineOffset.glsl.js", "../../@arcgis/core/chunks/EdgeShader.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{glsl as a}from\"../../shaderModules/interfaces.js\";function o(o){const e=a`bool isNaN( float val )\n{\nreturn ( val < 0.0 || 0.0 < val || val == 0.0 ) ? false : true;\n}`;o.code.add(e)}export{o as IsNaN};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{f as o}from\"../../../../../../chunks/vec2f64.js\";import{IsNaN as r}from\"../../../core/shaderLibrary/util/IsNaN.glsl.js\";import{Float2PassUniform as e}from\"../../../core/shaderModules/Float2PassUniform.js\";import{glsl as a}from\"../../../core/shaderModules/interfaces.js\";import{Matrix3PassUniform as s}from\"../../../core/shaderModules/Matrix3PassUniform.js\";import{Matrix4PassUniform as t}from\"../../../core/shaderModules/Matrix4PassUniform.js\";const l=o(.5,-4e-4);function i(o,i){const c=o.vertex;c.include(r),c.constants.add(\"depthBias\",\"vec2\",l),c.uniforms.add(new e(\"inverseViewport\",((o,r)=>r.inverseViewport))),i.legacy?(c.uniforms.add(new t(\"proj\",((o,r)=>r.camera.projectionMatrix))),c.code.add(a`vec2 calculateProjectedBiasXY(vec4 projPos, vec3 globalNormal) {\nfloat offsetXY = depthBias.x;\nvec4 projNormal = proj * localView * vec4(globalNormal, 0.0);\nreturn offsetXY * projPos.w * 2.0 * inverseViewport * normalize(projNormal.xyz).xy;\n}`)):(c.uniforms.add(new s(\"transformNormalViewFromGlobal\",(o=>o.transformNormalViewFromGlobal)),new t(\"transformProjFromView\",(o=>o.transformProjFromView))),c.code.add(a`vec2 calculateProjectedBiasXY(vec4 projPos, vec3 globalNormal) {\nfloat offsetXY = depthBias.x;\nvec4 projNormal = transformProjFromView * vec4(transformNormalViewFromGlobal * globalNormal, 0.0);\nreturn offsetXY * projPos.w * 2.0 * inverseViewport * normalize(projNormal.xyz).xy;\n}`)),c.code.add(a`float _calculateProjectedBiasZ(vec4 projPos) {\nfloat offsetZ = depthBias.y;\nreturn sqrt(max(projPos.z,0.0)) * offsetZ;\n}\nvec4 adjustProjectedPosition(vec4 projPos, vec3 worldNormal, float lineWidth) {\nvec2 offsetXY = calculateProjectedBiasXY(projPos, worldNormal);\nif (!isNaN(offsetXY.x) && !isNaN(offsetXY.y)) {\nprojPos.xy += offsetXY;\n}\nprojPos.z += _calculateProjectedBiasZ(projPos);\nreturn projPos;\n}`)}export{i as AdjustProjectedPosition};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../../core/shaderModules/interfaces.js\";function a(a,r){const d=a.fragment;d.constants.add(\"coverageTestThreshold\",\"float\",.01),r.antialiasing?d.code.add(e`#define discardByCoverage(radius, coverage) { if (coverage < coverageTestThreshold) discard; }`):d.code.add(e`#define discardByCoverage(radius, coverage) { float coverageLimit = radius <= 0.5 ? coverageTestThreshold : 0.75; if (coverage < coverageLimit) discard; }`)}export{a as DiscardByCoverage};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../../core/shaderModules/interfaces.js\";function o(o,r){const l=o.vertex;r.silhouette?(l.code.add(e`bool isSilhouetteEdge(vec3 viewDir, vec3 normalA, vec3 normalB) {\nfloat faceAVisible = dot(viewDir, normalA);\nfloat faceBVisible = dot(viewDir, normalB);\nreturn faceAVisible * faceBVisible < 0.0;\n}`),r.legacy?l.code.add(e`bool discardNonSilhouetteEdges(vec3 viewPos, vec3 worldPos) {\nvec3 viewNormalA = _modelToViewNormal(normalA);\nvec3 viewNormalB = _modelToViewNormal(normalB);\nvec3 viewDir = -viewPos;\nif (isSilhouetteEdge(viewDir, viewNormalA, viewNormalB)) {\nreturn false;\n}\ngl_Position = vec4(10.0, 10.0, 10.0, 1.0);\nreturn true;\n}`):l.code.add(e`bool discardNonSilhouetteEdges(vec3 viewPos, vec3 worldPos) {\nvec3 worldNormalA = _modelToWorldNormal(normalA);\nvec3 worldNormalB = _modelToWorldNormal(normalB);\nvec3 viewDir = -worldPos;\nif (isSilhouetteEdge(viewDir, worldNormalA, worldNormalB)) {\nreturn false;\n}\ngl_Position = vec4(10.0, 10.0, 10.0, 1.0);\nreturn true;\n}`)):l.code.add(e`bool discardNonSilhouetteEdges(vec3 viewPos, vec3 worldPos) {\nreturn false;\n}`)}export{o as DiscardNonSilhouetteEdges};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{MAX_ELEVATION_OFFSET as o}from\"../../../collections/Component/Material/shader/ComponentData.glsl.js\";import{DoublePrecision as e}from\"../../../core/shaderLibrary/util/DoublePrecision.glsl.js\";import{RgbaFloatEncoding as r}from\"../../../core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{Float3DrawUniform as t}from\"../../../core/shaderModules/Float3DrawUniform.js\";import{Float3PassUniform as a}from\"../../../core/shaderModules/Float3PassUniform.js\";import{FloatPassUniform as n}from\"../../../core/shaderModules/FloatPassUniform.js\";import{glsl as l}from\"../../../core/shaderModules/interfaces.js\";import{Matrix3DrawUniform as d}from\"../../../core/shaderModules/Matrix3DrawUniform.js\";import{Matrix3PassUniform as m}from\"../../../core/shaderModules/Matrix3PassUniform.js\";import{Matrix4PassUniform as s}from\"../../../core/shaderModules/Matrix4PassUniform.js\";import{Texture2DDrawUniform as i}from\"../../../core/shaderModules/Texture2DDrawUniform.js\";import{VertexAttribute as c}from\"../../../lib/VertexAttribute.js\";function f(f,v){const u=f.vertex;u.include(r),u.uniforms.add(new n(\"distanceFalloffFactor\",(o=>o.distanceFalloffFactor))),u.code.add(l`float distanceBasedPerspectiveFactor(float distance) {\nreturn clamp(sqrt(distanceFalloffFactor / distance), 0.0, 1.0);\n}`),u.uniforms.add(new i(\"componentDataTex\",(o=>o.componentDataTexture))),f.attributes.add(c.COMPONENTINDEX,\"float\"),u.constants.add(\"componentColorFieldOffset\",\"float\",0),u.constants.add(\"componentOtherFieldOffset\",\"float\",1),u.constants.add(\"componentVerticalOffsetFieldOffset\",\"float\",2),u.constants.add(\"componentFieldCount\",\"float\",3),u.constants.add(\"lineWidthFractionFactor\",\"float\",8),u.constants.add(\"extensionLengthOffset\",\"float\",128),u.constants.add(\"verticalOffsetScale\",\"float\",2*o),u.code.add(l`vec2 _componentTextureCoords(float componentIndex, float fieldOffset) {\nfloat fieldIndex = componentFieldCount * componentIndex + fieldOffset;\nfloat texSize = float(textureSize(componentDataTex, 0).x);\nfloat colIndex = mod(fieldIndex, texSize);\nfloat rowIndex = floor(fieldIndex / texSize);\nreturn vec2(colIndex, rowIndex) + 0.5;\n}\nstruct ComponentData {\nvec4 color;\nfloat lineWidth;\nfloat extensionLength;\nfloat type;\nfloat verticalOffset;\n};\nComponentData readComponentData() {\nvec2 colorIndex = _componentTextureCoords(componentIndex, componentColorFieldOffset);\nvec2 otherIndex = _componentTextureCoords(componentIndex, componentOtherFieldOffset);\nvec2 verticalOffsetIndex = _componentTextureCoords(componentIndex, componentVerticalOffsetFieldOffset);\nvec4 colorValue = texelFetch(componentDataTex, ivec2(colorIndex), 0);\nvec4 otherValue = texelFetch(componentDataTex, ivec2(otherIndex), 0);\nfloat verticalOffset = (rgba2float(texelFetch(componentDataTex, ivec2(verticalOffsetIndex), 0)) - 0.5) * verticalOffsetScale;\nreturn ComponentData(\nvec4(colorValue.rgb, colorValue.a * otherValue.w),\notherValue.x * (255.0 / lineWidthFractionFactor),\notherValue.y * 255.0 - extensionLengthOffset,\n-(otherValue.z * 255.0) + 0.5,\nverticalOffset\n);\n}`),v.legacy?u.code.add(l`vec3 _modelToWorldNormal(vec3 normal) {\nreturn (model * vec4(normal, 0.0)).xyz;\n}\nvec3 _modelToViewNormal(vec3 normal) {\nreturn (localView * model * vec4(normal, 0.0)).xyz;\n}`):(u.uniforms.add(new d(\"transformNormalGlobalFromModel\",(o=>o.transformNormalGlobalFromModel))),u.code.add(l`vec3 _modelToWorldNormal(vec3 normal) {\nreturn transformNormalGlobalFromModel * normal;\n}`)),v.silhouette?(f.attributes.add(c.NORMALA,\"vec3\"),f.attributes.add(c.NORMALB,\"vec3\"),u.code.add(l`vec3 worldNormal() {\nreturn _modelToWorldNormal(normalize(normalA + normalB));\n}`)):(f.attributes.add(c.NORMAL,\"vec3\"),u.code.add(l`vec3 worldNormal() {\nreturn _modelToWorldNormal(normal);\n}`)),v.legacy?u.code.add(l`void worldAndViewFromModelPosition(vec3 modelPos, float verticalOffset, out vec3 worldPos, out vec3 viewPos) {\nworldPos = (model * vec4(modelPos, 1.0)).xyz;\nviewPos = (localView * vec4(worldPos, 1.0)).xyz;\n}`):(u.include(e,v),u.include(e,v),u.uniforms.add(new m(\"transformViewFromCameraRelativeRS\",(o=>o.transformViewFromCameraRelativeRS)),new d(\"transformWorldFromModelRS\",(o=>o.transformWorldFromModelRS)),new t(\"transformWorldFromModelTL\",(o=>o.transformWorldFromModelTL)),new t(\"transformWorldFromModelTH\",(o=>o.transformWorldFromModelTH)),new a(\"transformWorldFromViewTL\",(o=>o.transformWorldFromViewTL)),new a(\"transformWorldFromViewTH\",(o=>o.transformWorldFromViewTH))),u.code.add(l`\n      void worldAndViewFromModelPosition(vec3 modelPos, float verticalOffset, out vec3 worldPos, out vec3 viewPos) {\n        vec3 rotatedModelPosition = transformWorldFromModelRS * modelPos;\n\n        vec3 transformCameraRelativeFromModel = dpAdd(\n          transformWorldFromModelTL,\n          transformWorldFromModelTH,\n          -transformWorldFromViewTL,\n          -transformWorldFromViewTH\n        );\n\n        worldPos = transformCameraRelativeFromModel + rotatedModelPosition;\n\n        if (verticalOffset != 0.0) {\n          vec3 vUp = ${v.spherical?l`normalize(transformWorldFromModelTL + rotatedModelPosition);`:l`vec3(0.0, 0.0, 1.0);`}\n          worldPos += verticalOffset * vUp;\n        }\n\n        viewPos = transformViewFromCameraRelativeRS * worldPos;\n      }\n    `)),u.uniforms.add(new s(\"transformProjFromView\",((o,e)=>e.camera.projectionMatrix))),u.code.add(l`vec4 projFromViewPosition(vec3 position) {\nreturn transformProjFromView * vec4(position, 1.0);\n}`),u.code.add(l`float calculateExtensionLength(float extensionLength, float lineLength) {\nreturn extensionLength / (log2(max(1.0, 256.0 / lineLength)) * 0.2 + 1.0);\n}`)}function v(o){return o.mode===x.SKETCH||o.mode===x.MIXED}function u(o){return o.mode===x.SOLID||o.mode===x.MIXED}var x,F;!function(o){o[o.SOLID=0]=\"SOLID\",o[o.SKETCH=1]=\"SKETCH\",o[o.MIXED=2]=\"MIXED\",o[o.COUNT=3]=\"COUNT\"}(x||(x={})),function(o){o[o.REGULAR=0]=\"REGULAR\",o[o.SILHOUETTE=1]=\"SILHOUETTE\"}(F||(F={}));export{F as EdgeSilhouette,f as EdgeUtil,x as EdgeUtilMode,v as usesSketchLogic,u as usesSolidLogic};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{neverReached as e}from\"../../../../../../core/compilerUtils.js\";import{glsl as t}from\"../../../core/shaderModules/interfaces.js\";import{VertexAttribute as n}from\"../../../lib/VertexAttribute.js\";import{EdgeUtilMode as s}from\"./EdgeUtil.glsl.js\";function i(i,o){const d=i.vertex;switch(i.attributes.add(n.SIDENESS,\"vec2\"),o.mode===s.MIXED?d.code.add(t`struct UnpackedAttributes {\nvec2 sideness;\nvec2 sidenessNorm;\nfloat lineWidthPixels;\nfloat extensionLengthPixels;\nfloat type;\n};`):d.code.add(t`struct UnpackedAttributes {\nvec2 sideness;\nvec2 sidenessNorm;\nfloat lineWidthPixels;\nfloat extensionLengthPixels;\n};`),o.mode){case s.MIXED:d.code.add(t`UnpackedAttributes unpackAttributes(ComponentData component) {\nvec2 sidenessNorm = sideness;\nvec2 sideness = sidenessNorm * 2.0 - 1.0;\nfloat fType = component.type;\nfloat extensionLengthPixels = component.extensionLength;\nfloat lineWidth = component.lineWidth;\nif (fType <= 0.0) {\nextensionLengthPixels *= variantExtension * 2.0 - 1.0;\n}\nreturn UnpackedAttributes(sideness, sidenessNorm, lineWidth, extensionLengthPixels, fType);\n}`);break;case s.SKETCH:d.code.add(t`UnpackedAttributes unpackAttributes(ComponentData component) {\nvec2 sidenessNorm = sideness;\nvec2 sideness = sidenessNorm * 2.0 - 1.0;\nfloat extensionLengthPixels = component.extensionLength;\nextensionLengthPixels *= variantExtension * 2.0 - 1.0;\nfloat lineWidth = component.lineWidth;\nreturn UnpackedAttributes(sideness, sidenessNorm, lineWidth, extensionLengthPixels);\n}`);break;case s.SOLID:d.code.add(t`UnpackedAttributes unpackAttributes(ComponentData component) {\nvec2 sidenessNorm = sideness;\nvec2 sideness = sidenessNorm * 2.0 - 1.0;\nfloat extensionLengthPixels = component.extensionLength;\nfloat lineWidth = component.lineWidth;\nreturn UnpackedAttributes(sideness, sidenessNorm, lineWidth, extensionLengthPixels);\n}`);break;case s.COUNT:break;default:e(o.mode)}}export{i as UnpackAttributes};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{FloatDrawUniform as e}from\"../../../core/shaderModules/FloatDrawUniform.js\";import{glsl as t}from\"../../../core/shaderModules/interfaces.js\";import{EdgeUtilMode as r}from\"./EdgeUtil.glsl.js\";import{UnpackAttributes as s}from\"./UnpackAttributes.glsl.js\";function d(d,u){const a=d.vertex;switch(d.include(s,u),u.mode){case r.SOLID:a.code.add(t`float calculateLineAmplitude(UnpackedAttributes unpackedAttributes) {\nreturn 0.0;\n}`);break;case r.SKETCH:a.uniforms.add(new e(\"strokesAmplitude\",(e=>e.strokesTexture.amplitude))),a.code.add(t`float calculateLineAmplitude(UnpackedAttributes unpackedAttributes) {\nreturn strokesAmplitude;\n}`);break;case r.MIXED:a.uniforms.add(new e(\"strokesAmplitude\",(e=>e.strokesTexture.amplitude))),a.code.add(t`float calculateLineAmplitude(UnpackedAttributes unpackedAttributes) {\nfloat type = unpackedAttributes.type;\nif (type <= 0.0) {\nreturn strokesAmplitude;\n}\nelse {\nreturn 0.0;\n}\n}`)}}export{d as LineAmplitude};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{RgbaFloatEncoding as e}from\"../../../core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{FloatDrawUniform as t}from\"../../../core/shaderModules/FloatDrawUniform.js\";import{NoParameters as r,glsl as a}from\"../../../core/shaderModules/interfaces.js\";import{Texture2DDrawUniform as s}from\"../../../core/shaderModules/Texture2DDrawUniform.js\";import{usesSketchLogic as o,EdgeUtilMode as u}from\"./EdgeUtil.glsl.js\";import{UnpackAttributes as l}from\"./UnpackAttributes.glsl.js\";class c extends r{}function n(r,c){r.include(l,c);const{vertex:n,fragment:i}=r;switch(o(c)&&(n.uniforms.add(new s(\"strokesTexture\",(e=>e.strokesTexture.texture))),n.uniforms.add(new t(\"strokesLog2Resolution\",(e=>Math.log2(e.strokesTexture.resolution))),new t(\"strokeVariants\",(e=>e.strokesTexture.variants))),r.varyings.add(\"vStrokeUV\",\"vec2\"),i.uniforms.add(new s(\"strokesTexture\",(e=>e.strokesTexture.texture)),new t(\"strokesNormalizationScale\",(e=>e.strokesTexture.normalizationScale))),n.code.add(a`void calculateStyleOutputsSketch(float lineLength, UnpackedAttributes unpackedAttributes) {\nvec2 sidenessNorm = unpackedAttributes.sidenessNorm;\nfloat lineIndex = clamp(ceil(log2(lineLength)), 0.0, strokesLog2Resolution);\nvStrokeUV = vec2(exp2(lineIndex) * sidenessNorm.y, lineIndex * strokeVariants + variantStroke + 0.5) / vec2(textureSize(strokesTexture, 0));\nvStrokeUV.x += variantOffset;\n}`),r.fragment.include(e),i.code.add(a`float calculateLineOffsetSketch() {\nfloat offsetNorm = rgba2float(texture(strokesTexture, vStrokeUV));\nreturn (offsetNorm - 0.5) * strokesNormalizationScale;\n}\nfloat calculateLinePressureSketch() {\nreturn rgba2float(texture(strokesTexture, vStrokeUV + vec2(0.0, 0.5)));\n}`)),c.mode){case u.SOLID:n.code.add(a`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes) {}`),i.code.add(a`float calculateLineOffset() {\nreturn 0.0;\n}\nfloat calculateLinePressure() {\nreturn 1.0;\n}`);break;case u.SKETCH:n.code.add(a`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes)\n{\ncalculateStyleOutputsSketch(vLineLengthPixels, unpackedAttributes);\n}`),i.code.add(a`float calculateLineOffset() {\nreturn calculateLineOffsetSketch();\n}\nfloat calculateLinePressure() {\nreturn calculateLinePressureSketch();\n}`);break;case u.MIXED:r.varyings.add(\"vType\",\"float\"),n.code.add(a`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes)\n{\nvType = unpackedAttributes.type;\nif (unpackedAttributes.type <= 0.0) {\ncalculateStyleOutputsSketch(vLineLengthPixels, unpackedAttributes);\n}\n}`),i.code.add(a`float calculateLineOffset() {\nif (vType <= 0.0) {\nreturn calculateLineOffsetSketch();\n}\nelse {\nreturn 0.0;\n}\n}\nfloat calculateLinePressure() {\nif (vType <= 0.0) {\nreturn calculateLinePressureSketch();\n}\nelse {\nreturn 1.0;\n}\n}`)}}export{n as LineOffset,c as LineOffsetDrawParameters};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{s as e}from\"./vec2.js\";import{a as i}from\"./vec2f64.js\";import{SliceDraw as o}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{multipassTerrainTest as s}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{Float2PassUniform as n}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float4PassUniform as t}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as d}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as a}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as l}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Uniform as r}from\"../views/3d/webgl-engine/core/shaderModules/Uniform.js\";import{VertexAttribute as c}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{AdjustProjectedPosition as p}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/AdjustProjectedPosition.glsl.js\";import{DiscardByCoverage as P}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardByCoverage.glsl.js\";import{DiscardNonSilhouetteEdges as u}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardNonSilhouetteEdges.glsl.js\";import{EdgeUtil as g,EdgeUtilMode as v}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/EdgeUtil.glsl.js\";import{LineAmplitude as f}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/LineAmplitude.glsl.js\";import{LineOffset as m}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/LineOffset.glsl.js\";import{UnpackAttributes as x}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/UnpackAttributes.glsl.js\";function w(i){const r=new l,{vertex:w,fragment:L}=r;return i.legacy&&w.uniforms.add(new A(\"model\"),new A(\"localView\")),r.include(p,i),r.include(g,i),r.include(f,i),r.include(x,i),r.include(m,i),r.include(o,i),r.include(u,i),r.include(P,i),r.include(s,i),r.varyings.add(\"vColor\",\"vec4\"),r.varyings.add(\"vRadius\",\"float\"),r.varyings.add(\"vPosition\",\"vec3\"),r.varyings.add(\"vWorldPosition\",\"vec3\"),r.varyings.add(\"vViewPos\",\"vec3\"),r.varyings.add(\"vLineLengthPixels\",\"float\"),r.varyings.add(\"vSizeFalloffFactor\",\"float\"),w.uniforms.add(new n(\"pixelToNDC\",((i,o)=>e(h,2/o.camera.fullViewport[2],2/o.camera.fullViewport[3]))),new t(\"viewport\",((e,i)=>i.camera.fullViewport)),new d(\"pixelRatio\",((e,i)=>i.camera.pixelRatio))),r.attributes.add(c.POSITION0,\"vec3\"),r.attributes.add(c.POSITION1,\"vec3\"),r.attributes.add(c.VARIANTOFFSET,\"float\"),r.attributes.add(c.VARIANTSTROKE,\"float\"),r.attributes.add(c.VARIANTEXTENSION,\"float\"),w.code.add(a`\n    const float opaqueCutoff = 1.0 / 255.0;\n\n    void calculateGeometricOutputs(vec3 viewPosV0, vec3 viewPosV1, vec3 worldPosV0, vec3 worldPosV1, vec3 worldNormal, UnpackedAttributes unpackedAttributes) {\n      vec2 sideness = unpackedAttributes.sideness;\n      vec2 sidenessNorm = unpackedAttributes.sidenessNorm;\n\n      vWorldPosition = mix(worldPosV0, worldPosV1, sidenessNorm.y).xyz;\n\n      vec3 viewPos = mix(viewPosV0, viewPosV1, sidenessNorm.y);\n      vViewPos = viewPos;\n\n      vec4 projPosV0 = projFromViewPosition(viewPosV0);\n      vec4 projPosV1 = projFromViewPosition(viewPosV1);\n      vec4 projPos = projFromViewPosition(viewPos);\n\n      vec3 screenSpaceLineNDC = (projPosV1.xyz / projPosV1.w - projPosV0.xyz / projPosV0.w);\n      vec2 ndcToPixel = viewport.zw * 0.5;\n      vec2 screenSpaceLinePixels = screenSpaceLineNDC.xy * ndcToPixel;\n      float lineLengthPixels = length(screenSpaceLinePixels);\n\n      float dzPerPixel = screenSpaceLineNDC.z / lineLengthPixels;\n      vec2 screenSpaceDirection = screenSpaceLinePixels / lineLengthPixels;\n      vec2 perpendicularScreenSpaceDirection = vec2(screenSpaceDirection.y, -screenSpaceDirection.x) * sideness.x;\n\n      float falloffFactor = distanceBasedPerspectiveFactor(-viewPos.z) * pixelRatio;\n      float lineWidthPixels = unpackedAttributes.lineWidthPixels * falloffFactor;\n\n      float extensionLengthPixels = calculateExtensionLength(unpackedAttributes.extensionLengthPixels, lineLengthPixels) * falloffFactor;\n      float lineAmplitudePixels = calculateLineAmplitude(unpackedAttributes) * pixelRatio;\n\n      vSizeFalloffFactor = falloffFactor;\n\n      float lineWidthAndAmplitudePixels = lineWidthPixels + lineAmplitudePixels + lineAmplitudePixels;\n      float extendedLineLengthPixels = lineLengthPixels + extensionLengthPixels + extensionLengthPixels;\n\n      ${i.antialiasing?a`\n        const float aaPaddingPixels = 1.0;\n\n        // Line size with padding\n        float halfAAPaddedLineWidthAndAmplitudePixels = lineWidthAndAmplitudePixels * 0.5 + aaPaddingPixels;\n        float aaPaddedRoundedCapSizePixels = lineWidthPixels * 0.5 + aaPaddingPixels;`:a`\n        float halfAAPaddedLineWidthAndAmplitudePixels = max(lineWidthAndAmplitudePixels, 1.0) * 0.5;\n        float aaPaddedRoundedCapSizePixels = max(lineWidthPixels, 1.0) * 0.5;`}\n\n      // Half line width in NDC including padding for anti aliasing\n      vec2 halfAAPaddedLineWidthAndAmplitudeNDC = halfAAPaddedLineWidthAndAmplitudePixels * pixelToNDC;\n      vec2 aaPaddedRoundedCapSizeNDC = aaPaddedRoundedCapSizePixels * pixelToNDC;\n      vec2 extensionLengthNDC = extensionLengthPixels * pixelToNDC;\n\n      // Compute screen space position of vertex, offsetting for line size and end caps\n      vec2 ndcOffset = (\n          screenSpaceDirection * sideness.y * (aaPaddedRoundedCapSizeNDC + extensionLengthNDC)\n        + perpendicularScreenSpaceDirection * halfAAPaddedLineWidthAndAmplitudeNDC\n      );\n\n      projPos.xy += ndcOffset * projPos.w;\n      projPos.z += (dzPerPixel * (aaPaddedRoundedCapSizePixels + extensionLengthPixels)) * sideness.y * projPos.w;\n\n      projPos = adjustProjectedPosition(projPos, worldNormal, 1.0 + max((lineWidthAndAmplitudePixels - 1.0) * 0.5, 0.0));\n\n      // Line length with end caps\n      float aaPaddedLineWithCapsLengthPixels = extendedLineLengthPixels + aaPaddedRoundedCapSizePixels + aaPaddedRoundedCapSizePixels;\n\n      float pixelPositionAlongLine = aaPaddedLineWithCapsLengthPixels * sidenessNorm.y - aaPaddedRoundedCapSizePixels;\n\n      // Position in pixels with origin at first vertex of line segment\n      vPosition = vec3(\n        halfAAPaddedLineWidthAndAmplitudePixels * sideness.x,\n        pixelPositionAlongLine,\n        pixelPositionAlongLine / extendedLineLengthPixels\n      );\n\n      // The line width radius in pixels\n      vRadius = lineWidthPixels * 0.5;\n      vLineLengthPixels = extendedLineLengthPixels;\n\n      // discard short edges below a certain length threshold\n      ${i.mode===v.SKETCH?a`\n        if (lineLengthPixels <= 3.0) {\n          gl_Position = vec4(10.0, 10.0, 10.0, 1.0);\n          return;\n        }`:i.mode===v.MIXED?a`\n        if (lineLengthPixels <= 3.0 && unpackedAttributes.type <= 0.0) {\n           gl_Position = vec4(10.0, 10.0, 10.0, 1.0);\n           return;\n        }`:\"\"}\n      gl_Position = projPos;\n    }\n\n    void main() {\n      ComponentData component = readComponentData();\n      UnpackedAttributes unpackedAttributes = unpackAttributes(component);\n\n      vec3 worldPosV0, worldPosV1, viewPosV0, viewPosV1;\n      worldAndViewFromModelPosition(position0, component.verticalOffset, worldPosV0, viewPosV0);\n      worldAndViewFromModelPosition(position1, component.verticalOffset, worldPosV1, viewPosV1);\n\n      // Component color\n      vColor = component.color;\n\n      // Discard fully transparent edges\n      if (vColor.a < opaqueCutoff) {\n        gl_Position = vec4(10.0, 10.0, 10.0, 1.0);\n        return;\n      }\n\n      if (discardNonSilhouetteEdges(viewPosV0, worldPosV0)) {\n        return;\n      }\n\n      // General geometric computation for all types of edges\n      calculateGeometricOutputs(viewPosV0, viewPosV1, worldPosV0, worldPosV1, worldNormal(), unpackedAttributes);\n\n      // Specific computation for different edge styles\n      calculateStyleOutputs(unpackedAttributes);\n    }\n  `),L.code.add(a`\n    vec2 lineWithCapsDistance(float radius, vec2 position, float lineLength) {\n      float positionX = position.x - calculateLineOffset();\n\n      if (radius < 1.0) {\n        float coverageX = clamp(min(radius, positionX + 0.5) - max(-radius, positionX - 0.5), 0.0, 1.0);\n        float coverageY = clamp(min(lineLength, position.y + 0.5) - max(0.0, position.y - 0.5), 0.0, 1.0);\n        return vec2(0.5 - min(coverageX, coverageY), 0.0);\n      }\n      else {\n        // Between -radius -> 0 for start cap, 0 for line, 0 -> radius\n        float positionOnCap = position.y - clamp(position.y, 0.0, lineLength);\n\n        vec2 lineToPosition = vec2(positionX, positionOnCap);\n        return vec2(length(lineToPosition) - radius, positionOnCap / radius);\n      }\n    }\n\n    void main() {\n      ${i.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, vViewPos.z);\":\"\"}\n      float radius = vRadius * calculateLinePressure();\n\n      vec2 distance = lineWithCapsDistance(radius, vPosition.xy, vLineLengthPixels);\n      float coverage = clamp(0.5 - distance.x, 0.0, 1.0);\n\n      discardByCoverage(radius, coverage);\n      discardBySlice(vWorldPosition);\n\n      fragColor = vec4(vColor.rgb, vColor.a * coverage);\n    }\n  `),r}const h=i();class A extends r{constructor(e){super(e,\"mat4\")}}const L=Object.freeze(Object.defineProperty({__proto__:null,build:w},Symbol.toStringTag,{value:\"Module\"}));export{L as E,w as b};\n"],
  "mappings": "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",
  "names": ["o", "e", "r", "i", "o", "c", "e", "a", "r", "d", "o", "r", "l", "f", "v", "o", "e", "x", "x", "o", "i", "o", "d", "x", "d", "a", "i", "x", "e", "n", "r", "c", "i", "e", "x", "i", "r", "w", "L", "n", "o", "a", "e", "x"]
}

import {
  r
} from "./chunk-ZWFMUHG3.js";

// node_modules/@arcgis/core/support/elevationInfoUtils.js
function n(e) {
  return e ? b : p;
}
function t(e, t2) {
  return null != t2 && t2.mode ? t2.mode : n(e).mode;
}
function o(e, t2) {
  return null != t2 ? t2 : n(e);
}
function r2(e, n2) {
  return t(null != e && e.hasZ, n2);
}
function u(e, n2) {
  return o(null != e && !!e.hasZ, n2);
}
function s(n2) {
  const t2 = a(n2), o2 = r2(n2.geometry, t2);
  return { mode: o2, offset: null != t2 && "on-the-ground" !== o2 ? (t2.offset ?? 0) * r(t2.unit ?? "meters") : 0 };
}
function a(e) {
  return e.layer && "elevationInfo" in e.layer ? e.layer.elevationInfo : null;
}
function c(e, n2, t2, o2 = null) {
  return d(e, n2.x, n2.y, n2.hasZ ? n2.z : 0, n2.spatialReference, t2, o2);
}
function v(e, n2, t2, o2, r3 = null) {
  return d(e, n2[0], n2[1], n2.length > 2 ? n2[2] : 0, t2, o2, r3);
}
function d(e, n2, t2, o2, r3, u2, l = null) {
  if (null == u2)
    return;
  const s2 = null != l ? l.mode : "absolute-height";
  if ("on-the-ground" === s2)
    return 0;
  const { absoluteZ: i } = g(n2, t2, o2, r3, e, u2);
  return h(i, n2, t2, o2, r3, e, l, s2);
}
function g(e, n2, t2, o2, r3, u2) {
  const l = null != u2.offset ? u2.offset : 0;
  switch (u2.mode) {
    case "absolute-height":
      return { absoluteZ: t2 + l, elevation: 0 };
    case "on-the-ground": {
      const t3 = r3.elevationProvider.getElevation(e, n2, 0, o2, "ground") ?? 0;
      return { absoluteZ: t3, elevation: t3 };
    }
    case "relative-to-ground": {
      const u3 = r3.elevationProvider.getElevation(e, n2, t2, o2, "ground") ?? 0;
      return { absoluteZ: t2 + u3 + l, elevation: u3 };
    }
    case "relative-to-scene": {
      const u3 = r3.elevationProvider.getElevation(e, n2, t2, o2, "scene") ?? 0;
      return { absoluteZ: t2 + u3 + l, elevation: u3 };
    }
  }
}
function h(e, n2, t2, o2, r3, u2, l, s2) {
  const i = null != l && null != l.offset ? l.offset : 0;
  switch (s2) {
    case "absolute-height":
      return e - i;
    case "relative-to-ground":
      return e - ((u2.elevationProvider.getElevation(n2, t2, o2, r3, "ground") ?? 0) + i);
    case "relative-to-scene":
      return e - ((u2.elevationProvider.getElevation(n2, t2, o2, r3, "scene") ?? 0) + i);
  }
}
function m(e, n2) {
  if (null == n2)
    return false;
  const { mode: t2 } = n2;
  return null != t2 && ("scene" === e && "relative-to-scene" === t2 || "ground" === e && "absolute-height" !== t2);
}
var b = { mode: "absolute-height", offset: 0 };
var p = { mode: "on-the-ground", offset: null };

export {
  r2 as r,
  u,
  s,
  c,
  v,
  g,
  m,
  b,
  p
};
//# sourceMappingURL=chunk-67UNUI4B.js.map

import {
  Be
} from "./chunk-3C6NSN3C.js";
import "./chunk-J7GVLYC6.js";
import "./chunk-HWCVRBK2.js";
import "./chunk-WQH5IZQP.js";
import "./chunk-LCS4FL4K.js";
import "./chunk-4JFWLHWB.js";
import "./chunk-Y7OTFSYN.js";
import "./chunk-S7JBLP35.js";
import "./chunk-DZRIMGKU.js";
import "./chunk-MRYR5ID7.js";
import "./chunk-I3MRHING.js";
import "./chunk-RWWB77SD.js";
import "./chunk-Y7MP63H6.js";
import "./chunk-2WJ2SRK2.js";
import "./chunk-ZVHSORNP.js";
import "./chunk-XUV5GLNE.js";
import "./chunk-ZMFGNDTK.js";
import "./chunk-UL64BLDS.js";
import "./chunk-EG6CFIHA.js";
import "./chunk-CMNAZRWU.js";
import "./chunk-KE6VYSDW.js";
import "./chunk-SJEOKSSU.js";
import "./chunk-5GE3CZPD.js";
import "./chunk-WZRJMJNH.js";
import "./chunk-GDP6ZU2A.js";
import "./chunk-XIYY37WZ.js";
import "./chunk-P4PDTNIU.js";
import "./chunk-SRDSGSDW.js";
import "./chunk-IMXPH7BL.js";
import "./chunk-ENOZ3X2B.js";
import "./chunk-DRCIVBVA.js";
import "./chunk-CEFGWR5H.js";
import "./chunk-NX5NNI52.js";
import "./chunk-G2DTL6AE.js";
import "./chunk-Q6HN54VB.js";
import "./chunk-NDKDK4Y5.js";
import "./chunk-O443WBFA.js";
import "./chunk-RGS3ANC3.js";
import "./chunk-Z3GCSCQI.js";
import "./chunk-PPNAO2PM.js";
import "./chunk-UU2XJGLA.js";
import "./chunk-CGJNVOU3.js";
import "./chunk-YA7WDOJK.js";
import "./chunk-C6OHOFP6.js";
import "./chunk-ZX45U24W.js";
import "./chunk-KYWX7M3R.js";
import "./chunk-7H2AXTDH.js";
import "./chunk-QC2JMJXZ.js";
import "./chunk-GFPASUQP.js";
import "./chunk-KDACHJ5G.js";
import "./chunk-IQRLZSBX.js";
import "./chunk-OZL6Q7O2.js";
import "./chunk-FVR25IMN.js";
import "./chunk-EV77QZBT.js";
import "./chunk-QZ6WR57P.js";
import "./chunk-467UETSR.js";
import "./chunk-SHFLRM67.js";
import "./chunk-YGUWDSEH.js";
import "./chunk-6RU2CUTK.js";
import "./chunk-GOK4EI36.js";
import "./chunk-LO3LAMAS.js";
import "./chunk-ZWFMUHG3.js";
import "./chunk-EFRTD25L.js";
import "./chunk-EAGDM3GO.js";
import "./chunk-GSS6WNQU.js";
import "./chunk-C2EHS6UI.js";
import "./chunk-H37COY3W.js";
import "./chunk-NVGPNIR6.js";
import "./chunk-B4D7M7HT.js";
import "./chunk-3T2ETA25.js";
import "./chunk-5IYCCZ54.js";
import "./chunk-JLSXEPY6.js";
import "./chunk-VMTVUE47.js";
import "./chunk-GDZM4A6K.js";
import "./chunk-XWGNMTES.js";
import "./chunk-6NNEHJYI.js";
import "./chunk-BNBT4QTW.js";
import "./chunk-3FQOSG5O.js";
import "./chunk-W4KI5YEI.js";
import "./chunk-CAFGOFIE.js";
import "./chunk-7EG7BYWF.js";
import "./chunk-JNDFAMXY.js";
import "./chunk-NTEKJWGF.js";
import "./chunk-TFIKV5RU.js";
import "./chunk-KW6QQDGN.js";
import "./chunk-AQ7R6V4L.js";
import "./chunk-DOQ3SAAR.js";
import "./chunk-4BXK4H4L.js";
import "./chunk-SLVNG7FV.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-DKJBDKGA.js";
import "./chunk-4CZO65BK.js";
import "./chunk-SVCGLUNW.js";
import "./chunk-3KEIFTQ6.js";
import "./chunk-DEZCXTA3.js";
import "./chunk-RRJGZKNX.js";
import "./chunk-PL5Q4C6Y.js";
import "./chunk-A6VKJXIH.js";
import "./chunk-KFSY6ZZH.js";
import "./chunk-7EQSYZHW.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-GGOVZ2GK.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-WLWP35G2.js";
import "./chunk-JPW73GY2.js";
import "./chunk-HXPVVSLV.js";
import "./chunk-4OR73Y2R.js";
import "./chunk-EKJ2DJIR.js";
import "./chunk-TEHNQYQD.js";
import "./chunk-TPJLFGOT.js";
import "./chunk-CQX57DED.js";
import "./chunk-3CQBBMMD.js";
import "./chunk-2CTB7MKH.js";
import "./chunk-Z2ZUNW5S.js";
import "./chunk-7L7Z2HXM.js";
import "./chunk-75NKPXTR.js";
import "./chunk-EUVARFSM.js";
import "./chunk-3VUFACNT.js";
import "./chunk-ZEEBL7ZN.js";
import "./chunk-RTDN6KAT.js";
import "./chunk-GJ7PJ7XG.js";
import "./chunk-57CHUY45.js";
import "./chunk-SJ2GJCS2.js";
import "./chunk-H7RDAEPY.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-S5OISW44.js";
import "./chunk-7KH4CLS5.js";
import "./chunk-WCHO7VLT.js";
import "./chunk-JL3TJGVW.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-43LWRDQS.js";
import "./chunk-R6YKST3K.js";
import "./chunk-ZJEWQGHG.js";
import "./chunk-YGB42LDG.js";
import "./chunk-F3KGLZDZ.js";
import "./chunk-MP6GH2AC.js";
import {
  y3 as y
} from "./chunk-V76KGJFU.js";
import {
  a2 as a
} from "./chunk-HB2SQRT2.js";
import "./chunk-U3J7253Q.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-ZWUBORGT.js";
import "./chunk-3R7FAT25.js";
import "./chunk-7I33FAWS.js";
import "./chunk-DWOEYHKS.js";
import {
  s3 as s
} from "./chunk-HMVAPW5X.js";
import "./chunk-IYZKKFJM.js";
import "./chunk-JZJWZ6DN.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/OrientedImageryLayer.js
function i(e2) {
  return (r, t, o) => {
    if (!r)
      return null;
    const a2 = r[0].orientedImageryProperties;
    return (a2 == null ? void 0 : a2[e2]) ?? null;
  };
}
var s2 = class extends Be {
  constructor() {
    super(...arguments), this.geometryType = "point", this.operationalLayerType = "OrientedImageryLayer", this.type = "oriented-imagery";
  }
  get effectiveElevationSource() {
    var _a;
    const { elevationSource: e2, demPathPrefix: r, demPathSuffix: t } = this;
    if (!((_a = e2 == null ? void 0 : e2.url) == null ? void 0 : _a.trim()))
      return e2;
    let o = e2.url.trim();
    return (r == null ? void 0 : r.trim()) && (o = `${r.trim()}/${o}`), (t == null ? void 0 : t.trim()) && (o += `/${t.trim()}`), { ...e2, url: o };
  }
  _verifySource() {
    if (super._verifySource(), "point" !== this.geometryType)
      throw new s("oriented-imagery-layer:invalid-geometry-type", "OrientedImageryLayer only supports point geometry type");
  }
};
e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("cameraHeading") } } })], s2.prototype, "cameraHeading", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("cameraHeight") } } })], s2.prototype, "cameraHeight", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("cameraPitch") } } })], s2.prototype, "cameraPitch", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("cameraRoll") } } })], s2.prototype, "cameraRoll", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("coveragePercent") } } })], s2.prototype, "coveragePercent", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("demPathPrefix") } } })], s2.prototype, "demPathPrefix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("demPathSuffix") } } })], s2.prototype, "demPathSuffix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("depthImagePathPrefix") } } })], s2.prototype, "depthImagePathPrefix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("depthImagePathSuffix") } } })], s2.prototype, "depthImagePathSuffix", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("farDistance") } } })], s2.prototype, "farDistance", void 0), e([y({ json: { write: true } })], s2.prototype, "geometryType", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("horizontalFieldOfView") } } })], s2.prototype, "horizontalFieldOfView", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("horizontalMeasurementUnit") } } })], s2.prototype, "horizontalMeasurementUnit", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("imagePathPrefix") } } })], s2.prototype, "imagePathPrefix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("imagePathSuffix") } } })], s2.prototype, "imagePathSuffix", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("imageRotation") } } })], s2.prototype, "imageRotation", void 0), e([y({ type: Number, json: { write: true, read: { source: "layers", reader: i("maximumDistance") } } })], s2.prototype, "maximumDistance", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("nearDistance") } } })], s2.prototype, "nearDistance", void 0), e([y({ type: ["OrientedImageryLayer"] })], s2.prototype, "operationalLayerType", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("orientedImageryType") } } })], s2.prototype, "orientedImageryType", void 0), e([y({ json: { read: false }, value: "oriented-imagery", readOnly: true })], s2.prototype, "type", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("verticalFieldOfView") } } })], s2.prototype, "verticalFieldOfView", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("verticalMeasurementUnit") } } })], s2.prototype, "verticalMeasurementUnit", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("videoPathPrefix") } } })], s2.prototype, "videoPathPrefix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("videoPathSuffix") } } })], s2.prototype, "videoPathSuffix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("elevationSource") } } })], s2.prototype, "elevationSource", void 0), e([y()], s2.prototype, "effectiveElevationSource", null), s2 = e([a("esri.layers.OrientedImageryLayer")], s2);
var d = s2;
export {
  d as default
};
//# sourceMappingURL=OrientedImageryLayer-2FXBCW5Q.js.map

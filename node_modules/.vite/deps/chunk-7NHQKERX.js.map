{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/CloudsComposition.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{p as e}from\"./mat4.js\";import{c as r}from\"./mat4f64.js\";import{EvaluateAmbientLighting as i}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientLighting.glsl.js\";import{Gamma as o}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Gamma.glsl.js\";import{MainLighting as s}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{PBRMode as a}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{PiUtils as n}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PiUtils.glsl.js\";import{CloudsParallaxShading as d}from\"../views/3d/webgl-engine/core/shaderLibrary/util/CloudsParallaxShading.glsl.js\";import{ColorConversion as l}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{RgbaFloatEncoding as t}from\"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{Float3PassUniform as g}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{glsl as c}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4PassUniform as m}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";import{ShaderBuilder as w}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{VertexAttribute as b}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function v(){const r=new w;r.attributes.add(b.POSITION,\"vec2\"),r.varyings.add(\"worldRay\",\"vec3\");const{vertex:v,fragment:f}=r;return v.uniforms.add(new m(\"inverseProjectionMatrix\",((e,r)=>r.camera.inverseProjectionMatrix)),new m(\"inverseViewMatrix\",((r,i)=>e(u,i.camera.viewMatrix)))),v.code.add(c`void main(void) {\nvec3 posViewNear = (inverseProjectionMatrix * vec4(position, -1.0, 1.0)).xyz;\nworldRay = (inverseViewMatrix * vec4(posViewNear, 0.0)).xyz;\ngl_Position = vec4(position, 1.0, 1.0);\n}`),f.include(l),f.include(t),r.include(i,{pbrMode:a.Disabled,lightingSphericalHarmonicsOrder:2}),r.include(n),r.include(o),r.include(s),r.include(d,{instancedDoublePrecision:!1}),f.uniforms.add(new g(\"cameraPosition\",((e,r)=>r.camera.eye))),f.code.add(c`void main() {\nvec4 cloudsColor = renderClouds(normalize(worldRay), cameraPosition);\nfragColor = vec4((1.0 - totalFadeInOut) * cloudsColor.rgb, cloudsColor.a);\n}`),r}const u=r(),f=Object.freeze(Object.defineProperty({__proto__:null,build:v},Symbol.toStringTag,{value:\"Module\"}));export{f as C,v as b};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIm3C,SAAS,IAAG;AAAC,QAAM,IAAE,IAAI;AAAE,IAAE,WAAW,IAAI,EAAE,UAAS,MAAM,GAAE,EAAE,SAAS,IAAI,YAAW,MAAM;AAAE,QAAK,EAAC,QAAOA,IAAE,UAASC,GAAC,IAAE;AAAE,SAAOD,GAAE,SAAS,IAAI,IAAIE,GAAE,2BAA2B,CAACA,IAAEC,OAAIA,GAAE,OAAO,uBAAwB,GAAE,IAAID,GAAE,qBAAqB,CAACC,IAAEC,OAAI,EAAE,GAAEA,GAAE,OAAO,UAAU,CAAE,CAAC,GAAEJ,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA,EAIzpD,GAAEC,GAAE,QAAQC,EAAC,GAAED,GAAE,QAAQ,CAAC,GAAE,EAAE,QAAQ,GAAE,EAAC,SAAQ,EAAE,UAAS,iCAAgC,EAAC,CAAC,GAAE,EAAE,QAAQ,CAAC,GAAE,EAAE,QAAQC,EAAC,GAAE,EAAE,QAAQG,EAAC,GAAE,EAAE,QAAQC,IAAE,EAAC,0BAAyB,MAAE,CAAC,GAAEL,GAAE,SAAS,IAAI,IAAIC,GAAE,kBAAkB,CAACA,IAAEC,OAAIA,GAAE,OAAO,GAAI,CAAC,GAAEF,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA,EAG3P,GAAE;AAAC;AAAC,IAAM,IAAEC,GAAE;AAAV,IAAY,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,OAAM,EAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["v", "f", "e", "r", "i", "o", "m"]
}

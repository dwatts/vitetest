{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js", "../../@arcgis/core/chunks/DefaultMaterial.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{c as r}from\"../../../../../../chunks/mat3f32.js\";import{glsl as e}from\"../../shaderModules/interfaces.js\";import{Matrix3PassUniform as o}from\"../../shaderModules/Matrix3PassUniform.js\";function a(a){a.vertex.uniforms.add(new o(\"colorTextureTransformMatrix\",(e=>null!=e.colorTextureTransformMatrix?e.colorTextureTransformMatrix:r()))),a.varyings.add(\"colorUV\",\"vec2\"),a.vertex.code.add(e`void forwardColorUV(){\ncolorUV = (colorTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)}function s(a){a.vertex.uniforms.add(new o(\"normalTextureTransformMatrix\",(e=>null!=e.normalTextureTransformMatrix?e.normalTextureTransformMatrix:r()))),a.varyings.add(\"normalUV\",\"vec2\"),a.vertex.code.add(e`void forwardNormalUV(){\nnormalUV = (normalTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)}function i(a){a.vertex.uniforms.add(new o(\"emissiveTextureTransformMatrix\",(e=>null!=e.emissiveTextureTransformMatrix?e.emissiveTextureTransformMatrix:r()))),a.varyings.add(\"emissiveUV\",\"vec2\"),a.vertex.code.add(e`void forwardEmissiveUV(){\nemissiveUV = (emissiveTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)}function n(a){a.vertex.uniforms.add(new o(\"occlusionTextureTransformMatrix\",(e=>null!=e.occlusionTextureTransformMatrix?e.occlusionTextureTransformMatrix:r()))),a.varyings.add(\"occlusionUV\",\"vec2\"),a.vertex.code.add(e`void forwardOcclusionUV(){\nocclusionUV = (occlusionTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)}function t(a){a.vertex.uniforms.add(new o(\"metallicRoughnessTextureTransformMatrix\",(e=>null!=e.metallicRoughnessTextureTransformMatrix?e.metallicRoughnessTextureTransformMatrix:r()))),a.varyings.add(\"metallicRoughnessUV\",\"vec2\"),a.vertex.code.add(e`void forwardMetallicRoughnessUV(){\nmetallicRoughnessUV = (metallicRoughnessTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)}export{a as colorTextureUV,i as emissiveTextureUV,t as metallicRoughnessTextureUV,s as normalTextureUV,n as occlusionTextureUV};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{b as e}from\"./mat3.js\";import{c as r}from\"./mat3f64.js\";import{I as o}from\"./mat4f64.js\";import{ForwardLinearDepth as a}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{Offset as i}from\"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";import{ShaderOutput as s}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as l}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as t}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{InstancedDoublePrecision as n}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";import{NormalAttribute as d,NormalType as c}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{PositionAttribute as m}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";import{SymbolColor as g}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";import{TextureCoordinateAttribute as u}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{VertexColor as p}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{VertexNormal as v}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js\";import{VerticalOffset as h}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";import{DefaultMaterialAuxiliaryPasses as f}from\"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";import{ComputeNormalTexture as b}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js\";import{EvaluateAmbientOcclusion as w}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as x,addAmbientBoostFactor as y,addLightingGlobalFactor as C}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{addMainLightIntensity as T}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{multipassTerrainTest as j}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{Normals as L}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js\";import{PhysicallyBasedRendering as M}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";import{PhysicallyBasedRenderingParameters as P,PBRMode as $}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapPass as O,ReadShadowMapDraw as N}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{colorTextureUV as A,normalTextureUV as S,emissiveTextureUV as E,occlusionTextureUV as V,metallicRoughnessTextureUV as D}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js\";import{VisualVariables as _}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{symbolAlphaCutoff as U}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{DiscardOrAdjustAlphaPass as B}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";import{MixExternalColor as F}from\"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";import{addProjViewLocalOrigin as I,addCameraPosition as R}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float3PassUniform as z}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as W}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as k}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as G}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix3PassUniform as q}from\"../views/3d/webgl-engine/core/shaderModules/Matrix3PassUniform.js\";import{Matrix4PassUniform as H}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";import{ShaderBuilder as J}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as K}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as Q}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";import{VertexAttribute as X}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function Y(Y){const Z=new J,{vertex:ee,fragment:re,varyings:oe}=Z;if(I(ee,Y),Z.include(m),oe.add(\"vpos\",\"vec3\"),Z.include(_,Y),Z.include(n,Y),Z.include(h,Y),Y.hasColorTextureTransform&&Z.include(A),Y.output===s.Color||Y.output===s.Alpha){Y.hasNormalTextureTransform&&Z.include(S),Y.hasEmissionTextureTransform&&Z.include(E),Y.hasOcclusionTextureTransform&&Z.include(V),Y.hasMetallicRoughnessTextureTransform&&Z.include(D),R(ee,Y),Z.include(d,Y),Z.include(t,Y);const s=Y.normalType===c.Attribute||Y.normalType===c.Compressed;s&&Y.offsetBackfaces&&Z.include(i),Z.include(b,Y),Z.include(v,Y),Y.instancedColor&&Z.attributes.add(X.INSTANCECOLOR,\"vec4\"),oe.add(\"vPositionLocal\",\"vec3\"),Z.include(u,Y),Z.include(a,Y),Z.include(g,Y),Z.include(p,Y),ee.uniforms.add(new W(\"externalColor\",(e=>e.externalColor))),oe.add(\"vcolorExt\",\"vec4\"),Y.hasMultipassTerrain&&oe.add(\"depth\",\"float\");const l=Y.hasModelTransformation;if(l){const a=r();ee.uniforms.add(new H(\"model\",(e=>e.modelTransformation??o))),ee.uniforms.add(new q(\"normalTransform\",(r=>(e(a,r.modelTransformation??o),a))))}ee.code.add(G`\n      void main(void) {\n        forwardNormalizedVertexColor();\n        vcolorExt = externalColor;\n        ${Y.instancedColor?\"vcolorExt *= instanceColor * 0.003921568627451;\":\"\"}\n        vcolorExt *= vvColor();\n        vcolorExt *= getSymbolColor();\n        forwardColorMixMode();\n\n        if (vcolorExt.a < ${G.float(U)}) {\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n        } else {\n          vpos = calculateVPos();\n          ${l?\"vpos = (model * vec4(vpos, 1.0)).xyz;\":\"\"}\n          vPositionLocal = vpos - view[3].xyz;\n          vpos = subtractOrigin(vpos);\n          ${s?G`vNormalWorld = ${l?\"normalize(normalTransform * dpNormal(vvLocalNormal(normalModel())))\":\"dpNormal(vvLocalNormal(normalModel()))\"};`:\"\"}\n          vpos = addVerticalOffset(vpos, localOrigin);\n          ${Y.hasVertexTangents?\"vTangent = dpTransformVertexTangent(tangent);\":\"\"}\n          gl_Position = transformPosition(proj, view, vpos);\n          ${s&&Y.offsetBackfaces?\"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\":\"\"}\n        }\n\n        ${Y.hasMultipassTerrain?\"depth = (view * vec4(vpos, 1.0)).z;\":\"\"}\n        forwardLinearDepth();\n        forwardTextureCoordinates();\n        ${Y.hasColorTextureTransform?G`forwardColorUV();`:\"\"}\n        ${Y.hasNormalTextureTransform?G`forwardNormalUV();`:\"\"}\n        ${Y.hasEmissionTextureTransform?G`forwardEmissiveUV();`:\"\"}\n        ${Y.hasOcclusionTextureTransform?G`forwardOcclusionUV();`:\"\"}\n        ${Y.hasMetallicRoughnessTextureTransform?G`forwardMetallicRoughnessUV();`:\"\"}\n      }\n    `)}switch(Y.output){case s.Alpha:Z.include(l,Y),Z.include(B,Y),Z.include(j,Y),re.uniforms.add(new k(\"opacity\",(e=>e.opacity)),new k(\"layerOpacity\",(e=>e.layerOpacity))),Y.hasColorTexture&&re.uniforms.add(new K(\"tex\",(e=>e.texture))),re.include(F),re.code.add(G`\n      void main() {\n        discardBySlice(vpos);\n        ${Y.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n        ${Y.hasColorTexture?G`\n                vec4 texColor = texture(tex, ${Y.hasColorTextureTransform?G`colorUV`:G`vuv0`});\n                ${Y.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:G`vec4 texColor = vec4(1.0);`}\n        ${Y.hasVertexColors?G`float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:G`float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        fragColor = vec4(opacity_);\n      }\n    `);break;case s.Color:Z.include(l,Y),Z.include(x,Y),Z.include(w,Y),Z.include(B,Y),Z.include(Y.instancedDoublePrecision?O:N,Y),Z.include(j,Y),R(re,Y),re.uniforms.add(ee.uniforms.get(\"localOrigin\"),new z(\"ambient\",(e=>e.ambient)),new z(\"diffuse\",(e=>e.diffuse)),new k(\"opacity\",(e=>e.opacity)),new k(\"layerOpacity\",(e=>e.layerOpacity))),Y.hasColorTexture&&re.uniforms.add(new K(\"tex\",(e=>e.texture))),Z.include(P,Y),Z.include(M,Y),re.include(F),Z.include(L,Y),y(re),C(re),T(re),re.code.add(G`\n      void main() {\n        discardBySlice(vpos);\n        ${Y.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n        ${Y.hasColorTexture?G`\n                vec4 texColor = texture(tex, ${Y.hasColorTextureTransform?G`colorUV`:G`vuv0`});\n                ${Y.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:G`vec4 texColor = vec4(1.0);`}\n        shadingParams.viewDirection = normalize(vpos - cameraPosition);\n        ${Y.normalType===c.ScreenDerivative?G`\n                vec3 normal = screenDerivativeNormal(vPositionLocal);`:G`\n                shadingParams.normalView = vNormalWorld;\n                vec3 normal = shadingNormal(shadingParams);`}\n        ${Y.pbrMode===$.Normal?\"applyPBRFactors();\":\"\"}\n        float ssao = evaluateAmbientOcclusionInverse();\n        ssao *= getBakedOcclusion();\n\n        vec3 posWorld = vpos + localOrigin;\n\n        float additionalAmbientScale = additionalDirectedAmbientLight(posWorld);\n        float shadow = ${Y.receiveShadows?\"readShadowMap(vpos, linearDepth)\":Y.spherical?\"lightingGlobalFactor * (1.0 - additionalAmbientScale)\":\"0.0\"};\n\n        vec3 matColor = max(ambient, diffuse);\n        ${Y.hasVertexColors?G`\n                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:G`\n                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        ${Y.hasNormalTexture?G`\n                mat3 tangentSpace = ${Y.hasVertexTangents?\"computeTangentSpace(normal);\":\"computeTangentSpace(normal, vpos, vuv0);\"}\n                vec3 shadingNormal = computeTextureNormal(tangentSpace, ${Y.hasNormalTextureTransform?G`normalUV`:\"vuv0\"});`:G`vec3 shadingNormal = normal;`}\n        vec3 normalGround = ${Y.spherical?G`normalize(posWorld);`:G`vec3(0.0, 0.0, 1.0);`}\n\n        ${Y.snowCover?G`\n                float snow = smoothstep(0.5, 0.55, dot(normal, normalGround));\n                albedo = mix(albedo, vec3(1), snow);\n                shadingNormal = mix(shadingNormal, normal, snow);\n                ssao = mix(ssao, 1.0, snow);`:\"\"}\n\n        vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n\n        ${Y.pbrMode===$.Normal||Y.pbrMode===$.Schematic?G`\n                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\n                ${Y.snowCover?G`\n                        mrr = mix(mrr, vec3(0.0, 1.0, 0.04), snow);\n                        emission = mix(emission, vec3(0.0), snow);`:\"\"}\n\n                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, shadingParams.viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:G`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\n        fragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);\n        ${Y.transparencyPassType===Q.Color?G`fragColor = premultiplyAlpha(fragColor);`:\"\"}\n      }\n    `)}return Z.include(f,Y),Z}const Z=Object.freeze(Object.defineProperty({__proto__:null,build:Y},Symbol.toStringTag,{value:\"Module\"}));export{Z as D,Y as b};\n"],
  "mappings": "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",
  "names": ["a", "e", "o", "s", "i", "n", "t", "Y", "Z", "i", "o", "l", "p", "a", "s", "n", "t", "e", "c", "f", "u", "h"]
}

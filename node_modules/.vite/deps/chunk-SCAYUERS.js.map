{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/materials/ProceduralTextureRepository.js", "../../@arcgis/core/views/3d/webgl-engine/materials/stippleTextureRepository.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/ensureColor4.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/LineStipple.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{generateUID as e}from\"../../../../core/uid.js\";class t{constructor(t,r,s){this._createTexture=t,this._parametersKey=r,this._repository=new Map,this._orphanCache=s.newCache(`procedural-texture-repository:${e()}`,(e=>e.dispose()))}destroy(){for(const[e,{texture:t}]of this._repository)t.dispose();this._repository.clear(),this._orphanCache.destroy()}swap(e,t=null){const r=this._acquire(e);return this.release(t),r}release(e){if(null==e)return;const t=this._parametersKey(e),r=this._repository.get(t);if(r&&(r.refCount--,0===r.refCount)){this._repository.delete(t);const{texture:e}=r,s=e.gpuMemoryUsage;this._orphanCache.put(t,e,s)}}_acquire(e){if(null==e)return null;const t=this._parametersKey(e),s=this._repository.get(t);if(s)return s.refCount++,s.texture;const o=this._orphanCache.pop(t)??this._createTexture(e),i=new r(o);return this._repository.set(t,i),o}}class r{constructor(e){this.texture=e,this.refCount=1}}export{t as ProceduralTextureRepository};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{packFloatRGBA as t}from\"../../../../core/floatRGBA.js\";import{ProceduralTextureRepository as e}from\"./ProceduralTextureRepository.js\";import{PixelFormat as r,TextureWrapMode as o}from\"../../../webgl/enums.js\";import{Texture as n}from\"../../../webgl/Texture.js\";import{TextureDescriptor as i}from\"../../../webgl/TextureDescriptor.js\";function a(t,a){return new e((e=>{const{encodedData:a,paddedPixels:u}=c(e),s=new i;return s.internalFormat=r.RGBA,s.width=u,s.height=1,s.wrapMode=o.CLAMP_TO_EDGE,new n(t,s,a)}),(t=>`${t.pattern.join(\",\")}-r${t.pixelRatio}`),a)}function c(e){const r=u(e),o=1/e.pixelRatio,n=s(e),i=l(e),a=(Math.floor(.5*(i-1))+.5)*o,c=[];let f=1;for(const t of r){for(let e=0;e<t;e++){const r=f*(Math.min(e,t-1-e)+.5)*o/a*.5+.5;c.push(r)}f=-f}const d=Math.round(r[0]/2),m=[...c.slice(d),...c.slice(0,d)],h=n+p,x=new Uint8Array(4*h);let w=4;for(const u of m)t(u,x,w),w+=4;return x.copyWithin(0,w-4,w),x.copyWithin(w,4,8),{encodedData:x,paddedPixels:h}}function u(t){return t.pattern.map((e=>Math.round(e*t.pixelRatio)))}function s(t){if(null==t)return 1;const e=u(t);return Math.floor(e.reduce(((t,e)=>t+e)))}function l(t){return u(t).reduce(((t,e)=>Math.max(t,e)))}const p=2;export{p as STIPPLE_TEXTURE_PADDING,l as computeLongestPattern,s as computeTextureSize,a as createStippleTextureRepository};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{s}from\"../../../../chunks/vec4.js\";import{Z as n,c}from\"../../../../chunks/vec4f64.js\";function o(c){return null==c?n:4===c.length?c:s(r,c[0],c[1],c[2],1)}const r=c();export{o as ensureColor4};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{RgbaFloatEncoding as e}from\"../util/RgbaFloatEncoding.glsl.js\";import{addCameraPosition as t,addPixelRatio as i}from\"../util/View.glsl.js\";import{Float4PassUniform as o}from\"../../shaderModules/Float4PassUniform.js\";import{FloatPassUniform as r}from\"../../shaderModules/FloatPassUniform.js\";import{glsl as l}from\"../../shaderModules/interfaces.js\";import{Texture2DPassUniform as a}from\"../../shaderModules/Texture2DPassUniform.js\";import{STIPPLE_TEXTURE_PADDING as p,computeLongestPattern as s,computeTextureSize as n}from\"../../../materials/stippleTextureRepository.js\";import{ensureColor4 as d}from\"../../../shaders/ensureColor4.js\";function c(e,t){e.constants.add(\"stippleAlphaColorDiscard\",\"float\",.001),e.constants.add(\"stippleAlphaHighlightDiscard\",\"float\",.5),t.stippleEnabled?f(e,t):u(e)}function f(s,n){const c=!(n.draped&&n.stipplePreferContinuous),{vertex:f,fragment:u}=s;u.include(e),n.draped||(t(f,n),f.uniforms.add(new r(\"worldToScreenPerDistanceRatio\",((e,t)=>1/t.camera.perScreenPixelRatio))),f.code.add(l`float computeWorldToScreenRatio(vec3 segmentCenter) {\nfloat segmentDistanceToCamera = length(segmentCenter - cameraPosition);\nreturn worldToScreenPerDistanceRatio / segmentDistanceToCamera;\n}`)),s.varyings.add(\"vStippleDistance\",\"float\"),n.stippleRequiresClamp&&s.varyings.add(\"vStippleDistanceLimits\",\"vec2\"),n.stippleRequiresStretchMeasure&&s.varyings.add(\"vStipplePatternStretch\",\"float\"),f.code.add(l`\n    float discretizeWorldToScreenRatio(float worldToScreenRatio) {\n      float step = ${h};\n\n      float discreteWorldToScreenRatio = log(worldToScreenRatio);\n      discreteWorldToScreenRatio = ceil(discreteWorldToScreenRatio / step) * step;\n      discreteWorldToScreenRatio = exp(discreteWorldToScreenRatio);\n      return discreteWorldToScreenRatio;\n    }\n  `),f.code.add(l`vec2 computeStippleDistanceLimits(float startPseudoScreen, float segmentLengthPseudoScreen, float segmentLengthScreen, float patternLength) {`),f.code.add(l`\n    if (segmentLengthPseudoScreen >= ${c?\"patternLength\":\"1e4\"}) {\n  `),i(f,n),f.code.add(l`\n        // Round the screen length to get an integer number of pattern repetitions (minimum 1).\n        float repetitions = segmentLengthScreen / (patternLength * pixelRatio);\n        float flooredRepetitions = max(1.0, floor(repetitions + 0.5));\n        float segmentLengthScreenRounded = flooredRepetitions * patternLength;\n\n        ${n.stippleRequiresStretchMeasure?l`\n              float stretch = repetitions / flooredRepetitions;\n\n              // We need to impose a lower bound on the stretch factor to prevent the dots from merging together when there is only 1 repetition.\n              // 0.75 is the lowest possible stretch value for flooredRepetitions > 1, so it makes sense as lower bound.\n              vStipplePatternStretch = max(0.75, stretch);`:\"\"}\n\n        return vec2(0.0, segmentLengthScreenRounded);\n      }\n      return vec2(startPseudoScreen, startPseudoScreen + segmentLengthPseudoScreen);\n    }\n  `),u.constants.add(\"stippleTexturePadding\",\"float\",p),u.uniforms.add(new a(\"stipplePatternTexture\",(e=>e.stippleTexture)),new r(\"stipplePatternSDFNormalizer\",(e=>S(e.stipplePattern))),new r(\"stipplePatternPixelSizeInv\",(e=>1/m(e)))),u.code.add(l`float padStippleTexture(float u) {\nfloat paddedTextureSize = float(textureSize(stipplePatternTexture, 0).x);\nfloat unpaddedTextureSize = paddedTextureSize - stippleTexturePadding;\nreturn (u * unpaddedTextureSize + stippleTexturePadding * 0.5) / paddedTextureSize;\n}`),u.code.add(l`\n    float getStippleSDF(out bool isClamped) {\n      ${n.stippleRequiresClamp?l`\n          float stippleDistanceClamped = clamp(vStippleDistance, vStippleDistanceLimits.x, vStippleDistanceLimits.y);\n          vec2 aaCorrectedLimits = vStippleDistanceLimits + vec2(1.0, -1.0) / gl_FragCoord.w;\n          isClamped = vStippleDistance < aaCorrectedLimits.x || vStippleDistance > aaCorrectedLimits.y;`:l`\n          float stippleDistanceClamped = vStippleDistance;\n          isClamped = false;`}\n\n      float u = stippleDistanceClamped * gl_FragCoord.w * stipplePatternPixelSizeInv;\n      ${n.stippleScaleWithLineWidth?l`u *= vLineSizeInv;`:\"\"}\n      u = padStippleTexture(fract(u));\n\n      float encodedSDF = rgba2float(texture(stipplePatternTexture, vec2(u, 0.5)));\n      float sdf = (encodedSDF * 2.0 - 1.0) * stipplePatternSDFNormalizer;\n\n      ${n.stippleRequiresStretchMeasure?l`return (sdf - 0.5) * vStipplePatternStretch + 0.5;`:l`return sdf;`}\n    }\n\n    float getStippleSDF() {\n      bool ignored;\n      return getStippleSDF(ignored);\n    }\n\n    float getStippleAlpha() {\n      bool isClamped;\n      float stippleSDF = getStippleSDF(isClamped);\n\n      float antiAliasedResult = ${n.stippleScaleWithLineWidth?l`clamp(stippleSDF * vLineWidth + 0.5, 0.0, 1.0);`:l`clamp(stippleSDF + 0.5, 0.0, 1.0);`}\n\n      return isClamped ? floor(antiAliasedResult + 0.5) : antiAliasedResult;\n    }\n  `),n.stippleOffColorEnabled?(u.uniforms.add(new o(\"stippleOffColor\",(e=>d(e.stippleOffColor)))),u.code.add(l`#define discardByStippleAlpha(stippleAlpha, threshold) {}\n#define blendStipple(color, stippleAlpha) mix(color, stippleOffColor, stippleAlpha)`)):u.code.add(l`#define discardByStippleAlpha(stippleAlpha, threshold) if (stippleAlpha < threshold) { discard; }\n#define blendStipple(color, stippleAlpha) vec4(color.rgb, color.a * stippleAlpha)`)}function u(e){e.fragment.code.add(l`float getStippleAlpha() { return 1.0; }\n#define discardByStippleAlpha(_stippleAlpha_, _threshold_) {}\n#define blendStipple(color, _stippleAlpha_) color`)}function S(e){return e?(Math.floor(.5*(s(e)-1))+.5)/e.pixelRatio:1}function m(e){const t=e.stipplePattern;return t?n(e.stipplePattern)/t.pixelRatio:1}const h=l.float(.4);export{c as LineStipple,m as computePixelSize};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIsD,IAAM,IAAN,MAAO;AAAA,EAAC,YAAYA,IAAEC,IAAEC,IAAE;AAAC,SAAK,iBAAeF,IAAE,KAAK,iBAAeC,IAAE,KAAK,cAAY,oBAAI,OAAI,KAAK,eAAaC,GAAE,SAAS,iCAAiC,EAAE,CAAC,IAAI,CAAAC,OAAGA,GAAE,QAAQ,CAAE;AAAA,EAAC;AAAA,EAAC,UAAS;AAAC,eAAS,CAACA,IAAE,EAAC,SAAQH,GAAC,CAAC,KAAI,KAAK;AAAY,MAAAA,GAAE,QAAQ;AAAE,SAAK,YAAY,MAAM,GAAE,KAAK,aAAa,QAAQ;AAAA,EAAC;AAAA,EAAC,KAAKG,IAAEH,KAAE,MAAK;AAAC,UAAMC,KAAE,KAAK,SAASE,EAAC;AAAE,WAAO,KAAK,QAAQH,EAAC,GAAEC;AAAA,EAAC;AAAA,EAAC,QAAQE,IAAE;AAAC,QAAG,QAAMA;AAAE;AAAO,UAAMH,KAAE,KAAK,eAAeG,EAAC,GAAEF,KAAE,KAAK,YAAY,IAAID,EAAC;AAAE,QAAGC,OAAIA,GAAE,YAAW,MAAIA,GAAE,WAAU;AAAC,WAAK,YAAY,OAAOD,EAAC;AAAE,YAAK,EAAC,SAAQG,GAAC,IAAEF,IAAEC,KAAEC,GAAE;AAAe,WAAK,aAAa,IAAIH,IAAEG,IAAED,EAAC;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,SAASC,IAAE;AAAC,QAAG,QAAMA;AAAE,aAAO;AAAK,UAAMH,KAAE,KAAK,eAAeG,EAAC,GAAED,KAAE,KAAK,YAAY,IAAIF,EAAC;AAAE,QAAGE;AAAE,aAAOA,GAAE,YAAWA,GAAE;AAAQ,UAAME,KAAE,KAAK,aAAa,IAAIJ,EAAC,KAAG,KAAK,eAAeG,EAAC,GAAE,IAAE,IAAIF,GAAEG,EAAC;AAAE,WAAO,KAAK,YAAY,IAAIJ,IAAE,CAAC,GAAEI;AAAA,EAAC;AAAC;AAAC,IAAMH,KAAN,MAAO;AAAA,EAAC,YAAYE,IAAE;AAAC,SAAK,UAAQA,IAAE,KAAK,WAAS;AAAA,EAAC;AAAC;;;ACAvkB,SAASE,GAAEC,IAAED,IAAE;AAAC,SAAO,IAAI,EAAG,CAAAE,OAAG;AAAC,UAAK,EAAC,aAAYF,IAAE,cAAaG,GAAC,IAAE,EAAED,EAAC,GAAEE,KAAE,IAAIF;AAAE,WAAOE,GAAE,iBAAe,EAAE,MAAKA,GAAE,QAAMD,IAAEC,GAAE,SAAO,GAAEA,GAAE,WAAS,EAAE,eAAc,IAAI,EAAEH,IAAEG,IAAEJ,EAAC;AAAA,EAAC,GAAI,CAAAC,OAAG,GAAGA,GAAE,QAAQ,KAAK,GAAG,CAAC,KAAKA,GAAE,UAAU,IAAID,EAAC;AAAC;AAAC,SAAS,EAAEE,IAAE;AAAC,QAAMG,KAAE,EAAEH,EAAC,GAAEI,KAAE,IAAEJ,GAAE,YAAWK,KAAEH,GAAEF,EAAC,GAAE,IAAEM,GAAEN,EAAC,GAAEF,MAAG,KAAK,MAAM,OAAI,IAAE,EAAE,IAAE,OAAIM,IAAEG,KAAE,CAAC;AAAE,MAAIC,KAAE;AAAE,aAAUT,MAAKI,IAAE;AAAC,aAAQH,KAAE,GAAEA,KAAED,IAAEC,MAAI;AAAC,YAAMG,KAAEK,MAAG,KAAK,IAAIR,IAAED,KAAE,IAAEC,EAAC,IAAE,OAAII,KAAEN,KAAE,MAAG;AAAG,MAAAS,GAAE,KAAKJ,EAAC;AAAA,IAAC;AAAC,IAAAK,KAAE,CAACA;AAAA,EAAC;AAAC,QAAM,IAAE,KAAK,MAAML,GAAE,CAAC,IAAE,CAAC,GAAEM,KAAE,CAAC,GAAGF,GAAE,MAAM,CAAC,GAAE,GAAGA,GAAE,MAAM,GAAE,CAAC,CAAC,GAAEG,KAAEL,KAAE,GAAE,IAAE,IAAI,WAAW,IAAEK,EAAC;AAAE,MAAI,IAAE;AAAE,aAAUT,MAAKQ;AAAE,MAAER,IAAE,GAAE,CAAC,GAAE,KAAG;AAAE,SAAO,EAAE,WAAW,GAAE,IAAE,GAAE,CAAC,GAAE,EAAE,WAAW,GAAE,GAAE,CAAC,GAAE,EAAC,aAAY,GAAE,cAAaS,GAAC;AAAC;AAAC,SAAS,EAAEX,IAAE;AAAC,SAAOA,GAAE,QAAQ,IAAK,CAAAC,OAAG,KAAK,MAAMA,KAAED,GAAE,UAAU,CAAE;AAAC;AAAC,SAASG,GAAEH,IAAE;AAAC,MAAG,QAAMA;AAAE,WAAO;AAAE,QAAMC,KAAE,EAAED,EAAC;AAAE,SAAO,KAAK,MAAMC,GAAE,OAAQ,CAACD,IAAEC,OAAID,KAAEC,EAAE,CAAC;AAAC;AAAC,SAASM,GAAEP,IAAE;AAAC,SAAO,EAAEA,EAAC,EAAE,OAAQ,CAACA,IAAEC,OAAI,KAAK,IAAID,IAAEC,EAAC,CAAE;AAAC;AAAC,IAAM,IAAE;;;ACA7kC,SAASW,GAAEC,IAAE;AAAC,SAAO,QAAMA,KAAE,IAAE,MAAIA,GAAE,SAAOA,KAAE,EAAEC,IAAED,GAAE,CAAC,GAAEA,GAAE,CAAC,GAAEA,GAAE,CAAC,GAAE,CAAC;AAAC;AAAC,IAAMC,KAAE,EAAE;;;ACAsd,SAASC,GAAEC,IAAEC,IAAE;AAAC,EAAAD,GAAE,UAAU,IAAI,4BAA2B,SAAQ,IAAI,GAAEA,GAAE,UAAU,IAAI,gCAA+B,SAAQ,GAAE,GAAEC,GAAE,iBAAeC,GAAEF,IAAEC,EAAC,IAAEE,GAAEH,EAAC;AAAC;AAAC,SAASE,GAAEE,IAAEC,IAAE;AAAC,QAAMN,KAAE,EAAEM,GAAE,UAAQA,GAAE,0BAAyB,EAAC,QAAOH,IAAE,UAASC,GAAC,IAAEC;AAAE,EAAAD,GAAE,QAAQ,CAAC,GAAEE,GAAE,WAAS,EAAEH,IAAEG,EAAC,GAAEH,GAAE,SAAS,IAAI,IAAII,GAAE,iCAAiC,CAACN,IAAEC,OAAI,IAAEA,GAAE,OAAO,mBAAoB,CAAC,GAAEC,GAAE,KAAK,IAAII;AAAA;AAAA;AAAA,EAGjgC,IAAGF,GAAE,SAAS,IAAI,oBAAmB,OAAO,GAAEC,GAAE,wBAAsBD,GAAE,SAAS,IAAI,0BAAyB,MAAM,GAAEC,GAAE,iCAA+BD,GAAE,SAAS,IAAI,0BAAyB,OAAO,GAAEF,GAAE,KAAK,IAAII;AAAA;AAAA,qBAEhM,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAOnB,GAAEJ,GAAE,KAAK,IAAII,iJAAgJ,GAAEJ,GAAE,KAAK,IAAII;AAAA,uCACtIP,KAAE,kBAAgB,KAAK;AAAA,GAC3D,GAAEQ,GAAEL,IAAEG,EAAC,GAAEH,GAAE,KAAK,IAAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMbD,GAAE,gCAA8BC;AAAA;AAAA;AAAA;AAAA;AAAA,8DAKkB,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAM3D,GAAEH,GAAE,UAAU,IAAI,yBAAwB,SAAQ,CAAC,GAAEA,GAAE,SAAS,IAAI,IAAI,EAAE,yBAAyB,CAAAH,OAAGA,GAAE,cAAe,GAAE,IAAIM,GAAE,+BAA+B,CAAAN,OAAG,EAAEA,GAAE,cAAc,CAAE,GAAE,IAAIM,GAAE,8BAA8B,CAAAN,OAAG,IAAE,EAAEA,EAAC,CAAE,CAAC,GAAEG,GAAE,KAAK,IAAIG;AAAA;AAAA;AAAA;AAAA,EAIpP,GAAEH,GAAE,KAAK,IAAIG;AAAA;AAAA,QAEPD,GAAE,uBAAqBC;AAAA;AAAA;AAAA,2GAG0EA;AAAA;AAAA,6BAE5E;AAAA;AAAA;AAAA,QAGrBD,GAAE,4BAA0BC,yBAAsB,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMpDD,GAAE,gCAA8BC,yDAAsDA,eAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAY1ED,GAAE,4BAA0BC,sDAAmDA,sCAAqC;AAAA;AAAA;AAAA;AAAA,GAInJ,GAAED,GAAE,0BAAwBF,GAAE,SAAS,IAAI,IAAIH,GAAE,mBAAmB,CAAAA,OAAGM,GAAEN,GAAE,eAAe,CAAE,CAAC,GAAEG,GAAE,KAAK,IAAIG;AAAA,oFACzB,KAAGH,GAAE,KAAK,IAAIG;AAAA,kFAChB;AAAC;AAAC,SAASH,GAAEH,IAAE;AAAC,EAAAA,GAAE,SAAS,KAAK,IAAIM;AAAA;AAAA,kDAEpE;AAAC;AAAC,SAAS,EAAEN,IAAE;AAAC,SAAOA,MAAG,KAAK,MAAM,OAAIO,GAAEP,EAAC,IAAE,EAAE,IAAE,OAAIA,GAAE,aAAW;AAAC;AAAC,SAAS,EAAEA,IAAE;AAAC,QAAMC,KAAED,GAAE;AAAe,SAAOC,KAAEG,GAAEJ,GAAE,cAAc,IAAEC,GAAE,aAAW;AAAC;AAAC,IAAM,IAAEK,GAAE,MAAM,GAAE;",
  "names": ["t", "r", "s", "e", "o", "a", "t", "e", "u", "s", "r", "o", "n", "l", "c", "f", "m", "h", "o", "c", "r", "c", "e", "t", "f", "u", "s", "n", "o", "l"]
}

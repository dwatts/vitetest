import {
  f,
  o as o4,
  p
} from "./chunk-DTYFMKYK.js";
import {
  O
} from "./chunk-7S7LC3XK.js";
import {
  o as o3,
  u as u2
} from "./chunk-XR4HIGQP.js";
import {
  d as d3,
  l as l2,
  t as t2
} from "./chunk-AUKRB7YY.js";
import {
  t
} from "./chunk-JNO3YVNK.js";
import {
  n as n3
} from "./chunk-DU6E4DU3.js";
import {
  o as o2
} from "./chunk-4CZO65BK.js";
import {
  h
} from "./chunk-RRJGZKNX.js";
import {
  n as n2
} from "./chunk-PL5Q4C6Y.js";
import {
  E,
  S
} from "./chunk-A6VKJXIH.js";
import {
  n as n4,
  r as r2
} from "./chunk-KFSY6ZZH.js";
import {
  V
} from "./chunk-7EQSYZHW.js";
import {
  o
} from "./chunk-JPW73GY2.js";
import {
  _
} from "./chunk-7L7Z2HXM.js";
import {
  r
} from "./chunk-RTDN6KAT.js";
import {
  n
} from "./chunk-7KH4CLS5.js";
import {
  s as s4
} from "./chunk-YGB42LDG.js";
import {
  l,
  u2 as u
} from "./chunk-MP6GH2AC.js";
import {
  m,
  y3 as y
} from "./chunk-V76KGJFU.js";
import {
  a2
} from "./chunk-HB2SQRT2.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  T,
  d as d2
} from "./chunk-3R7FAT25.js";
import {
  d,
  j,
  s as s3
} from "./chunk-7I33FAWS.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-HMVAPW5X.js";
import {
  a
} from "./chunk-IYZKKFJM.js";

// node_modules/@arcgis/core/ground/NavigationConstraint.js
var t3;
var p2 = t3 = class extends l {
  constructor(r3) {
    super(r3), this.type = "none";
  }
  clone() {
    return new t3({ type: this.type });
  }
};
e([o({ none: "none", stayAbove: "stay-above" })], p2.prototype, "type", void 0), p2 = t3 = e([a2("esri.ground.NavigationConstraint")], p2);

// node_modules/@arcgis/core/Ground.js
var C;
var S2 = C = class extends u(_) {
  constructor(r3) {
    super(r3), this.opacity = 1, this.surfaceColor = null, this.navigationConstraint = null, this.layers = new V();
    const e3 = (r4) => {
      r4.parent && r4.parent !== this && "remove" in r4.parent && r4.parent.remove(r4), r4.parent = this, "elevation" !== r4.type && "base-elevation" !== r4.type && s.getLogger(this).error(`Layer '${r4.title}, id:${r4.id}' of type '${r4.type}' is not supported as a ground layer and will therefore be ignored. Only layers of type 'elevation' are supported.`);
    }, t5 = (r4) => {
      r4.parent = null;
    };
    this.addHandles([this.layers.on("after-add", (r4) => e3(r4.item)), this.layers.on("after-remove", (r4) => t5(r4.item))]);
  }
  initialize() {
    this.when().catch((r3) => {
      d(r3) || s.getLogger(this).error("#load()", "Failed to load ground", r3);
    }), this.resourceInfo && this.read(this.resourceInfo.data, this.resourceInfo.context);
  }
  destroy() {
    const r3 = this.layers.removeAll();
    for (const e3 of r3)
      e3.destroy();
    this.layers.destroy();
  }
  normalizeCtorArgs(r3) {
    return r3 && "resourceInfo" in r3 && (this._set("resourceInfo", r3.resourceInfo), delete (r3 = { ...r3 }).resourceInfo), r3;
  }
  set layers(r3) {
    this._set("layers", n2(r3, this._get("layers")));
  }
  writeLayers(r3, e3, o5, t5) {
    const i3 = [];
    r3 ? (t5 = { ...t5, layerContainerType: "ground" }, r3.forEach((r4) => {
      if ("write" in r4) {
        const e4 = {};
        o2(r4)().write(e4, t5) && i3.push(e4);
      } else
        t5 && t5.messages && t5.messages.push(new s2("layer:unsupported", `Layers (${r4.title}, ${r4.id}) of type '${r4.declaredClass}' cannot be persisted in the ground`, { layer: r4 }));
    }), e3.layers = i3) : e3.layers = i3;
  }
  load(r3) {
    return this.addResolvingPromise(this._loadFromSource(r3)), Promise.resolve(this);
  }
  loadAll() {
    return t(this, (r3) => {
      r3(this.layers);
    });
  }
  async queryElevation(r3, e3) {
    await this.load({ signal: e3 == null ? void 0 : e3.signal });
    const { ElevationQuery: o5 } = await import("./ElevationQuery-6R6RJPZG.js");
    s3(e3);
    const t5 = new o5(), s5 = this.layers.filter(L).toArray();
    return t5.queryAll(s5, r3, e3);
  }
  async createElevationSampler(r3, e3) {
    await this.load({ signal: e3 == null ? void 0 : e3.signal });
    const { ElevationQuery: o5 } = await import("./ElevationQuery-6R6RJPZG.js");
    s3(e3);
    const t5 = new o5(), s5 = this.layers.filter(L).toArray();
    return t5.createSamplerAll(s5, r3, e3);
  }
  clone() {
    const r3 = { opacity: this.opacity, surfaceColor: a(this.surfaceColor), navigationConstraint: a(this.navigationConstraint), layers: this.layers.slice() };
    return this.loaded && (r3.loadStatus = "loaded"), new C({ resourceInfo: this.resourceInfo }).set(r3);
  }
  read(r3, e3) {
    this.resourceInfo || this._set("resourceInfo", { data: r3, context: e3 }), super.read(r3, e3);
  }
  _loadFromSource(r3) {
    const e3 = this.resourceInfo;
    return e3 ? this._loadLayersFromJSON(e3.data, e3.context, r3) : Promise.resolve();
  }
  _loadLayersFromJSON(r3, e3, o5) {
    const t5 = e3 && e3.origin || "web-scene", s5 = e3 && e3.portal || null, a3 = e3 && e3.url || null;
    return import("./layersCreator-764XSVWR.js").then(({ populateOperationalLayers: e4 }) => {
      s3(o5);
      const i3 = [];
      if (r3.layers && Array.isArray(r3.layers)) {
        const o6 = { context: { origin: t5, url: a3, portal: s5, layerContainerType: "ground" }, defaultLayerType: "ArcGISTiledElevationServiceLayer" };
        i3.push(e4(this.layers, r3.layers, o6));
      }
      return j(i3);
    }).then(() => {
    });
  }
};
function I(r3) {
  return r3 && "createElevationSampler" in r3;
}
function L(r3) {
  return "elevation" === r3.type || I(r3);
}
e([y({ json: { read: false } })], S2.prototype, "layers", null), e([r("layers")], S2.prototype, "writeLayers", null), e([y({ readOnly: true })], S2.prototype, "resourceInfo", void 0), e([y({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { type: T, read: { reader: r2, source: "transparency" }, write: { writer: (r3, e3) => {
  e3.transparency = n4(r3);
}, target: "transparency" } } })], S2.prototype, "opacity", void 0), e([y({ type: h, json: { type: [T], write: (r3, e3) => {
  e3.surfaceColor = r3.toJSON().slice(0, 3);
} } })], S2.prototype, "surfaceColor", void 0), e([y({ type: p2, json: { write: true } })], S2.prototype, "navigationConstraint", void 0), S2 = C = e([a2("esri.Ground")], S2);
var A = S2;

// node_modules/@arcgis/core/layers/support/editableLayers.js
function e2(o5) {
  var _a, _b;
  return !(!(o5 && "object" == typeof o5 && "loaded" in o5 && o5.loaded && ((_b = (_a = E(o5)) == null ? void 0 : _a.operations) == null ? void 0 : _b.supportsEditing) && "type" in o5) || "editingEnabled" in o5 && !S(o5) || "scene" === o5.type && !i(o5));
}
function i(n5) {
  const r3 = n5.infoFor3D;
  if (!r3)
    return true;
  const { supportedFormats: e3, queryFormats: i3 } = r3, s5 = o3("model/gltf-binary", e3) ?? u2("glb", e3);
  return null != s5 && i3.includes(s5);
}

// node_modules/@arcgis/core/support/groundUtils.js
var i2 = { "world-elevation": { id: "worldElevation", url: "//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer", layerType: "ArcGISTiledElevationServiceLayer" }, "world-topobathymetry": { id: "worldTopoBathymetry", url: "//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/TopoBathy3D/ImageServer", layerType: "ArcGISTiledElevationServiceLayer" } };
function t4(t5) {
  let a3 = null;
  if ("string" == typeof t5)
    if (t5 in i2) {
      const r3 = i2[t5];
      a3 = new A({ resourceInfo: { data: { layers: [r3] } } });
    } else
      s.getLogger("esri.support.groundUtils").warn(`Unable to find ground definition for: ${t5}. Try "world-elevation"`);
  else
    a3 = d2(A, t5);
  return a3;
}

// node_modules/@arcgis/core/Map.js
var f2 = class extends l2(d3(n.EventedMixin(m))) {
  constructor(s5) {
    super(s5), this.allLayers = new n3({ getCollections: () => {
      var _a, _b, _c;
      return [(_a = this.basemap) == null ? void 0 : _a.baseLayers, (_b = this.ground) == null ? void 0 : _b.layers, this.layers, (_c = this.basemap) == null ? void 0 : _c.referenceLayers];
    }, getChildrenFunction: (s6) => "layers" in s6 ? s6.layers : null }), this.allTables = t2(this), this.basemap = null, this.editableLayers = new n3({ getCollections: () => [this.allLayers], itemFilterFunction: e2 }), this.ground = new A(), this._basemapCache = o4();
  }
  destroy() {
    var _a, _b;
    this.allLayers.destroy(), this.allTables.destroy(), this.editableLayers.destroy(), (_a = this.ground) == null ? void 0 : _a.destroy(), (_b = this.basemap) == null ? void 0 : _b.destroy(), f(this._basemapCache), this._basemapCache = null;
  }
  castBasemap(s5) {
    return p(s5, this._basemapCache);
  }
  castGround(s5) {
    const e3 = t4(s5);
    return e3 ?? this._get("ground");
  }
  findLayerById(s5) {
    return this.allLayers.find((e3) => e3.id === s5);
  }
  findTableById(s5) {
    return this.allTables.find((e3) => e3.id === s5);
  }
};
e([y({ readOnly: true, dependsOn: [] })], f2.prototype, "allLayers", void 0), e([y({ readOnly: true })], f2.prototype, "allTables", void 0), e([y({ type: O })], f2.prototype, "basemap", void 0), e([s4("basemap")], f2.prototype, "castBasemap", null), e([y({ readOnly: true })], f2.prototype, "editableLayers", void 0), e([y({ type: A, nonNullable: true })], f2.prototype, "ground", void 0), e([s4("ground")], f2.prototype, "castGround", null), f2 = e([a2("esri.Map")], f2);
var j2 = f2;

export {
  j2 as j
};
//# sourceMappingURL=chunk-UXVZ4PI3.js.map

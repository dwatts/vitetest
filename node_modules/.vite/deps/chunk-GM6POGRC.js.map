{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderModules/IntegerDrawUniform.js", "../../@arcgis/core/views/3d/webgl-engine/collections/Component/Material/shader/ComponentData.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{Uniform as r}from\"./Uniform.js\";import{BindType as e}from\"../shaderTechnique/BindType.js\";class o extends r{constructor(r,o){super(r,\"int\",e.Draw,((e,s,i)=>e.setUniform1i(r,o(s,i))))}}export{o as IntegerDrawUniform};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{neverReached as o}from\"../../../../../../../core/compilerUtils.js\";import{packFloatRGBA as e}from\"../../../../../../../core/floatRGBA.js\";import has from\"../../../../../../../core/has.js\";import{DecodeSymbolColor as r}from\"./DecodeSymbolColor.glsl.js\";import{ShaderOutput as t}from\"../../../../core/shaderLibrary/ShaderOutput.js\";import{RgbaFloatEncoding as n}from\"../../../../core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{Float4DrawUniform as a}from\"../../../../core/shaderModules/Float4DrawUniform.js\";import{IntegerDrawUniform as d}from\"../../../../core/shaderModules/IntegerDrawUniform.js\";import{glsl as l}from\"../../../../core/shaderModules/interfaces.js\";import{Texture2DDrawUniform as c}from\"../../../../core/shaderModules/Texture2DDrawUniform.js\";import{VertexAttribute as i}from\"../../../../lib/VertexAttribute.js\";var s;!function(o){o[o.Uniform=0]=\"Uniform\",o[o.Varying=1]=\"Varying\",o[o.COUNT=2]=\"COUNT\"}(s||(s={}));const x=429496.7296;function C(o,r){e(o/x*.5+.5,r)}function m(e,r){switch(r.componentData){case s.Varying:return f(e,r);case s.Uniform:return u(e);case s.COUNT:return;default:o(r.componentData)}}function f(o,e){const{vertex:a,fragment:d}=o;a.include(n),a.uniforms.add(new c(\"componentColorTex\",(o=>o.componentParameters.texture.texture))),o.attributes.add(i.COMPONENTINDEX,\"float\"),o.varyings.add(\"vExternalColorMixMode\",\"mediump float\"),o.varyings.add(\"vExternalColor\",\"vec4\");const s=e.output===t.ObjectAndLayerIdColor;s&&o.varyings.add(\"vObjectAndLayerIdColor\",\"vec4\"),o.include(r),a.constants.add(\"elevationScale\",\"float\",2*x),a.constants.add(\"stride\",\"float\",has(\"enable-feature:objectAndLayerId-rendering\")?3:2),a.code.add(l`vec2 getComponentTextureCoordinates(float componentIndex, float typeOffset) {\nfloat index = componentIndex * stride + typeOffset;\nfloat texSize = float(textureSize(componentColorTex, 0).x);\nfloat coordX = mod(index, texSize);\nfloat coordY = floor(index / texSize);\nreturn vec2(coordX, coordY) + 0.5;\n}`),a.code.add(l`\n  vec4 _readComponentColor() {\n    vec2 textureCoordinates = getComponentTextureCoordinates(componentIndex, 0.0);\n\n    return texelFetch(componentColorTex, ivec2(textureCoordinates), 0);\n   }\n\n   float readElevationOffset() {\n    vec2 textureCoordinates = getComponentTextureCoordinates(componentIndex, 1.0);\n\n    vec4 encodedElevation = texelFetch(componentColorTex, ivec2(textureCoordinates), 0);\n    return (rgba2float(encodedElevation) - 0.5) * elevationScale;\n  }\n\n  ${s?l`\n          void forwardObjectAndLayerIdColor() {\n            vec2 textureCoordinates = getComponentTextureCoordinates(componentIndex, 2.0);\n\n            vObjectAndLayerIdColor = texelFetch(componentColorTex, ivec2(textureCoordinates), 0);\n          }`:l`void forwardObjectAndLayerIdColor() {}`}\n\n  vec4 forwardExternalColor(out bool castShadows) {\n    vec4 componentColor = _readComponentColor() * 255.0;\n\n    float shadowFlag = mod(componentColor.b * 255.0, 2.0);\n    componentColor.b -= shadowFlag;\n    castShadows = shadowFlag >= 1.0;\n\n    int decodedColorMixMode;\n    vExternalColor = decodeSymbolColor(componentColor, decodedColorMixMode) * 0.003921568627451; // = 1/255;\n    vExternalColorMixMode = float(decodedColorMixMode) + 0.5; // add 0.5 to avoid interpolation artifacts\n\n    return vExternalColor;\n  }\n`),d.code.add(l`\n  void readExternalColor(out vec4 externalColor, out int externalColorMixMode) {\n    externalColor = vExternalColor;\n    externalColorMixMode = int(vExternalColorMixMode);\n  }\n\n  void outputObjectAndLayerIdColor() {\n     ${s?l`fragColor = vObjectAndLayerIdColor;`:\"\"}\n  }\n`)}function u(o){const{vertex:e,fragment:r}=o;e.uniforms.add(new a(\"externalColor\",(o=>o.componentParameters.externalColor))),r.uniforms.add(new d(\"externalColorMixMode\",(o=>o.componentParameters.externalColorMixMode))),o.varyings.add(\"vExternalColor\",\"vec4\"),e.code.add(l`float readElevationOffset() {\nreturn 0.0;\n}\nvoid forwardObjectAndLayerIdColor() {\n}\nvec4 forwardExternalColor(out bool castShadows) {\nvExternalColor = externalColor;\ncastShadows = true;\nreturn externalColor;\n}`),r.code.add(l`void readExternalColor(out vec4 color, out int colorMixMode) {\ncolor = vExternalColor;\ncolorMixMode = externalColorMixMode;\n}\nvoid outputObjectAndLayerIdColor() {\nfragColor = vec4(1.0,0.0,0.0,0.0);\n}`)}export{m as ComponentData,s as ComponentDataType,x as MAX_ELEVATION_OFFSET,C as encodeElevationOffset};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIiG,IAAMA,KAAN,cAAgB,EAAC;AAAA,EAAC,YAAY,GAAEA,IAAE;AAAC,UAAM,GAAE,OAAM,EAAE,MAAM,CAACC,IAAEC,IAAEC,OAAIF,GAAE,aAAa,GAAED,GAAEE,IAAEC,EAAC,CAAC,CAAE;AAAA,EAAC;AAAC;;;ACA8oB,IAAIC;AAAE,CAAC,SAASC,IAAE;AAAC,EAAAA,GAAEA,GAAE,UAAQ,CAAC,IAAE,WAAUA,GAAEA,GAAE,UAAQ,CAAC,IAAE,WAAUA,GAAEA,GAAE,QAAM,CAAC,IAAE;AAAO,EAAED,OAAIA,KAAE,CAAC,EAAE;AAAE,IAAM,IAAE;AAAY,SAAS,EAAEC,IAAE,GAAE;AAAC,IAAEA,KAAE,IAAE,MAAG,KAAG,CAAC;AAAC;AAAC,SAAS,EAAEC,IAAE,GAAE;AAAC,UAAO,EAAE,eAAc;AAAA,IAAC,KAAKF,GAAE;AAAQ,aAAO,EAAEE,IAAE,CAAC;AAAA,IAAE,KAAKF,GAAE;AAAQ,aAAO,EAAEE,EAAC;AAAA,IAAE,KAAKF,GAAE;AAAM;AAAA,IAAO;AAAQ,QAAE,EAAE,aAAa;AAAA,EAAC;AAAC;AAAC,SAAS,EAAEC,IAAEC,IAAE;AAAC,QAAK,EAAC,QAAOC,IAAE,UAAS,EAAC,IAAEF;AAAE,EAAAE,GAAE,QAAQA,EAAC,GAAEA,GAAE,SAAS,IAAI,IAAI,EAAE,qBAAqB,CAAAF,OAAGA,GAAE,oBAAoB,QAAQ,OAAQ,CAAC,GAAEA,GAAE,WAAW,IAAI,EAAE,gBAAe,OAAO,GAAEA,GAAE,SAAS,IAAI,yBAAwB,eAAe,GAAEA,GAAE,SAAS,IAAI,kBAAiB,MAAM;AAAE,QAAMD,KAAEE,GAAE,WAAS,EAAE;AAAsB,EAAAF,MAAGC,GAAE,SAAS,IAAI,0BAAyB,MAAM,GAAEA,GAAE,QAAQ,CAAC,GAAEE,GAAE,UAAU,IAAI,kBAAiB,SAAQ,IAAE,CAAC,GAAEA,GAAE,UAAU,IAAI,UAAS,SAAQ,IAAI,2CAA2C,IAAE,IAAE,CAAC,GAAEA,GAAE,KAAK,IAAIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMzoD,GAAEE,GAAE,KAAK,IAAIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAcXD,KAAEC;AAAA;AAAA;AAAA;AAAA;AAAA,eAKOA,0CAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAerD,GAAE,EAAE,KAAK,IAAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOPD,KAAEC,0CAAuC,EAAE;AAAA;AAAA,CAEjD;AAAC;AAAC,SAAS,EAAEA,IAAE;AAAC,QAAK,EAAC,QAAOC,IAAE,UAAS,EAAC,IAAED;AAAE,EAAAC,GAAE,SAAS,IAAI,IAAID,GAAE,iBAAiB,CAAAA,OAAGA,GAAE,oBAAoB,aAAc,CAAC,GAAE,EAAE,SAAS,IAAI,IAAIA,GAAE,wBAAwB,CAAAA,OAAGA,GAAE,oBAAoB,oBAAqB,CAAC,GAAEA,GAAE,SAAS,IAAI,kBAAiB,MAAM,GAAEC,GAAE,KAAK,IAAID;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS7Q,GAAE,EAAE,KAAK,IAAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMb;AAAC;",
  "names": ["o", "e", "s", "i", "s", "o", "e", "a"]
}

import {
  n
} from "./chunk-ZGOWGH4U.js";
import {
  s
} from "./chunk-Z3NHJA5D.js";
import {
  i2 as i
} from "./chunk-BO2REVMA.js";
import {
  o
} from "./chunk-V66LHQVK.js";
import {
  O
} from "./chunk-BN6X2OXK.js";

// node_modules/@arcgis/core/chunks/Blur.glsl.js
function a() {
  const a2 = new i(), { attributes: f2, varyings: i2, vertex: u, fragment: n2 } = a2;
  return f2.add(O.POSITION, "vec2"), i2.add("uv", "vec2"), i2.add("offsets[2]", "vec4"), n(u), u.code.add(o`void main() {
uv = position * 0.5 + vec2(0.5);
gl_Position = vec4(position, 0, 1);
offsets[0] = uv.xyxy + resolution.xyxy * vec4( -1.0, 0.0, 0.0, 1.0 );
offsets[1] = uv.xyxy + resolution.xyxy * vec4( 1.0, 0.0, 0.0, -1.0 );
}`), n2.uniforms.add(new s("blendWeightsTexture", (e) => e.blend.colorTexture), new s("colorTexture", (e) => e.colorTexture)), n(n2), n2.code.add(o`void main() {
vec4 a;
a.rb = texture(blendWeightsTexture, uv).rb;
a.g = texture(blendWeightsTexture, offsets[1].zw).g;
a.a = texture(blendWeightsTexture, offsets[1].xy).a;
if ( dot(a, vec4(1.0)) < 1e-5 ) {
fragColor = texture( colorTexture, uv, 0.0 );
} else {
vec2 offset;
offset.x = a.a > a.b ? a.a : -a.b;
offset.y = a.g > a.r ? -a.g : a.r;
if ( abs( offset.x ) > abs( offset.y )) {
offset.y = 0.0;
} else {
offset.x = 0.0;
}
vec4 C = texture( colorTexture, uv, 0.0 );
vec4 Cop = texture( colorTexture, uv + sign( offset ) * resolution.xy, 0.0 );
float s = abs( offset.x ) > abs( offset.y ) ? abs( offset.x ) : abs( offset.y );
fragColor = mix(C, Cop, s);
}
}`), a2;
}
var f = Object.freeze(Object.defineProperty({ __proto__: null, build: a }, Symbol.toStringTag, { value: "Module" }));

export {
  a,
  f
};
//# sourceMappingURL=chunk-KD3Y6TRE.js.map

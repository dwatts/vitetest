import {
  b
} from "./chunk-SVMSZXNG.js";
import {
  l
} from "./chunk-V3PJRXNX.js";
import {
  t as t4
} from "./chunk-LJQDQQM4.js";
import {
  t as t3
} from "./chunk-HZLL7U3X.js";
import {
  A as A2,
  D,
  E as E2,
  F,
  T as T2,
  a,
  a2,
  c as c2,
  e as e2,
  e2 as e3,
  f as f2,
  g,
  j as j2,
  k,
  q as q2,
  x,
  y as y2
} from "./chunk-VO3QL62R.js";
import "./chunk-JPPBETEK.js";
import {
  N,
  u2 as u
} from "./chunk-3D7MGUA2.js";
import "./chunk-LAL3ZWKX.js";
import "./chunk-A4BUWMTN.js";
import "./chunk-2MO4ECWJ.js";
import "./chunk-B4D7NEKN.js";
import "./chunk-KO2NU3NQ.js";
import "./chunk-WE6NVEVF.js";
import "./chunk-USNIBKH4.js";
import "./chunk-D6UIL3LF.js";
import "./chunk-B5TYSRH2.js";
import "./chunk-XBN7M5OG.js";
import "./chunk-BPITJIFG.js";
import "./chunk-ERFCZMKG.js";
import "./chunk-C2GW4T2D.js";
import {
  f
} from "./chunk-LFQ3TKCC.js";
import {
  A
} from "./chunk-US3PAPRX.js";
import "./chunk-LDD2XCBY.js";
import {
  B,
  E,
  I2 as I,
  L,
  O,
  Pe,
  Q,
  Te,
  V,
  ce,
  fe,
  me,
  o,
  oe,
  q,
  t as t2,
  v,
  z
} from "./chunk-6AMBGZK5.js";
import {
  c
} from "./chunk-YAWND7HF.js";
import "./chunk-HQEF5G5V.js";
import {
  e,
  t
} from "./chunk-FJYIB7HF.js";
import "./chunk-MVWFPLOX.js";
import "./chunk-X3YW4YOG.js";
import "./chunk-IG234GCS.js";
import "./chunk-WTKN55TU.js";
import "./chunk-TDPKDZC3.js";
import "./chunk-M5UHI5WR.js";
import {
  Be
} from "./chunk-3C6NSN3C.js";
import "./chunk-J7GVLYC6.js";
import "./chunk-HWCVRBK2.js";
import "./chunk-WQH5IZQP.js";
import "./chunk-LCS4FL4K.js";
import "./chunk-4JFWLHWB.js";
import "./chunk-Y7OTFSYN.js";
import "./chunk-S7JBLP35.js";
import "./chunk-DZRIMGKU.js";
import "./chunk-MRYR5ID7.js";
import "./chunk-I3MRHING.js";
import "./chunk-RWWB77SD.js";
import "./chunk-Y7MP63H6.js";
import "./chunk-2WJ2SRK2.js";
import "./chunk-ZVHSORNP.js";
import "./chunk-XUV5GLNE.js";
import "./chunk-ZMFGNDTK.js";
import "./chunk-UL64BLDS.js";
import "./chunk-EG6CFIHA.js";
import "./chunk-CMNAZRWU.js";
import "./chunk-KE6VYSDW.js";
import "./chunk-SJEOKSSU.js";
import "./chunk-5GE3CZPD.js";
import "./chunk-WZRJMJNH.js";
import "./chunk-GDP6ZU2A.js";
import "./chunk-XIYY37WZ.js";
import "./chunk-P4PDTNIU.js";
import "./chunk-SRDSGSDW.js";
import "./chunk-IMXPH7BL.js";
import "./chunk-ENOZ3X2B.js";
import "./chunk-DRCIVBVA.js";
import "./chunk-CEFGWR5H.js";
import "./chunk-NX5NNI52.js";
import "./chunk-G2DTL6AE.js";
import "./chunk-Q6HN54VB.js";
import "./chunk-NDKDK4Y5.js";
import "./chunk-O443WBFA.js";
import "./chunk-RGS3ANC3.js";
import "./chunk-Z3GCSCQI.js";
import "./chunk-PPNAO2PM.js";
import "./chunk-UU2XJGLA.js";
import "./chunk-CGJNVOU3.js";
import "./chunk-YA7WDOJK.js";
import "./chunk-C6OHOFP6.js";
import "./chunk-ZX45U24W.js";
import "./chunk-KYWX7M3R.js";
import "./chunk-7H2AXTDH.js";
import "./chunk-QC2JMJXZ.js";
import "./chunk-GFPASUQP.js";
import "./chunk-KDACHJ5G.js";
import "./chunk-IQRLZSBX.js";
import "./chunk-OZL6Q7O2.js";
import "./chunk-FVR25IMN.js";
import "./chunk-EV77QZBT.js";
import "./chunk-QZ6WR57P.js";
import "./chunk-467UETSR.js";
import "./chunk-SHFLRM67.js";
import "./chunk-YGUWDSEH.js";
import "./chunk-6RU2CUTK.js";
import "./chunk-GOK4EI36.js";
import "./chunk-LO3LAMAS.js";
import "./chunk-ZWFMUHG3.js";
import "./chunk-EFRTD25L.js";
import "./chunk-EAGDM3GO.js";
import {
  y
} from "./chunk-GSS6WNQU.js";
import "./chunk-C2EHS6UI.js";
import "./chunk-H37COY3W.js";
import "./chunk-NVGPNIR6.js";
import "./chunk-B4D7M7HT.js";
import "./chunk-3T2ETA25.js";
import "./chunk-5IYCCZ54.js";
import "./chunk-JLSXEPY6.js";
import "./chunk-VMTVUE47.js";
import "./chunk-GDZM4A6K.js";
import "./chunk-XWGNMTES.js";
import "./chunk-6NNEHJYI.js";
import "./chunk-BNBT4QTW.js";
import "./chunk-3FQOSG5O.js";
import "./chunk-W4KI5YEI.js";
import "./chunk-CAFGOFIE.js";
import "./chunk-7EG7BYWF.js";
import "./chunk-JNDFAMXY.js";
import "./chunk-NTEKJWGF.js";
import "./chunk-TFIKV5RU.js";
import "./chunk-KW6QQDGN.js";
import "./chunk-AQ7R6V4L.js";
import "./chunk-DOQ3SAAR.js";
import "./chunk-4BXK4H4L.js";
import "./chunk-SLVNG7FV.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-XR4HIGQP.js";
import "./chunk-JNO3YVNK.js";
import "./chunk-DKJBDKGA.js";
import "./chunk-4CZO65BK.js";
import "./chunk-SVCGLUNW.js";
import "./chunk-3KEIFTQ6.js";
import "./chunk-DEZCXTA3.js";
import "./chunk-RRJGZKNX.js";
import "./chunk-PL5Q4C6Y.js";
import "./chunk-A6VKJXIH.js";
import "./chunk-KFSY6ZZH.js";
import "./chunk-7EQSYZHW.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-GGOVZ2GK.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-WLWP35G2.js";
import "./chunk-JPW73GY2.js";
import "./chunk-HXPVVSLV.js";
import "./chunk-4OR73Y2R.js";
import "./chunk-EKJ2DJIR.js";
import "./chunk-TEHNQYQD.js";
import "./chunk-TPJLFGOT.js";
import "./chunk-CQX57DED.js";
import "./chunk-3CQBBMMD.js";
import "./chunk-2CTB7MKH.js";
import {
  j
} from "./chunk-Z2ZUNW5S.js";
import "./chunk-7L7Z2HXM.js";
import "./chunk-75NKPXTR.js";
import "./chunk-EUVARFSM.js";
import "./chunk-3VUFACNT.js";
import "./chunk-ZEEBL7ZN.js";
import "./chunk-RTDN6KAT.js";
import "./chunk-GJ7PJ7XG.js";
import "./chunk-57CHUY45.js";
import "./chunk-SJ2GJCS2.js";
import "./chunk-H7RDAEPY.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-S5OISW44.js";
import "./chunk-7KH4CLS5.js";
import "./chunk-WCHO7VLT.js";
import "./chunk-JL3TJGVW.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-43LWRDQS.js";
import "./chunk-R6YKST3K.js";
import "./chunk-ZJEWQGHG.js";
import "./chunk-YGB42LDG.js";
import "./chunk-F3KGLZDZ.js";
import "./chunk-MP6GH2AC.js";
import "./chunk-V76KGJFU.js";
import "./chunk-HB2SQRT2.js";
import "./chunk-U3J7253Q.js";
import "./chunk-PD5Q7TDW.js";
import "./chunk-ZWUBORGT.js";
import "./chunk-3R7FAT25.js";
import {
  T
} from "./chunk-7I33FAWS.js";
import "./chunk-DWOEYHKS.js";
import "./chunk-HMVAPW5X.js";
import "./chunk-IYZKKFJM.js";
import "./chunk-JZJWZ6DN.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/arcade/functions/featuresetbase.js
function J(e4, t5, n, i) {
  if (1 === i.length) {
    if (z(i[0]))
      return l(e4, i[0], -1);
    if (q(i[0]))
      return l(e4, i[0].toArray(), -1);
  }
  return l(e4, i, -1);
}
async function K(e4, t5, n) {
  const i = e4.getVariables();
  if (i.length > 0) {
    const a3 = [];
    for (let e5 = 0; e5 < i.length; e5++) {
      const r2 = { name: i[e5] };
      a3.push(await t5.evaluateIdentifier(n, r2));
    }
    const r = {};
    for (let e5 = 0; e5 < i.length; e5++)
      r[i[e5]] = a3[e5];
    return e4.parameters = r, e4;
  }
  return e4;
}
function Y(e4, t5, n = null) {
  for (const i in e4)
    if (i.toLowerCase() === t5.toLowerCase())
      return e4[i];
  return n;
}
function X(e4) {
  if (null === e4)
    return null;
  const t5 = { type: Y(e4, "type", ""), name: Y(e4, "name", "") };
  if ("range" === t5.type)
    t5.range = Y(e4, "range", []);
  else {
    t5.codedValues = [];
    for (const n of Y(e4, "codedValues", []))
      t5.codedValues.push({ name: Y(n, "name", ""), code: Y(n, "code", null) });
  }
  return t5;
}
function ee(e4) {
  if (null === e4)
    return null;
  const t5 = {}, n = Y(e4, "wkt", null);
  null !== n && (t5.wkt = n);
  const i = Y(e4, "wkid", null);
  return null !== i && (t5.wkid = i), t5;
}
function te(e4) {
  if (null === e4)
    return null;
  const t5 = { hasZ: Y(e4, "hasz", false), hasM: Y(e4, "hasm", false) }, n = Y(e4, "spatialreference", null);
  n && (t5.spatialReference = ee(n));
  const i = Y(e4, "x", null);
  if (null !== i)
    return t5.x = i, t5.y = Y(e4, "y", null), t5;
  const a3 = Y(e4, "rings", null);
  if (null !== a3)
    return t5.rings = a3, t5;
  const r = Y(e4, "paths", null);
  if (null !== r)
    return t5.paths = r, t5;
  const s = Y(e4, "points", null);
  if (null !== s)
    return t5.points = s, t5;
  for (const l2 of ["xmin", "xmax", "ymin", "ymax", "zmin", "zmax", "mmin", "mmax"]) {
    const n2 = Y(e4, l2, null);
    null !== n2 && (t5[l2] = n2);
  }
  return t5;
}
function ne(e4, t5) {
  for (const n of t5)
    if (n === e4)
      return true;
  return false;
}
function ie(e4) {
  return !!e4.layerDefinition && (!!e4.featureSet && (false !== ne(e4.layerDefinition.geometryType, ["", null, "esriGeometryNull", "esriGeometryPoint", "esriGeometryPolyline", "esriGeometryPolygon", "esriGeometryMultipoint", "esriGeometryEnvelope"]) && (false !== z(e4.layerDefinition.fields) && false !== z(e4.featureSet.features))));
}
function ae(_) {
  "async" === _.mode && (_.functions.timezone = function(t5, r) {
    return _.standardFunctionAsync(t5, r, async (s, l2, o2) => {
      if (Q(o2, 1, 2, t5, r), V(o2[0])) {
        if (await o2[0].load(), 1 === o2.length || null === o2[1])
          return o2[0].dateTimeReferenceFieldIndex.layerDateFieldsTimeZone;
        if (!(o2[1] instanceof A) || false === o2[1].hasField("type"))
          throw new t(t5, e.InvalidParameter, r);
        const e4 = o2[1].field("type");
        if (false === L(e4))
          throw new t(t5, e.InvalidParameter, r);
        switch (oe(e4).toLowerCase()) {
          case "preferredtimezone":
            return o2[0].dateTimeReferenceFieldIndex.layerPreferredTimeZone;
          case "editfieldsinfo":
            return o2[0].dateTimeReferenceFieldIndex.layerEditFieldsTimeZone;
          case "timeinfo":
            return o2[0].dateTimeReferenceFieldIndex.layerTimeInfoTimeZone;
          case "field":
            if (o2[1].hasField("fieldname") && L(o2[1].field("fieldname")))
              return o2[0].dateTimeReferenceFieldIndex.fieldTimeZone(oe(o2[1].field("fieldname")));
        }
        throw new t(t5, e.InvalidParameter, r);
      }
      const f3 = ce(o2[0], Pe(t5));
      if (null === f3)
        return null;
      const u2 = f3.timeZone;
      return "system" === u2 ? c.systemTimeZoneCanonicalName : u2;
    });
  }, _.functions.sqltimestamp = function(e4, t5) {
    return _.standardFunctionAsync(e4, t5, async (n, r, s) => {
      Q(s, 1, 3, e4, t5);
      const l2 = s[0];
      if (B(l2)) {
        if (1 === s.length)
          return l2.toSQLString();
        if (2 === s.length)
          return l2.changeTimeZone(oe(s[1])).toSQLString();
        throw new t(e4, e.InvalidParameter, t5);
      }
      if (V(l2)) {
        if (3 !== s.length)
          throw new t(e4, e.InvalidParameter, t5);
        await l2.load();
        const n2 = oe(s[1]);
        if (false === B(s[2]))
          throw new t(e4, e.InvalidParameter, t5);
        const r2 = l2.fieldTimeZone(n2);
        return null === r2 ? s[2].toSQLString() : s[2].changeTimeZone(r2).toSQLString();
      }
      throw new t(e4, e.InvalidParameter, t5);
    });
  }, _.signatures.push({ name: "sqltimestamp", min: 2, max: 4 }), _.functions.featuresetbyid = function(e4, t5) {
    return _.standardFunctionAsync(e4, t5, (n, r, l2) => {
      if (Q(l2, 2, 4, e4, t5), l2[0] instanceof e2) {
        const n2 = oe(l2[1]);
        let r2 = v(l2[2], null);
        const s = me(v(l2[3], true));
        if (null === r2 && (r2 = ["*"]), false === z(r2))
          throw new t(e4, e.InvalidParameter, t5);
        return l2[0].featureSetById(n2, s, r2);
      }
      throw new t(e4, e.InvalidParameter, t5);
    });
  }, _.signatures.push({ name: "featuresetbyid", min: 2, max: 4 }), _.functions.getfeatureset = function(e4, t5) {
    return _.standardFunctionAsync(e4, t5, (n, r, s) => {
      if (Q(s, 1, 2, e4, t5), E(s[0])) {
        let t6 = v(s[1], "datasource");
        return null === t6 && (t6 = "datasource"), t6 = oe(t6).toLowerCase(), j2(s[0].fullSchema(), t6, e4.lrucache, e4.interceptor, e4.spatialReference);
      }
      throw new t(e4, e.InvalidParameter, t5);
    });
  }, _.signatures.push({ name: "getfeatureset", min: 1, max: 2 }), _.functions.featuresetbyportalitem = function(e4, n) {
    return _.standardFunctionAsync(e4, n, (r, s, l2) => {
      var _a;
      if (Q(l2, 2, 5, e4, n), null === l2[0])
        throw new t(e4, e.PortalRequired, n);
      if (l2[0] instanceof t3) {
        const t5 = oe(l2[1]), r2 = oe(l2[2]);
        let s2 = v(l2[3], null);
        const f4 = me(v(l2[4], true));
        if (null === s2 && (s2 = ["*"]), false === z(s2))
          throw new t(e4, e.InvalidParameter, n);
        let u3 = null;
        return u3 = e4.services && e4.services.portal ? e4.services.portal : j.getDefault(), u3 = t4(l2[0], u3), q2(t5, r2, e4.spatialReference, s2, f4, u3, e4.lrucache, e4.interceptor);
      }
      if (false === L(l2[0]))
        throw new t(e4, e.PortalRequired, n);
      const f3 = oe(l2[0]), u2 = oe(l2[1]);
      let c3 = v(l2[2], null);
      const d = me(v(l2[3], true));
      if (null === c3 && (c3 = ["*"]), false === z(c3))
        throw new t(e4, e.InvalidParameter, n);
      return q2(f3, u2, e4.spatialReference, c3, d, ((_a = e4.services) == null ? void 0 : _a.portal) ?? j.getDefault(), e4.lrucache, e4.interceptor);
    });
  }, _.signatures.push({ name: "featuresetbyportalitem", min: 2, max: 5 }), _.functions.featuresetbyname = function(e4, t5) {
    return _.standardFunctionAsync(e4, t5, (n, r, l2) => {
      if (Q(l2, 2, 4, e4, t5), l2[0] instanceof e2) {
        const n2 = oe(l2[1]);
        let r2 = v(l2[2], null);
        const s = me(v(l2[3], true));
        if (null === r2 && (r2 = ["*"]), false === z(r2))
          throw new t(e4, e.InvalidParameter, t5);
        return l2[0].featureSetByName(n2, s, r2);
      }
      throw new t(e4, e.InvalidParameter, t5);
    });
  }, _.signatures.push({ name: "featuresetbyname", min: 2, max: 4 }), _.functions.featureset = function(e4, t5) {
    return _.standardFunction(e4, t5, (r, s, l2) => {
      var _a;
      Q(l2, 1, 1, e4, t5);
      let o2 = l2[0];
      const f3 = { layerDefinition: { geometryType: "", objectIdField: "", hasM: false, hasZ: false, globalIdField: "", typeIdField: "", fields: [] }, featureSet: { geometryType: "", features: [] } };
      if (L(o2))
        o2 = JSON.parse(o2), void 0 !== o2.layerDefinition ? (f3.layerDefinition = o2.layerDefinition, f3.featureSet = o2.featureSet, o2.layerDefinition.spatialReference && (f3.layerDefinition.spatialReference = o2.layerDefinition.spatialReference)) : (f3.featureSet.features = o2.features, f3.featureSet.geometryType = o2.geometryType, f3.layerDefinition.geometryType = f3.featureSet.geometryType, f3.layerDefinition.objectIdField = o2.objectIdFieldName ?? "", f3.layerDefinition.typeIdField = o2.typeIdFieldName, f3.layerDefinition.globalIdField = o2.globalIdFieldName, f3.layerDefinition.fields = o2.fields, o2.spatialReference && (f3.layerDefinition.spatialReference = o2.spatialReference));
      else {
        if (!(l2[0] instanceof A))
          throw new t(e4, e.InvalidParameter, t5);
        {
          o2 = JSON.parse(l2[0].castToText(true));
          const e5 = Y(o2, "layerdefinition");
          if (null !== e5) {
            f3.layerDefinition.geometryType = Y(e5, "geometrytype", ""), f3.featureSet.geometryType = f3.layerDefinition.geometryType, f3.layerDefinition.globalIdField = Y(e5, "globalidfield", ""), f3.layerDefinition.objectIdField = Y(e5, "objectidfield", ""), f3.layerDefinition.typeIdField = Y(e5, "typeidfield", ""), f3.layerDefinition.hasZ = true === Y(e5, "hasz", false), f3.layerDefinition.hasM = true === Y(e5, "hasm", false);
            const t6 = Y(e5, "spatialreference", null);
            t6 && (f3.layerDefinition.spatialReference = ee(t6));
            for (const i of Y(e5, "fields", [])) {
              const e6 = { name: Y(i, "name", ""), alias: Y(i, "alias", ""), type: Y(i, "type", ""), nullable: Y(i, "nullable", true), editable: Y(i, "editable", true), length: Y(i, "length", null), domain: X(Y(i, "domain")) };
              f3.layerDefinition.fields.push(e6);
            }
            const n = Y(o2, "featureset", null);
            if (n) {
              const e6 = {};
              for (const t7 of f3.layerDefinition.fields)
                e6[t7.name.toLowerCase()] = t7.name;
              for (const t7 of Y(n, "features", [])) {
                const n2 = {}, i = Y(t7, "attributes", {});
                for (const t8 in i)
                  n2[e6[t8.toLowerCase()]] = i[t8];
                f3.featureSet.features.push({ attributes: n2, geometry: te(Y(t7, "geometry", null)) });
              }
            }
          } else {
            f3.layerDefinition.hasZ = true === Y(o2, "hasz", false), f3.layerDefinition.hasM = true === Y(o2, "hasm", false), f3.layerDefinition.geometryType = Y(o2, "geometrytype", ""), f3.featureSet.geometryType = f3.layerDefinition.geometryType, f3.layerDefinition.objectIdField = Y(o2, "objectidfieldname", ""), f3.layerDefinition.typeIdField = Y(o2, "typeidfieldname", "");
            const e6 = Y(o2, "spatialreference", null);
            e6 && (f3.layerDefinition.spatialReference = ee(e6));
            let t6 = Y(o2, "fields", null);
            if (z(t6))
              for (const a3 of t6) {
                const e7 = { name: Y(a3, "name", ""), alias: Y(a3, "alias", ""), type: Y(a3, "type", ""), nullable: Y(a3, "nullable", true), editable: Y(a3, "editable", true), length: Y(a3, "length", null), domain: X(Y(a3, "domain")) };
                f3.layerDefinition.fields.push(e7);
              }
            else
              t6 = null, f3.layerDefinition.fields = t6;
            const n = {};
            for (const a3 of f3.layerDefinition.fields)
              n[a3.name.toLowerCase()] = a3.name;
            let i = Y(o2, "features", null);
            if (z(i))
              for (const a3 of i) {
                const e7 = {}, t7 = Y(a3, "attributes", {});
                for (const i2 in t7)
                  e7[n[i2.toLowerCase()]] = t7[i2];
                f3.featureSet.features.push({ attributes: e7, geometry: te(Y(a3, "geometry", null)) });
              }
            else
              i = null, f3.featureSet.features = i;
          }
        }
      }
      if (false === ie(f3))
        throw new t(e4, e.InvalidParameter, t5);
      return "" === (((_a = f3 == null ? void 0 : f3.layerDefinition) == null ? void 0 : _a.geometryType) || "") && (f3.layerDefinition.geometryType = "esriGeometryNull"), f2.create(f3, e4.spatialReference);
    });
  }, _.signatures.push({ name: "featureset", min: 1, max: 1 }), _.functions.filter = function(e4, t5) {
    return _.standardFunctionAsync(e4, t5, async (n, r, s) => {
      if (Q(s, 2, 2, e4, t5), z(s[0]) || q(s[0])) {
        const n2 = [];
        let r2 = s[0];
        r2 instanceof t2 && (r2 = r2.toArray());
        let l2 = null;
        if (!O(s[1]))
          throw new t(e4, e.InvalidParameter, t5);
        l2 = s[1].createFunction(e4);
        for (const e5 of r2) {
          const t6 = l2(e5);
          T(t6) ? true === await t6 && n2.push(e5) : true === t6 && n2.push(e5);
        }
        return n2;
      }
      if (V(s[0])) {
        const t6 = await s[0].load(), n2 = f.create(s[1], t6.getFieldsIndex()), i = n2.getVariables();
        if (i.length > 0) {
          const t7 = [];
          for (let n3 = 0; n3 < i.length; n3++) {
            const a4 = { name: i[n3] };
            t7.push(await _.evaluateIdentifier(e4, a4));
          }
          const a3 = {};
          for (let e5 = 0; e5 < i.length; e5++)
            a3[i[e5]] = t7[e5];
          return n2.parameters = a3, new c2({ parentfeatureset: s[0], whereclause: n2 });
        }
        return new c2({ parentfeatureset: s[0], whereclause: n2 });
      }
      throw new t(e4, e.InvalidParameter, t5);
    });
  }, _.signatures.push({ name: "filter", min: 2, max: 2 }), _.functions.orderby = function(e4, t5) {
    return _.standardFunctionAsync(e4, t5, async (n, r, s) => {
      if (Q(s, 2, 2, e4, t5), V(s[0])) {
        const e5 = new e3(s[1]);
        return new a({ parentfeatureset: s[0], orderbyclause: e5 });
      }
      throw new t(e4, e.InvalidParameter, t5);
    });
  }, _.signatures.push({ name: "orderby", min: 2, max: 2 }), _.functions.top = function(e4, t5) {
    return _.standardFunctionAsync(e4, t5, async (n, r, s) => {
      if (Q(s, 2, 2, e4, t5), V(s[0]))
        return new a2({ parentfeatureset: s[0], topnum: s[1] });
      if (z(s[0]))
        return fe(s[1]) >= s[0].length ? s[0].slice(0) : s[0].slice(0, fe(s[1]));
      if (q(s[0]))
        return fe(s[1]) >= s[0].length() ? s[0].slice(0) : s[0].slice(0, fe(s[1]));
      throw new t(e4, e.InvalidParameter, t5);
    });
  }, _.signatures.push({ name: "top", min: 2, max: 2 }), _.functions.first = function(e4, t5) {
    return _.standardFunctionAsync(e4, t5, async (n, i, a3) => {
      if (Q(a3, 1, 1, e4, t5), V(a3[0])) {
        const t6 = await a3[0].first(n.abortSignal);
        if (null !== t6) {
          const n2 = b.createFromGraphicLikeObject(t6.geometry, t6.attributes, a3[0], e4.timeReference);
          return n2._underlyingGraphic = t6, n2;
        }
        return t6;
      }
      return z(a3[0]) ? 0 === a3[0].length ? null : a3[0][0] : q(a3[0]) ? 0 === a3[0].length() ? null : a3[0].get(0) : null;
    });
  }, _.signatures.push({ name: "first", min: 1, max: 1 }), _.functions.attachments = function(e4, t5) {
    return _.standardFunctionAsync(e4, t5, async (r, s, l2) => {
      Q(l2, 1, 2, e4, t5);
      const o2 = { minsize: -1, maxsize: -1, types: null, returnMetadata: false };
      if (l2.length > 1) {
        if (l2[1] instanceof A) {
          if (l2[1].hasField("minsize") && (o2.minsize = fe(l2[1].field("minsize"))), l2[1].hasField("metadata") && (o2.returnMetadata = me(l2[1].field("metadata"))), l2[1].hasField("maxsize") && (o2.maxsize = fe(l2[1].field("maxsize"))), l2[1].hasField("types")) {
            const e5 = Te(l2[1].field("types"), false);
            e5.length > 0 && (o2.types = e5);
          }
        } else if (null !== l2[1])
          throw new t(e4, e.InvalidParameter, t5);
      }
      if (E(l2[0])) {
        let t6 = l2[0]._layer;
        return t6 instanceof Be && (t6 = g(t6, e4.spatialReference, ["*"], true, e4.lrucache, e4.interceptor)), null === t6 ? [] : false === V(t6) ? [] : (await t6.load(), t6.queryAttachments(l2[0].field(t6.objectIdField), o2.minsize, o2.maxsize, o2.types, o2.returnMetadata));
      }
      if (null === l2[0])
        return [];
      throw new t(e4, e.InvalidParameter, t5);
    });
  }, _.signatures.push({ name: "attachments", min: 1, max: 2 }), _.functions.featuresetbyrelationshipname = function(e4, t5) {
    return _.standardFunctionAsync(e4, t5, async (n, r, s) => {
      Q(s, 2, 4, e4, t5);
      const l2 = s[0], o2 = oe(s[1]);
      let d = v(s[2], null);
      const m = me(v(s[3], true));
      if (null === d && (d = ["*"]), false === z(d))
        throw new t(e4, e.InvalidParameter, t5);
      if (null === s[0])
        return null;
      if (!E(s[0]))
        throw new t(e4, e.InvalidParameter, t5);
      let h = l2._layer;
      if (h instanceof Be && (h = g(h, e4.spatialReference, ["*"], true, e4.lrucache, e4.interceptor)), null === h)
        return null;
      if (false === V(h))
        return null;
      h = await h.load();
      const w = h.relationshipMetaData().filter((e5) => e5.name === o2);
      if (0 === w.length)
        return null;
      if (void 0 !== w[0].relationshipTableId && null !== w[0].relationshipTableId && w[0].relationshipTableId > -1)
        return k(h, w[0], l2.field(h.objectIdField), h.spatialReference, d, m, e4.lrucache, e4.interceptor);
      let I2 = h.serviceUrl();
      if (!I2)
        return null;
      I2 = "/" === I2.charAt(I2.length - 1) ? I2 + w[0].relatedTableId.toString() : I2 + "/" + w[0].relatedTableId.toString();
      const F2 = await F(I2, h.spatialReference, d, m, e4.lrucache, e4.interceptor);
      await F2.load();
      let A3 = F2.relationshipMetaData();
      if (A3 = A3.filter((e5) => e5.id === w[0].id), false === l2.hasField(w[0].keyField) || null === l2.field(w[0].keyField)) {
        const e5 = await h.getFeatureByObjectId(l2.field(h.objectIdField), [w[0].keyField]);
        if (e5) {
          const t6 = f.create(A3[0].keyField + "= @id", F2.getFieldsIndex());
          return t6.parameters = { id: e5.attributes[w[0].keyField] }, F2.filter(t6);
        }
        return new u({ parentfeatureset: F2 });
      }
      const N2 = f.create(A3[0].keyField + "= @id", F2.getFieldsIndex());
      return N2.parameters = { id: l2.field(w[0].keyField) }, F2.filter(N2);
    });
  }, _.signatures.push({ name: "featuresetbyrelationshipname", min: 2, max: 4 }), _.functions.featuresetbyassociation = function(e4, t5) {
    return _.standardFunctionAsync(e4, t5, async (n, r, s) => {
      Q(s, 2, 3, e4, t5);
      const l2 = s[0], o2 = oe(v(s[1], "")).toLowerCase(), u2 = L(s[2]) ? oe(s[2]) : null;
      if (null === s[0])
        return null;
      if (!E(s[0]))
        throw new t(e4, e.InvalidParameter, t5);
      let c3 = l2._layer;
      if (c3 instanceof Be && (c3 = g(c3, e4.spatialReference, ["*"], true, e4.lrucache, e4.interceptor)), null === c3)
        return null;
      if (false === V(c3))
        return null;
      await c3.load();
      const m = c3.serviceUrl(), w = await T2(m, e4.spatialReference);
      let I2 = null, F2 = null, E3 = false;
      if (null !== u2 && "" !== u2 && void 0 !== u2) {
        for (const e5 of w.terminals)
          e5.terminalName === u2 && (F2 = e5.terminalId);
        null === F2 && (E3 = true);
      }
      const b2 = w.associations.getFieldsIndex(), A3 = b2.get("TOGLOBALID").name, N2 = b2.get("FROMGLOBALID").name, S = b2.get("TOTERMINALID").name, T3 = b2.get("FROMTERMINALID").name, $ = b2.get("FROMNETWORKSOURCEID").name, M = b2.get("TONETWORKSOURCEID").name, O2 = b2.get("ASSOCIATIONTYPE").name, k2 = b2.get("ISCONTENTVISIBLE").name, z2 = b2.get("OBJECTID").name;
      for (const e5 of c3.fields)
        if ("global-id" === e5.type) {
          I2 = l2.field(e5.name);
          break;
        }
      let H = null, Z = new y2(new y({ name: "percentalong", alias: "percentalong", type: "double" }), f.create("0", w.associations.getFieldsIndex())), W = new y2(new y({ name: "side", alias: "side", type: "string" }), f.create("''", w.associations.getFieldsIndex()));
      const _2 = "globalid", U = "globalId", Q2 = {};
      for (const e5 in w.lkp)
        Q2[e5] = w.lkp[e5].sourceId;
      const J2 = new x(new y({ name: "classname", alias: "classname", type: "string" }), null, Q2);
      let K2 = "";
      switch (o2) {
        case "midspan": {
          K2 = `((${A3}='${I2}') OR ( ${N2}='${I2}')) AND (${O2} IN (5))`, J2.codefield = f.create(`CASE WHEN (${A3}='${I2}') THEN ${$} ELSE ${M} END`, w.associations.getFieldsIndex());
          const e5 = o(D.findField(w.associations.fields, N2));
          e5.name = _2, e5.alias = _2, H = new y2(e5, f.create(`CASE WHEN (${N2}='${I2}') THEN ${A3} ELSE ${N2} END`, w.associations.getFieldsIndex())), Z = w.unVersion >= 4 ? new A2(D.findField(w.associations.fields, b2.get("PERCENTALONG").name)) : new y2(new y({ name: "percentalong", alias: "percentalong", type: "double" }), f.create("0", w.associations.getFieldsIndex()));
          break;
        }
        case "junctionedge": {
          K2 = `((${A3}='${I2}') OR ( ${N2}='${I2}')) AND (${O2} IN (4,6))`, J2.codefield = f.create(`CASE WHEN (${A3}='${I2}') THEN ${$} ELSE ${M} END`, w.associations.getFieldsIndex());
          const e5 = o(D.findField(w.associations.fields, N2));
          e5.name = _2, e5.alias = _2, H = new y2(e5, f.create(`CASE WHEN (${N2}='${I2}') THEN ${A3} ELSE ${N2} END`, w.associations.getFieldsIndex())), W = new y2(new y({ name: "side", alias: "side", type: "string" }), f.create(`CASE WHEN (${O2}=4) THEN 'from' ELSE 'to' END`, w.associations.getFieldsIndex()));
          break;
        }
        case "connected": {
          let e5 = `${A3}='@T'`, t6 = `${N2}='@T'`;
          null !== F2 && (e5 += ` AND ${S}=@A`, t6 += ` AND ${T3}=@A`), K2 = "((" + e5 + ") OR (" + t6 + "))", K2 = I(K2, "@T", I2 ?? ""), e5 = I(e5, "@T", I2 ?? ""), null !== F2 && (e5 = I(e5, "@A", F2.toString()), K2 = I(K2, "@A", F2.toString())), J2.codefield = f.create("CASE WHEN " + e5 + ` THEN ${$} ELSE ${M} END`, w.associations.getFieldsIndex());
          const n2 = o(D.findField(w.associations.fields, N2));
          n2.name = _2, n2.alias = _2, H = new y2(n2, f.create("CASE WHEN " + e5 + ` THEN ${N2} ELSE ${A3} END`, w.associations.getFieldsIndex()));
          break;
        }
        case "container":
          K2 = `${A3}='${I2}' AND ${O2} = 2`, null !== F2 && (K2 += ` AND ${S} = ` + F2.toString()), J2.codefield = $, K2 = "( " + K2 + " )", H = new E2(D.findField(w.associations.fields, N2), _2, _2);
          break;
        case "content":
          K2 = `(${N2}='${I2}' AND ${O2} = 2)`, null !== F2 && (K2 += ` AND ${T3} = ` + F2.toString()), J2.codefield = M, K2 = "( " + K2 + " )", H = new E2(D.findField(w.associations.fields, A3), _2, _2);
          break;
        case "structure":
          K2 = `(${A3}='${I2}' AND ${O2} = 3)`, null !== F2 && (K2 += ` AND ${S} = ` + F2.toString()), J2.codefield = $, K2 = "( " + K2 + " )", H = new E2(D.findField(w.associations.fields, N2), _2, U);
          break;
        case "attached":
          K2 = `(${N2}='${I2}' AND ${O2} = 3)`, null !== F2 && (K2 += ` AND ${T3} = ` + F2.toString()), J2.codefield = M, K2 = "( " + K2 + " )", H = new E2(D.findField(w.associations.fields, A3), _2, U);
          break;
        default:
          throw new t(e4, e.InvalidParameter, t5);
      }
      E3 && (K2 = "1 <> 1");
      return new D({ parentfeatureset: w.associations, adaptedFields: [new A2(D.findField(w.associations.fields, z2)), new A2(D.findField(w.associations.fields, k2)), H, W, J2, Z], extraFilter: K2 ? f.create(K2, w.associations.getFieldsIndex()) : null });
    });
  }, _.signatures.push({ name: "featuresetbyassociation", min: 2, max: 6 }), _.functions.groupby = function(e4, t5) {
    return _.standardFunctionAsync(e4, t5, async (r, s, l2) => {
      if (Q(l2, 3, 3, e4, t5), !V(l2[0]))
        throw new t(e4, e.InvalidParameter, t5);
      const o2 = await l2[0].load(), f3 = [], u2 = [];
      let c3 = false, d = [];
      if (L(l2[1]))
        d.push(l2[1]);
      else if (l2[1] instanceof A)
        d.push(l2[1]);
      else if (z(l2[1]))
        d = l2[1];
      else {
        if (!q(l2[1]))
          throw new t(e4, e.InvalidParameter, t5);
        d = l2[1].toArray();
      }
      for (const m of d)
        if (L(m)) {
          const e5 = f.create(oe(m), o2.getFieldsIndex()), t6 = true === N(e5) ? oe(m) : "%%%%FIELDNAME";
          f3.push({ name: t6, expression: e5 }), "%%%%FIELDNAME" === t6 && (c3 = true);
        } else {
          if (!(m instanceof A))
            throw new t(e4, e.InvalidParameter, t5);
          {
            const n = m.hasField("name") ? m.field("name") : "%%%%FIELDNAME", r2 = m.hasField("expression") ? m.field("expression") : "";
            if ("%%%%FIELDNAME" === n && (c3 = true), !n)
              throw new t(e4, e.InvalidParameter, t5);
            f3.push({ name: n, expression: f.create(r2 || n, o2.getFieldsIndex()) });
          }
        }
      if (d = [], L(l2[2]))
        d.push(l2[2]);
      else if (z(l2[2]))
        d = l2[2];
      else if (q(l2[2]))
        d = l2[2].toArray();
      else {
        if (!(l2[2] instanceof A))
          throw new t(e4, e.InvalidParameter, t5);
        d.push(l2[2]);
      }
      for (const m of d) {
        if (!(m instanceof A))
          throw new t(e4, e.InvalidParameter, t5);
        {
          const n = m.hasField("name") ? m.field("name") : "", r2 = m.hasField("statistic") ? m.field("statistic") : "", s2 = m.hasField("expression") ? m.field("expression") : "";
          if (!n || !r2 || !s2)
            throw new t(e4, e.InvalidParameter, t5);
          u2.push({ name: n, statistic: r2.toLowerCase(), expression: f.create(s2, o2.getFieldsIndex()) });
        }
      }
      if (c3) {
        const e5 = {};
        for (const n of o2.fields)
          e5[n.name.toLowerCase()] = 1;
        for (const n of f3)
          "%%%%FIELDNAME" !== n.name && (e5[n.name.toLowerCase()] = 1);
        for (const n of u2)
          "%%%%FIELDNAME" !== n.name && (e5[n.name.toLowerCase()] = 1);
        let t6 = 0;
        for (const n of f3)
          if ("%%%%FIELDNAME" === n.name) {
            for (; 1 === e5["field_" + t6.toString()]; )
              t6++;
            e5["field_" + t6.toString()] = 1, n.name = "FIELD_" + t6.toString();
          }
      }
      for (const t6 of f3)
        await K(t6.expression, _, e4);
      for (const t6 of u2)
        await K(t6.expression, _, e4);
      return l2[0].groupby(f3, u2);
    });
  }, _.signatures.push({ name: "groupby", min: 3, max: 3 }), _.functions.distinct = function(e4, t5) {
    return _.standardFunctionAsync(e4, t5, async (r, s, l2) => {
      if (V(l2[0])) {
        Q(l2, 2, 2, e4, t5);
        const r2 = await l2[0].load(), s2 = [];
        let o2 = [];
        if (L(l2[1]))
          o2.push(l2[1]);
        else if (l2[1] instanceof A)
          o2.push(l2[1]);
        else if (z(l2[1]))
          o2 = l2[1];
        else {
          if (!q(l2[1]))
            throw new t(e4, e.InvalidParameter, t5);
          o2 = l2[1].toArray();
        }
        let f3 = false;
        for (const l3 of o2)
          if (L(l3)) {
            const e5 = f.create(oe(l3), r2.getFieldsIndex()), t6 = true === N(e5) ? oe(l3) : "%%%%FIELDNAME";
            s2.push({ name: t6, expression: e5 }), "%%%%FIELDNAME" === t6 && (f3 = true);
          } else {
            if (!(l3 instanceof A))
              throw new t(e4, e.InvalidParameter, t5);
            {
              const n = l3.hasField("name") ? l3.field("name") : "%%%%FIELDNAME", o3 = l3.hasField("expression") ? l3.field("expression") : "";
              if ("%%%%FIELDNAME" === n && (f3 = true), !n)
                throw new t(e4, e.InvalidParameter, t5);
              s2.push({ name: n, expression: f.create(o3 || n, r2.getFieldsIndex()) });
            }
          }
        if (f3) {
          const e5 = {};
          for (const n of r2.fields)
            e5[n.name.toLowerCase()] = 1;
          for (const n of s2)
            "%%%%FIELDNAME" !== n.name && (e5[n.name.toLowerCase()] = 1);
          let t6 = 0;
          for (const n of s2)
            if ("%%%%FIELDNAME" === n.name) {
              for (; 1 === e5["field_" + t6.toString()]; )
                t6++;
              e5["field_" + t6.toString()] = 1, n.name = "FIELD_" + t6.toString();
            }
        }
        for (const t6 of s2)
          await K(t6.expression, _, e4);
        return l2[0].groupby(s2, []);
      }
      return J("distinct", r, s, l2);
    });
  });
}
export {
  ae as registerFunctions
};
//# sourceMappingURL=featuresetbase-F354YXRY.js.map

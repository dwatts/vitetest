import {
  p
} from "./chunk-DOR4M5EA.js";
import {
  e
} from "./chunk-QS45OHBM.js";
import {
  o as o2
} from "./chunk-UUW6REOV.js";
import {
  i2 as i
} from "./chunk-BO2REVMA.js";
import {
  o
} from "./chunk-V66LHQVK.js";
import {
  O
} from "./chunk-BN6X2OXK.js";

// node_modules/@arcgis/core/chunks/MeasurementArrow.glsl.js
function n(n2) {
  const s2 = new i(), { vertex: a, fragment: l } = s2;
  p(a, n2), a.uniforms.add(new o2("width", (e2) => e2.width)), s2.attributes.add(O.POSITION, "vec3"), s2.attributes.add(O.NORMAL, "vec3"), s2.attributes.add(O.UV0, "vec2"), s2.attributes.add(O.AUXPOS1, "float"), s2.varyings.add("vtc", "vec2"), s2.varyings.add("vlength", "float"), s2.varyings.add("vradius", "float"), a.code.add(o`void main(void) {
vec3 bitangent = normal;
vtc = uv0;
vlength = auxpos1;
vradius = 0.5 * width;
vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);
gl_Position = proj * pos;
}`), l.uniforms.add(new o2("outlineSize", (e2) => e2.outlineSize), new e("outlineColor", (e2) => e2.outlineColor), new o2("stripeLength", (e2) => e2.stripeLength), new e("stripeEvenColor", (e2) => e2.stripeEvenColor), new e("stripeOddColor", (e2) => e2.stripeOddColor));
  const v = 1 / Math.sqrt(2);
  return l.code.add(o`
    const float INV_SQRT2 = ${o.float(v)};

    vec4 arrowColor(vec2 tc, float len) {
      float d = INV_SQRT2 * (tc.x - abs(tc.y));
      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));
      d = min(d, 1.0 - abs(tc.y));

      if (d < 0.0) {
        return vec4(0.0);
      } else if (d < outlineSize) {
        return outlineColor;
      } else {
        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;
      }
    }

    void main(void) {
      vec2 ntc = vec2(vtc.x / vradius, vtc.y);
      vec4 color = arrowColor(ntc, vlength / vradius);
      if (color.a == 0.0) {
        discard;
      }
      fragColor = color;
    }
  `), s2;
}
var s = Object.freeze(Object.defineProperty({ __proto__: null, build: n }, Symbol.toStringTag, { value: "Module" }));

export {
  n,
  s
};
//# sourceMappingURL=chunk-HFS3WATU.js.map

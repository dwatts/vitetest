import {
  K,
  Y as Y2,
  ct,
  e as e8,
  et,
  ft,
  it,
  l as l6,
  st
} from "./chunk-ICGBQNK3.js";
import {
  p as p3,
  r as r5
} from "./chunk-AAWIXPYE.js";
import {
  i as i8,
  n as n14,
  o as o5
} from "./chunk-NEBQZ6AZ.js";
import {
  _ as _3,
  i as i7,
  o as o4
} from "./chunk-7JB7RSO7.js";
import {
  g as g4,
  l as l7
} from "./chunk-F4ILXEXC.js";
import {
  t as t7
} from "./chunk-QTN4N5B5.js";
import {
  n as n13
} from "./chunk-G3Q2URFK.js";
import {
  i as i6,
  l as l5,
  p as p2
} from "./chunk-F6TKAVSX.js";
import {
  e as e7
} from "./chunk-D5NSNTGJ.js";
import {
  n as n12
} from "./chunk-63ERNIOV.js";
import {
  n as n11
} from "./chunk-QNFDBY7V.js";
import {
  e as e6,
  f as f3,
  i as i5,
  r as r4
} from "./chunk-RVQLSA5X.js";
import {
  t as t6
} from "./chunk-5KLICR5E.js";
import {
  F,
  I
} from "./chunk-KRCNIFX2.js";
import {
  a as a5,
  z
} from "./chunk-NLWV7Q6F.js";
import {
  l as l4
} from "./chunk-RVS5HU2K.js";
import {
  M as M2,
  h as h3,
  i as i4,
  r as r3,
  s as s6
} from "./chunk-JB7FDW5N.js";
import {
  n as n10
} from "./chunk-SS3YG6J3.js";
import {
  v as v2
} from "./chunk-NVGPNIR6.js";
import {
  c as c3
} from "./chunk-JLSXEPY6.js";
import {
  a as a4,
  d as d4
} from "./chunk-VMTVUE47.js";
import {
  c as c6
} from "./chunk-GDZM4A6K.js";
import {
  $,
  Cn,
  Y,
  nn
} from "./chunk-BNBT4QTW.js";
import {
  c as c5
} from "./chunk-CAFGOFIE.js";
import {
  c as c4
} from "./chunk-DOQ3SAAR.js";
import {
  j as j2
} from "./chunk-UXVZ4PI3.js";
import {
  n as n9
} from "./chunk-AUKRB7YY.js";
import {
  n as n8
} from "./chunk-DU6E4DU3.js";
import {
  r as r2
} from "./chunk-DKJBDKGA.js";
import {
  _ as _2,
  d as d3
} from "./chunk-SVCGLUNW.js";
import {
  V
} from "./chunk-7EQSYZHW.js";
import {
  i
} from "./chunk-TEHNQYQD.js";
import {
  g as g2
} from "./chunk-TPJLFGOT.js";
import {
  r
} from "./chunk-3CQBBMMD.js";
import {
  _
} from "./chunk-7L7Z2HXM.js";
import {
  M,
  t as t4
} from "./chunk-3VUFACNT.js";
import {
  d as d2,
  f,
  g as g3,
  x2 as x
} from "./chunk-ZEEBL7ZN.js";
import {
  S2 as S
} from "./chunk-RTDN6KAT.js";
import {
  W,
  e as e4,
  e2 as e5,
  i as i2,
  n as n5,
  n3 as n7,
  o as o3,
  t as t5
} from "./chunk-C5FJDP6J.js";
import {
  n as n6
} from "./chunk-AHL6RC7E.js";
import {
  h as h2,
  i as i3
} from "./chunk-RLLQRKO4.js";
import {
  U,
  a as a3,
  f as f2,
  h,
  j,
  l as l3,
  w as w2
} from "./chunk-H7RDAEPY.js";
import {
  n as n4
} from "./chunk-7KH4CLS5.js";
import {
  m as m2,
  p
} from "./chunk-JL3TJGVW.js";
import {
  c as c2,
  s as s5
} from "./chunk-JZM5YUHA.js";
import {
  s as s4
} from "./chunk-YGB42LDG.js";
import {
  l as l2
} from "./chunk-MP6GH2AC.js";
import {
  A,
  m,
  n3 as n2,
  o,
  t2 as t,
  v,
  y3 as y2
} from "./chunk-V76KGJFU.js";
import {
  a2,
  e as e3
} from "./chunk-HB2SQRT2.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  t as t2
} from "./chunk-ZWUBORGT.js";
import {
  n as n3
} from "./chunk-3R7FAT25.js";
import {
  C,
  P,
  T,
  a,
  c,
  d,
  g,
  s as s3,
  t as t3,
  w,
  y
} from "./chunk-7I33FAWS.js";
import {
  e as e2,
  l,
  n,
  o as o2
} from "./chunk-DWOEYHKS.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-HMVAPW5X.js";
import {
  R,
  has
} from "./chunk-JZJWZ6DN.js";

// node_modules/@arcgis/core/support/AnalysesCollection.js
var t8 = class extends l5 {
  constructor(e12) {
    super(e12), this.handles.add(this.on("before-add", (e13) => {
      null != e13.item && e13.item.parent === this.owner && (s.getLogger(this).warn("Analysis inside the collection must be unique. Not adding this element again."), e13.preventDefault());
    }));
  }
  _own(e12) {
    e12.parent = this.owner;
  }
  _release(e12) {
    e12.parent = null;
  }
};
t8 = e([a2("esri.support.AnalysesCollection")], t8);

// node_modules/@arcgis/core/views/BreakpointsOwner.js
var n15 = { widthBreakpoint: { getValue(e12) {
  const i19 = e12.viewSize[0], s15 = e12.breakpoints, a21 = this.values;
  return i19 <= s15.xsmall ? a21.xsmall : i19 <= s15.small ? a21.small : i19 <= s15.medium ? a21.medium : i19 <= s15.large ? a21.large : a21.xlarge;
}, values: { xsmall: "xsmall", small: "small", medium: "medium", large: "large", xlarge: "xlarge" }, valueToClassName: { xsmall: "esri-view-width-xsmall esri-view-width-less-than-small esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge", small: "esri-view-width-small esri-view-width-greater-than-xsmall esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge", medium: "esri-view-width-medium esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-less-than-large esri-view-width-less-than-xlarge", large: "esri-view-width-large esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-less-than-xlarge", xlarge: "esri-view-width-xlarge esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-greater-than-large" } }, heightBreakpoint: { getValue(e12) {
  const i19 = e12.viewSize[1], s15 = e12.breakpoints, a21 = this.values;
  return i19 <= s15.xsmall ? a21.xsmall : i19 <= s15.small ? a21.small : i19 <= s15.medium ? a21.medium : i19 <= s15.large ? a21.large : a21.xlarge;
}, values: { xsmall: "xsmall", small: "small", medium: "medium", large: "large", xlarge: "xlarge" }, valueToClassName: { xsmall: "esri-view-height-xsmall esri-view-height-less-than-small esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge", small: "esri-view-height-small esri-view-height-greater-than-xsmall esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge", medium: "esri-view-height-medium esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-less-than-large esri-view-height-less-than-xlarge", large: "esri-view-height-large esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-less-than-xlarge", xlarge: "esri-view-height-xlarge esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-greater-than-large" } }, orientation: { getValue(e12) {
  const i19 = e12.viewSize, s15 = i19[0], a21 = i19[1], t15 = this.values;
  return a21 >= s15 ? t15.portrait : t15.landscape;
}, values: { portrait: "portrait", landscape: "landscape" }, valueToClassName: { portrait: "esri-view-orientation-portrait", landscape: "esri-view-orientation-landscape" } } };
var o6 = { xsmall: 544, small: 768, medium: 992, large: 1200 };
function m3(e12) {
  const i19 = e12;
  return i19 && i19.xsmall < i19.small && i19.small < i19.medium && i19.medium < i19.large;
}
function g5(e12, i19) {
  return i19 ? n15[e12].valueToClassName[i19].split(" ") : [];
}
var w3 = (w8) => {
  let d11 = class extends w8 {
    constructor(...e12) {
      super(...e12), this._breakpointsHandles = new t(), this.orientation = null, this.widthBreakpoint = null, this.heightBreakpoint = null, this.breakpoints = o6;
    }
    initialize() {
      this._breakpointsHandles.add(l3(() => [this.breakpoints, this.size], () => this._updateClassNames(), h));
    }
    destroy() {
      this.destroyed || (this._removeActiveClassNames(), this._breakpointsHandles = l(this._breakpointsHandles));
    }
    set breakpoints(e12) {
      if (e12 === this._get("breakpoints"))
        return;
      const i19 = m3(e12);
      if (!i19) {
        const e13 = JSON.stringify(o6, null, 2);
        console.warn("provided breakpoints are not valid, using defaults:" + e13);
      }
      e12 = i19 ? e12 : o6, this._set("breakpoints", { ...e12 });
    }
    _updateClassNames() {
      if (!this.container)
        return;
      const e12 = t2.acquire(), s15 = t2.acquire();
      let a21, t15 = false;
      for (a21 in n15) {
        const i19 = this[a21], r13 = n15[a21].getValue({ viewSize: this.size, breakpoints: this.breakpoints });
        i19 !== r13 && (t15 = true, this[a21] = r13, g5(a21, i19).forEach((e13) => s15.push(e13)), g5(a21, r13).forEach((i20) => e12.push(i20)));
      }
      t15 && (this._applyClassNameChanges(e12, s15), t2.release(e12), t2.release(s15));
    }
    _applyClassNameChanges(e12, i19) {
      const s15 = this.container;
      s15 && (i19.forEach((e13) => s15.classList.remove(e13)), e12.forEach((e13) => s15.classList.add(e13)));
    }
    _removeActiveClassNames() {
      const e12 = this.container;
      if (!e12)
        return;
      let i19;
      for (i19 in n15)
        g5(i19, this[i19]).forEach((i20) => e12.classList.remove(i20));
    }
  };
  return e([y2()], d11.prototype, "breakpoints", null), e([y2()], d11.prototype, "orientation", void 0), e([y2()], d11.prototype, "widthBreakpoint", void 0), e([y2()], d11.prototype, "heightBreakpoint", void 0), d11 = e([a2("esri.views.BreakpointsOwner")], d11), d11;
};

// node_modules/@arcgis/core/views/overlay/ViewOverlay.js
var a6 = class extends m {
  constructor() {
    super(...arguments), this.items = new V(), this._watchUpdatingTracking = new c6(), this._callbacks = /* @__PURE__ */ new Map(), this._projector = i3(), this._hiddenProjector = i3();
  }
  get needsRender() {
    return this.items.length > 0;
  }
  get updating() {
    var _a;
    return ((_a = this._watchUpdatingTracking) == null ? void 0 : _a.updating) ?? false;
  }
  initialize() {
    const t15 = document.createElement("div");
    t15.className = "esri-overlay-surface", this._set("surface", t15), this._hiddenSurface = document.createElement("div"), this._hiddenSurface.setAttribute("style", "visibility: hidden;"), t15.appendChild(this._hiddenSurface), this._watchUpdatingTracking.addOnCollectionChange(() => this.items, (t16) => {
      for (const e12 of t16.added) {
        const t17 = () => e12.render();
        this._callbacks.set(e12, t17), this._projector.append(this.surface, t17);
      }
      for (const e12 of t16.removed) {
        const t17 = this._projector.detach(this._callbacks.get(e12));
        this.surface.removeChild(t17.domNode), this._callbacks.delete(e12);
      }
    });
  }
  addItem(t15) {
    this.items.add(t15);
  }
  removeItem(t15) {
    this.items.remove(t15);
  }
  destroy() {
    this.items.removeAll(), this._callbacks.forEach((t15) => this._projector.detach(t15)), this._callbacks = null, this._projector = null, this._watchUpdatingTracking.destroy();
  }
  render() {
    this._projector.renderNow();
  }
  computeBoundingRect(t15) {
    const e12 = this._hiddenSurface, r13 = this._hiddenProjector;
    let o14;
    const s15 = () => (o14 = t15.render(), o14);
    r13.append(e12, s15), r13.renderNow();
    const i19 = { left: 0, top: 0, right: 0, bottom: 0 };
    if (o14 && o14.domNode) {
      const t16 = o14.domNode.getBoundingClientRect();
      i19.left = t16.left, i19.top = t16.top, i19.right = t16.right, i19.bottom = t16.bottom;
    }
    for (r13.detach(s15); e12.firstChild; )
      e12.removeChild(e12.firstChild);
    return i19;
  }
  overlaps(t15, e12) {
    const r13 = this.computeBoundingRect(t15), o14 = this.computeBoundingRect(e12);
    return Math.max(r13.left, o14.left) <= Math.min(r13.right, o14.right) && Math.max(r13.top, o14.top) <= Math.min(r13.bottom, o14.bottom);
  }
  get hasVisibleItems() {
    return this.items.some((t15) => t15.visible);
  }
  async prepare() {
    await document.fonts.load(this._fontString()).catch(() => {
    });
  }
  renderCanvas(t15) {
    if (!this.items.some((t16) => t16.visible))
      return;
    const e12 = t15.getContext("2d");
    e12.save(), e12.font = this._fontString(), this.items.forEach((t16) => {
      e12.save(), t16.renderCanvas(e12), e12.restore();
    }), e12.restore();
  }
  _fontString() {
    return `10px ${getComputedStyle(this.surface).fontFamily}`;
  }
};
e([y2({ readOnly: true })], a6.prototype, "surface", void 0), e([y2({ readOnly: true })], a6.prototype, "items", void 0), e([y2({ readOnly: true })], a6.prototype, "needsRender", null), e([y2({ readOnly: true })], a6.prototype, "_watchUpdatingTracking", void 0), e([y2({ readOnly: true })], a6.prototype, "updating", null), a6 = e([a2("esri.views.overlay.ViewOverlay")], a6);
var c7 = a6;

// node_modules/@arcgis/core/views/DOMContainer.js
var p4 = [0, 0];
function f4(e12) {
  const t15 = (e12.ownerDocument || window.document).defaultView, s15 = e12.getBoundingClientRect();
  return p4[0] = s15.left + ((t15 == null ? void 0 : t15.pageXOffset) ?? 0), p4[1] = s15.top + ((t15 == null ? void 0 : t15.pageYOffset) ?? 0), p4;
}
function m4(e12) {
  e12 && (n5(e12), e12.parentNode && e12.parentNode.removeChild(e12));
}
function y3(e12) {
  const t15 = document.createElement("div");
  return e12.appendChild(t15), t15;
}
var g6 = 16;
var v3 = 750;
var _4 = 512;
var w4 = 2;
var C2 = (i19) => {
  let p14 = class extends i19 {
    constructor(...e12) {
      super(...e12), this._freqInfo = { freq: g6, time: v3 }, this._overlayRenderTaskHandle = null, this.height = 0, this.overlay = null, this.position = null, this.resizing = false, this.root = null, this.surface = null, this.suspended = true, this.ui = null, this.userContent = null, this.width = 0, this.widthBreakpoint = null, this.addHandles([l3(() => this.cursor, (e13) => {
        const { surface: t15 } = this;
        t15 && t15.setAttribute("data-cursor", e13);
      }), l3(() => this.navigating, (e13) => {
        const { surface: t15 } = this;
        t15 && t15.setAttribute("data-navigating", e13.toString());
      })]);
    }
    initialize() {
      this.addHandles([l3(() => this.ui, (e12, t15) => this._handleUIChange(e12, t15), h), this.on("focus", () => this.notifyChange("focused")), this.on("blur", () => this.notifyChange("focused"))]);
    }
    destroy() {
      this.destroyed || (this.ui = l(this.ui), this.container = null);
    }
    get container() {
      return this._get("container") ?? null;
    }
    set container(e12) {
      const i20 = this._get("container"), o14 = e4(e12);
      if (o14 || "string" != typeof e12 || s.getLogger(this).error("#container", `element with id '${e12}' not found`), i20 === o14)
        return;
      if (this._stopMeasuring(), i20 && (i20.classList.remove("esri-view"), this._overlayRenderTaskHandle && (this._overlayRenderTaskHandle.remove(), this._overlayRenderTaskHandle = null), this.overlay && (this.overlay.destroy(), this._set("overlay", null)), this.root && (m4(this.root), this._set("root", null)), this.userContent && (i2(this.userContent, i20), m4(this.userContent), this._set("userContent", null))), !o14)
        return this._set("width", 0), this._set("height", 0), this._set("position", null), this._set("suspended", true), this._set("surface", null), void this._set("container", null);
      o14.classList.add("esri-view");
      const h9 = document.createElement("div");
      h9.className = "esri-view-user-storage", i2(o14, h9), o14.appendChild(h9), this._set("userContent", h9);
      const l13 = document.createElement("div");
      l13.className = "esri-view-root", o14.insertBefore(l13, o14.firstChild), this._set("root", l13);
      const u5 = document.createElement("div");
      u5.className = "esri-view-surface", u5.setAttribute("role", "application"), u5.tabIndex = 0, l13.appendChild(u5), this._set("surface", u5);
      const p15 = new c7();
      l13.appendChild(p15.surface), this._set("overlay", p15), this.addHandles(l3(() => p15.needsRender, (e13) => {
        e13 && !this._overlayRenderTaskHandle ? this._overlayRenderTaskHandle = A({ render: () => {
          var _a;
          return (_a = this.overlay) == null ? void 0 : _a.render();
        } }) : this._overlayRenderTaskHandle = o2(this._overlayRenderTaskHandle);
      })), this.forceDOMReadyCycle(), this._set("container", o14), this._startMeasuring();
    }
    get focused() {
      const e12 = document.activeElement === this.surface;
      return document.hasFocus() && e12;
    }
    get size() {
      return [this.width, this.height];
    }
    blur() {
      var _a;
      (_a = this.surface) == null ? void 0 : _a.blur();
    }
    focus() {
      var _a;
      (_a = this.surface) == null ? void 0 : _a.focus();
    }
    pageToContainer(e12, t15, s15) {
      const i20 = this.position;
      return e12 -= i20 ? i20[0] : 0, t15 -= i20 ? i20[1] : 0, s15 ? (s15[0] = e12, s15[1] = t15) : s15 = [e12, t15], s15;
    }
    containerToPage(e12, t15, s15) {
      const i20 = this.position;
      return e12 += i20 ? i20[0] : 0, t15 += i20 ? i20[1] : 0, s15 ? (s15[0] = e12, s15[1] = t15) : s15 = [e12, t15], s15;
    }
    _handleUIChange(e12, t15) {
      this.removeHandles("ui"), t15 && t15 !== e12 && t15.destroy(), e12 && (e12.view = this, this.addHandles(l3(() => this.root, (t16) => {
        e12.container = t16 ? y3(t16) : null;
      }, h), "ui")), this._set("ui", e12);
    }
    _stopMeasuring() {
      this.removeHandles("measuring"), this._get("resizing") && this._set("resizing", false);
    }
    _startMeasuring() {
      const e12 = this._freqInfo;
      e12.freq = g6, e12.time = v3, this.addHandles([(() => {
        const t15 = () => {
          e12.freq = g6, e12.time = v3;
        };
        return window.addEventListener("resize", t15), { remove() {
          window.removeEventListener("resize", t15);
        } };
      })(), A({ prepare: (e13) => {
        const t15 = this._measure(), s15 = this._freqInfo;
        if (s15.time += e13.deltaTime, t15 && (s15.freq = g6, this._get("resizing") || this._set("resizing", true)), s15.time < s15.freq)
          return;
        s15.time = 0;
        const i20 = this._position();
        s15.freq = i20 || t15 ? g6 : Math.min(v3, s15.freq * w4), !t15 && s15.freq >= _4 && this._get("resizing") && this._set("resizing", false);
      } })], "measuring"), this._measure(), this._position();
    }
    _measure() {
      const e12 = this.container, t15 = e12 ? e12.clientWidth : 0, s15 = e12 ? e12.clientHeight : 0;
      if (0 === t15 || 0 === s15)
        return this.suspended || this._set("suspended", true), false;
      const i20 = this.width, r13 = this.height;
      return t15 === i20 && s15 === r13 ? (this.suspended && this._set("suspended", false), false) : (this._set("width", t15), this._set("height", s15), this.suspended && this._set("suspended", false), this.emit("resize", { oldWidth: i20, oldHeight: r13, width: t15, height: s15 }), true);
    }
    _position() {
      const e12 = this.container, t15 = this.position, s15 = e12 && f4(e12);
      return !!s15 && ((!t15 || s15[0] !== t15[0] || s15[1] !== t15[1]) && (this._set("position", [s15[0], s15[1]]), true));
    }
    forceDOMReadyCycle() {
    }
  };
  return e([y2()], p14.prototype, "container", null), e([y2({ readOnly: true })], p14.prototype, "focused", null), e([y2({ readOnly: true })], p14.prototype, "height", void 0), e([y2({ type: c7 })], p14.prototype, "overlay", void 0), e([y2({ readOnly: true })], p14.prototype, "position", void 0), e([y2({ readOnly: true })], p14.prototype, "resizing", void 0), e([y2({ readOnly: true })], p14.prototype, "root", void 0), e([y2({ value: null, readOnly: true })], p14.prototype, "size", null), e([y2({ readOnly: true })], p14.prototype, "surface", void 0), e([y2({ readOnly: true })], p14.prototype, "suspended", void 0), e([y2()], p14.prototype, "ui", void 0), e([y2({ readOnly: true })], p14.prototype, "userContent", void 0), e([y2({ readOnly: true })], p14.prototype, "width", void 0), e([y2()], p14.prototype, "widthBreakpoint", void 0), p14 = e([a2("esri.views.DOMContainer")], p14), p14;
};

// node_modules/@arcgis/core/views/PopupView.js
function d5(e12) {
  return null != e12 && "open" in e12 && "declaredClass" in e12;
}
function y4(e12) {
  return null != e12 && "declaredClass" in e12 && "dockOptions" in e12;
}
var w5 = (w8) => {
  let m10 = class extends w8 {
    constructor() {
      super(...arguments), this._popupSetupTask = null, this.popup = {}, this.popupEnabled = true;
    }
    initialize() {
      this.addHandles([l3(() => [this.ui, this.popup], ([e12, p14], t15) => {
        const i19 = "popup", s15 = "manual";
        if (t15) {
          const [e13, p15] = t15;
          e13 && d5(p15) && (p15.view = null, y4(p15) && e13.remove(p15, i19));
        }
        e12 && d5(p14) && (p14.view = this, y4(p14) && e12.add(p14, { key: i19, position: s15, internal: true }));
      }, h), this.on("click", (e12) => {
        this.popup && this.popupEnabled && ("mouse" !== e12.pointerType || 0 === e12.button) && (!d5(this.popup) && "autoOpenEnabled" in this.popup && false === this.popup.autoOpenEnabled || (d5(this.popup) ? this.popup.viewModel.handleViewClick(e12) : e12.async(async () => {
          await this.setupPopup(), d5(this.popup) && !this.destroyed && this.ready && this.popupEnabled && this.popup.viewModel.handleViewClick(e12);
        })));
      }, _3.WIDGET)]), j(() => this.ready && this.popupEnabled && !this.updating).then(() => {
        import("./Popup-72B3LB5S.js");
      });
    }
    destroy() {
      this.destroyed || this.closePopup();
    }
    async openPopup(e12) {
      d5(this.popup) && this.popup.open(e12);
      try {
        if (await this.setupPopup(), !this.popup)
          return void s.getLogger(this).error(new s2("view:null-popup", "Popup is null and can't be opened"));
        this.popup.open(e12);
      } catch {
      }
    }
    closePopup() {
      var _a;
      (_a = this._popupSetupTask) == null ? void 0 : _a.abort(), d5(this.popup) && this.popup.close();
    }
    async fetchPopupFeatures(e12, p14) {
      await this.when();
      const { location: t15, queryArea: i19, layerViewsAndGraphics: s15, clientOnlyGraphics: r13 } = await this._prepareFetchPopupFeatures(e12, p14), a21 = Promise.resolve(r13), n26 = this._queryLayerPopupFeatures(i19, s15, p14), u5 = n26.map((e13) => e13.promise);
      return { location: t15, clientOnlyGraphics: r13, allGraphicsPromise: P([a21, ...u5]).then((e13) => Array.from(new Set(e13.flat()))), promisesPerLayerView: n26 };
    }
    async setupPopup() {
      var _a;
      if ((_a = this._popupSetupTask) == null ? void 0 : _a.abort(), this.popup && !d5(this.popup))
        return this._popupSetupTask = d3(async (e12) => {
          const { default: p14 } = await import("./Popup-72B3LB5S.js");
          if (s3(e12), !this.popup || d5(this.popup))
            return;
          const t15 = this.popup;
          delete t15.open, delete t15.close, this.popup = new p14(t15);
        }), this._popupSetupTask.promise;
    }
    _queryLayerPopupFeatures(e12, p14, t15) {
      return p14.map(({ layerView: p15, graphics: i19 }) => {
        const s15 = { clientGraphics: i19, event: null != t15 ? t15.event : void 0, signal: null != t15 ? t15.signal : void 0, defaultPopupTemplateEnabled: null != t15 && !!t15.defaultPopupTemplateEnabled }, o14 = p15.fetchPopupFeatures(e12, s15);
        return { layerView: p15, promise: o14 };
      });
    }
    _isValidPopupGraphic(e12, p14) {
      return e12 && !!e12.getEffectivePopupTemplate(null != p14 && p14.defaultPopupTemplateEnabled);
    }
    async _prepareFetchPopupFeatures(e12, p14) {
      const { clientGraphics: t15, queryArea: i19, location: s15 } = await this._popupHitTestGraphics(e12, p14), o14 = this._getFetchPopupLayerViews(), { layerViewsAndGraphics: r13, clientOnlyGraphics: a21 } = this._graphicsPerFetchPopupLayerView(t15, o14);
      return { clientOnlyGraphics: a21, layerViewsAndGraphics: r13, queryArea: i19, location: s15 };
    }
    async _popupHitTestGraphics(e12, p14) {
      const t15 = await this.popupHitTest(e12), i19 = t15.results, s15 = t15.mapPoint, o14 = i19.filter((e13) => "graphic" === e13.type && this._isValidPopupGraphic(e13.graphic, p14)), r13 = o14.length ? o14[0].mapPoint : null;
      return { clientGraphics: o14.map((e13) => e13.graphic), queryArea: s15, location: s15 || r13 };
    }
    _getFetchPopupLayerViews() {
      const e12 = [];
      return this.allLayerViews.forEach((p14) => {
        this._isValidPopupLayerView(p14) && e12.push(p14);
      }), null != this.graphicsView && this._isValidPopupLayerView(this.graphicsView) && e12.push(this.graphicsView), e12.reverse();
    }
    _isValidPopupLayerView(e12) {
      return null != e12 && (!("layer" in e12) || !e12.suspended) && "fetchPopupFeatures" in e12;
    }
    _graphicsPerFetchPopupLayerView(e12, p14) {
      const t15 = [], i19 = /* @__PURE__ */ new Map(), s15 = p14.map((e13) => {
        const p15 = [];
        return "layer" in e13 ? i19.set(e13.layer, p15) : i19.set(e13.graphics, p15), { layerView: e13, graphics: p15 };
      });
      for (const o14 of e12) {
        const e13 = i19.get(o14.layer) || i19.get(o14.sourceLayer) || null;
        e13 ? e13.push(o14) : t15.push(o14);
      }
      return { layerViewsAndGraphics: s15, clientOnlyGraphics: t15 };
    }
  };
  return e([y2({ cast(e12) {
    return !e12 || d5(e12) || "object" == typeof e12 && (e12.open = (e13) => (r2(s.getLogger(this), "view.popup is no longer created by default. view.popup.open() will stop working when the popup isn't created", { replacement: "Use view.openPopup() instead.", version: "4.27" }), this.openPopup(e13)), e12.close = () => (r2(s.getLogger(this), "view.popup is no longer created by default. view.popup.close() will stop working when the popup isn't created", { replacement: "Use view.closePopup() instead.", version: "4.27" }), this.closePopup())), e12;
  } })], m10.prototype, "popup", void 0), e([y2()], m10.prototype, "popupEnabled", void 0), m10 = e([a2("esri.views.PopupView")], m10), m10;
};

// node_modules/@arcgis/core/views/BasemapView.js
var n16 = class extends m {
  constructor(e12) {
    super(e12), this.view = null, this.baseLayerViews = new V(), this.referenceLayerViews = new V(), this._loadingHandle = l3(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.basemap;
    }, (e13) => {
      e13 && e13.load().catch(() => {
      });
    }, h);
  }
  destroy() {
    this._set("view", null), this._loadingHandle && (this._loadingHandle.remove(), this._loadingHandle = null);
    for (const e12 of this.baseLayerViews)
      e12.destroy();
    this.baseLayerViews.length = 0;
    for (const e12 of this.referenceLayerViews)
      e12.destroy();
    this.referenceLayerViews.length = 0;
  }
  get suspended() {
    return !this.view || this.view.suspended;
  }
  get updating() {
    var _a, _b;
    if (this.view && this.view.suspended)
      return false;
    const e12 = (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.basemap;
    return !!e12 && (!!e12.loaded && (this.baseLayerViews.some((e13) => e13.updating) || this.referenceLayerViews.some((e13) => e13.updating)));
  }
};
e([y2({ constructOnly: true })], n16.prototype, "view", void 0), e([y2({ readOnly: true })], n16.prototype, "baseLayerViews", void 0), e([y2({ readOnly: true })], n16.prototype, "referenceLayerViews", void 0), e([y2({ readOnly: true })], n16.prototype, "suspended", null), e([y2({ type: Boolean, readOnly: true })], n16.prototype, "updating", null), n16 = e([a2("esri.views.BasemapView")], n16);

// node_modules/@arcgis/core/views/LayerViewManager.js
function g7(e12) {
  return "tryRecycleWith" in e12;
}
var v4 = class {
  constructor(e12, r13, t15) {
    this.layer = e12, this.view = r13, this.layerViewImporter = t15, this._controller = new AbortController(), this._deferred = C(), this._started = false, this.done = false, this.promise = this._deferred.promise, w(this._controller.signal, () => {
      const r14 = new s2("cancelled:layerview-create", "layerview creation cancelled", { layer: e12 });
      this._deferred.reject(r14);
    });
  }
  tryRecycle(e12) {
    if (!this.done || !this.layerView || !g7(this.layerView))
      return null;
    const r13 = this.layer.type, i19 = this._controller.signal;
    for (let t15 = 0; t15 < e12.length; t15++) {
      const s15 = e12[t15];
      if (s15.type !== r13)
        continue;
      const a21 = this.layerView.tryRecycleWith(s15, { signal: i19 });
      if (a21) {
        e12.splice(t15, 1), this.layer = s15;
        const r14 = this.layerView, i20 = r14.view;
        return this.promise = Promise.race([a21.then(() => (s3(this._controller.signal), s15.emit("layerview-destroy", { view: i20, layerView: r14 }), i20.emit("layerview-destroy", { view: i20, layerView: r14 }), s15.emit("layerview-create", { view: i20, layerView: r14 }), i20.emit("layerview-create", { view: i20, layerView: r14 }), r14)), new Promise((e13, r15) => w(this._controller.signal, () => r15(c())))]), this.promise;
      }
    }
    return null;
  }
  destroy() {
    this._controller.abort();
    const { layerView: e12 } = this;
    if (e12) {
      const { layer: r13, view: i19 } = this;
      r13.emit("layerview-destroy", { view: i19, layerView: e12 }), i19.emit("layerview-destroy", { layer: r13, layerView: e12 });
    }
    this.done = true, this.layer = null, this.layerView = null, this.view = null, this.layerViewImporter = null, this._map = null;
  }
  async start() {
    var _a, _b, _c;
    if (this._started)
      return;
    this._started = true;
    const { _controller: { signal: e12 }, layer: r13, view: t15 } = this;
    this._map = t15.map;
    try {
      let o14, l13;
      if (await r13.load({ signal: e12 }), "prefetchResources" in r13 && await ((_a = r13.prefetchResources) == null ? void 0 : _a.call(r13, { signal: e12 })), M3(r13))
        o14 = await r13.createLayerView(t15, { signal: e12 });
      else {
        if (!this.layerViewImporter.hasLayerViewModule(r13))
          throw new s2("layer:view-not-supported", "No layerview implementation was found");
        const s15 = await this.layerViewImporter.importLayerView(r13);
        s3(e12), o14 = "default" in s15 ? new s15.default({ layer: r13, view: t15 }) : new s15({ layer: r13, view: t15 });
      }
      const n26 = () => {
        l13 = o2(l13), o14.destroyed || o14.destroy(), o14.layer = null, o14.parent = null, o14.view = null, this.done = true;
      };
      l13 = w(e12, n26), s3(e12);
      try {
        await o14.when();
      } catch (s15) {
        throw n26(), s15;
      }
      const c17 = (_c = (_b = this._map) == null ? void 0 : _b.allLayers) == null ? void 0 : _c.includes(r13);
      if (!c17)
        return n26(), void this._deferred.reject(new s2("view:no-layerview-for-layer", "The layer has been removed from the map", { layer: r13 }));
      this.layerView = o14, r13.emit("layerview-create", { view: t15, layerView: o14 }), t15.emit("layerview-create", { layer: r13, layerView: o14 }), this.done = true, this._deferred.resolve(o14);
    } catch (s15) {
      r13.emit("layerview-create-error", { view: t15, error: s15 }), t15.emit("layerview-create-error", { layer: r13, error: s15 }), this.done = true, this._deferred.reject(new s2("layerview:create-error", "layerview creation failed", { layer: r13, error: s15 }));
    }
  }
};
var V2 = class extends m {
  constructor(e12) {
    super(e12), this._layerLayerViewInfoMap = /* @__PURE__ */ new Map(), this._recyclingInfoMap = /* @__PURE__ */ new Map(), this._watchUpdatingTracking = new c6(), this.supportsGround = true, this._preloadLayerViewModules = () => {
      var _a;
      const e13 = (_a = this.view.map) == null ? void 0 : _a.allLayers;
      if (e13)
        for (const r13 of e13)
          this.layerViewImporter.hasLayerViewModule(r13) && this.layerViewImporter.importLayerView(r13);
    }, this._reschedule = () => this.destroyed ? Promise.reject() : (null == this._workPromise && (this._workPromise = C(), this._workPromise.promise.catch(() => {
    })), this.removeHandles("reschedule"), this.addHandles(v(this._doWork), "reschedule"), this._workPromise.promise), this._doWork = () => {
      var _a, _b, _c;
      if (this.destroyed)
        return;
      const e13 = this.view.map;
      if (this._map !== e13 && (this.clear(), this._map = e13), null == this._workPromise)
        return void this.notifyChange("updating");
      this.removeHandles("reschedule"), this.removeHandles("collection-change");
      const r13 = /* @__PURE__ */ new Set(), i19 = [], t15 = this.view.ready, s15 = (e14) => {
        if (null != e14) {
          for (const a22 of e14)
            if (a22) {
              r13.add(a22);
              const e15 = this._layerLayerViewInfoMap.get(a22);
              e15 && t15 ? e15.start() : e15 || this._recyclingInfoMap.has(a22) || i19.push(a22), "layers" in a22 && a22.layers && s15(a22.layers);
            }
        }
      };
      for (const o14 of this._rootCollectionNames)
        s15(this.get(o14));
      for (const [o14, l13] of this._layerLayerViewInfoMap)
        if (!r13.has(o14)) {
          this._layerLayerViewInfoMap.delete(l13.layer);
          const e14 = l13.tryRecycle(i19);
          e14 ? (this.notifyChange("updating"), this._recyclingInfoMap.set(l13.layer, l13), e14.then(() => {
            this.notifyChange("updating"), this._recyclingInfoMap.delete(l13.layer), this._layerLayerViewInfoMap.set(l13.layer, l13), this._reschedule();
          }).catch(() => {
            this.notifyChange("updating"), this._recyclingInfoMap.delete(l13.layer), l13.destroy(), this._reschedule();
          })) : l13.destroy();
        }
      for (const [o14, l13] of this._recyclingInfoMap)
        r13.has(o14) || (this.notifyChange("updating"), this._recyclingInfoMap.delete(l13.layer), l13.destroy());
      for (const o14 of i19)
        this._createLayerView(o14);
      this._refreshCollections();
      const a21 = [(_a = e13 == null ? void 0 : e13.ground) == null ? void 0 : _a.layers, (_b = e13 == null ? void 0 : e13.basemap) == null ? void 0 : _b.baseLayers, (_c = e13 == null ? void 0 : e13.basemap) == null ? void 0 : _c.referenceLayers, e13 == null ? void 0 : e13.layers].filter((e14) => !!e14);
      r13.forEach((e14) => "layers" in e14 && a21.push(e14.layers)), this.addHandles(a21.map((e14) => this._watchUpdatingTracking.addOnCollectionChange(() => e14, this._reschedule)), "collection-change"), this._workPromise.resolve(), this._workPromise = null;
    };
  }
  initialize() {
    this.own([a3(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.allLayers;
    }, "change", this._preloadLayerViewModules, { onListenerAdd: this._preloadLayerViewModules }), l3(() => {
      const e12 = this.view, r13 = e12 == null ? void 0 : e12.map;
      return [r13 == null ? void 0 : r13.basemap, r13 == null ? void 0 : r13.ground, r13 == null ? void 0 : r13.layers, e12 == null ? void 0 : e12.ready];
    }, () => this._reschedule(), w2)]), this._preloadLayerViewModules(), this._reschedule();
  }
  destroy() {
    this.clear(), n9(this._recyclingInfoMap), n9(this._layerLayerViewInfoMap), this._watchUpdatingTracking.destroy(), this._map = null, null != this._workPromise && (this._workPromise.reject(c()), this._workPromise = null);
  }
  get _layersToLayerViews() {
    const e12 = [["view.map.basemap.baseLayers", "view.basemapView.baseLayerViews"], ["view.map.layers", "view.layerViews"], ["view.map.basemap.referenceLayers", "view.basemapView.referenceLayerViews"]];
    return this.supportsGround && e12.push(["view.map.ground.layers", "view.groundView.layerViews"]), new Map(e12);
  }
  get _rootCollectionNames() {
    return Array.from(this._layersToLayerViews.keys());
  }
  get updating() {
    return null != this._workPromise || this._watchUpdatingTracking.updating || n3(this._layerLayerViewInfoMap, (e12) => !e12.done) || this._recyclingInfoMap.size > 0;
  }
  get updatingRemaining() {
    let e12 = 0;
    for (const r13 of this._layerLayerViewInfoMap.values())
      r13.done || ++e12;
    return e12;
  }
  clear() {
    this.destroyed || (n9(this._layerLayerViewInfoMap), this._refreshCollections());
  }
  async whenLayerView(e12) {
    if (await this._reschedule(), !this._layerLayerViewInfoMap.has(e12)) {
      if (this._recyclingInfoMap.has(e12))
        return this._recyclingInfoMap.get(e12).promise;
      throw new s2("view:no-layerview-for-layer", "No layerview has been found for the layer", { layer: e12 });
    }
    return this._layerLayerViewInfoMap.get(e12).promise;
  }
  _refreshCollections() {
    for (const [e12, r13] of this._layersToLayerViews)
      this._populateLayerViewsOwners(this.get(e12), this.get(r13), this.view);
    this.notifyChange("updating"), this.notifyChange("updatingRemaining");
  }
  _populateLayerViewsOwners(e12, r13, i19) {
    if (!e12 || !r13)
      return void (r13 && r13.removeAll());
    let t15 = 0;
    for (const s15 of e12) {
      const e13 = this._layerLayerViewInfoMap.get(s15);
      if (!e13 || !e13.layerView)
        continue;
      const a21 = e13.layerView;
      a21.layer = s15, a21.parent = i19, r13.at(t15) !== a21 && r13.splice(t15, 0, a21), s15.layers && this._populateLayerViewsOwners(s15.layers, a21.layerViews, a21), t15 += 1;
    }
    t15 < r13.length && r13.splice(t15, r13.length);
  }
  _createLayerView(e12) {
    e12.load().catch(() => {
    }), this.layerViewImporter.hasLayerViewModule(e12) && this.layerViewImporter.importLayerView(e12);
    const r13 = new v4(e12, this.view, this.layerViewImporter);
    r13.promise.then(() => this._refreshCollections(), (r14) => {
      r14 && (d(r14) || "cancelled:layerview-create" === r14.name) || s.getLogger(this).error(`Failed to create layerview for layer title:'${e12.title ?? "no title"}', id:'${e12.id ?? "no id"}' of type '${e12.type}'.`, { layer: e12, error: r14 }), this._refreshCollections();
    }), this._layerLayerViewInfoMap.set(e12, r13), this.view.ready && r13.start(), this.notifyChange("updating"), this.notifyChange("updatingRemaining");
  }
};
e([y2()], V2.prototype, "_workPromise", void 0), e([y2({ readOnly: true })], V2.prototype, "_watchUpdatingTracking", void 0), e([y2({ readOnly: true })], V2.prototype, "_layersToLayerViews", null), e([y2({ readOnly: true })], V2.prototype, "_rootCollectionNames", null), e([y2()], V2.prototype, "layerViewImporter", void 0), e([y2()], V2.prototype, "supportsGround", void 0), e([y2({ readOnly: true })], V2.prototype, "updating", null), e([y2({ readOnly: true })], V2.prototype, "updatingRemaining", null), e([y2({ constructOnly: true })], V2.prototype, "view", void 0), V2 = e([a2("esri.views.LayerViewManager")], V2);
var L = V2;
function M3(e12) {
  return "createLayerView" in e12 && null != e12.createLayerView;
}

// node_modules/@arcgis/core/views/Magnifier.js
var i9 = class extends m {
  constructor(o14) {
    super(o14), this.factor = 1.5, this.offset = c4(0, 0), this.position = null, this.size = 120, this.maskUrl = null, this.maskEnabled = true, this.overlayUrl = null, this.overlayEnabled = true, this.visible = true;
  }
  get version() {
    return this.commitProperty("factor"), this.commitProperty("offset"), this.commitProperty("position"), this.commitProperty("visible"), this.commitProperty("size"), this.commitProperty("maskUrl"), this.commitProperty("maskEnabled"), this.commitProperty("overlayUrl"), this.commitProperty("overlayEnabled"), (this._get("version") || 0) + 1;
  }
};
e([y2({ type: Number })], i9.prototype, "factor", void 0), e([y2({ nonNullable: true })], i9.prototype, "offset", void 0), e([y2()], i9.prototype, "position", void 0), e([y2({ type: Number, range: { min: 0 } })], i9.prototype, "size", void 0), e([y2()], i9.prototype, "maskUrl", void 0), e([y2()], i9.prototype, "maskEnabled", void 0), e([y2()], i9.prototype, "overlayUrl", void 0), e([y2()], i9.prototype, "overlayEnabled", void 0), e([y2({ readOnly: true })], i9.prototype, "version", null), e([y2({ type: Boolean })], i9.prototype, "visible", void 0), i9 = e([a2("esri.views.Magnifier")], i9);
var p5 = i9;

// node_modules/@arcgis/core/views/3d/support/TextureCollection.js
var a7 = class extends m {
  constructor(e12, t15) {
    super({}), this._stage = e12, this._textureRequests = /* @__PURE__ */ new Map(), this._frameTask = (t15 == null ? void 0 : t15.registerTask(I.TEXTURE_UNLOAD)) ?? F;
  }
  normalizeCtorArgs() {
    return {};
  }
  destroy() {
    var _a, _b, _c;
    super.destroy(), (_a = this._frameTask) == null ? void 0 : _a.remove(), (_b = this._textureRequests) == null ? void 0 : _b.forEach((e12) => this._releaseTextureRequest(e12)), (_c = this._textureRequests) == null ? void 0 : _c.clear();
  }
  get updating() {
    return this._frameTask.updating;
  }
  fromData(e12, t15, r13) {
    var _a, _b;
    const s15 = this.makeUid(e12);
    let o14 = this._textureRequests.get(s15);
    if (!o14) {
      const e13 = new i10(r13);
      e13.texture = t15(), (_a = this._stage) == null ? void 0 : _a.add(e13.texture), (_b = this._stage) == null ? void 0 : _b.loadImmediate(e13.texture), this._textureRequests.set(s15, e13), o14 = e13;
    }
    return o14.referenceCount++, { uid: s15, texture: o14.texture, release: () => this._release(s15) };
  }
  _release(e12) {
    const t15 = this._textureRequests.get(e12);
    t15 ? (t15.referenceCount < 1 && console.warn("TextureCollection: reference count is < 1 for " + e12), t15.referenceCount--, t15.referenceCount < 1 && this._frameTask.schedule(() => this._releaseNow(e12))) : console.warn(`TextureCollection: texture doesn't exist: '${e12}'`);
  }
  get test() {
    return { textureRequests: this._textureRequests };
  }
  _releaseNow(e12) {
    if (!this._textureRequests)
      return;
    const t15 = this._textureRequests.get(e12);
    !t15 || t15.referenceCount > 0 || (this._releaseTextureRequest(t15), this._textureRequests.delete(e12));
  }
  _releaseTextureRequest(e12) {
    var _a;
    e12.onRemove && e12.onRemove(), e12.texture ? (_a = this._stage) == null ? void 0 : _a.remove(e12.texture) : e12.abortController && (e12.abortController.abort(), e12.abortController = null);
  }
  makeUid(e12, t15 = null) {
    return null != t15 ? `${e12}.${t15}px` : e12;
  }
};
e([y2()], a7.prototype, "_frameTask", void 0), e([y2()], a7.prototype, "updating", null), a7 = e([a2("esri.views.3d.support.TextureCollection")], a7);
var i10 = class {
  constructor(e12) {
    this.onRemove = e12, this.referenceCount = 0;
  }
};

// node_modules/@arcgis/core/views/interactive/interactiveToolUtils.js
function o7(t15) {
  return [t15.on("before-add", (o14) => {
    const i19 = o14.item;
    if (null == i19 || t15.includes(i19))
      return s.getLogger("esri.views.interactive.interactiveToolUtils").warn("Tool is either already in the list of tools or tool is `null`. Not adding tool."), void o14.preventDefault();
    i19.onAdd();
  }), t15.on("after-remove", (e12) => {
    const t16 = e12.item;
    t16.active && (t16.view.activeTool = null), t16.destroy();
  })];
}
function i11(e12) {
  return e12.visible && null != e12.getEditableFlag && e12.getEditableFlag(o5.USER) && e12.getEditableFlag(o5.MANAGER);
}

// node_modules/@arcgis/core/views/interactive/ToolViewManagerManipulatorState.js
var s7 = class {
  constructor() {
    this._pointerLocations = /* @__PURE__ */ new Map(), this._hoveredManipulators = /* @__PURE__ */ new Map(), this._grabbedManipulators = /* @__PURE__ */ new Map(), this._draggedManipulators = /* @__PURE__ */ new Map(), this._stopDrag = false, this._revertToNullActiveTool = false, this._cursor = null;
  }
  get cursor() {
    return this._cursor;
  }
  hasFocusedManipulators() {
    return this._grabbedManipulators.size > 0 || this._draggedManipulators.size > 0;
  }
  handleInputEvent(t15, e12) {
    const i19 = () => t15.stopPropagation();
    switch (t15.type) {
      case "pointer-move":
        l8(t15.pointerType) && this._pointerLocations.set(t15.pointerId, { x: t15.x, y: t15.y, pointerType: t15.pointerType });
        break;
      case "drag":
        this._grabbedManipulators.size > 0 && (this._stopDrag = true), this._stopDrag && (i19(), "end" === t15.action && (this._stopDrag = false));
        break;
      case "pointer-down": {
        if (!p6(t15))
          break;
        const o14 = n14(t15), r13 = this._intersect(o14, t15.pointerType, e12.forEachTool);
        if (null == r13)
          break;
        const a21 = r13.manipulator, s15 = r13.tool;
        null == a21 || null == s15 || !a21.interactive || a21.grabbable && a21.grabbableForEvent(t15) || !a21.grabbing || a21.dragging || this._ungrabManipulatorBeforeDragging(a21, t15, e12), null != a21 && null != s15 && a21.interactive && a21.grabbable && a21.grabbableForEvent(t15) && !a21.grabbing && (this._grabbedManipulators.set(t15.pointerId, { manipulator: a21, tool: s15, start: o14, pointerType: t15.pointerType }), 1 === this._grabbedManipulators.size && null == e12.activeTool && (this._revertToNullActiveTool = true, e12.setActiveTool(r13.tool)), a21.grabbing = true, a21.events.emit("grab-changed", { action: "start", pointerType: t15.pointerType, screenPoint: o14 }), i19());
        break;
      }
      case "pointer-up":
        this._draggedManipulators.has(t15.pointerId) || this._handlePointerEnd(t15, e12);
        break;
      case "pointer-drag": {
        if (!p6(t15))
          break;
        const a21 = this._grabbedManipulators.get(t15.pointerId), s15 = n(a21, ({ manipulator: t16 }) => t16), l13 = n(a21, ({ tool: t16 }) => t16);
        if (null == s15 || null == l13)
          break;
        const u5 = n14(t15);
        u5.x = i(u5.x, 0, e12.view.width), u5.y = i(u5.y, 0, e12.view.height);
        const c17 = a21.start, h9 = this._draggedManipulators.get(t15.pointerId);
        switch (t15.action) {
          case "start":
          case "update":
            "update" !== t15.action && 1 !== this._grabbedManipulators.size || (s15.dragging = true, h9 ? s15.events.emit("drag", { action: "update", start: c17, screenPoint: u5 }) : s15.events.emit("drag", { action: "start", start: c17, screenPoint: u5, pointerType: t15.pointerType }), this._draggedManipulators.set(t15.pointerId, { tool: l13, manipulator: s15, start: c17 }));
            break;
          case "end":
            s15.dragging = false, h9 && s15.events.emit("drag", { action: "end", start: c17, screenPoint: u5 }), this._draggedManipulators.delete(t15.pointerId), this._handlePointerEnd(t15, e12);
        }
        i19();
        break;
      }
      case "immediate-click": {
        const o14 = n14(t15), r13 = this._intersect(o14, t15.pointerType, e12.forEachTool);
        if (u(t15) || e12.forEachTool((t16) => {
          if ((null == r13 || r13.tool !== t16 || t16.automaticManipulatorSelection) && t16.manipulators) {
            let e13 = false;
            t16.manipulators.forEach(({ manipulator: t17 }) => {
              t17.selected && (t17.selected = false, e13 = true);
            }), e13 && t16.onManipulatorSelectionChanged && t16.onManipulatorSelectionChanged();
          }
        }), null == r13)
          break;
        const { manipulator: a21, tool: s15 } = r13;
        if (!a21.interactive)
          break;
        a21.selectable && s15.automaticManipulatorSelection && (a21.selected = !a21.selected, s15.onManipulatorSelectionChanged && s15.onManipulatorSelectionChanged());
        const l13 = t15.native.shiftKey;
        a21.events.emit("immediate-click", { screenPoint: o14, button: t15.button, pointerType: t15.pointerType, shiftKey: l13, stopPropagation: i19 });
        break;
      }
      case "click": {
        const o14 = n14(t15), r13 = this._intersect(o14, t15.pointerType, e12.forEachTool), a21 = null != r13 ? r13.manipulator : null;
        if (null == a21 || !a21.interactive)
          break;
        const s15 = t15.native.shiftKey;
        a21.events.emit(t15.type, { screenPoint: o14, button: t15.button, pointerType: t15.pointerType, shiftKey: s15 }), i19();
        break;
      }
      case "double-click": {
        const o14 = n14(t15), r13 = this._intersect(o14, t15.pointerType, e12.forEachTool), a21 = null != r13 ? r13.manipulator : null;
        if (null == a21 || !a21.interactive)
          break;
        const s15 = t15.native.shiftKey;
        a21.events.emit("double-click", { screenPoint: o14, button: t15.button, pointerType: t15.pointerType, shiftKey: s15, stopPropagation: i19 });
        break;
      }
      case "immediate-double-click": {
        const o14 = n14(t15), r13 = this._intersect(o14, t15.pointerType, e12.forEachTool), a21 = null != r13 ? r13.manipulator : null;
        if (null == a21 || !a21.interactive)
          break;
        const s15 = t15.native.shiftKey;
        a21.events.emit("immediate-double-click", { screenPoint: o14, button: t15.button, pointerType: t15.pointerType, shiftKey: s15, stopPropagation: i19 });
        break;
      }
    }
    this._onFocusChange(e12.forEachTool);
  }
  _ungrabManipulatorBeforeDragging(t15, e12, o14) {
    t15.grabbing = false, t15.events.emit("grab-changed", { action: "end", pointerType: e12.pointerType, screenPoint: n14(e12) }), this._grabbedManipulators.forEach(({ manipulator: e13 }, o15) => {
      e13 === t15 && this._grabbedManipulators.delete(o15);
    }), this._afterManipulatorUngrab(o14.setActiveTool);
  }
  _handlePointerEnd(t15, e12) {
    const o14 = n(this._grabbedManipulators.get(t15.pointerId), ({ manipulator: t16 }) => t16);
    null != o14 && o14.grabbing && (o14.grabbing = false, o14.events.emit("grab-changed", { action: "end", pointerType: t15.pointerType, screenPoint: n14(t15) }), this._grabbedManipulators.delete(t15.pointerId), this._afterManipulatorUngrab(e12.setActiveTool));
  }
  _cursorFromMap(t15) {
    let o14 = null;
    return n3(t15, ({ manipulator: t16 }) => !(null == t16 || !t16.interactive) && (t16.grabbing && t16.grabCursor ? (o14 = t16.grabCursor, true) : !!t16.cursor && (o14 = t16.cursor, true))), o14;
  }
  _onFocusChange(t15) {
    this._updateCursor(), this._updateFocusedManipulatorTools(t15);
  }
  _updateCursor() {
    this._grabbedManipulators.size > 0 ? this._cursor = this._cursorFromMap(this._grabbedManipulators) || "grabbing" : this._hoveredManipulators.size > 0 ? this._cursor = this._cursorFromMap(this._hoveredManipulators) || "pointer" : this._cursor = null;
  }
  _updateFocusedManipulatorTools(e12) {
    const o14 = /* @__PURE__ */ new Set(), r13 = /* @__PURE__ */ new Set();
    this._grabbedManipulators.forEach(({ tool: t15 }) => {
      o14.add(t15);
    }), this._hoveredManipulators.forEach(({ tool: t15 }) => {
      r13.add(t15);
    }), e12((e13) => {
      e13.hasGrabbedManipulators = o14.has(e13), e13.hasHoveredManipulators = r13.has(e13);
      const i19 = this._grabbedManipulators.values(), a21 = o(i19, ({ tool: t15 }) => t15 === e13);
      e13.firstGrabbedManipulator = null != a21 ? a21.manipulator : null;
    });
  }
  clearPointers(t15, { forEachTool: e12, setActiveTool: o14 }, r13 = true, i19) {
    const a21 = (e13, o15) => e13 === t15 && (null == i19 || i19 === o15);
    this._grabbedManipulators.forEach(({ tool: t16, manipulator: e13, pointerType: o15 }, r14) => {
      a21(t16, e13) && (this._grabbedManipulators.delete(r14), e13.grabbing = false, e13.events.emit("grab-changed", { action: "end", screenPoint: null, pointerType: o15 }));
    }), this._draggedManipulators.forEach(({ tool: t16, manipulator: e13 }, o15) => {
      a21(t16, e13) && (this._draggedManipulators.delete(o15), e13.dragging = false, e13.events.emit("drag", { action: "cancel" }));
    }), r13 && this._hoveredManipulators.forEach(({ tool: t16, manipulator: e13 }, o15) => {
      a21(t16, e13) && (this._hoveredManipulators.delete(o15), e13.hovering = false);
    }), this._afterManipulatorUngrab(o14), this._onFocusChange(e12);
  }
  _intersect(t15, e12, o14) {
    let r13 = null;
    return o14((o15) => {
      if (null == o15.manipulators || !i11(o15))
        return false;
      const i19 = o15.manipulators.intersect(t15, e12);
      return null != i19 && (r13 = { tool: o15, manipulator: i19 }, true);
    }), r13;
  }
  updateHoveredStateFromKnownPointers(t15) {
    this._pointerLocations.forEach((e12, o14) => {
      this._updateHoveredStateForPointerAtScreenPosition(c4(e12.x, e12.y), o14, e12.pointerType, t15);
    });
  }
  handleHoverEvent(t15, e12) {
    "pointer-up" !== t15.type && "immediate-click" !== t15.type && "pointer-move" !== t15.type || !l8(t15.pointerType) || this._updateHoveredStateForPointerAtScreenPosition(n14(t15), t15.pointerId, t15.pointerType, e12);
  }
  _updateHoveredStateForPointerAtScreenPosition(t15, e12, o14, i19) {
    let a21 = this._intersect(t15, o14, i19);
    const n26 = n(this._hoveredManipulators.get(e12), ({ manipulator: t16 }) => t16);
    null == a21 || a21.manipulator.interactive || (a21 = null), null != a21 && n26 === a21.manipulator || (null != n26 && (n26.hovering = false), null != a21 ? (a21.manipulator.hovering = true, this._hoveredManipulators.set(e12, a21)) : this._hoveredManipulators.delete(e12), this._onFocusChange(i19));
  }
  _afterManipulatorUngrab(t15) {
    0 === this._grabbedManipulators.size && this._revertToNullActiveTool && (t15(null), this._revertToNullActiveTool = false);
  }
};
function l8(t15) {
  return "mouse" === t15;
}
function p6(t15) {
  return "mouse" !== t15.pointerType || 0 === t15.button;
}
function u(t15) {
  return !!t15.native.shiftKey;
}

// node_modules/@arcgis/core/views/ToolViewManager.js
var f5 = "attached";
var E = "tools";
var y5 = 1e3;
var w6 = class extends d4 {
  constructor(t15) {
    super(t15), this._clock = t3, this._manipulatorState = new s7(), this.tools = new V(), this.cursor = null, this._interacting = false, this._interactingTimeout = null, this._forEachTool = (t16) => {
      for (const e12 of this.tools.items)
        if (t16(e12))
          return;
    };
  }
  initialize() {
    this.handles.add([this.view.on(r5, (t15) => {
      this._handleInputEvent(t15);
    }, _3.TOOL), ...o7(this.tools), this.tools.on("before-add", ({ item: t15 }) => {
      this._updateToolEditableFlag(t15);
    }), this.tools.on("before-remove", ({ item: t15 }) => {
      this._manipulatorState.clearPointers(t15, this._manipulatorStateEventArgs), this._updateCursor();
    }), this.tools.on("change", () => {
      this._refreshToolWatchers();
    })]);
  }
  destroy() {
    this.detach(), this.handles.removeAll();
  }
  get _manipulatorStateEventArgs() {
    return { forEachTool: this._forEachTool, activeTool: this.activeTool, setActiveTool: (t15) => {
      this.activeTool = t15;
    }, view: this.view };
  }
  set activeTool(t15) {
    if (null != t15 && !this.view.ready)
      return void s.getLogger(this).error("Cannot set active tool while view is not ready.");
    if (t15 === this.activeTool)
      return;
    const e12 = this.activeTool;
    this._set("activeTool", t15), null != e12 && e12.deactivate(), null != t15 && t15.activate(), this._removeIncompleteTools(t15);
    for (const o14 of this.tools) {
      this._updateToolEditableFlag(o14);
      const t16 = i11(o14);
      null != this.activeTool && t16 || this._manipulatorState.clearPointers(o14, this._manipulatorStateEventArgs, !t16);
    }
    this._updateCursor();
  }
  get updating() {
    var _a;
    return this.updatingHandles.updating || this.tools.some((t15) => t15.updating) || (((_a = this.textures) == null ? void 0 : _a.updating) ?? false);
  }
  get interacting() {
    return this._interacting;
  }
  _clearInteractingTimeout() {
    this._interactingTimeout = o2(this._interactingTimeout);
  }
  _startInteractingTimeout() {
    this._clearInteractingTimeout(), this._interactingTimeout = this._clock.setTimeout(() => this._interacting = false, y5);
  }
  attach() {
    var _a;
    "3d" === this.view.type ? (this._set("textures", new a7(this.view._stage, this.view.resourceController.scheduler)), this.handles.add([l3(() => {
      const { state: t15 } = this.view;
      return "camera" in t15 && t15.camera;
    }, () => this._forEachManipulator((t15) => t15.onViewChange())), (_a = this.view.elevationProvider) == null ? void 0 : _a.on("elevation-change", (t15) => this._forEachManipulator((e12) => e12.onElevationChange(t15))), e3(() => this._set("textures", l(this.textures)))], f5)) : this.handles.add(l3(() => this.view.extent, () => this._forEachManipulator((t15) => t15.onViewChange())));
  }
  detach() {
    this.activeTool = null, this.tools.removeAll(), this.handles.remove(f5), this._clearInteractingTimeout(), this._interacting = false;
  }
  _forEachManipulator(t15) {
    this._forEachTool((e12) => {
      e12.manipulators && e12.manipulators.forEach(({ manipulator: o14 }) => t15(o14, e12));
    });
  }
  _handleInputEvent(t15) {
    let e12 = false;
    const o14 = { ...t15, stopPropagation: () => {
      e12 = true, t15.stopPropagation();
    } };
    null != this.activeTool ? this.activeTool.handleInputEvent && this.activeTool.handleInputEvent(o14) : this._forEachTool((t16) => {
      !e12 && t16.visible && t16.handleInputEvent(o14);
    }), !e12 && "key-down" === t15.type && "Escape" === t15.key && this.activeTool && (t15.stopPropagation(), this.activeTool = null), this._manipulatorState.handleInputEvent(o14, this._manipulatorStateEventArgs), e12 || null == this.activeTool || this.activeTool.handleInputEventAfter(o14), this._manipulatorState.handleHoverEvent(o14, this._forEachTool), this._updateCursor(), "pointer-move" === t15.type && (this._manipulatorState.hasFocusedManipulators() || this.activeTool) && (this._interacting = true, this._startInteractingTimeout());
  }
  _refreshToolWatchers() {
    this.handles.remove(E), this._forEachTool((t15) => {
      if (t15 instanceof m) {
        const e12 = l3(() => [t15.cursor, t15.visible, t15.editable], () => {
          i11(t15) || this._manipulatorState.clearPointers(t15, this._manipulatorStateEventArgs), this._updateCursor();
        });
        this.handles.add(e12, E);
      }
      t15.manipulators && this.handles.add([t15.manipulators.on("after-remove", (e12) => {
        this._manipulatorState.clearPointers(t15, this._manipulatorStateEventArgs, true, e12.item.manipulator);
      }), t15.manipulators.on("change", () => {
        this._manipulatorState.updateHoveredStateFromKnownPointers(this._forEachTool), this._updateCursor();
      })], E);
    }), this._manipulatorState.updateHoveredStateFromKnownPointers(this._forEachTool), this._updateCursor();
  }
  _updateToolEditableFlag(t15) {
    var _a;
    (_a = t15.setEditableFlag) == null ? void 0 : _a.call(t15, o5.MANAGER, null == this.activeTool || t15 === this.activeTool);
  }
  _updateCursor() {
    let t15 = this._manipulatorState.cursor;
    null == t15 && this._forEachTool((e12) => !(null == e12.cursor || !e12.visible) && (t15 = e12.cursor, true)), this._get("cursor") !== t15 && this._set("cursor", t15);
  }
  _removeIncompleteTools(t15) {
    this.tools.filter((e12) => (null == t15 || e12 !== t15) && !e12.created && e12.removeIncompleteOnCancel).forEach((t16) => {
      this.tools.remove(t16);
    });
  }
  get test() {
    return { setClock: (t15) => this._clock = t15 };
  }
};
e([y2({ constructOnly: true, nonNullable: true })], w6.prototype, "view", void 0), e([y2({ readOnly: true, nonNullable: true })], w6.prototype, "textures", void 0), e([y2({ value: null })], w6.prototype, "activeTool", null), e([y2({ readOnly: true, type: V })], w6.prototype, "tools", void 0), e([y2({ readOnly: true })], w6.prototype, "cursor", void 0), e([y2({ readOnly: true })], w6.prototype, "updating", null), e([y2()], w6.prototype, "_interacting", void 0), e([y2({ readOnly: true })], w6.prototype, "interacting", null), w6 = e([a2("esri.views.ToolViewManager")], w6);

// node_modules/@arcgis/core/views/input/gamepad/GamepadInputDevice.js
var n17 = class extends m {
  constructor(e12) {
    super(), this.nativeIndex = null, this._detectedDeviceType = "unknown", "standard" === e12.mapping ? this._detectedDeviceType = "standard" : o8.test(e12.id) ? this._detectedDeviceType = "spacemouse" : this._detectedDeviceType = "unknown", this.nativeIndex = e12.index;
  }
  get native() {
    const e12 = navigator.getGamepads ? navigator.getGamepads() : [];
    return null != this.nativeIndex && this.nativeIndex < e12.length ? e12[this.nativeIndex] : null;
  }
  get deviceType() {
    return this._detectedDeviceType;
  }
  get axisThreshold() {
    return i12[this.deviceType];
  }
};
e([y2({ nonNullable: true, readOnly: true })], n17.prototype, "nativeIndex", void 0), e([y2({ type: String, readOnly: true })], n17.prototype, "deviceType", null), e([y2({ type: Number, readOnly: true })], n17.prototype, "axisThreshold", null), n17 = e([a2("esri.views.input.gamepad.GamepadInputDevice")], n17);
var o8 = new RegExp("^(3dconnexion|space(mouse|navigator|pilot|explorer))", "i");
var i12 = { standard: 0.15, spacemouse: 0.025, unknown: 0 };
var a8 = n17;

// node_modules/@arcgis/core/views/input/gamepad/GamepadSettings.js
var c8 = class extends m {
  constructor(...e12) {
    super(...e12), this.devices = new V(), this.enabledFocusMode = "document";
  }
};
e([y2({ type: V.ofType(a8), readOnly: true })], c8.prototype, "devices", void 0), e([y2({ type: ["document", "view", "none"] })], c8.prototype, "enabledFocusMode", void 0), c8 = e([a2("esri.views.input.gamepad.GamepadSettings")], c8);
var i13 = c8;

// node_modules/@arcgis/core/views/input/Input.js
var p7 = class extends m {
  constructor() {
    super(...arguments), this.gamepad = new i13();
  }
};
e([y2({ readOnly: true })], p7.prototype, "gamepad", void 0), p7 = e([a2("esri.views.input.Input")], p7);
var a9 = p7;

// node_modules/@arcgis/core/views/navigation/gamepad/GamepadSettings.js
var s8 = class extends m {
  constructor(o14) {
    super(o14), this.enabled = true, this.device = null, this.mode = "pan", this.tiltDirection = "forward-down", this.velocityFactor = 1;
  }
};
e([y2({ type: Boolean, nonNullable: true })], s8.prototype, "enabled", void 0), e([y2({ type: a8 })], s8.prototype, "device", void 0), e([y2({ type: ["pan", "zoom"], nonNullable: true })], s8.prototype, "mode", void 0), e([y2({ type: ["forward-down", "forward-up"], nonNullable: true })], s8.prototype, "tiltDirection", void 0), e([y2({ type: Number, nonNullable: true })], s8.prototype, "velocityFactor", void 0), s8 = e([a2("esri.views.navigation.gamepad.GamepadSettings")], s8);
var a10 = s8;

// node_modules/@arcgis/core/views/navigation/Navigation.js
var a11 = class extends m {
  constructor(o14) {
    super(o14), this.browserTouchPanEnabled = true, this.gamepad = new a10(), this.momentumEnabled = true, this.mouseWheelZoomEnabled = true;
  }
};
e([y2({ type: Boolean })], a11.prototype, "browserTouchPanEnabled", void 0), e([y2({ type: a10, nonNullable: true })], a11.prototype, "gamepad", void 0), e([y2({ type: Boolean })], a11.prototype, "momentumEnabled", void 0), e([y2({ type: Boolean })], a11.prototype, "mouseWheelZoomEnabled", void 0), a11 = e([a2("esri.views.navigation.Navigation")], a11);
var p8 = a11;

// node_modules/@arcgis/core/views/support/projectionUtils.js
var n18;
var s9 = null;
async function c9(r13) {
  s9 || (s9 = import("./geometryServiceUtils-LDZLE2XL.js").then((e12) => n18 = e12)), await s9, s3(r13);
}
async function p9(e12, s15, a21, m10) {
  if (!e12)
    return null;
  const l13 = e12.spatialReference;
  return Y() || Cn(l13, s15) ? nn(e12, s15) : n18 ? n18.projectGeometry(e12, s15, a21, m10) : (await Promise.race([c9(m10), $(m10)]), p9(e12, s15, a21, m10));
}

// node_modules/@arcgis/core/views/support/DefaultsFromMap.js
var d6 = class extends m {
  constructor(e12) {
    super(e12), this.required = { tileInfo: false, heightModelInfo: false, extent: false }, this.defaultSpatialReference = null, this.userSpatialReference = null, this.sourcePreloadCount = 10, this.priorityCollection = null, this.requiresExtentInSpatialReference = true, this.suspended = false, this._projectExtentTask = { task: null, input: null, output: null, spatialReference: null };
  }
  destroy() {
    this._projectExtentTask.task && (this._projectExtentTask.task = e2(this._projectExtentTask.task)), this._set("map", null);
  }
  get ready() {
    return !this._spatialReferenceTask.updating && !this._tileInfoTask.updating && !this._extentTask.updating;
  }
  get heightModelInfoReady() {
    return !this._heightModelInfoTask.updating;
  }
  get spatialReference() {
    return null != this.userSpatialReference ? this.userSpatialReference : this._spatialReferenceTask.spatialReference;
  }
  get extent() {
    return this._extentTask.extent;
  }
  get heightModelInfo() {
    return this._heightModelInfoTask.heightModelInfo;
  }
  get vcsWkid() {
    return this._heightModelInfoTask.vcsWkid;
  }
  get latestVcsWkid() {
    return this._heightModelInfoTask.latestVcsWkid;
  }
  get viewingMode() {
    return null == this.userSpatialReference || this.userSpatialReference.equals(this._spatialReferenceTask.spatialReference) ? this._spatialReferenceTask.viewingMode : null;
  }
  get tileInfo() {
    return this._tileInfoTask.tileInfo;
  }
  get mapCollections() {
    var _a, _b, _c, _d;
    const e12 = (_a = this.map) == null ? void 0 : _a.call(this), t15 = [];
    return null != this.priorityCollection && t15.push(this.priorityCollection), t15.push({ parent: e12 == null ? void 0 : e12.basemap, layers: (_b = e12 == null ? void 0 : e12.basemap) == null ? void 0 : _b.baseLayers }, { layers: e12 == null ? void 0 : e12.layers }, { parent: e12 == null ? void 0 : e12.ground, layers: (_c = e12 == null ? void 0 : e12.ground) == null ? void 0 : _c.layers }, { parent: e12 == null ? void 0 : e12.basemap, layers: (_d = e12 == null ? void 0 : e12.basemap) == null ? void 0 : _d.referenceLayers }), t15;
  }
  get _allLayers() {
    return this._collectLayers(this.mapCollections);
  }
  get _spatialReferenceTask() {
    if (this.suspended)
      return this._get("_spatialReferenceTask") ?? { updating: false };
    const { layers: e12, updating: t15 } = this._allLayers;
    let n26 = null;
    for (const s15 of e12) {
      const e13 = this._getSupportedSpatialReferences(s15);
      if (e13.length > 0) {
        const t16 = this._narrowDownSpatialReferenceCandidates(n26, e13);
        null != t16 && (n26 = t16);
      }
      if (null != n26 && 1 === n26.length)
        break;
    }
    if (t15 && (null == n26 || 1 !== n26.length))
      return { updating: true };
    const a21 = this._pickSpatialReferenceCandidate(n26);
    return { spatialReference: null != a21 ? a21.spatialReference : null, viewingMode: null != a21 ? a21.viewingMode : null, updating: false };
  }
  get _tileInfoTask() {
    var _a, _b, _c, _d, _e, _f, _g;
    if (!this.required.tileInfo)
      return this._get("_tileInfoTask") ?? { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const { layers: e12, updating: t15 } = this._collectLayers([{ parent: (_b = (_a = this.map) == null ? void 0 : _a.call(this)) == null ? void 0 : _b.basemap, layers: (_e = (_d = (_c = this.map) == null ? void 0 : _c.call(this)) == null ? void 0 : _d.basemap) == null ? void 0 : _e.baseLayers }, { layers: (_g = (_f = this.map) == null ? void 0 : _f.call(this)) == null ? void 0 : _g.layers }]);
    if (e12 && e12.length > 0 && "tileInfo" in e12[0]) {
      const t16 = e12[0].tileInfo;
      return { tileInfo: t16 && t16.spatialReference.equals(this.spatialReference) ? t16 : null, updating: false };
    }
    return { updating: t15 };
  }
  get _heightModelInfoTask() {
    var _a, _b, _c;
    if (!this.required.heightModelInfo || this.suspended && ((_a = this._get("_heightModelInfoTask")) == null ? void 0 : _a.heightModelInfo))
      return this._get("_heightModelInfoTask") ?? { updating: false };
    const { layers: e12, updating: t15 } = this._allLayers;
    for (const n26 of e12)
      if (g4(n26)) {
        const e13 = l7(n26);
        if (e13)
          return { heightModelInfo: e13, vcsWkid: (_b = n26.spatialReference) == null ? void 0 : _b.vcsWkid, latestVcsWkid: (_c = n26.spatialReference) == null ? void 0 : _c.latestVcsWkid, updating: false };
      }
    return { updating: t15 };
  }
  get _extentCandidatesTask() {
    if (this.suspended || !this.required.extent)
      return this._get("_extentCandidatesTask") ?? { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const e12 = this._allLayers, t15 = e12.updating, n26 = [];
    for (const a21 of e12.layers) {
      const e13 = "fullExtents" in a21 && a21.fullExtents || (null != a21.fullExtent ? [a21.fullExtent] : []), t16 = this.requiresExtentInSpatialReference ? null : e13[0], s15 = e13.find((e14) => e14.spatialReference.equals(this.spatialReference)) ?? t16;
      if (s15)
        return { candidates: [{ extent: s15, layer: a21 }], updating: false };
      if (this._getSupportedSpatialReferences(a21).length > 0)
        for (const i19 of e13)
          n26.push({ extent: i19, layer: a21 });
    }
    return { candidates: n26, updating: t15 };
  }
  get _extentTask() {
    const { candidates: e12, updating: t15 } = this._extentCandidatesTask;
    if (t15)
      return { updating: t15 };
    if (null == e12 || 0 === e12.length)
      return { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const i19 = this._pickExtentCandidate(e12), r13 = this.spatialReference;
    return i19.extent.equals(this._projectExtentTask.input) && r13.equals(this._projectExtentTask.spatialReference) ? { extent: this._projectExtentTask.output, updating: null != this._projectExtentTask.task && !this._projectExtentTask.task.finished } : (null != this._projectExtentTask.task && (this._projectExtentTask.task = e2(this._projectExtentTask.task)), this._projectExtentTask = { input: i19.extent.clone(), output: null, spatialReference: r13.clone(), task: d3(async (e13) => {
      try {
        const t16 = await p9(i19.extent, r13, "portalItem" in i19.layer ? i19.layer.portalItem : void 0, e13);
        this._projectExtentTask = { ...this._projectExtentTask, task: null, output: t16 };
      } catch (t16) {
        if (a(e13))
          return;
        this._projectExtentTask = { ...this._projectExtentTask, task: null };
      }
    }) }, { updating: true });
  }
  _narrowDownSpatialReferenceCandidates(e12, t15) {
    if (null == e12)
      return t15;
    const n26 = [], a21 = (e13, t16) => null != e13 ? null != t16 ? e13 === t16 && e13 : e13 : t16;
    for (const s15 of e12)
      for (const e13 of t15) {
        if (!s15.spatialReference.equals(e13.spatialReference))
          continue;
        const t16 = a21(s15.viewingMode, e13.viewingMode);
        if (false !== t16) {
          n26.push({ spatialReference: s15.spatialReference, viewingMode: t16 });
          break;
        }
      }
    return n26.length > 0 ? n26 : null;
  }
  _pickSpatialReferenceCandidate(e12) {
    const t15 = this.defaultSpatialReference;
    return null == e12 || e12.length < 1 ? null != t15 ? { spatialReference: t15, viewingMode: null } : null : (null != t15 && e12.length > 1 && e12.some(({ spatialReference: e13 }) => e13.equals(t15)) && (e12 = e12.filter(({ spatialReference: e13 }) => e13.equals(t15))), e12.length > 1 && e12.some(({ viewingMode: e13 }) => e13 !== l4.Local) && (e12 = e12.filter(({ viewingMode: e13 }) => e13 !== l4.Local)), e12[0]);
  }
  _getSupportedSpatialReferences(e12) {
    const t15 = "supportedSpatialReferences" in e12 && e12.supportedSpatialReferences || (e12.spatialReference ? [e12.spatialReference] : []);
    if (0 === t15.length)
      return [];
    const n26 = [];
    for (const a21 of t15) {
      const t16 = this.getSpatialReferenceSupport({ spatialReference: a21, layer: e12 });
      if (null != t16) {
        const e13 = null != t16.constraints ? t16.constraints : [{ spatialReference: a21, viewingMode: null }];
        for (const { spatialReference: t17, viewingMode: a22 } of e13)
          this.requiresExtentInSpatialReference && null != this.userSpatialReference && !t17.equals(this.userSpatialReference) || n26.push({ spatialReference: t17, viewingMode: a22 });
      }
    }
    return n26;
  }
  _pickExtentCandidate(e12) {
    const t15 = this.spatialReference;
    return e12.find(({ extent: e13 }) => t15.equals(e13.spatialReference)) || e12[0];
  }
  _collectLayers(e12) {
    var _a;
    if ("loaded" !== this._loadMaybe((_a = this.map) == null ? void 0 : _a.call(this)))
      return { layers: [], updating: true };
    const t15 = new f6();
    for (const n26 of e12)
      if (this._collectCollection(n26, t15), t15.preloading === this.sourcePreloadCount)
        break;
    return { layers: t15.layers, updating: t15.updating };
  }
  _collectCollection(e12, t15) {
    if (e12.layers) {
      switch (this._loadMaybe(e12.parent)) {
        case "loading":
          return t15.updating = true, void ++t15.preloading;
        case "failed":
          return;
      }
      for (const n26 of e12.layers) {
        switch (this._loadMaybe(n26)) {
          case "failed":
            continue;
          case "loading":
            t15.updating = true, ++t15.preloading;
            break;
          case "loaded":
            t15.updating || t15.layers.push(n26), "layers" in n26 && this._collectCollection({ layers: n26.layers }, t15);
        }
        if (t15.preloading === this.sourcePreloadCount)
          break;
      }
    }
  }
  _loadMaybe(e12) {
    return e12 && "loadStatus" in e12 && null != e12.loadStatus ? "not-loaded" === e12.loadStatus ? (e12.load().catch((e13) => {
      d(e13) || console.log(e13);
    }), "loading") : e12.loadStatus : "loaded";
  }
};
e([y2()], d6.prototype, "required", void 0), e([y2({ constructOnly: true })], d6.prototype, "map", void 0), e([y2({ constructOnly: true })], d6.prototype, "getSpatialReferenceSupport", void 0), e([y2()], d6.prototype, "defaultSpatialReference", void 0), e([y2()], d6.prototype, "userSpatialReference", void 0), e([y2()], d6.prototype, "sourcePreloadCount", void 0), e([y2()], d6.prototype, "priorityCollection", void 0), e([y2()], d6.prototype, "requiresExtentInSpatialReference", void 0), e([y2()], d6.prototype, "suspended", void 0), e([y2({ readOnly: true })], d6.prototype, "ready", null), e([y2({ readOnly: true })], d6.prototype, "heightModelInfoReady", null), e([y2({ readOnly: true })], d6.prototype, "spatialReference", null), e([y2({ readOnly: true })], d6.prototype, "extent", null), e([y2({ readOnly: true })], d6.prototype, "heightModelInfo", null), e([y2({ readOnly: true })], d6.prototype, "vcsWkid", null), e([y2({ readOnly: true })], d6.prototype, "latestVcsWkid", null), e([y2({ readOnly: true })], d6.prototype, "viewingMode", null), e([y2({ readOnly: true })], d6.prototype, "tileInfo", null), e([y2({ readOnly: true })], d6.prototype, "mapCollections", null), e([y2({ readOnly: true })], d6.prototype, "_allLayers", null), e([y2({ readOnly: true })], d6.prototype, "_spatialReferenceTask", null), e([y2({ readOnly: true })], d6.prototype, "_tileInfoTask", null), e([y2({ readOnly: true })], d6.prototype, "_heightModelInfoTask", null), e([y2({ readOnly: true })], d6.prototype, "_extentCandidatesTask", null), e([y2()], d6.prototype, "_extentTask", null), e([y2()], d6.prototype, "_projectExtentTask", void 0), d6 = e([a2("esri.views.support.DefaultsFromMap")], d6);
var f6 = class {
  constructor() {
    this.layers = new Array(), this.preloading = -1, this.updating = false;
  }
};

// node_modules/@arcgis/core/views/View.js
var k;
var W2 = k = class extends a4(n4.EventedMixin(m2(m))) {
  constructor(e12) {
    super(e12), this._userSpatialReference = null, this._cursor = null, this.allLayerViews = new n8({ getCollections: () => {
      var _a, _b, _c;
      return [(_a = this.basemapView) == null ? void 0 : _a.baseLayerViews, (_b = this.groundView) == null ? void 0 : _b.layerViews, this.layerViews, (_c = this.basemapView) == null ? void 0 : _c.referenceLayerViews];
    }, getChildrenFunction: A2 }), this.groundView = null, this.basemapView = null, this.fatalError = null, this.graphics = new i6(), this.analyses = new t8(), this.typeSpecificPreconditionsReady = true, this.layerViews = new V(), this.magnifier = new p5(), this.padding = { left: 0, top: 0, right: 0, bottom: 0 }, this.ready = false, this.spatialReferenceWarningDelay = 1e3, this.supportsGround = true, this.timeExtent = null, this.timeReference = new c3(), this.type = null, this.scale = null, this.updating = false, this.initialExtentRequired = true, this.input = new a9(), this.navigation = new p8(), this.layerViewManager = null, this.analysisViewManager = null, this.isHeightModelInfoRequired = false, this.width = null, this.height = null, this.resizing = false, this.suspended = false, this.viewEvents = new p3(this), this.persistableViewModels = new V(), this._isValid = false, this._readyCycleForced = false, this._currentSpatialReference = null, this.handles.add(l3(() => this.preconditionsReady, (e13) => {
      var _a, _b;
      e13 ? (this._currentSpatialReference = this.spatialReference, k.views.add(this)) : (this._currentSpatialReference = null, k.views.remove(this)), this.notifyChange("spatialReference"), !e13 && this.ready ? ((_a = this.toolViewManager) == null ? void 0 : _a.detach(), null != this.analysisViewManager && this.analysisViewManager.detach(), (_b = this.layerViewManager) == null ? void 0 : _b.clear(), this._teardown()) : e13 && !this.ready && (this._startup(), null != this.analysisViewManager && this.analysisViewManager.attach(), this.toolViewManager.attach());
    }, U));
  }
  initialize() {
    this.addResolvingPromise(this.validate().then(() => (this._isValid = true, j(() => this.ready)))), this.basemapView = new n16({ view: this }), this.layerViewManager = new L({ view: this, layerViewImporter: { importLayerView: (e12) => this.importLayerView(e12), hasLayerViewModule: (e12) => this.hasLayerViewModule(e12) }, supportsGround: this.supportsGround }), this.toolViewManager = new w6({ view: this }), this._setupSpatialReferenceLogger(), this.handles.add([l3(() => this.initialExtentRequired, (e12) => this.defaultsFromMap.required = { ...this.defaultsFromMap.required, extent: e12 }, { sync: true, initial: true }), l3(() => this.ready, (e12) => {
      this.defaultsFromMap && (this.defaultsFromMap.suspended = e12, this.defaultsFromMap.userSpatialReference = e12 ? this.spatialReference : this._userSpatialReference);
    }, { sync: true }), l3(() => this._userSpatialReference, (e12) => {
      this.defaultsFromMap && (this.defaultsFromMap.userSpatialReference = e12);
    }, { sync: true, initial: true })]);
  }
  _setupSpatialReferenceLogger() {
    let e12 = null;
    this.handles.add([l3(() => {
      var _a;
      return (_a = this.defaultsFromMap) == null ? void 0 : _a.ready;
    }, (t15) => {
      var _a;
      const i19 = ((_a = this.map) == null ? void 0 : _a.allLayers.length) > 0;
      if (t15 && !this.spatialReference && i19) {
        if (null != e12)
          return;
        const t16 = e3(() => e12 = e2(e12));
        e12 = d3(async (t17) => {
          try {
            await g(this.spatialReferenceWarningDelay, null, t17);
          } catch {
            return;
          } finally {
            e12 = null;
          }
          s.getLogger(this).warn("#spatialReference", "no spatial reference could be derived from the currently added map layers");
        }), this.handles.add(t16, "spatial-reference-logger-task");
      } else
        this.handles.remove("spatial-reference-logger-task");
    }, { sync: true })]);
  }
  destroy() {
    var _a, _b;
    this.destroyed || (k.views.remove(this), this.viewEvents.destroy(), this.allLayerViews.destroy(), this.navigation && (this.navigation.destroy(), this._set("navigation", null)), this.graphics = l(this.graphics), this.analyses = l(this.analyses), this.handles.remove("defaultsFromMap"), this.defaultsFromMap.destroy(), this._set("defaultsFromMap", null), l(this.analysisViewManager), this.toolViewManager = l(this.toolViewManager), this.layerViewManager = l(this.layerViewManager), this.basemapView = l(this.basemapView), (_a = this.groundView) == null ? void 0 : _a.destroy(), (_b = this.layerViews) == null ? void 0 : _b.forEach((e12) => e12.destroy()), this.layerViews.length = 0, this.invalidate(), this._emitter.clear(), this.handles.removeAll(), this.map = l(this.map));
  }
  _startup() {
    this._set("ready", true);
  }
  _teardown() {
    this._set("ready", false);
  }
  whenReady() {
    return Promise.resolve(this);
  }
  toMap() {
    return s.getLogger(this).error("#toMap()", "Not implemented on this instance of View"), null;
  }
  get activeTool() {
    var _a;
    return (_a = this.toolViewManager) == null ? void 0 : _a.activeTool;
  }
  set activeTool(e12) {
    this.toolViewManager && (this.toolViewManager.activeTool = e12);
  }
  get animation() {
    return this._get("animation");
  }
  set animation(e12) {
    this._set("animation", e12);
  }
  get center() {
    return null;
  }
  get _defaultsFromMapSettings() {
    return {};
  }
  get defaultsFromMap() {
    return new d6({ required: { tileInfo: false, heightModelInfo: false, extent: false }, map: () => this.map, getSpatialReferenceSupport: (e12) => this.getSpatialReferenceSupport(e12), ...this._defaultsFromMapSettings });
  }
  get extent() {
    return this._get("extent");
  }
  set extent(e12) {
    this._set("extent", e12);
  }
  get heightModelInfo() {
    return this.getDefaultHeightModelInfo();
  }
  get interacting() {
    return this.navigating;
  }
  get navigating() {
    return false;
  }
  get preconditionsReady() {
    var _a;
    return !(this.fatalError || !this._isValid || this._readyCycleForced || !this.map || _.isLoadable(this.map) && !this.map.loaded || 0 === this.width || 0 === this.height || !this.spatialReference || !this._validateSpatialReference(this.spatialReference) || !this._currentSpatialReference && !((_a = this.defaultsFromMap) == null ? void 0 : _a.ready) || !this.typeSpecificPreconditionsReady);
  }
  get resolution() {
    return 0;
  }
  set map(e12) {
    e12 !== this._get("map") && ((e12 == null ? void 0 : e12.destroyed) && (s.getLogger(this).warn("#map", "The provided map is already destroyed", { map: e12 }), e12 = null), _.isLoadable(e12) && e12.load().catch(() => {
    }), this.constructed && !this.destroyed && (this.forceReadyCycle(), this._currentSpatialReference = null), this._set("map", e12));
  }
  get spatialReference() {
    var _a, _b;
    let e12 = this._userSpatialReference || this._currentSpatialReference || this.getDefaultSpatialReference() || null;
    return e12 && ((_b = (_a = this.defaultsFromMap) == null ? void 0 : _a.required) == null ? void 0 : _b.heightModelInfo) && (e12 = e12.clone(), e12.vcsWkid = this.defaultsFromMap.vcsWkid, e12.latestVcsWkid = this.defaultsFromMap.latestVcsWkid), e12;
  }
  set spatialReference(e12) {
    const t15 = !S(e12, this._get("spatialReference"));
    this._set("_userSpatialReference", e12), t15 && (this._set("spatialReference", e12), this._spatialReferenceChanged(e12));
  }
  _spatialReferenceChanged(e12) {
  }
  get stationary() {
    return !this.animation && !this.navigating && !this.resizing;
  }
  get tools() {
    var _a;
    return (_a = this.toolViewManager) == null ? void 0 : _a.tools;
  }
  get initialExtent() {
    var _a;
    return (_a = this.defaultsFromMap) == null ? void 0 : _a.extent;
  }
  get cursor() {
    const e12 = this.toolViewManager ? this.toolViewManager.cursor : null;
    return null != e12 ? e12 : this._cursor || "default";
  }
  set cursor(e12) {
    this._cursor = e12, this.notifyChange("cursor");
  }
  get size() {
    return [this.width, this.height];
  }
  whenLayerView(e12) {
    var _a;
    return ((_a = this.layerViewManager) == null ? void 0 : _a.whenLayerView(e12)) ?? Promise.reject();
  }
  getDefaultSpatialReference() {
    var _a;
    return (_a = this.defaultsFromMap) == null ? void 0 : _a.spatialReference;
  }
  getDefaultHeightModelInfo() {
    var _a;
    return (this.map && "heightModelInfo" in this.map ? this.map.heightModelInfo : void 0) ?? ((_a = this.defaultsFromMap) == null ? void 0 : _a.heightModelInfo) ?? null;
  }
  importLayerView(e12) {
    throw new s2("importLayerView() not implemented");
  }
  hasLayerViewModule(e12) {
    return false;
  }
  async validate() {
  }
  invalidate() {
    this._isValid = false;
  }
  getSpatialReferenceSupport() {
    return { constraints: null };
  }
  _validateSpatialReference(e12) {
    return null != this.getSpatialReferenceSupport({ spatialReference: e12 });
  }
  when(e12, t15) {
    return this.isResolved() && !this.ready && s.getLogger(this).warn("#when()", "Calling view.when() while the view is no longer ready but was already resolved once will resolve immediately. Use reactiveUtils.whenOnce(() => view.ready).then(...) instead."), super.when(e12, t15);
  }
  forceReadyCycle() {
    this.ready && (f2(() => this.destroyed || false === this.preconditionsReady, () => this._readyCycleForced = false, { once: true }), this._readyCycleForced = true);
  }
  addAndActivateTool(e12) {
    this.toolViewManager.tools.add(e12), this.activeTool = e12;
  }
  tryFatalErrorRecovery() {
    this.fatalError = null;
  }
};
W2.views = new V(), e([y2()], W2.prototype, "_userSpatialReference", void 0), e([y2()], W2.prototype, "activeTool", null), e([y2({ readOnly: true })], W2.prototype, "allLayerViews", void 0), e([y2()], W2.prototype, "groundView", void 0), e([y2()], W2.prototype, "animation", null), e([y2()], W2.prototype, "basemapView", void 0), e([y2()], W2.prototype, "center", null), e([y2({ readOnly: true })], W2.prototype, "_defaultsFromMapSettings", null), e([y2()], W2.prototype, "defaultsFromMap", null), e([y2()], W2.prototype, "fatalError", void 0), e([y2({ type: M })], W2.prototype, "extent", null), e([y2(p2(i6, "graphics"))], W2.prototype, "graphics", void 0), e([y2(p2(t8, "analyses"))], W2.prototype, "analyses", void 0), e([y2({ readOnly: true, type: v2 })], W2.prototype, "heightModelInfo", null), e([y2({ readOnly: true })], W2.prototype, "interacting", null), e([y2({ readOnly: true })], W2.prototype, "navigating", null), e([y2({ readOnly: true, dependsOn: ["fatalError", "_isValid", "_readyCycleForced", "map", "map.loaded?", "width", "height", "spatialReference", "_currentSpatialReference", "defaultsFromMap.ready", "typeSpecificPreconditionsReady"] })], W2.prototype, "preconditionsReady", null), e([y2({ readOnly: true })], W2.prototype, "typeSpecificPreconditionsReady", void 0), e([y2({ type: V, readOnly: true })], W2.prototype, "layerViews", void 0), e([y2()], W2.prototype, "resolution", null), e([y2({ type: p5 })], W2.prototype, "magnifier", void 0), e([y2({ value: null, type: j2 })], W2.prototype, "map", null), e([y2()], W2.prototype, "padding", void 0), e([y2({ readOnly: true })], W2.prototype, "ready", void 0), e([y2({ type: f })], W2.prototype, "spatialReference", null), e([y2()], W2.prototype, "spatialReferenceWarningDelay", void 0), e([y2()], W2.prototype, "stationary", null), e([y2({ readOnly: true })], W2.prototype, "supportsGround", void 0), e([y2({ type: c5 })], W2.prototype, "timeExtent", void 0), e([y2({ type: c3, nonNullable: true })], W2.prototype, "timeReference", void 0), e([y2()], W2.prototype, "tools", null), e([y2()], W2.prototype, "toolViewManager", void 0), e([y2({ readOnly: true })], W2.prototype, "type", void 0), e([y2({ type: Number })], W2.prototype, "scale", void 0), e([y2({ readOnly: true })], W2.prototype, "updating", void 0), e([y2({ readOnly: true })], W2.prototype, "initialExtentRequired", void 0), e([y2({ readOnly: true })], W2.prototype, "initialExtent", null), e([y2()], W2.prototype, "cursor", null), e([y2({ readOnly: true })], W2.prototype, "input", void 0), e([y2({ type: p8, nonNullable: true })], W2.prototype, "navigation", void 0), e([y2()], W2.prototype, "layerViewManager", void 0), e([y2()], W2.prototype, "analysisViewManager", void 0), e([y2()], W2.prototype, "width", void 0), e([y2()], W2.prototype, "height", void 0), e([y2({ readOnly: true })], W2.prototype, "resizing", void 0), e([y2({ value: null, readOnly: true })], W2.prototype, "size", null), e([y2({ readOnly: true })], W2.prototype, "suspended", void 0), e([y2({ readOnly: true })], W2.prototype, "viewEvents", void 0), e([y2({ readOnly: true })], W2.prototype, "persistableViewModels", void 0), e([y2()], W2.prototype, "_isValid", void 0), e([y2()], W2.prototype, "_readyCycleForced", void 0), e([y2()], W2.prototype, "_currentSpatialReference", void 0), W2 = k = e([a2("esri.views.View")], W2);
var z2 = W2;
function A2(e12) {
  return e12.layerViews;
}

// node_modules/@arcgis/core/views/ViewAnimation.js
var n19 = class extends p {
  constructor(t15) {
    super(t15), this.state = "running", this.target = null, this._resolver = null;
  }
  initialize() {
    this._resolver = C(), this.addResolvingPromise(this._resolver.promise);
  }
  get done() {
    return "finished" === this.state || "stopped" === this.state;
  }
  stop() {
    var _a;
    "stopped" !== this.state && "finished" !== this.state && (this._set("state", "stopped"), (_a = this._resolver) == null ? void 0 : _a.reject(new s2("ViewAnimation stopped")));
  }
  finish() {
    var _a;
    "stopped" !== this.state && "finished" !== this.state && (this._set("state", "finished"), (_a = this._resolver) == null ? void 0 : _a.resolve());
  }
  update(t15, s15) {
    s15 || (s15 = T(t15) ? "waiting-for-target" : "running"), this._set("target", t15), this._set("state", s15);
  }
};
e([y2({ readOnly: true })], n19.prototype, "done", null), e([y2({ readOnly: true, type: String })], n19.prototype, "state", void 0), e([y2()], n19.prototype, "target", void 0), n19 = e([a2("esri.views.ViewAnimation")], n19), function(t15) {
  t15.State = { RUNNING: "running", STOPPED: "stopped", FINISHED: "finished", WAITING_FOR_TARGET: "waiting-for-target" };
}(n19 || (n19 = {}));
var a12 = n19;

// node_modules/@arcgis/core/views/support/WebGLRequirements.js
function i14(i19) {
  const s15 = n13(i19);
  if (!s15.available)
    return new s2("webgl:required", "3d" === i19 ? "WebGL2 is required but not supported." : "WebGL is required but not supported.", new Error().stack);
  if ("3d" === i19 && s15.majorPerformanceCaveat)
    return new s2("webgl:major-performance-caveat-detected", "Your WebGL implementation doesn't seem to support hardware accelerated rendering. Check your browser settings or if your GPU is in a blocklist.");
  if (!s15.supportsHighPrecisionFragment)
    return new s2("webgl:high-precision-fragment-required", "WebGL support for high precision fragment shaders is required but not supported.");
  if (!s15.supportsVertexShaderSamplers)
    return new s2("webgl:vertex-shader-samplers-required", "WebGL support for vertex shader samplers is required but not supported.");
  if (s15.type === n12.WEBGL1) {
    if (!s15.supportsElementIndexUint)
      return new s2("webgl:element-index-uint-required", "WebGL support for uint vertex indices is required but not supported.");
    if (!s15.supportsStandardDerivatives)
      return new s2("webgl:standard-derivatives-required", "WebGL support for standard derivatives is required but not supported.");
    if (!s15.supportsInstancedArrays)
      return new s2("webgl:instanced-arrays-required", "WebGL support for instanced rendering is required but not supported.");
  }
  return null;
}

// node_modules/@arcgis/core/views/ui/Component.js
function i15(t15) {
  return t15 && "nodeType" in t15;
}
function d7(t15) {
  return t15 && "function" == typeof t15.render;
}
var c10 = { component: "esri-component" };
var p10 = class extends m {
  constructor() {
    super(...arguments), this.widget = null;
  }
  destroy() {
    var _a;
    this.node = null, (_a = this.widget) == null ? void 0 : _a.destroy();
  }
  get id() {
    return this.get("widget.id") || this.get("node.id");
  }
  set node(t15) {
    const o14 = this._get("node");
    t15 !== o14 && (t15 && t15.classList.add(c10.component), o14 && o14.classList.remove(c10.component), this._set("node", t15));
  }
  castNode(t15) {
    var _a;
    return (_a = this.widget) == null ? void 0 : _a.destroy(), t15 ? "string" == typeof t15 || i15(t15) ? (this._set("widget", null), e4(t15)) : (d7(t15) && !t15.domNode && (t15.domNode = document.createElement("div")), this._set("widget", t15), t15.domNode) : (this._set("widget", null), null);
  }
};
e([y2({ dependsOn: [] })], p10.prototype, "id", null), e([y2()], p10.prototype, "node", null), e([s4("node")], p10.prototype, "castNode", null), e([y2({ readOnly: true })], p10.prototype, "widget", void 0), p10 = e([a2("esri.views.ui.Component")], p10);
var l9 = p10;

// node_modules/@arcgis/core/views/ui/UI.js
var f7 = { left: 0, top: 0, bottom: 0, right: 0 };
var _5 = { bottom: 30, top: 15, right: 15, left: 15 };
var g8 = "esri-ui";
var y6 = { ui: g8, corner: `${g8}-corner`, innerContainer: `${g8}-inner-container`, manualContainer: `${g8}-manual-container`, cornerContainer: `${g8}-corner-container`, topLeft: `${g8}-top-left`, topRight: `${g8}-top-right`, bottomLeft: `${g8}-bottom-left`, bottomRight: `${g8}-bottom-right` };
function C3(t15) {
  return t15 && !t15._started && "function" == typeof t15.postMixInProperties && "function" == typeof t15.buildRendering && "function" == typeof t15.postCreate && "function" == typeof t15.startup;
}
function v5(t15) {
  return 0 === t15 ? "0" : `${t15}px`;
}
function b(t15) {
  const o14 = "object" == typeof t15 && null !== t15 && Object.getPrototypeOf(t15);
  return (null === o14 || o14 === Object.prototype) && ("component" in t15 || "index" in t15 || "position" in t15) ? t15 : null;
}
function w7(t15, { top: o14, bottom: n26, left: i19, right: e12 }) {
  t15.style.top = o14, t15.style.bottom = n26, t15.style.left = i19, t15.style.right = e12;
}
var P2 = class extends n4.EventedAccessor {
  constructor(t15) {
    super(t15), this._cornerNameToContainerLookup = {}, this._positionNameToContainerLookup = {}, this._components = new Array(), this._componentMap = /* @__PURE__ */ new Map(), this._locale = c2(), this.view = null, this._applyViewPadding = () => {
      const t16 = this.container;
      t16 && w7(t16, this._toPixelPosition(this._getViewPadding()));
    }, this._applyUIPadding = () => {
      const t16 = this._innerContainer;
      t16 && w7(t16, this._toPixelPosition(this.padding));
    }, this._initContainers();
  }
  initialize() {
    this.addHandles([l3(() => {
      var _a;
      return [(_a = this.view) == null ? void 0 : _a.padding, this.container];
    }, this._applyViewPadding, h), l3(() => this.padding, this._applyUIPadding, h), l3(() => [this.container, this._locale], ([t15, o14]) => {
      t15 && t15.setAttribute("lang", o14);
    }, h), s5((t15) => {
      this._locale = t15;
    })]);
  }
  destroy() {
    this.container = null;
    for (const t15 of this._components)
      t15.destroy();
    this._components.length = 0, this._componentMap.clear();
  }
  set container(t15) {
    const o14 = this._get("container");
    t15 !== o14 && (t15 && (t15.classList.add(y6.ui), n7(t15), this._attachContainers(t15)), o14 && (o14.classList.remove(y6.ui), w7(o14, { top: "", bottom: "", left: "", right: "" }), n5(o14)), this._set("container", t15));
  }
  get height() {
    var _a;
    const t15 = ((_a = this.view) == null ? void 0 : _a.height) ?? 0;
    if (0 === t15)
      return t15;
    const o14 = this._getViewPadding(), { top: n26, bottom: i19 } = o14;
    return Math.max(t15 - n26 - i19, 0);
  }
  get padding() {
    return this._get("padding");
  }
  set padding(t15) {
    this._overrideIfSome("padding", t15);
  }
  castPadding(t15) {
    return "number" == typeof t15 ? { bottom: t15, top: t15, right: t15, left: t15 } : { ..._5, ...t15 };
  }
  get width() {
    var _a;
    const t15 = ((_a = this.view) == null ? void 0 : _a.width) ?? 0;
    if (0 === t15)
      return t15;
    const o14 = this._getViewPadding(), { left: n26, right: i19 } = o14;
    return Math.max(t15 - n26 - i19, 0);
  }
  add(t15, o14) {
    let n26, i19, e12;
    if (Array.isArray(t15))
      return void t15.forEach((t16) => this.add(t16, o14));
    const r13 = b(t15);
    r13 && ({ index: n26, position: o14, component: t15, key: i19 } = r13), o14 && "object" == typeof o14 && ({ index: n26, key: i19, position: o14, internal: e12 } = o14), !t15 || o14 && !this._isValidPosition(o14) || this._add(t15, o14, n26, i19, e12);
  }
  remove(t15, o14) {
    var _a;
    if (!t15)
      return;
    if (Array.isArray(t15))
      return t15.map((t16) => this.remove(t16, o14));
    const n26 = this._find(t15);
    if (n26) {
      if (this._componentMap.has(t15) && ((_a = this._componentMap.get(t15)) == null ? void 0 : _a.key) !== o14)
        return;
      const i19 = this._components.indexOf(n26), e12 = n26.node.parentNode;
      return e12 == null ? void 0 : e12.removeChild(n26.node), this._componentMap.delete(t15), this._components.splice(i19, 1)[0];
    }
  }
  empty(t15, o14 = { removeInternal: false }) {
    if (Array.isArray(t15)) {
      for (const n27 of t15)
        this.empty(n27, o14);
      return;
    }
    const n26 = this._positionNameToContainerLookup[t15 ?? "manual"], i19 = Array.prototype.slice.call(n26.children).map((t16) => this._findByNode(t16)).filter((t16) => {
      var _a;
      if (null == t16)
        return false;
      return !(((_a = this._componentMap.get(t16)) == null ? void 0 : _a.internal) ?? false) || o14.removeInternal;
    });
    for (const e12 of i19)
      this.remove(e12);
  }
  move(t15, o14) {
    if (Array.isArray(t15) && t15.forEach((t16) => this.move(t16, o14)), !t15)
      return;
    let n26;
    const i19 = b(t15) || b(o14);
    if (i19 && (n26 = i19.index, o14 = i19.position, t15 = i19.component || t15), o14 && !this._isValidPosition(o14))
      return;
    const e12 = this.remove(t15);
    e12 && this.add(e12, { position: o14, index: n26 });
  }
  find(t15) {
    if (!t15)
      return null;
    const o14 = this._findById(t15);
    return o14 && (o14.widget || o14.node);
  }
  getComponents(t15, o14 = { includeInternal: false }) {
    return t15 ? Array.isArray(t15) ? t15.map((t16) => this._getComponentsAtPosition(t16, o14)).flat() : this._getComponentsAtPosition(t15, o14) : this._components.filter((t16) => {
      var _a;
      return o14.includeInternal || !((_a = this._componentMap.get(t16)) == null ? void 0 : _a.internal);
    }).map(({ widget: t16, node: o15 }) => t16 ?? o15);
  }
  getPosition(t15) {
    for (const o14 in this._positionNameToContainerLookup) {
      if (this._positionNameToContainerLookup[o14].contains(t15))
        return o14;
    }
    return null;
  }
  _add(t15, o14, n26, i19, e12) {
    t15 instanceof l9 || (t15 = new l9({ node: t15 })), this._place({ component: t15, position: o14, index: n26 }), this._components.push(t15), this._componentMap.set(t15, { key: i19, internal: e12 });
  }
  _find(t15) {
    return t15 ? t15 instanceof l9 ? this._findByComponent(t15) : "string" == typeof t15 ? this._findById(t15) : this._findByNode(t15.domNode || t15) : null;
  }
  _getViewPadding() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.padding) ?? f7;
  }
  _attachContainers(t15) {
    t15.appendChild(this._innerContainer), t15.appendChild(this._manualContainer);
  }
  _initContainers() {
    const t15 = document.createElement("div");
    t15.classList.add(y6.innerContainer, y6.cornerContainer);
    const o14 = document.createElement("div");
    o14.classList.add(y6.innerContainer, y6.manualContainer);
    const n26 = document.createElement("div");
    n26.classList.add(y6.topLeft, y6.corner), t15.appendChild(n26);
    const i19 = document.createElement("div");
    i19.classList.add(y6.topRight, y6.corner), t15.appendChild(i19);
    const e12 = document.createElement("div");
    e12.classList.add(y6.bottomLeft, y6.corner), t15.appendChild(e12);
    const r13 = document.createElement("div");
    r13.classList.add(y6.bottomRight, y6.corner), t15.appendChild(r13), this._innerContainer = t15, this._manualContainer = o14;
    const s15 = h2();
    this._cornerNameToContainerLookup = { "top-left": n26, "top-right": i19, "bottom-left": e12, "bottom-right": r13, "top-leading": s15 ? i19 : n26, "top-trailing": s15 ? n26 : i19, "bottom-leading": s15 ? r13 : e12, "bottom-trailing": s15 ? e12 : r13 }, this._positionNameToContainerLookup = { manual: o14, ...this._cornerNameToContainerLookup };
  }
  _isValidPosition(t15) {
    return !!this._positionNameToContainerLookup[t15];
  }
  _place(t15) {
    const o14 = t15.position ?? "manual", { component: n26, index: e12 } = t15, r13 = this._positionNameToContainerLookup[o14], s15 = null != e12 && e12 > -1;
    if (C3(n26.widget) && n26.widget.startup(), !s15)
      return void r13.appendChild(n26.node);
    const a21 = Array.from(r13.children);
    if (0 === e12)
      return void (r13.firstChild ? o3(n26.node, r13.firstChild) : r13.appendChild(n26.node));
    e12 >= a21.length ? r13.appendChild(n26.node) : o3(n26.node, a21[e12]);
  }
  _toPixelPosition(t15) {
    return { top: v5(t15.top), left: v5(t15.left), right: v5(t15.right), bottom: v5(t15.bottom) };
  }
  _findByComponent(t15) {
    return this._components.find((o14) => o14 === t15) ?? null;
  }
  _findById(t15) {
    return this._components.find(({ id: o14 }) => o14 === t15) ?? null;
  }
  _findByNode(t15) {
    return this._components.find(({ node: o14 }) => o14 === t15) ?? null;
  }
  _getComponentsAtPosition(t15, n26) {
    const i19 = this._positionNameToContainerLookup[t15];
    return Array.prototype.slice.call(i19.children).map((t16) => this._findByNode(t16)).filter(R).filter((t16) => {
      var _a;
      return n26.includeInternal || !((_a = this._componentMap.get(t16)) == null ? void 0 : _a.internal);
    }).map(({ widget: t16, node: o14 }) => t16 ?? o14);
  }
};
e([y2()], P2.prototype, "_locale", void 0), e([y2()], P2.prototype, "container", null), e([y2()], P2.prototype, "height", null), e([y2({ value: _5 })], P2.prototype, "padding", null), e([s4("padding")], P2.prototype, "castPadding", null), e([y2()], P2.prototype, "view", void 0), e([y2()], P2.prototype, "width", null), P2 = e([a2("esri.views.ui.UI")], P2);
var L2 = P2;

// node_modules/@arcgis/core/widgets/Attribution/AttributionViewModel.js
function m5(t15, e12) {
  return t15 && "copyright" in t15 && (!e12 || "function" == typeof t15.originOf && "user" === t15.originOf("copyright"));
}
function f8(t15, e12) {
  return t15.length !== e12.length || t15.some((t16, i19) => t16.text !== e12[i19].text);
}
function y7(t15, e12, i19) {
  if (!i19 || !e12)
    return;
  t15.find((t16) => t16.layerView === e12 && t16.text === i19) || t15.push({ text: i19, layerView: e12 });
}
function b2(t15) {
  return "bing-maps" === t15.type;
}
var g9 = [];
var _6 = class extends d4 {
  constructor(t15) {
    super(t15), this._clear = () => {
      this._fetchedAttributionData.clear(), this._pendingAttributions.clear(), this.handles.remove("suspension"), this.notifyChange("state");
    }, this._pendingAttributions = /* @__PURE__ */ new Set(), this._fetchedAttributionData = /* @__PURE__ */ new Map(), this.items = new V(), this.view = null, this._allLayerViewsChange = (t16) => {
      this.handles.remove("suspension");
      const e12 = this.get("view.allLayerViews");
      e12 && this.handles.add(e12.map((t17) => l3(() => {
        var _a;
        return [t17.suspended, (_a = t17.layer) == null ? void 0 : _a.attributionVisible];
      }, () => this._updateAttributionItems())), "suspension"), t16 && t16.removed && t16.removed.forEach((t17) => {
        this._pendingAttributions.delete(t17), this._fetchedAttributionData.delete(t17);
      }), this._updateAttributionItems();
    }, this.handles.add([a3(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.allLayerViews;
    }, "change", (t16) => this._allLayerViewsChange(t16), { onListenerAdd: () => this._allLayerViewsChange(), onListenerRemove: this._clear }), f2(() => {
      var _a;
      return true === ((_a = this.view) == null ? void 0 : _a.stationary);
    }, () => this._updateAttributionItems())]);
  }
  destroy() {
    this.view = null, this._fetchedAttributionData.clear(), this._pendingAttributions.clear(), this.items.removeAll();
  }
  get state() {
    return this.get("view.ready") ? this._pendingAttributions.size > 0 ? "loading" : "ready" : "disabled";
  }
  _updateAttributionItems() {
    const t15 = this.view, e12 = t15 == null ? void 0 : t15.allLayerViews;
    g9.length = 0, t15 && e12 ? (e12.forEach((e13) => {
      var _a;
      if (e13.suspended || !((_a = e13.layer) == null ? void 0 : _a.attributionVisible))
        return;
      const i19 = e13.layer;
      if (m5(i19, "user"))
        return void y7(g9, e13, i19.copyright);
      if (i19.hasAttributionData) {
        if (this._fetchedAttributionData.has(e13)) {
          const r14 = this._fetchedAttributionData.get(e13);
          return void (r14 ? y7(g9, e13, this._getDynamicAttribution(r14, t15, i19)) : m5(i19) && y7(g9, e13, i19.copyright));
        }
        return void this._fetchAttributionData(e13);
      }
      const r13 = i19.get("portalItem.accessInformation");
      y7(g9, e13, r13 || i19.copyright);
    }), f8(this.items, g9) && (this.items.removeAll(), this.items.addMany(g9)), g9.length = 0, this.notifyChange("state")) : this._clear();
  }
  async _fetchAttributionData(t15) {
    if (this._pendingAttributions.has(t15))
      return;
    this._pendingAttributions.add(t15);
    const i19 = await _2(t15.layer.fetchAttributionData());
    if (this._pendingAttributions.has(t15)) {
      const e12 = i19.ok ? this._createContributionIndex(i19.value, b2(t15.layer)) : null;
      this._pendingAttributions.delete(t15), this._fetchedAttributionData.set(t15, e12);
    }
    this._updateAttributionItems();
  }
  _createContributionIndex(t15, e12) {
    const i19 = t15.contributors, r13 = {};
    if (!i19)
      return r13;
    for (let o14 = 0; o14 < i19.length; o14++) {
      const t16 = i19[o14], s15 = t16.coverageAreas;
      if (!s15)
        return;
      for (const i20 of s15) {
        const s16 = i20.bbox, n26 = i20.zoomMin - (e12 && i20.zoomMin ? 1 : 0), a21 = i20.zoomMax - (e12 && i20.zoomMax ? 1 : 0), c17 = new M({ xmin: s16[1], ymin: s16[0], xmax: s16[3], ymax: s16[2], spatialReference: f.WGS84 }), l13 = { extent: d2(c17), attribution: t16.attribution || "", score: null != i20.score ? i20.score : 100, id: o14 };
        for (let t17 = n26; t17 <= a21; t17++)
          r13[t17] ?? (r13[t17] = []), r13[t17].push(l13);
      }
    }
    return r13.maxKey = Math.max.apply(null, Object.keys(r13)), r13;
  }
  _getDynamicAttribution(t15, e12, i19) {
    var _a;
    const { extent: r13, scale: o14 } = e12;
    let s15 = ((_a = i19.tileInfo) == null ? void 0 : _a.scaleToZoom(o14)) ?? 0;
    if (s15 = Math.min(t15.maxKey ?? 0, Math.round(s15)), !r13 || null == s15 || s15 <= -1)
      return "";
    const n26 = t15[s15], a21 = g3(r13.center.clone().normalize(), e12.spatialReference), c17 = /* @__PURE__ */ new Set();
    return n26 ? n26.filter((t16) => {
      const e13 = t16.id, i20 = !c17.has(e13) && a21 && t16.extent && t4(t16.extent, a21);
      return i20 && c17.add(e13), i20;
    }).sort((t16, e13) => e13.score - t16.score || t16.objectId - e13.objectId).map((t16) => t16.attribution).join(", ") : "";
  }
};
e([y2({ readOnly: true, type: V })], _6.prototype, "items", void 0), e([y2({ readOnly: true })], _6.prototype, "state", null), e([y2()], _6.prototype, "view", void 0), _6 = e([a2("esri.widgets.Attribution.AttributionViewModel")], _6);
var A3 = _6;

// node_modules/@arcgis/core/widgets/Attribution.js
var l10 = "esri-attribution";
var d8 = { base: `${l10} esri-widget`, poweredBy: `${l10}__powered-by`, sources: `${l10}__sources`, open: `${l10}--open`, sourcesOpen: `${l10}__sources--open`, link: `${l10}__link`, widgetIcon: "esri-icon-description", interactive: "esri-interactive" };
var a13 = class extends W {
  constructor(e12, t15) {
    super(e12, t15), this._isOpen = false, this._attributionTextOverflowed = false, this._prevSourceNodeHeight = 0, this._resizeObserver = new ResizeObserver((e13) => e13.forEach(({ target: e14 }) => this._checkSourceTextOverflow(e14))), this.iconClass = d8.widgetIcon, this.icon = null, this.itemDelimiter = " | ", this.messages = null, this.viewModel = new A3();
  }
  initialize() {
    this.addHandles(a3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.items;
    }, "change", () => this.scheduleRender()));
  }
  destroy() {
    var _a;
    (_a = this._resizeObserver) == null ? void 0 : _a.disconnect();
  }
  get _isInteractive() {
    return this._isOpen || this._attributionTextOverflowed;
  }
  get attributionText() {
    return this.viewModel.items.reduce((e12, t15) => (e12.includes(t15.text) || e12.push(t15.text), e12), []).join(this.itemDelimiter);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e12) {
    this._overrideIfSome("label", e12);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e12) {
    this.viewModel.view = e12;
  }
  render() {
    const e12 = { [d8.open]: this._isOpen };
    return n6("div", { bind: this, class: this.classes(d8.base, e12), dir: "ltr", onclick: this._toggleState, onkeydown: this._toggleState }, this.renderSourcesNode(), this.renderPoweredBy());
  }
  renderPoweredBy() {
    return n6("div", { class: d8.poweredBy }, "Powered by", " ", n6("a", { class: d8.link, href: "http://www.esri.com/", target: "_blank", rel: "noreferrer" }, "Esri"));
  }
  renderSourcesNode() {
    const e12 = this._isOpen, t15 = this._isInteractive, i19 = t15 ? "0" : "", { attributionText: r13 } = this, s15 = { [d8.sourcesOpen]: e12, [d8.interactive]: t15 };
    return n6("div", { afterCreate: this._afterSourcesNodeCreate, bind: this, class: this.classes(d8.sources, s15), innerHTML: r13, tabindex: i19 });
  }
  _afterSourcesNodeCreate(e12) {
    this._prevSourceNodeHeight = e12.clientWidth, this._resizeObserver.observe(e12);
  }
  _checkSourceTextOverflow(e12) {
    let t15 = false;
    const { clientHeight: i19, clientWidth: r13, scrollWidth: s15 } = e12, o14 = s15 > r13, n26 = this._attributionTextOverflowed !== o14;
    if (this._attributionTextOverflowed = o14, n26 && (t15 = true), this._isOpen) {
      const e13 = i19 < this._prevSourceNodeHeight;
      this._prevSourceNodeHeight = i19, e13 && (this._isOpen = false, t15 = true);
    }
    t15 && this.scheduleRender();
  }
  _toggleState() {
    this._isInteractive && (this._isOpen = !this._isOpen);
  }
};
e([y2()], a13.prototype, "_isOpen", void 0), e([y2()], a13.prototype, "_isInteractive", null), e([y2()], a13.prototype, "_attributionTextOverflowed", void 0), e([y2()], a13.prototype, "_prevSourceNodeHeight", void 0), e([y2({ readOnly: true, dependsOn: ["viewModel.items.length", "itemDelimiter"] })], a13.prototype, "attributionText", null), e([y2()], a13.prototype, "iconClass", void 0), e([y2()], a13.prototype, "icon", void 0), e([y2()], a13.prototype, "itemDelimiter", void 0), e([y2()], a13.prototype, "label", null), e([y2(), e5("esri/widgets/Attribution/t9n/Attribution")], a13.prototype, "messages", void 0), e([y2()], a13.prototype, "view", null), e([y2({ type: A3 })], a13.prototype, "viewModel", void 0), e([t5()], a13.prototype, "_toggleState", null), a13 = e([a2("esri.widgets.Attribution")], a13);
var h4 = a13;

// node_modules/@arcgis/core/widgets/Compass/CompassViewModel.js
var h5 = "esri.widgets.CompassViewModel";
var d9 = class extends t7(m) {
  constructor(t15) {
    super(t15), this._handles = new t(), this.orientation = { x: 0, y: 0, z: 0 }, this.view = null, this._updateForCamera = this._updateForCamera.bind(this), this._updateForRotation = this._updateForRotation.bind(this), this._updateRotationWatcher = this._updateRotationWatcher.bind(this);
  }
  initialize() {
    this._handles.add(l3(() => this.view, this._updateRotationWatcher, h));
  }
  destroy() {
    o2(this._handles), this.view = null;
  }
  get canShowNorth() {
    const t15 = this.get("view.spatialReference");
    return !(!t15 || !t15.isWebMercator && !t15.isGeographic);
  }
  get state() {
    return this.get("view.ready") ? this.canShowNorth ? "compass" : "rotation" : "disabled";
  }
  reset() {
    var _a;
    if (!this.get("view.ready"))
      return;
    const t15 = {};
    "2d" === ((_a = this.view) == null ? void 0 : _a.type) ? t15.rotation = 0 : t15.heading = 0, this.callGoTo({ target: t15 });
  }
  _updateForRotation(t15) {
    null != t15 && (this.orientation = { z: t15 });
  }
  _updateForCamera(t15) {
    if (!t15)
      return;
    const o14 = -t15.heading;
    this.orientation = { x: 0, y: 0, z: o14 };
  }
  _updateRotationWatcher(t15) {
    this._handles.removeAll(), t15 && this._handles.add("2d" === t15.type ? l3(() => t15 == null ? void 0 : t15.rotation, this._updateForRotation, h) : l3(() => t15 == null ? void 0 : t15.camera, this._updateForCamera, h));
  }
};
e([y2({ readOnly: true })], d9.prototype, "canShowNorth", null), e([y2()], d9.prototype, "orientation", void 0), e([y2({ readOnly: true })], d9.prototype, "state", null), e([y2()], d9.prototype, "view", void 0), d9 = e([a2(h5)], d9);
var c11 = d9;

// node_modules/@arcgis/core/widgets/Compass/css.js
var i16 = { base: "esri-compass esri-widget--button esri-widget", text: "esri-icon-font-fallback-text", icon: "esri-compass__icon", rotationIcon: "esri-icon-dial", northIcon: "esri-icon-compass", widgetIcon: "esri-icon-locate-circled", interactive: "esri-interactive", disabled: "esri-disabled" };

// node_modules/@arcgis/core/widgets/Compass.js
var n20 = class extends W {
  constructor(e12, s15) {
    super(e12, s15), this.iconClass = i16.widgetIcon, this.icon = null, this.messages = null, this.viewModel = new c11();
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e12) {
    this.viewModel.goToOverride = e12;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e12) {
    this._overrideIfSome("label", e12);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e12) {
    this.viewModel.view = e12;
  }
  reset() {
    return this.viewModel.reset();
  }
  render() {
    const { orientation: e12, state: s15 } = this.viewModel, o14 = "disabled" === s15, t15 = "compass" === ("rotation" === s15 ? "rotation" : "compass"), r13 = o14 ? -1 : 0, a21 = { [i16.disabled]: o14, [i16.interactive]: !o14 }, p14 = { [i16.northIcon]: t15, [i16.rotationIcon]: !t15 }, { messages: n26 } = this;
    return n6("div", { bind: this, class: this.classes(i16.base, a21), onclick: this._reset, onkeydown: this._reset, role: "button", tabIndex: r13, "aria-label": n26.reset, title: n26.reset }, n6("span", { "aria-hidden": "true", class: this.classes(i16.icon, p14), styles: this._toRotationTransform(e12) }), n6("span", { class: i16.text }, n26.reset));
  }
  _reset() {
    this.viewModel.reset();
  }
  _toRotationTransform(e12) {
    return { transform: `rotateZ(${e12.z}deg)` };
  }
};
e([y2()], n20.prototype, "goToOverride", null), e([y2()], n20.prototype, "iconClass", void 0), e([y2()], n20.prototype, "icon", void 0), e([y2()], n20.prototype, "label", null), e([y2(), e5("esri/widgets/Compass/t9n/Compass")], n20.prototype, "messages", void 0), e([y2()], n20.prototype, "view", null), e([y2({ type: c11 })], n20.prototype, "viewModel", void 0), e([t5()], n20.prototype, "_reset", null), n20 = e([a2("esri.widgets.Compass")], n20);
var d10 = n20;

// node_modules/@arcgis/core/widgets/NavigationToggle/css.js
var t9 = "esri-navigation-toggle";
var o9 = { base: `${t9} esri-widget`, button: `${t9}__button esri-widget--button`, activeButton: `${t9}__button--active`, panButton: `${t9}__button--pan`, rotateButton: `${t9}__button--rotate`, isLayoutHorizontal: `${t9}--horizontal`, rotationIcon: "esri-icon-rotate", panIcon: "esri-icon-pan", widgetIcon: "esri-icon-pan2", disabled: "esri-disabled" };

// node_modules/@arcgis/core/widgets/NavigationToggle/NavigationToggleViewModel.js
var r6 = class extends m {
  constructor(t15) {
    super(t15), this.navigationMode = "pan", this.view = null;
  }
  initialize() {
    this.own(f2(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.inputManager;
    }, () => this._setNavigationMode()));
  }
  destroy() {
    this.view = null;
  }
  get state() {
    var _a;
    return this.get("view.ready") && "3d" === ((_a = this.view) == null ? void 0 : _a.type) ? "ready" : "disabled";
  }
  toggle() {
    "disabled" !== this.state && (this.navigationMode = "pan" !== this.navigationMode ? "pan" : "rotate", this._setNavigationMode());
  }
  _setNavigationMode() {
    this.get("view.inputManager").primaryDragAction = "pan" === this.navigationMode ? "pan" : "rotate";
  }
};
e([y2({ readOnly: true })], r6.prototype, "state", null), e([y2()], r6.prototype, "navigationMode", void 0), e([y2()], r6.prototype, "view", void 0), r6 = e([a2("esri.widgets.NavigationToggleViewModel")], r6);
var a14 = r6;

// node_modules/@arcgis/core/widgets/NavigationToggle.js
var p11 = class extends W {
  constructor(t15, o14) {
    super(t15, o14), this.iconClass = o9.widgetIcon, this.icon = null, this.messages = null, this.viewModel = new a14();
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(t15) {
    this._overrideIfSome("label", t15);
  }
  set layout(t15) {
    "horizontal" !== t15 && (t15 = "vertical"), this._set("layout", t15);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(t15) {
    this.viewModel.view = t15;
  }
  toggle() {
    return this.viewModel.toggle();
  }
  render() {
    const t15 = "disabled" === this.get("viewModel.state"), o14 = "pan" === this.get("viewModel.navigationMode"), e12 = { [o9.disabled]: t15, [o9.isLayoutHorizontal]: "horizontal" === this.layout }, s15 = { [o9.activeButton]: o14 }, r13 = { [o9.activeButton]: !o14 }, a21 = t15 ? -1 : 0, l13 = this.messages.toggle;
    return n6("div", { bind: this, class: this.classes(o9.base, e12), onclick: this._toggle, onkeydown: this._toggle, tabIndex: a21, "aria-label": l13, title: l13 }, n6("div", { class: this.classes(o9.button, o9.panButton, s15) }, n6("span", { class: o9.panIcon })), n6("div", { class: this.classes(o9.button, o9.rotateButton, r13) }, n6("span", { class: o9.rotationIcon })));
  }
  _toggle() {
    this.toggle();
  }
};
e([y2()], p11.prototype, "iconClass", void 0), e([y2()], p11.prototype, "icon", void 0), e([y2()], p11.prototype, "label", null), e([y2({ value: "vertical" })], p11.prototype, "layout", null), e([y2(), e5("esri/widgets/NavigationToggle/t9n/NavigationToggle")], p11.prototype, "messages", void 0), e([y2()], p11.prototype, "view", null), e([y2({ type: a14 })], p11.prototype, "viewModel", void 0), e([t5()], p11.prototype, "_toggle", null), p11 = e([a2("esri.widgets.NavigationToggle")], p11);
var g10 = p11;

// node_modules/@arcgis/core/widgets/Zoom/IconButton.js
var c12 = { button: "esri-widget--button esri-widget", disabled: "esri-disabled", interactive: "esri-interactive", iconText: "esri-icon-font-fallback-text", icon: "esri-icon" };
var n21 = class extends W {
  constructor() {
    super(...arguments), this.enabled = true, this.iconClass = null, this.icon = null, this.title = "";
  }
  render() {
    const t15 = this.enabled ? 0 : -1, s15 = { [c12.disabled]: !this.enabled, [c12.interactive]: this.enabled };
    return n6("div", { bind: this, class: this.classes(c12.button, s15), onclick: this._triggerAction, onkeydown: this._triggerAction, role: "button", tabIndex: t15, title: this.title }, n6("span", { "aria-hidden": "true", role: "presentation", class: this.classes(c12.icon, this.iconClass ?? "") }), n6("span", { class: c12.iconText }, this.title));
  }
  _triggerAction() {
    this.action.call(this);
  }
};
e([y2()], n21.prototype, "action", void 0), e([y2()], n21.prototype, "enabled", void 0), e([y2()], n21.prototype, "iconClass", void 0), e([y2()], n21.prototype, "icon", void 0), e([y2()], n21.prototype, "title", void 0), e([t5()], n21.prototype, "_triggerAction", null), n21 = e([a2("esri.widgets.IconButton")], n21);
var a15 = n21;

// node_modules/@arcgis/core/widgets/Zoom/ZoomConditions2D.js
var s10 = class extends m {
  get canZoomIn() {
    if (!this.get("view.ready"))
      return false;
    const e12 = this.get("view.animation.target.scale") || this.get("view.scale"), t15 = this.get("view.constraints.effectiveMaxScale");
    return 0 === t15 || e12 > t15;
  }
  get canZoomOut() {
    if (!this.get("view.ready"))
      return false;
    const e12 = this.get("view.animation.target.scale") || this.get("view.scale"), t15 = this.get("view.constraints.effectiveMinScale");
    return 0 === t15 || e12 < t15;
  }
};
e([y2({ readOnly: true })], s10.prototype, "canZoomIn", null), e([y2({ readOnly: true })], s10.prototype, "canZoomOut", null), e([y2()], s10.prototype, "view", void 0), s10 = e([a2("esri.widgets.Zoom.ZoomConditions2D")], s10);
var i17 = s10;

// node_modules/@arcgis/core/widgets/Zoom/ZoomConditions3D.js
var t10 = class extends m {
  get canZoomIn() {
    return !!this.view.ready;
  }
  get canZoomOut() {
    return !!this.view.ready;
  }
};
e([y2({ readOnly: true })], t10.prototype, "canZoomIn", null), e([y2({ readOnly: true })], t10.prototype, "canZoomOut", null), e([y2()], t10.prototype, "view", void 0), t10 = e([a2("esri.widgets.Zoom.ZoomConditions3D")], t10);
var c13 = t10;

// node_modules/@arcgis/core/widgets/Zoom/ZoomViewModel.js
var m6 = class extends m {
  constructor(o14) {
    super(o14);
  }
  destroy() {
    this.view = null;
  }
  get canZoomIn() {
    return null != this._zoomConditions && this._zoomConditions.canZoomIn;
  }
  get canZoomOut() {
    var _a;
    return null != this._zoomConditions && ((_a = this._zoomConditions) == null ? void 0 : _a.canZoomOut);
  }
  get state() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.ready) ? "ready" : "disabled";
  }
  set view(o14) {
    o14 ? "2d" === o14.type ? this._zoomConditions = new i17({ view: o14 }) : "3d" === o14.type && (this._zoomConditions = new c13({ view: o14 })) : this._zoomConditions = null, this._set("view", o14);
  }
  zoomIn() {
    if (!this.canZoomIn)
      return;
    const o14 = this.view;
    "2d" === o14.type ? o14.mapViewNavigation.zoomIn() : y(o14.goTo({ zoomFactor: 2 }));
  }
  zoomOut() {
    if (!this.canZoomOut)
      return;
    const o14 = this.view;
    "2d" === o14.type ? o14.mapViewNavigation.zoomOut() : y(o14.goTo({ zoomFactor: 0.5 }));
  }
};
e([y2()], m6.prototype, "_zoomConditions", void 0), e([y2()], m6.prototype, "canZoomIn", null), e([y2()], m6.prototype, "canZoomOut", null), e([y2({ readOnly: true })], m6.prototype, "state", null), e([y2()], m6.prototype, "view", null), m6 = e([a2("esri.widgets.Zoom.ZoomViewModel")], m6);
var p12 = m6;

// node_modules/@arcgis/core/widgets/Zoom.js
var u2 = { base: "esri-zoom esri-widget", horizontalLayout: "esri-zoom--horizontal", zoomInIcon: "esri-icon-plus", zoomOutIcon: "esri-icon-minus", widgetIcon: "esri-icon-zoom-in-magnifying-glass" };
var a16 = class extends W {
  constructor(o14, t15) {
    super(o14, t15), this.iconClass = u2.widgetIcon, this.icon = null, this.messages = null, this.viewModel = new p12();
  }
  initialize() {
    this._zoomInButton = new a15({ action: this.zoomIn.bind(this), iconClass: u2.zoomInIcon }), this._zoomOutButton = new a15({ action: this.zoomOut.bind(this), iconClass: u2.zoomOutIcon });
  }
  destroy() {
    this._zoomInButton = l(this._zoomInButton), this._zoomOutButton = l(this._zoomOutButton);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(o14) {
    this._overrideIfSome("label", o14);
  }
  set layout(o14) {
    "horizontal" !== o14 && (o14 = "vertical"), this._set("layout", o14);
  }
  set view(o14) {
    this.viewModel.view = o14;
  }
  get view() {
    return this.viewModel.view;
  }
  render() {
    const o14 = this.viewModel, t15 = { [u2.horizontalLayout]: "horizontal" === this.layout }, { canZoomIn: s15, canZoomOut: e12 } = o14;
    this._zoomInButton.enabled = s15, this._zoomOutButton.enabled = e12;
    const { zoomIn: i19, zoomOut: r13 } = this.messages;
    return this._zoomInButton.title = i19, this._zoomOutButton.title = r13, n6("div", { class: this.classes(u2.base, t15) }, this._zoomInButton.render(), this._zoomOutButton.render());
  }
  zoomIn() {
    return this.viewModel.zoomIn();
  }
  zoomOut() {
    return this.viewModel.zoomOut();
  }
};
e([y2()], a16.prototype, "iconClass", void 0), e([y2()], a16.prototype, "icon", void 0), e([y2()], a16.prototype, "label", null), e([y2({ value: "vertical" })], a16.prototype, "layout", null), e([y2(), e5("esri/widgets/Zoom/t9n/Zoom")], a16.prototype, "messages", void 0), e([y2()], a16.prototype, "view", null), e([y2({ type: p12 })], a16.prototype, "viewModel", void 0), a16 = e([a2("esri.widgets.Zoom")], a16);
var c14 = a16;

// node_modules/@arcgis/core/views/ui/DefaultUI.js
function m7(t15) {
  return void 0 !== (t15 == null ? void 0 : t15.view);
}
var u3 = class extends L2 {
  constructor(t15) {
    super(t15), this._defaultPositionLookup = { attribution: "manual", compass: "top-left", "navigation-toggle": "top-left", zoom: "top-left" }, this.components = [], this._updateViewAwareWidgets = (t16) => {
      this.components.forEach((o14) => {
        const e12 = this._find(o14), s15 = e12 == null ? void 0 : e12.widget;
        m7(s15) && (s15.view = t16);
      });
    }, this._componentsWatcher = (t16, o14) => {
      this._removeComponents(o14), this._addComponents(t16), this._adjustPadding(t16);
    };
  }
  initialize() {
    this.addHandles([l3(() => this.components, this._componentsWatcher, h), l3(() => this.view, this._updateViewAwareWidgets, h)]);
  }
  _add(t15, o14, e12, s15, i19) {
    let r13 = t15;
    if ("string" == typeof t15 && this._defaultPositionLookup[t15]) {
      if (this._find(t15))
        return;
      r13 = this._createComponent(t15);
    }
    super._add(r13, o14, e12, s15, i19);
  }
  _removeComponents(t15) {
    t15.forEach((t16) => {
      const o14 = this._find(t16);
      o14 && (this.remove(o14), o14.destroy());
    });
  }
  _adjustPadding(t15) {
    if (!t15.includes("attribution") && !this._isOverridden("padding")) {
      const { top: t16 } = this.padding;
      this.padding = t16;
    }
  }
  _addComponents(t15) {
    this.constructed && t15.forEach((t16) => this.add(this._createComponent(t16), this._defaultPositionLookup[t16]));
  }
  _createComponent(t15) {
    const o14 = this._createWidget(t15);
    return new l9({ id: t15, node: o14 });
  }
  _createWidget(t15) {
    const { view: o14 } = this;
    switch (t15) {
      case "attribution":
        return new h4({ view: o14 });
      case "compass":
        return new d10({ view: o14 });
      case "navigation-toggle":
        return new g10({ view: o14 });
      case "zoom":
        return new c14({ view: o14 });
    }
  }
};
e([y2()], u3.prototype, "components", void 0), u3 = e([a2("esri.views.ui.DefaultUI")], u3);
var h6 = u3;

// node_modules/@arcgis/core/views/input/gamepad/GamepadState.js
function t11(t15) {
  const n26 = t15.native;
  return n26 ? { buttons: n26.buttons.map((t16) => t16.pressed ? t16.value || 1 : 0), axes: n26.axes.map((n27) => s11(n27, t15.axisThreshold)) } : { buttons: [], axes: [] };
}
function n22(t15, n26) {
  if (t15.axes.length !== n26.axes.length)
    return false;
  if (t15.buttons.length !== n26.buttons.length)
    return false;
  for (let e12 = 0; e12 < t15.axes.length; e12++)
    if (t15.axes[e12] !== n26.axes[e12])
      return false;
  for (let e12 = 0; e12 < t15.buttons.length; e12++)
    if (t15.buttons[e12] !== n26.buttons[e12])
      return false;
  return true;
}
function e9(t15) {
  for (let n26 = 0; n26 < t15.axes.length; n26++)
    if (0 !== t15.axes[n26])
      return false;
  for (let n26 = 0; n26 < t15.buttons.length; n26++)
    if (0 !== t15.buttons[n26])
      return false;
  return true;
}
function s11(t15, n26) {
  const e12 = Math.abs(t15);
  return e12 < n26 ? 0 : Math.sign(t15) * (e12 - n26) / (1 - n26);
}

// node_modules/@arcgis/core/views/input/gamepad/GamepadSource.js
var a17 = class {
  constructor(e12, t15) {
    this._element = e12, this._input = t15, this._hasEventListeners = false, this._onConnectGamepad = (e13) => {
      this._connectGamepad(e13.gamepad);
    }, this._onDisconnectGamepad = (e13) => {
      const t16 = e13.gamepad, i20 = t16.index, n27 = this._inputDevices[i20];
      n27 && (this._emitGamepadEvent(t16, t11(n27), false), this._inputDevices.splice(i20, 1), this._latestUpdate.splice(i20, 1), this._input.gamepad.devices.remove(n27), this.ensurePollingState());
    }, this._frameTask = null, this._latestUpdate = new Array(), this._inputDevices = new Array(), this._callback = null;
    const i19 = "getGamepads" in window.navigator, n26 = window.isSecureContext;
    this.supported = i19 && n26, this.supported && (this._forEachGamepad((e13) => this._connectGamepad(e13)), window.addEventListener("gamepadconnected", this._onConnectGamepad), window.addEventListener("gamepaddisconnected", this._onDisconnectGamepad), this.ensurePollingState());
  }
  destroy() {
    this.hasEventListeners = false, this.supported && (window.removeEventListener("gamepadconnected", this._onConnectGamepad), window.removeEventListener("gamepaddisconnected", this._onDisconnectGamepad));
  }
  set hasEventListeners(e12) {
    this._hasEventListeners !== e12 && (this._hasEventListeners = e12, this.ensurePollingState());
  }
  get _eventsEnabled() {
    return this.supported && this._inputDevices.length > 0 && this._hasEventListeners;
  }
  set onEvent(e12) {
    this._callback = e12;
  }
  _connectGamepad(e12) {
    const s15 = new a8(e12);
    "unknown" !== s15.deviceType && (this._inputDevices[e12.index] = s15, this._input.gamepad.devices.add(s15)), this.ensurePollingState();
  }
  ensurePollingState() {
    this._eventsEnabled ? this._startPolling() : this._stopPolling();
  }
  _startPolling() {
    null == this._frameTask && (this._frameTask = A({ update: () => this._readGamepadState() }));
  }
  _stopPolling() {
    null != this._frameTask && (this._frameTask.remove(), this._frameTask = null, this._latestUpdate = new Array());
  }
  _readGamepadState() {
    const e12 = document.hasFocus(), t15 = this._element.contains(document.activeElement), a21 = "document" === this._input.gamepad.enabledFocusMode && !e12 || "view" === this._input.gamepad.enabledFocusMode && !t15;
    this._forEachGamepad((e13) => {
      const t16 = this._inputDevices[e13.index];
      if (!t16)
        return;
      const d11 = this._latestUpdate[e13.index], o14 = t11(t16), r13 = a21 || e9(o14);
      if (d11) {
        if (d11.timestamp === e13.timestamp)
          return;
        if (!d11.active && r13)
          return;
        if (n22(d11.state, o14))
          return;
      }
      this._emitGamepadEvent(e13, o14, !r13);
    });
  }
  _forEachGamepad(e12) {
    const t15 = window.navigator.getGamepads();
    for (let s15 = 0; s15 < t15.length; s15++) {
      const i19 = t15[s15];
      this._validate(i19) && e12(i19);
    }
  }
  _emitGamepadEvent(e12, t15, s15) {
    const i19 = this._latestUpdate[e12.index], n26 = i19 && i19.active;
    if (!n26 && !s15)
      return;
    const a21 = !n26 && s15 ? "start" : n26 && s15 ? "update" : "end";
    this._latestUpdate[e12.index] = { timestamp: e12.timestamp, state: t15, active: s15 }, this._callback && this._callback({ device: this._inputDevices[e12.index], state: t15, action: a21 });
  }
  _validate(e12) {
    if (!e12)
      return false;
    if (!e12.connected)
      return false;
    for (let t15 = 0; t15 < e12.axes.length; t15++)
      if (isNaN(e12.axes[t15]))
        return false;
    return true;
  }
};

// node_modules/@arcgis/core/views/input/BrowserEventSource.js
var o10 = has("edge");
var a18 = has("chrome");
var s12 = has("ff");
var r7 = has("safari");
var h7 = "esri-view-surface";
var l11 = { touchNone: `${h7}--touch-none`, touchPan: `${h7}--touch-pan` };
var c15 = class _c {
  constructor(e12, t15) {
    this._input = t15, this._active = {}, this._callback = () => {
    }, this._activePointerCaptures = /* @__PURE__ */ new Set(), this._keyDownState = /* @__PURE__ */ new Set(), this._eventId = 1, this._browserTouchPanningEnabled = false, this._element = e12, e12.getAttribute("tabindex") || e12.setAttribute("tabindex", "0"), this._eventHandlers = { "key-down": this._handleKey, "key-up": this._handleKey, "pointer-down": this._handlePointer, "pointer-move": this._handlePointerPreventDefault, "pointer-up": this._handlePointerPreventDefault, "pointer-enter": this._handlePointer, "pointer-leave": this._handlePointer, "pointer-cancel": this._handlePointer, "mouse-wheel": this._handleMouseWheel, "pointer-capture-lost": this._handlePointerCaptureLost }, this._updateTouchAction(), this._element.addEventListener("keydown", this._preventAltKeyDefault), this._gamepadSource = new a17(e12, this._input), this._gamepadSource.onEvent = (e13) => this._callback("gamepad", e13);
  }
  destroy() {
    this._callback = () => {
    }, this.activeEvents = null, this._activePointerCaptures.forEach((e12) => {
      this._releasePointerCaptureSafe(e12);
    }), this._gamepadSource = l(this._gamepadSource), this._activePointerCaptures = null, this._removeTouchAction(), this._element.removeEventListener("keydown", this._preventAltKeyDefault);
  }
  get browserTouchPanningEnabled() {
    return this._browserTouchPanningEnabled;
  }
  set browserTouchPanningEnabled(e12) {
    this._browserTouchPanningEnabled = e12, this._updateTouchAction(), this._updateTouchEventHandling();
  }
  set onEventReceived(e12) {
    this._callback = e12;
  }
  set activeEvents(e12) {
    for (const t15 in this._active)
      if (!e12 || !e12.has(t15)) {
        const e13 = this._active[t15];
        this._element.removeEventListener(u4[t15], e13), delete this._active[t15];
      }
    e12 && e12.forEach((e13) => {
      if (!this._active[e13] && u4[e13]) {
        const t15 = (this._eventHandlers[e13] || this._handleDefault).bind(this, e13);
        this._element.addEventListener(u4[e13], t15), this._active[e13] = t15;
      }
    }), this._gamepadSource.hasEventListeners = (e12 == null ? void 0 : e12.has("gamepad")) ?? false;
  }
  setPointerCapture(e12, t15) {
    t15 ? this._setPointerCatpureSafe(e12.pointerId) : (this._releasePointerCaptureSafe(e12.pointerId), this._activePointerCaptures.delete(e12.pointerId));
  }
  _updateTouchAction() {
    this._element.classList.remove(this._browserTouchPanningEnabled ? l11.touchNone : l11.touchPan), this._element.classList.add(this._browserTouchPanningEnabled ? l11.touchPan : l11.touchNone);
  }
  _updateTouchEventHandling() {
    this._browserTouchPanningEnabled ? this._element.addEventListener("touchmove", this._preventMultiTouchPanning) : this._element.removeEventListener("touchmove", this._preventMultiTouchPanning);
  }
  _removeTouchAction() {
    this._element.classList.remove(l11.touchNone), this._element.classList.remove(l11.touchPan), this._element.removeEventListener("touchmove", this._preventMultiTouchPanning);
  }
  _setPointerCatpureSafe(e12) {
    try {
      this._element.setPointerCapture(e12), this._activePointerCaptures.add(e12);
    } catch {
    }
  }
  _releasePointerCaptureSafe(e12) {
    try {
      if (this._element.hasPointerCapture && !this._element.hasPointerCapture(e12))
        return;
      this._element.releasePointerCapture(e12);
    } catch (t15) {
    }
  }
  _updateNormalizedPointerLikeEvent(e12, t15) {
    const n26 = i8(this._element, e12);
    return _c.test.disableSubpixelCoordinates && (n26.x = Math.round(n26.x), n26.y = Math.round(n26.y)), t15.x = n26.x, t15.y = n26.y, t15;
  }
  _handleKey(e12, n26) {
    const i19 = o4(n26);
    i19 && "key-up" === e12 && this._keyDownState.delete(i19);
    const o14 = { native: n26, key: i19, repeat: !!i19 && this._keyDownState.has(i19) };
    i19 && "key-down" === e12 && this._keyDownState.add(o14.key), this._callback(e12, o14);
  }
  _handlePointer(e12, t15) {
    const n26 = this._updateNormalizedPointerLikeEvent(t15, { native: t15, x: 0, y: 0, pointerType: t15.pointerType, button: t15.button, buttons: t15.buttons, eventId: this._eventId++ });
    this._callback(e12, n26);
  }
  _handlePointerPreventDefault(e12, t15) {
    const n26 = this._updateNormalizedPointerLikeEvent(t15, { native: t15, x: 0, y: 0, pointerType: t15.pointerType, button: t15.button, buttons: t15.buttons, eventId: this._eventId++ });
    t15.preventDefault(), this._callback(e12, n26);
  }
  _handleMouseWheel(e12, t15) {
    let n26 = t15.deltaY;
    switch (t15.deltaMode) {
      case 0:
        o10 && (n26 = n26 / document.documentElement.clientHeight * 600);
        break;
      case 1:
        n26 *= 30;
        break;
      case 2:
        n26 *= 900;
    }
    o10 ? n26 *= 0.7 : a18 || r7 ? n26 *= 0.6 : s12 && (n26 *= 1.375);
    const i19 = 100, h9 = Math.abs(n26);
    if (h9 > i19) {
      const e13 = 0.02;
      n26 = n26 / h9 * 200 / (1 + Math.exp(-e13 * (h9 - i19)));
    }
    const l13 = this._updateNormalizedPointerLikeEvent(t15, { native: t15, x: 0, y: 0, deltaY: n26 });
    this._callback(e12, l13);
  }
  _handlePointerCaptureLost(e12, t15) {
    this._activePointerCaptures.delete(t15.pointerId), this._handleDefault(e12, t15);
  }
  _handleDefault(e12, t15) {
    const n26 = { native: t15 };
    t15.preventDefault(), this._callback(e12, n26);
  }
  _preventAltKeyDefault(e12) {
    "Alt" === e12.key && e12.preventDefault();
  }
  _preventMultiTouchPanning(e12) {
    e12.touches.length > 1 && e12.preventDefault();
  }
};
c15.test = { disableSubpixelCoordinates: false };
var u4 = { "key-down": "keydown", "key-up": "keyup", "pointer-down": "pointerdown", "pointer-up": "pointerup", "pointer-move": "pointermove", "mouse-wheel": "wheel", "pointer-capture-got": "gotpointercapture", "pointer-capture-lost": "lostpointercapture", "context-menu": "contextmenu", "pointer-enter": "pointerenter", "pointer-leave": "pointerleave", "pointer-cancel": "pointercancel", focus: "focus", blur: "blur" };

// node_modules/@arcgis/core/views/input/handlers/PreventContextMenu.js
var e10 = class extends i7 {
  constructor() {
    super(true), this.registerIncoming("context-menu", (t15) => {
      t15.data.native.preventDefault();
    });
  }
};

// node_modules/@arcgis/core/views/input/recognizers/support.js
function e11(t15, e12) {
  return Math.abs(e12.x - t15.x) + Math.abs(e12.y - t15.y);
}
function n23(t15, e12) {
  const n26 = e12.x - t15.x, r13 = e12.y - t15.y;
  return Math.sqrt(n26 * n26 + r13 * r13);
}
function r8(e12, n26) {
  if (n26 ? (n26.radius = 0, n26.center.x = 0, n26.center.y = 0) : n26 = { radius: 0, center: c4() }, 0 === e12.length)
    return n26;
  if (1 === e12.length)
    return n26.center.x = e12[0].x, n26.center.y = e12[0].y, n26;
  if (2 === e12.length) {
    const [t15, r14] = e12, [c18, o15] = [r14.x - t15.x, r14.y - t15.y];
    return n26.radius = Math.sqrt(c18 * c18 + o15 * o15) / 2, n26.center.x = (t15.x + r14.x) / 2, n26.center.y = (t15.y + r14.y) / 2, n26;
  }
  let r13 = 0, c17 = 0;
  for (let t15 = 0; t15 < e12.length; t15++)
    r13 += e12[t15].x, c17 += e12[t15].y;
  r13 /= e12.length, c17 /= e12.length;
  const o14 = e12.map((t15) => t15.x - r13), s15 = e12.map((t15) => t15.y - c17);
  let u5 = 0, i19 = 0, x2 = 0, y8 = 0, a21 = 0, h9 = 0, l13 = 0;
  for (let t15 = 0; t15 < o14.length; t15++) {
    const e13 = o14[t15], n27 = s15[t15], r14 = e13 * e13, c18 = n27 * n27;
    u5 += r14, i19 += c18, x2 += e13 * n27, y8 += r14 * e13, a21 += c18 * n27, h9 += e13 * c18, l13 += n27 * r14;
  }
  const f9 = 0.5 * (y8 + h9), g11 = 0.5 * (a21 + l13), p14 = u5 * i19 - x2 * x2, d11 = (f9 * i19 - g11 * x2) / p14, m10 = (u5 * g11 - x2 * f9) / p14, M4 = c4(d11 + r13, m10 + c17);
  return { radius: Math.sqrt(d11 * d11 + m10 * m10 + (u5 + i19) / e12.length), center: M4 };
}
function c16(t15) {
  const { native: e12 } = t15, { pointerId: n26, button: r13, pointerType: c17 } = e12;
  return "mouse" === c17 ? `${n26}:${r13}` : `${c17}`;
}

// node_modules/@arcgis/core/views/input/recognizers/Drag.js
var s13 = class extends i7 {
  constructor(t15) {
    super(false), this._navigationTouch = t15, this._startStateModifiers = /* @__PURE__ */ new Set(), this._activePointerMap = /* @__PURE__ */ new Map(), this._isDragging = false, this._isCurrentDragSuppressed = false, this._drag = this.registerOutgoing("drag"), this.registerIncoming("pointer-drag", this._handlePointerDrag.bind(this)), this.registerIncoming("pointer-up", this._handlePointerUpAndPointerLost.bind(this)), this.registerIncoming("pointer-capture-lost", this._handlePointerUpAndPointerLost.bind(this)), this.registerIncoming("pointer-cancel", this._handlePointerUpAndPointerLost.bind(this));
  }
  _createPayload(t15, e12, i19, n26) {
    return { action: t15, pointerType: this._pointerType, button: this._mouseButton, buttons: e12.buttons, timestamp: n26, pointers: o11(this._activePointerMap), pointer: e12, angle: i19.angle, radius: i19.radius, center: i19.center };
  }
  _addPointer(t15) {
    const e12 = t15.native.pointerId, i19 = a19(this._activePointerMap).angle, n26 = { event: t15, initialAngle: 0, lastAngle: 0 };
    this._activePointerMap.set(e12, n26);
    const s15 = h8(n26, r9(this._activePointerMap));
    n26.initialAngle = s15, n26.lastAngle = s15, this._updatePointerAngles(i19);
  }
  _updatePointer(t15) {
    if (t15 && null == t15.x && null == t15.y)
      return;
    const e12 = t15.native.pointerId, i19 = this._activePointerMap.get(e12);
    i19 ? i19.event = t15 : this._addPointer(t15);
  }
  _removePointer(t15) {
    const e12 = a19(this._activePointerMap).angle;
    this._activePointerMap.delete(t15), this._updatePointerAngles(e12);
  }
  _updatePointerAngles(t15) {
    const e12 = a19(this._activePointerMap);
    this._activePointerMap.forEach((i19) => {
      i19.initialAngle = h8(i19, e12) - t15, i19.lastAngle = h8(i19, e12) - t15;
    });
  }
  _emitEvent(t15, e12, i19) {
    const n26 = a19(this._activePointerMap);
    this._drag.emit(this._createPayload(t15, e12, n26, i19), void 0, this._startStateModifiers);
  }
  _handlePointerUpAndPointerLost(t15) {
    const i19 = t15.data.native.pointerId, n26 = n2(t15.timestamp);
    this._activePointerMap.get(i19) && (1 === this._activePointerMap.size ? (this._updatePointer(t15.data), !this._isCurrentDragSuppressed && this._emitEvent("end", t15.data, n26), this._isDragging = false, this._isCurrentDragSuppressed = false, this._removePointer(i19)) : (this._removePointer(i19), this._emitEvent("removed", t15.data, n2(t15.timestamp))));
  }
  _handlePointerDrag(t15) {
    const i19 = t15.data, n26 = i19.currentEvent, s15 = n2(t15.timestamp);
    switch (i19.action) {
      case "start":
      case "update":
        this._isDragging ? this._activePointerMap.has(n26.native.pointerId) ? (this._updatePointer(n26), !this._isCurrentDragSuppressed && this._emitEvent("update", n26, s15)) : (this._addPointer(n26), this._emitEvent("added", n26, s15), this._isCurrentDragSuppressed = this._isSuppressed) : (this._updatePointer(n26), this._pointerType = t15.data.startEvent.pointerType, this._mouseButton = t15.data.startEvent.button, this._startStateModifiers = t15.modifiers, this._isDragging = true, this._isCurrentDragSuppressed = this._isSuppressed, !this._isCurrentDragSuppressed && this._emitEvent("start", n26, s15));
    }
  }
  get _isSuppressed() {
    return !!this._navigationTouch && !this._navigationTouch.browserTouchPanEnabled && "touch" === this._pointerType && 1 === this._activePointerMap.size;
  }
};
function r9(e12) {
  const i19 = [];
  return e12.forEach((e13) => {
    i19.push(c4(e13.event.x, e13.event.y));
  }), r8(i19);
}
function a19(t15) {
  const e12 = r9(t15);
  let i19 = 0;
  return t15.forEach((t16) => {
    let n26 = h8(t16, e12), s15 = n26 - t16.lastAngle;
    for (; s15 > Math.PI; )
      s15 -= 2 * Math.PI;
    for (; s15 < -Math.PI; )
      s15 += 2 * Math.PI;
    n26 = t16.lastAngle + s15, t16.lastAngle = n26;
    const r13 = n26 - t16.initialAngle;
    i19 += r13;
  }), i19 /= t15.size || 1, { angle: i19, radius: e12.radius, center: e12.center };
}
function o11(t15) {
  const e12 = /* @__PURE__ */ new Map();
  return t15.forEach((t16, i19) => e12.set(i19, t16.event)), e12;
}
function h8(t15, e12) {
  const i19 = t15.event, n26 = i19.x - e12.center.x, s15 = i19.y - e12.center.y;
  return Math.atan2(s15, n26);
}
var p13;
!function(t15) {
  t15[t15.Left = 0] = "Left", t15[t15.Middle = 1] = "Middle", t15[t15.Right = 2] = "Right", t15[t15.Back = 3] = "Back", t15[t15.Forward = 4] = "Forward", t15[t15.Undefined = -1] = "Undefined";
}(p13 || (p13 = {}));

// node_modules/@arcgis/core/views/input/recognizers/SingleAndDoubleClick.js
var l12 = { maximumDoubleClickDelay: 250, maximumDoubleClickDistance: 10, maximumDoubleTouchDelay: 350, maximumDoubleTouchDistance: 35 };
var m8 = class extends i7 {
  constructor(t15 = l12.maximumDoubleClickDelay, i19 = l12.maximumDoubleClickDistance, o14 = l12.maximumDoubleTouchDelay, n26 = l12.maximumDoubleTouchDistance, s15 = t3) {
    super(false), this._maximumDoubleClickDelay = t15, this._maximumDoubleClickDistance = i19, this._maximumDoubleTouchDelay = o14, this._maximumDoubleTouchDistance = n26, this._clock = s15, this._pointerState = /* @__PURE__ */ new Map(), this._click = this.registerOutgoing("click"), this._doubleClick = this.registerOutgoing("double-click"), this.registerIncoming("immediate-click", this._handleImmediateClick.bind(this)), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this));
  }
  onUninstall() {
    this._pointerState.forEach((e12) => e12.doubleClickTimer = o2(e12.doubleClickTimer));
  }
  get hasPendingInputs() {
    return n3(this._pointerState, (e12) => null != e12.doubleClickTimer);
  }
  _clearDoubleClickTimer(e12, t15) {
    const o14 = this._pointerState.get(e12);
    o14 && (o14.doubleClickTimer = o2(o14.doubleClickTimer), t15 && this._click.emit(o14.event.data, void 0, o14.event.modifiers), this._pointerState.delete(e12), this.refreshHasPendingInputs());
  }
  _doubleClickTimeoutExceeded(e12) {
    const t15 = this._pointerState.get(e12);
    1 === t15.pointerDownCount && this._click.emit(t15.event.data, void 0, t15.event.modifiers), t15.doubleClickTimer = null, this._pointerState.delete(e12), this.refreshHasPendingInputs();
  }
  _getPointerId(e12) {
    const { pointerId: t15, pointerType: i19, button: o14 } = e12.native;
    return "mouse" === i19 ? `${t15}:${o14}` : `${i19}`;
  }
  _handleImmediateClick(e12) {
    const t15 = e12.data, { pointerType: i19 } = t15.native, o14 = this._getPointerId(t15);
    if (!this._pointerState.has(o14))
      return void this._startClick(e12);
    const s15 = this._pointerState.get(o14), { data: l13, modifiers: m10 } = s15.event, c17 = "touch" === i19 ? this._maximumDoubleTouchDistance : this._maximumDoubleClickDistance;
    e11(l13, t15) > c17 ? (this._clearDoubleClickTimer(o14, true), this._startClick(e12)) : (this._clearDoubleClickTimer(o14, false), 2 === s15.pointerDownCount && this._doubleClick.emit(l13, void 0, m10));
  }
  _handlePointerDown(e12) {
    const t15 = c16(e12.data), i19 = this._pointerState.get(t15);
    i19 && (i19.pointerDownCount += 1);
  }
  _startClick(e12) {
    const { data: t15 } = e12, { native: { pointerType: i19 } } = t15, o14 = c16(t15), n26 = "touch" === i19 ? this._maximumDoubleTouchDelay : this._maximumDoubleClickDelay, l13 = this._clock.setTimeout(() => this._doubleClickTimeoutExceeded(o14), n26), m10 = 1;
    this._pointerState.set(o14, { event: e12, doubleClickTimer: l13, pointerDownCount: m10 }), this.refreshHasPendingInputs();
  }
};

// node_modules/@arcgis/core/views/input/recognizers/ImmediateDoubleClick.js
var m9 = class extends i7 {
  constructor(e12 = l12.maximumDoubleClickDelay, o14 = l12.maximumDoubleClickDistance, a21 = l12.maximumDoubleTouchDelay, m10 = l12.maximumDoubleTouchDistance, n26 = t3) {
    super(false), this._maximumDoubleClickDelay = e12, this._maximumDoubleClickDistance = o14, this._maximumDoubleTouchDelay = a21, this._maximumDoubleTouchDistance = m10, this._clock = n26, this._pointerState = /* @__PURE__ */ new Map(), this._immediateDoubleClick = this.registerOutgoing("immediate-double-click"), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this)), this.registerIncoming("pointer-up", this._handlePointerUp.bind(this));
  }
  onUninstall() {
    this._pointerState.forEach((t15) => {
      t15.immediateDoubleClick && t15.immediateDoubleClick.timeoutHandle.remove();
    }), super.onUninstall();
  }
  _handlePointerDown(t15) {
    const e12 = t15.data, i19 = c16(e12);
    if (!this._pointerState.has(i19)) {
      const t16 = { downButton: e12.native.button, immediateDoubleClick: null };
      this._pointerState.set(i19, t16), this.startCapturingPointer(e12.native);
    }
  }
  _handlePointerUp(t15) {
    const e12 = t15.data, i19 = c16(e12), m10 = this._pointerState.get(i19);
    if (m10 && m10.downButton === e12.native.button) {
      const i20 = m10.immediateDoubleClick;
      if (i20) {
        i20.timeoutHandle.remove();
        const o14 = "touch" === t15.data.native.pointerType ? this._maximumDoubleTouchDistance : this._maximumDoubleClickDistance;
        e11(i20, t15.data) > o14 ? this._startImmediateDoubleClick(t15, m10) : (this._immediateDoubleClick.emit(t15.data, void 0, i20.modifiers), this._removeState(e12));
      } else
        this._startImmediateDoubleClick(t15, m10);
    }
  }
  _startImmediateDoubleClick(t15, e12) {
    const i19 = "touch" === t15.data.native.pointerType ? this._maximumDoubleTouchDelay : this._maximumDoubleClickDelay;
    e12.immediateDoubleClick = { x: t15.data.x, y: t15.data.y, modifiers: t15.modifiers, timeoutHandle: this._clock.setTimeout(() => this._removeState(t15.data), i19) };
  }
  _removeState(t15) {
    const e12 = c16(t15);
    this._pointerState.delete(e12), this.stopCapturingPointer(t15.native), this.refreshHasPendingInputs();
  }
};

// node_modules/@arcgis/core/views/input/recognizers/PointerClickHoldAndDrag.js
var o12 = { maximumClickDelay: 300, movementUntilMouseDrag: 1.5, movementUntilPenDrag: 6, movementUntilTouchDrag: 6, holdDelay: 500 };
var r10 = class extends i7 {
  constructor(e12 = o12.maximumClickDelay, i19 = o12.movementUntilMouseDrag, n26 = o12.movementUntilPenDrag, r13 = o12.movementUntilTouchDrag, s15 = o12.holdDelay, a21 = t3) {
    super(false), this._maximumClickDelay = e12, this._movementUntilMouseDrag = i19, this._movementUntilPenDrag = n26, this._movementUntilTouchDrag = r13, this._holdDelay = s15, this._clock = a21, this._pointerState = /* @__PURE__ */ new Map(), this._pointerDrag = this.registerOutgoing("pointer-drag"), this._immediateClick = this.registerOutgoing("immediate-click"), this._pointerHold = this.registerOutgoing("hold"), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this)), this.registerIncoming("pointer-up", (t15) => {
      this._handlePointerLoss(t15, "pointer-up");
    }), this.registerIncoming("pointer-capture-lost", (t15) => {
      this._handlePointerLoss(t15, "pointer-capture-lost");
    }), this.registerIncoming("pointer-cancel", (t15) => {
      this._handlePointerLoss(t15, "pointer-cancel");
    }), this._moveHandle = this.registerIncoming("pointer-move", this._handlePointerMove.bind(this)), this._moveHandle.pause();
  }
  onUninstall() {
    this._pointerState.forEach((t15) => {
      t15.holdTimeout = o2(t15.holdTimeout);
    }), super.onUninstall();
  }
  _handlePointerDown(t15) {
    const e12 = t15.data, i19 = e12.native.pointerId;
    let n26 = null;
    0 === this._pointerState.size && (n26 = this._clock.setTimeout(() => {
      const e13 = this._pointerState.get(i19);
      if (e13) {
        if (!e13.isDragging) {
          const i20 = e13.previousEvent;
          this._pointerHold.emit(i20, void 0, t15.modifiers), e13.holdEmitted = true;
        }
        e13.holdTimeout = null;
      }
    }, this._holdDelay));
    const o14 = { startEvent: e12, previousEvent: e12, startTimestamp: t15.timestamp, isDragging: false, downButton: e12.native.button, holdTimeout: n26, modifiers: /* @__PURE__ */ new Set() };
    this._pointerState.set(i19, o14), this.startCapturingPointer(e12.native), this._moveHandle.resume(), this._pointerState.size > 1 && this._startDragging(t15);
  }
  _createPointerDragData(t15, e12, i19) {
    return { action: t15, startEvent: e12.startEvent, previousEvent: e12.previousEvent, currentEvent: i19 };
  }
  _handlePointerMove(t15) {
    const e12 = t15.data, i19 = e12.native.pointerId, o14 = this._pointerState.get(i19);
    if (o14) {
      if (o14.isDragging)
        this._pointerDrag.emit(this._createPointerDragData("update", o14, e12), void 0, o14.modifiers);
      else {
        n23(e12, o14.startEvent) > this._getDragThreshold(e12.native.pointerType) && this._startDragging(t15);
      }
      o14.previousEvent = e12;
    }
  }
  _getDragThreshold(t15) {
    switch (t15) {
      case "touch":
        return this._movementUntilTouchDrag;
      case "pen":
        return this._movementUntilPenDrag;
      default:
        return this._movementUntilMouseDrag;
    }
  }
  _startDragging(t15) {
    const e12 = t15.data, i19 = e12.native.pointerId;
    this._pointerState.forEach((n26) => {
      null != n26.holdTimeout && (n26.holdTimeout.remove(), n26.holdTimeout = null), n26.isDragging || (n26.modifiers = t15.modifiers, n26.isDragging = true, i19 === n26.startEvent.native.pointerId ? this._pointerDrag.emit(this._createPointerDragData("start", n26, e12)) : this._pointerDrag.emit(this._createPointerDragData("start", n26, n26.previousEvent), t15.timestamp));
    });
  }
  _handlePointerLoss(t15, e12) {
    const i19 = t15.data, n26 = i19.native.pointerId, o14 = this._pointerState.get(n26);
    if (o14) {
      if (null != o14.holdTimeout && (o14.holdTimeout.remove(), o14.holdTimeout = null), o14.isDragging)
        this._pointerDrag.emit(this._createPointerDragData("end", o14, "pointer-up" === e12 ? i19 : o14.previousEvent), void 0, o14.modifiers);
      else if ("pointer-up" === e12 && o14.downButton === i19.native.button) {
        t15.timestamp - o14.startTimestamp <= this._maximumClickDelay && !o14.holdEmitted && this._immediateClick.emit(i19);
      }
      this._pointerState.delete(n26), this.stopCapturingPointer(i19.native), 0 === this._pointerState.size && this._moveHandle.pause();
    }
  }
};

// node_modules/@arcgis/core/views/input/handlers/support.js
function t12(t15, r13) {
  switch (r13) {
    case "primary":
      return "touch" === t15.pointerType || 0 === t15.button;
    case "secondary":
      return "touch" !== t15.pointerType && 2 === t15.button;
    case "tertiary":
      return "touch" !== t15.pointerType && 1 === t15.button;
  }
}
function r11(t15, r13) {
  if ("touch" === t15.pointerType)
    return false;
  switch (r13) {
    case "primary":
      return 0 === t15.button;
    case "secondary":
      return 2 === t15.button;
    case "tertiary":
      return 1 === t15.button;
  }
}

// node_modules/@arcgis/core/views/navigation/gamepadAndKeyboardUtils.js
function n24(t15) {
  let n26 = t15 * t15;
  return t15 < 0 && (n26 *= -1), n26;
}
function a20(t15) {
  return t15.translation[0] = 0, t15.translation[1] = 0, t15.translation[2] = 0, t15.heading = 0, t15.tilt = 0, t15;
}
function i18(a21, i19, o14) {
  const s15 = o14, e12 = a21.state, r13 = a21.device, l13 = "forward-down" === i19.tiltDirection ? 1 : -1, c17 = 1;
  return "standard" === r13.deviceType ? (s15.translation[0] = n24(e12.axes[0]), s15.translation[1] = n24(e12.axes[1]), s15.translation[2] = n24(e12.buttons[7]) - n24(e12.buttons[6]), s15.heading = n24(e12.axes[2]), s15.tilt = n24(e12.axes[3])) : "spacemouse" === r13.deviceType && (s15.translation[0] = 1.2 * n24(e12.axes[0]), s15.translation[1] = 1.2 * n24(e12.axes[1]), s15.translation[2] = 2 * -n24(e12.axes[2]), s15.heading = 1.2 * n24(e12.axes[5]), s15.tilt = 1.2 * n24(e12.axes[3])), s15.tilt *= l13, g2(s15.translation, s15.translation, c17), s15;
}
function o13(t15, n26) {
  const a21 = n26;
  return a21.translation[0] = t15[1] - t15[0], a21.translation[1] = t15[3] - t15[2], a21.translation[2] = t15[4] - t15[5], a21.heading = t15[7] - t15[6], a21.tilt = t15[8] - t15[9], a21.zoom = t15[10] - t15[11], a21;
}
function s14(t15) {
  return 0 === t15.translation[0] && 0 === t15.translation[1] && 0 === t15.translation[2] && 0 === t15.heading && 0 === t15.tilt && 0 === t15.zoom;
}

// node_modules/@arcgis/core/views/input/DragEventSeparator.js
var t13 = class {
  constructor(t15) {
    this._callbacks = t15, this._currentCount = 0, this._callbacks.condition || (this._callbacks.condition = () => true);
  }
  handle(t15) {
    const s15 = t15.data, i19 = s15.pointers.size;
    switch (s15.action) {
      case "start":
        this._currentCount = i19, this._emitStart(t15);
        break;
      case "added":
        this._emitEnd(this._previousEvent), this._currentCount = i19, this._emitStart(t15);
        break;
      case "update":
        this._emitUpdate(t15);
        break;
      case "removed":
        this._startEvent && this._emitEnd(this._previousEvent), this._currentCount = i19, this._emitStart(t15);
        break;
      case "end":
        this._emitEnd(t15), this._currentCount = 0;
    }
    this._previousEvent = t15;
  }
  _emitStart(t15) {
    var _a, _b;
    this._startEvent = t15, ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t15)) && this._callbacks.start(this._currentCount, t15, this._startEvent);
  }
  _emitUpdate(t15) {
    var _a, _b;
    ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t15)) && this._callbacks.update(this._currentCount, t15, this._startEvent);
  }
  _emitEnd(t15) {
    var _a, _b;
    ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t15)) && this._callbacks.end(this._currentCount, t15, this._startEvent), this._startEvent = null;
  }
};

// node_modules/@arcgis/core/core/libs/gl-matrix-2/types/vec2.js
function n25(n26) {
  return n26 instanceof Float32Array && n26.length >= 2;
}
function r12(n26) {
  return Array.isArray(n26) && n26.length >= 2;
}
function t14(t15) {
  return n25(t15) || r12(t15);
}

// node_modules/@arcgis/core/views/2d/ViewState.js
var b3;
var G = [0, 0];
var O = b3 = class extends l2 {
  constructor(t15) {
    super(t15), this._viewpoint2D = { center: n10(), rotation: 0, scale: 0, spatialReference: void 0 }, this.center = [0, 0], this.extent = new M(), this.id = 0, this.inverseTransform = e8(), this.resolution = 0, this.rotation = 0, this.scale = 0, this.transform = e8(), this.transformNoRotation = e8(), this.displayMat3 = e7(), this.displayViewMat3 = e7(), this.viewMat3 = e7(), this.viewMat2d = n11(), this.worldScreenWidth = 0, this.size = [0, 0];
  }
  set pixelRatio(t15) {
    this._set("pixelRatio", t15), this._update();
  }
  set size(t15) {
    this._set("size", t15), this._update();
  }
  set viewpoint(t15) {
    if (t15) {
      const s15 = this._viewpoint2D, i19 = t15.targetGeometry;
      s15.center[0] = i19.x, s15.center[1] = i19.y, s15.rotation = t15.rotation, s15.scale = t15.scale, s15.spatialReference = i19.spatialReference;
    }
    this._update();
  }
  copy(t15) {
    const s15 = this.size, i19 = this.viewpoint;
    return i19 && s15 ? (this.viewpoint = K(i19, t15.viewpoint), this._set("size", a5(s15, t15.size))) : (this.viewpoint = t15.viewpoint.clone(), this._set("size", [t15.size[0], t15.size[1]])), this._set("pixelRatio", t15.pixelRatio), this;
  }
  clone() {
    return new b3({ size: this.size, viewpoint: this.viewpoint.clone(), pixelRatio: this.pixelRatio });
  }
  toMap(t15, s15, i19) {
    return t14(s15) ? z(t15, s15, this.inverseTransform) : (G[0] = s15, G[1] = i19, z(t15, G, this.inverseTransform));
  }
  toScreen(t15, s15, i19) {
    return t14(s15) ? z(t15, s15, this.transform) : (G[0] = s15, G[1] = i19, z(t15, G, this.transform));
  }
  toScreenNoRotation(t15, s15, i19) {
    return t14(s15) ? z(t15, s15, this.transformNoRotation) : (G[0] = s15, G[1] = i19, z(t15, G, this.transformNoRotation));
  }
  getScreenTransform(t15, s15) {
    const { center: i19 } = this._viewpoint2D, e12 = this._get("pixelRatio") || 1, o14 = this._get("size");
    return it(t15, i19, o14, s15, 0, e12), t15;
  }
  _update() {
    const { center: t15, spatialReference: i19, scale: e12, rotation: o14 } = this._viewpoint2D, c17 = this._get("pixelRatio") || 1, m10 = this._get("size"), d11 = new l6({ targetGeometry: new x(t15[0], t15[1], i19), scale: e12, rotation: o14 });
    if (this._set("viewpoint", d11), !m10 || !i19 || !e12)
      return;
    this.resolution = et(d11), this.rotation = o14, this.scale = e12, this.spatialReference = i19, a5(this.center, t15);
    const y8 = 0 !== m10[0] ? 2 / m10[0] : 0, _7 = 0 !== m10[1] ? -2 / m10[1] : 0;
    s6(this.displayMat3, y8, 0, 0, 0, _7, 0, -1, 1, 1);
    const x2 = r3(this.viewMat3), z3 = t6(m10[0] / 2, m10[1] / 2), g11 = t6(-m10[0] / 2, -m10[1] / 2), D = r(o14);
    M2(x2, x2, z3), h3(x2, x2, D), M2(x2, x2, g11), i4(this.displayViewMat3, this.displayMat3, x2);
    const b4 = f3(this.viewMat2d, z3);
    return e6(b4, b4, D), i5(b4, b4, g11), Y2(this.extent, d11, m10), ct(this.transform, d11, m10, c17), r4(this.inverseTransform, this.transform), st(this.transformNoRotation, d11, m10, c17), this.worldScreenWidth = ft(this.spatialReference, this.resolution), this._set("id", this.id + 1), this;
  }
};
e([y2({ readOnly: true })], O.prototype, "id", void 0), e([y2({ value: 1, json: { write: true } })], O.prototype, "pixelRatio", null), e([y2({ json: { write: true } })], O.prototype, "size", null), e([y2()], O.prototype, "spatialReference", void 0), e([y2({ type: l6, json: { write: true } })], O.prototype, "viewpoint", null), O = b3 = e([a2("esri.views.2d.ViewState")], O);
var U2 = O;

export {
  t8 as t,
  w3 as w,
  C2 as C,
  w5 as w2,
  a7 as a,
  i10 as i,
  z2 as z,
  a12 as a2,
  t12 as t2,
  r11 as r,
  a20 as a3,
  i18 as i2,
  o13 as o,
  s14 as s,
  c15 as c,
  e10 as e,
  e11 as e2,
  c16 as c2,
  s13 as s2,
  l12 as l,
  m8 as m,
  m9 as m2,
  r10 as r2,
  t13 as t3,
  U2 as U,
  i14 as i3,
  h6 as h
};
//# sourceMappingURL=chunk-CNMVDP2Z.js.map

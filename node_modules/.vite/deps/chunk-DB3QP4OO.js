import {
  t
} from "./chunk-SCHIU6CT.js";
import {
  H as H2,
  _s
} from "./chunk-U67EYFX3.js";
import {
  q2 as q
} from "./chunk-FOEAKQNX.js";
import {
  E,
  c as c2,
  i as i2,
  n as n3,
  nt
} from "./chunk-LEDSC236.js";
import {
  c
} from "./chunk-NETCTS4Y.js";
import {
  l
} from "./chunk-RVS5HU2K.js";
import {
  Fn,
  Hn,
  In,
  Tn
} from "./chunk-BNBT4QTW.js";
import {
  n as n2,
  s
} from "./chunk-7EG7BYWF.js";
import {
  m
} from "./chunk-TEHNQYQD.js";
import {
  P,
  _,
  o,
  r,
  z
} from "./chunk-TPJLFGOT.js";
import {
  n
} from "./chunk-CQX57DED.js";
import {
  f as f2
} from "./chunk-ZEEBL7ZN.js";
import {
  A2 as A,
  H,
  W
} from "./chunk-RTDN6KAT.js";
import {
  f,
  i
} from "./chunk-JZJWZ6DN.js";

// node_modules/@arcgis/core/geometry/support/coordinateSystem.js
function h(t2) {
  const { value: e2, operations: n5 } = t2;
  return { operations: n5, value: n5.create(e2) };
}
function j(t2, e2, n5) {
  return t2.operations.setExtent(t2.value, e2, n5.value), n5;
}
function d(t2) {
  return { operations: t2, value: t2.create() };
}
function A2(t2, e2, n5 = d(t2)) {
  return n5.operations = t2, t2.copy(e2, n5.value), n5;
}
function k(t2) {
  return A2(nt, E(0, 0, 0, A(t2).radius));
}
var x = 2 ** 50;
function R() {
  return A2(_s, H2([0, 0, 0], [x, 0, 0], [0, x, 0]));
}
function P2(t2, e2, n5) {
  return t2.operations.axisAt(t2.value, e2, n3.Z, n5);
}
function S(t2, e2, n5, o2) {
  return t2.operations.axisAt(t2.value, e2, n5, o2);
}
function b(t2, e2, n5) {
  return t2.operations.intersectRay(t2.value, e2, n5);
}
function U(t2, e2, n5) {
  return t2.operations.intersectRayClosestSilhouette(t2.value, e2, n5);
}
function O(t2, e2) {
  return t2.operations.altitudeAt(t2.value, e2);
}
function T(t2, e2, n5, o2) {
  return t2.operations.setAltitudeAt(t2.value, e2, n5, o2);
}
function Z(n5, o2, r2, u) {
  return o2 !== u && n2(u, o2), o(w, u[12], u[13], u[14]), T(n5, w, r2, w), u[12] = w[0], u[13] = w[1], u[14] = w[2], u;
}
function q2(t2, e2, n5) {
  return t2.operations.elevate(t2.value, e2, n5.value);
}
var w = n();
function B(t2, e2, o2, r2, u) {
  return u[0] = P(t2, e2), u[1] = P(t2, o2), u[2] = P(t2, r2), u;
}
function D(t2, e2, n5, i4, s2) {
  r(n5, t2), r(H3, e2), z(H3, H3), _(i4, H3, n5), _(s2, i4, n5);
}
function F(t2, e2) {
  return t2 ? c(e2) : e2.isGeographic ? f2.PlateCarree : e2;
}
var H3 = n();

// node_modules/@arcgis/core/core/libs/gl-matrix-2/types/vec3.js
function n4(t2) {
  return i(t2) && t2.length >= 3;
}
function e(r2) {
  return (f(r2) || Array.isArray(r2)) && r2.length >= 3;
}
function i3(r2) {
  return n4(r2) || e(r2);
}

// node_modules/@arcgis/core/views/3d/support/RenderCoordsHelper.js
var U2 = class _U {
  constructor(t2, e2, s2, o2) {
    this.viewingMode = t2, this.spatialReference = e2, this.unitInMeters = s2, this._coordinateSystem = o2, this._tmpCoordinateSystem = h(o2);
  }
  set extent(t2) {
    t2 && j(this._coordinateSystem, t2, this._coordinateSystem);
  }
  getAltitude(t2) {
    return O(this._coordinateSystem, t2);
  }
  setAltitude(t2, e2, s2 = t2) {
    return T(this._coordinateSystem, s2, e2, t2);
  }
  setAltitudeOfTransformation(t2, e2) {
    Z(this._coordinateSystem, e2, t2, e2);
  }
  worldUpAtPosition(t2, e2) {
    return P2(this._coordinateSystem, t2, e2);
  }
  worldBasisAtPosition(t2, e2, s2) {
    return S(this._coordinateSystem, t2, e2, s2);
  }
  basisMatrixAtPosition(t2, e2) {
    const s2 = this.worldBasisAtPosition(t2, n3.X, c2.get()), i4 = this.worldBasisAtPosition(t2, n3.Y, c2.get()), r2 = this.worldBasisAtPosition(t2, n3.Z, c2.get());
    return s(e2, s2[0], s2[1], s2[2], 0, i4[0], i4[1], i4[2], 0, r2[0], r2[1], r2[2], 0, 0, 0, 0, 1), e2;
  }
  headingAtPosition(e2, s2) {
    const o2 = this.worldUpAtPosition(e2, c2.get()), i4 = this.worldBasisAtPosition(e2, n3.Y, c2.get()), r2 = i2(s2, i4, o2);
    return m(r2);
  }
  intersectManifoldClosestSilhouette(t2, e2, s2) {
    return q2(this._coordinateSystem, e2, this._tmpCoordinateSystem), U(this._tmpCoordinateSystem, t2, s2), s2;
  }
  intersectManifold(t2, e2, s2) {
    q2(this._coordinateSystem, e2, this._tmpCoordinateSystem);
    const o2 = c2.get();
    return b(this._tmpCoordinateSystem, t2, o2) ? r(s2, o2) : null;
  }
  intersectInfiniteManifold(t2, e2, s2) {
    if (this.viewingMode === l.Global)
      return this.intersectManifold(t2, e2, s2);
    q2(this._coordinateSystem, e2, this._tmpCoordinateSystem);
    const o2 = this._tmpCoordinateSystem.value, r2 = c2.get();
    return q(o2.plane, t2, r2) ? r(s2, r2) : null;
  }
  toRenderCoords(t2, e2, s2) {
    return t(t2) ? In(t2, e2, this.spatialReference) : Hn(t2, e2, s2, this.spatialReference);
  }
  fromRenderCoords(t2, e2, s2 = null) {
    return t(e2) ? (null != s2 && (e2.spatialReference = s2), Fn(t2, this.spatialReference, e2)) : i3(e2) ? Hn(t2, this.spatialReference, e2, s2) ? e2 : null : Tn(t2, this.spatialReference, e2);
  }
  static create(t2, s2) {
    switch (t2) {
      case l.Local:
        return new _U(l.Local, s2, H(s2), R());
      case l.Global:
        return new _U(l.Global, s2, 1, k(s2));
    }
  }
  static renderUnitScaleFactor(t2, e2) {
    return W(t2) / W(e2);
  }
};

export {
  B,
  D,
  F,
  U2 as U
};
//# sourceMappingURL=chunk-DB3QP4OO.js.map

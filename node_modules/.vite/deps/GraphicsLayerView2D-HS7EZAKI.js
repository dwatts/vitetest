import {
  i
} from "./chunk-3AKVKVHP.js";
import "./chunk-RLCH4JTX.js";
import {
  oe
} from "./chunk-XJSQN3VD.js";
import {
  f
} from "./chunk-IVHBK5M6.js";
import "./chunk-U7ACAW2W.js";
import "./chunk-HVV5CDLD.js";
import "./chunk-JNPHM5XV.js";
import "./chunk-X6M7YYU3.js";
import "./chunk-HMHRXSML.js";
import "./chunk-JXKASHKJ.js";
import "./chunk-WGM2OLIG.js";
import "./chunk-3MPC6MVT.js";
import "./chunk-UBY6VMKB.js";
import "./chunk-ULFDJHIR.js";
import {
  d
} from "./chunk-TYEEWKIN.js";
import "./chunk-LYNC7OVT.js";
import "./chunk-3QGLF4DO.js";
import "./chunk-OKNF37G2.js";
import "./chunk-5W2MUQQG.js";
import "./chunk-NVZXNBIH.js";
import "./chunk-VF625TQS.js";
import "./chunk-UXWYXWGD.js";
import "./chunk-PX3Q44FM.js";
import "./chunk-XYJMHUDA.js";
import "./chunk-CSLWFQJE.js";
import "./chunk-MRDUXF66.js";
import "./chunk-IVABPLLZ.js";
import "./chunk-FS3VDXRM.js";
import "./chunk-BWIRPDWB.js";
import "./chunk-XP6ESZGI.js";
import "./chunk-RKM5MXYH.js";
import "./chunk-A4HFWKMU.js";
import "./chunk-TBHRKIAA.js";
import "./chunk-EFDT2ZDW.js";
import "./chunk-USNIBKH4.js";
import "./chunk-BBJLFBMQ.js";
import "./chunk-J6SRKANJ.js";
import "./chunk-RBDJB3ZY.js";
import "./chunk-RRRAGAMB.js";
import "./chunk-ERFCZMKG.js";
import "./chunk-C2GW4T2D.js";
import "./chunk-SO7CVIZK.js";
import "./chunk-YAWND7HF.js";
import "./chunk-FJYIB7HF.js";
import "./chunk-JORCYNDS.js";
import "./chunk-BZUKDBTT.js";
import "./chunk-7YCGPGGL.js";
import "./chunk-GPABU246.js";
import "./chunk-KILCBNKU.js";
import "./chunk-K4WBDIIJ.js";
import "./chunk-H3DKDGMJ.js";
import "./chunk-FB6EWBGE.js";
import "./chunk-TRGMWULG.js";
import "./chunk-WTPQKRQM.js";
import "./chunk-AER5JAFS.js";
import "./chunk-7HZ72XIE.js";
import "./chunk-ALPCRJS4.js";
import "./chunk-WDZ5AAFL.js";
import "./chunk-XL7RF4A6.js";
import "./chunk-ZL3HOHNK.js";
import "./chunk-PR2OEILG.js";
import "./chunk-TDXHXKUI.js";
import "./chunk-MVWFPLOX.js";
import "./chunk-X3YW4YOG.js";
import "./chunk-IG234GCS.js";
import "./chunk-WTKN55TU.js";
import "./chunk-TDPKDZC3.js";
import "./chunk-M5UHI5WR.js";
import "./chunk-BA6PBZHC.js";
import "./chunk-FF5LS3YE.js";
import "./chunk-BCDDCNQ2.js";
import "./chunk-D3BOGOKY.js";
import "./chunk-QOWAKGE4.js";
import "./chunk-3TTW7E7W.js";
import "./chunk-RWWB77SD.js";
import "./chunk-ZMFGNDTK.js";
import "./chunk-UL64BLDS.js";
import "./chunk-EG6CFIHA.js";
import "./chunk-CMNAZRWU.js";
import "./chunk-P4PDTNIU.js";
import "./chunk-G2DTL6AE.js";
import "./chunk-Q6HN54VB.js";
import "./chunk-Z3GCSCQI.js";
import "./chunk-UU2XJGLA.js";
import "./chunk-CGJNVOU3.js";
import "./chunk-YA7WDOJK.js";
import "./chunk-FVR25IMN.js";
import "./chunk-EV77QZBT.js";
import "./chunk-467UETSR.js";
import "./chunk-SHFLRM67.js";
import "./chunk-YGUWDSEH.js";
import "./chunk-LO3LAMAS.js";
import "./chunk-EFRTD25L.js";
import "./chunk-EAGDM3GO.js";
import "./chunk-W2YWKOK7.js";
import "./chunk-YOTOWDJK.js";
import "./chunk-ND7XUHDE.js";
import "./chunk-XG5SDOKD.js";
import "./chunk-UQHDCOJC.js";
import "./chunk-MF3HZ6GV.js";
import "./chunk-SNAARWF3.js";
import "./chunk-FQZ2JEHK.js";
import "./chunk-GZTLZ6RD.js";
import "./chunk-G3Q2URFK.js";
import "./chunk-D5NSNTGJ.js";
import "./chunk-63ERNIOV.js";
import "./chunk-QNFDBY7V.js";
import "./chunk-RVQLSA5X.js";
import "./chunk-5KLICR5E.js";
import "./chunk-YYTXJF6W.js";
import "./chunk-NLWV7Q6F.js";
import "./chunk-JB7FDW5N.js";
import "./chunk-SS3YG6J3.js";
import "./chunk-5IYCCZ54.js";
import "./chunk-JLSXEPY6.js";
import "./chunk-VMTVUE47.js";
import "./chunk-GDZM4A6K.js";
import {
  h
} from "./chunk-XWGNMTES.js";
import "./chunk-6NNEHJYI.js";
import "./chunk-BNBT4QTW.js";
import "./chunk-3FQOSG5O.js";
import "./chunk-7EG7BYWF.js";
import "./chunk-JNDFAMXY.js";
import "./chunk-NTEKJWGF.js";
import "./chunk-TFIKV5RU.js";
import "./chunk-KW6QQDGN.js";
import "./chunk-AQ7R6V4L.js";
import "./chunk-DOQ3SAAR.js";
import "./chunk-4BXK4H4L.js";
import "./chunk-SLVNG7FV.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-4CZO65BK.js";
import "./chunk-DEZCXTA3.js";
import "./chunk-RRJGZKNX.js";
import "./chunk-PL5Q4C6Y.js";
import "./chunk-A6VKJXIH.js";
import "./chunk-KFSY6ZZH.js";
import {
  V
} from "./chunk-7EQSYZHW.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-GGOVZ2GK.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-WLWP35G2.js";
import "./chunk-JPW73GY2.js";
import "./chunk-HXPVVSLV.js";
import "./chunk-4OR73Y2R.js";
import "./chunk-EKJ2DJIR.js";
import "./chunk-TEHNQYQD.js";
import "./chunk-TPJLFGOT.js";
import "./chunk-CQX57DED.js";
import "./chunk-3CQBBMMD.js";
import "./chunk-Z2ZUNW5S.js";
import "./chunk-7L7Z2HXM.js";
import "./chunk-75NKPXTR.js";
import "./chunk-EUVARFSM.js";
import "./chunk-3VUFACNT.js";
import "./chunk-ZEEBL7ZN.js";
import "./chunk-RTDN6KAT.js";
import "./chunk-GJ7PJ7XG.js";
import "./chunk-SJ2GJCS2.js";
import "./chunk-H7RDAEPY.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-7KH4CLS5.js";
import "./chunk-WCHO7VLT.js";
import "./chunk-JL3TJGVW.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-43LWRDQS.js";
import "./chunk-R6YKST3K.js";
import "./chunk-ZJEWQGHG.js";
import "./chunk-YGB42LDG.js";
import "./chunk-F3KGLZDZ.js";
import "./chunk-MP6GH2AC.js";
import {
  y3 as y
} from "./chunk-V76KGJFU.js";
import {
  a2 as a
} from "./chunk-HB2SQRT2.js";
import "./chunk-U3J7253Q.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-ZWUBORGT.js";
import "./chunk-3R7FAT25.js";
import "./chunk-7I33FAWS.js";
import {
  l
} from "./chunk-DWOEYHKS.js";
import "./chunk-HMVAPW5X.js";
import "./chunk-IYZKKFJM.js";
import {
  R
} from "./chunk-JZJWZ6DN.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/views/2d/layers/GraphicsLayerView2D.js
var l2 = { remove() {
}, pause() {
}, resume() {
} };
var n = class extends f(d) {
  constructor() {
    super(...arguments), this._highlightIds = /* @__PURE__ */ new Map();
  }
  attach() {
    this.graphicsView = new oe({ requestUpdateCallback: () => this.requestUpdate(), view: this.view, graphics: this.layer.graphics, container: new i(this.view.featuresTilingScheme) }), this._updateHighlight(), this.container.addChild(this.graphicsView.container), this.addAttachHandles(this.layer.on("graphic-update", this.graphicsView.graphicUpdateHandler));
  }
  detach() {
    this.container.removeAllChildren(), this.graphicsView = l(this.graphicsView);
  }
  async hitTest(i2) {
    return this.graphicsView ? this.graphicsView.hitTest(i2).map((t) => ({ type: "graphic", graphic: t, mapPoint: i2, layer: this.layer })) : null;
  }
  async fetchPopupFeatures(i2) {
    return this.graphicsView ? this.graphicsView.hitTest(i2).filter((i3) => !!i3.popupTemplate) : [];
  }
  queryGraphics() {
    return Promise.resolve(this.graphicsView.graphics);
  }
  update(i2) {
    this.graphicsView.processUpdate(i2);
  }
  moveStart() {
  }
  viewChange() {
    this.graphicsView.viewChange();
  }
  moveEnd() {
  }
  isUpdating() {
    return !this.graphicsView || this.graphicsView.updating;
  }
  highlight(i2) {
    let h2;
    "number" == typeof i2 ? h2 = [i2] : i2 instanceof h ? h2 = [i2.uid] : Array.isArray(i2) && i2.length > 0 ? h2 = "number" == typeof i2[0] ? i2 : i2.map((i3) => i3 && i3.uid) : V.isCollection(i2) && i2.length > 0 && (h2 = i2.map((i3) => i3 && i3.uid).toArray());
    const r = h2 == null ? void 0 : h2.filter(R);
    return (r == null ? void 0 : r.length) ? (this._addHighlight(r), { remove: () => this._removeHighlight(r) }) : l2;
  }
  _addHighlight(i2) {
    for (const t of i2)
      if (this._highlightIds.has(t)) {
        const i3 = this._highlightIds.get(t);
        this._highlightIds.set(t, i3 + 1);
      } else
        this._highlightIds.set(t, 1);
    this._updateHighlight();
  }
  _removeHighlight(i2) {
    for (const t of i2)
      if (this._highlightIds.has(t)) {
        const i3 = this._highlightIds.get(t) - 1;
        0 === i3 ? this._highlightIds.delete(t) : this._highlightIds.set(t, i3);
      }
    this._updateHighlight();
  }
  _updateHighlight() {
    var _a;
    (_a = this.graphicsView) == null ? void 0 : _a.setHighlight(Array.from(this._highlightIds.keys()));
  }
};
e([y()], n.prototype, "graphicsView", void 0), n = e([a("esri.views.2d.layers.GraphicsLayerView2D")], n);
var d2 = n;
export {
  d2 as default
};
//# sourceMappingURL=GraphicsLayerView2D-HS7EZAKI.js.map

import {
  a as a4
} from "./chunk-VCPVOA6K.js";
import {
  j
} from "./chunk-ZX45U24W.js";
import "./chunk-KYWX7M3R.js";
import {
  a as a3
} from "./chunk-7H2AXTDH.js";
import {
  t as t2
} from "./chunk-QC2JMJXZ.js";
import {
  c
} from "./chunk-GFPASUQP.js";
import {
  O
} from "./chunk-KDACHJ5G.js";
import "./chunk-IQRLZSBX.js";
import "./chunk-OZL6Q7O2.js";
import "./chunk-GOK4EI36.js";
import "./chunk-LO3LAMAS.js";
import "./chunk-ZWFMUHG3.js";
import "./chunk-EFRTD25L.js";
import "./chunk-BNBT4QTW.js";
import "./chunk-3FQOSG5O.js";
import "./chunk-CAFGOFIE.js";
import "./chunk-7EG7BYWF.js";
import "./chunk-DOQ3SAAR.js";
import "./chunk-4BXK4H4L.js";
import "./chunk-SLVNG7FV.js";
import "./chunk-OZXJDVTE.js";
import {
  d,
  l as l2,
  t as t3
} from "./chunk-AUKRB7YY.js";
import {
  f
} from "./chunk-KK5CYPXW.js";
import {
  t
} from "./chunk-JNO3YVNK.js";
import {
  n
} from "./chunk-DU6E4DU3.js";
import "./chunk-SVCGLUNW.js";
import {
  b
} from "./chunk-3KEIFTQ6.js";
import "./chunk-DEZCXTA3.js";
import "./chunk-PL5Q4C6Y.js";
import "./chunk-A6VKJXIH.js";
import "./chunk-KFSY6ZZH.js";
import "./chunk-7EQSYZHW.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-GGOVZ2GK.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-WLWP35G2.js";
import "./chunk-HXPVVSLV.js";
import "./chunk-4OR73Y2R.js";
import "./chunk-EKJ2DJIR.js";
import "./chunk-TEHNQYQD.js";
import "./chunk-TPJLFGOT.js";
import "./chunk-CQX57DED.js";
import "./chunk-3CQBBMMD.js";
import "./chunk-2CTB7MKH.js";
import "./chunk-Z2ZUNW5S.js";
import "./chunk-7L7Z2HXM.js";
import "./chunk-75NKPXTR.js";
import "./chunk-EUVARFSM.js";
import "./chunk-3VUFACNT.js";
import "./chunk-ZEEBL7ZN.js";
import {
  r
} from "./chunk-RTDN6KAT.js";
import "./chunk-GJ7PJ7XG.js";
import {
  U,
  a as a2,
  l,
  w
} from "./chunk-H7RDAEPY.js";
import "./chunk-7KH4CLS5.js";
import "./chunk-WCHO7VLT.js";
import "./chunk-JL3TJGVW.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-43LWRDQS.js";
import "./chunk-R6YKST3K.js";
import "./chunk-ZJEWQGHG.js";
import "./chunk-YGB42LDG.js";
import "./chunk-F3KGLZDZ.js";
import "./chunk-MP6GH2AC.js";
import {
  y3 as y
} from "./chunk-V76KGJFU.js";
import {
  a2 as a,
  e2
} from "./chunk-HB2SQRT2.js";
import "./chunk-U3J7253Q.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-ZWUBORGT.js";
import "./chunk-3R7FAT25.js";
import "./chunk-7I33FAWS.js";
import "./chunk-DWOEYHKS.js";
import {
  s2 as s
} from "./chunk-HMVAPW5X.js";
import "./chunk-IYZKKFJM.js";
import "./chunk-JZJWZ6DN.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/support/tagSymbols.js
var e3 = Symbol("WebScene");

// node_modules/@arcgis/core/layers/GroupLayer.js
var w2 = class extends a3(t2(c(j(l2(d(O(b))))))) {
  constructor(e4) {
    super(e4), this.allLayers = new n({ getCollections: () => [this.layers], getChildrenFunction: (e5) => "layers" in e5 ? e5.layers : null }), this.allTables = t3(this), this.fullExtent = void 0, this.operationalLayerType = "GroupLayer", this.spatialReference = void 0, this.type = "group";
  }
  initialize() {
    this._enforceVisibility(this.visibilityMode, this.visible), this.addHandles([l(() => {
      let e4 = this.parent;
      for (; e4 && "parent" in e4 && e4.parent; )
        e4 = e4.parent;
      return e4 && e3 in e4;
    }, (e4) => {
      const i = "prevent-adding-tables";
      this.removeHandles(i), e4 && (this.tables.removeAll(), this.addHandles(a2(() => this.tables, "before-add", (e5) => {
        e5.preventDefault(), s.getLogger(this).errorOnce("tables", "Tables are not yet supported in a WebScene so they can't be added.");
      }), i));
    }, w), l(() => this.visible, this._onVisibilityChange.bind(this), U)]);
  }
  destroy() {
    this.allLayers.destroy(), this.allTables.destroy();
  }
  _writeLayers(e4, i, t4, r2) {
    const s2 = [];
    if (!e4)
      return s2;
    e4.forEach((e5) => {
      const i2 = f(e5, r2.webmap ? r2.webmap.getLayerJSONFromResourceInfo(e5) : null, r2);
      null != i2 && i2.layerType && s2.push(i2);
    }), i.layers = s2;
  }
  set portalItem(e4) {
    this._set("portalItem", e4);
  }
  set visibilityMode(e4) {
    const i = this._get("visibilityMode") !== e4;
    this._set("visibilityMode", e4), i && this._enforceVisibility(e4, this.visible);
  }
  load(e4) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Feature Service", "Feature Collection", "Scene Service"], layerModuleTypeMap: a4 }, e4)), Promise.resolve(this);
  }
  async loadAll() {
    return t(this, (e4) => {
      e4(this.layers, this.tables);
    });
  }
  layerAdded(e4) {
    e4.visible && "exclusive" === this.visibilityMode ? this._turnOffOtherLayers(e4) : "inherited" === this.visibilityMode && (e4.visible = this.visible), this.hasHandles(e4.uid) ? console.error(`Layer readded to Grouplayer: uid=${e4.uid}`) : this.addHandles(l(() => e4.visible, (i) => this._onChildVisibilityChange(e4, i), U), e4.uid);
  }
  layerRemoved(e4) {
    this.removeHandles(e4.uid), this._enforceVisibility(this.visibilityMode, this.visible);
  }
  _turnOffOtherLayers(e4) {
    this.layers.forEach((i) => {
      i !== e4 && (i.visible = false);
    });
  }
  _enforceVisibility(e4, i) {
    if (!e2(this).initialized)
      return;
    const t4 = this.layers;
    let r2 = t4.find((e5) => e5.visible);
    switch (e4) {
      case "exclusive":
        t4.length && !r2 && (r2 = t4.at(0), r2.visible = true), this._turnOffOtherLayers(r2);
        break;
      case "inherited":
        t4.forEach((e5) => {
          e5.visible = i;
        });
    }
  }
  _onVisibilityChange(e4) {
    "inherited" === this.visibilityMode && this.layers.forEach((i) => {
      i.visible = e4;
    });
  }
  _onChildVisibilityChange(e4, i) {
    switch (this.visibilityMode) {
      case "exclusive":
        i ? this._turnOffOtherLayers(e4) : this._isAnyLayerVisible() || (e4.visible = true);
        break;
      case "inherited":
        e4.visible = this.visible;
    }
  }
  _isAnyLayerVisible() {
    return this.layers.some((e4) => e4.visible);
  }
};
e([y({ readOnly: true, dependsOn: [] })], w2.prototype, "allLayers", void 0), e([y({ readOnly: true })], w2.prototype, "allTables", void 0), e([y()], w2.prototype, "fullExtent", void 0), e([y({ json: { read: true, write: true } })], w2.prototype, "blendMode", void 0), e([y({ json: { read: false, write: { ignoreOrigin: true } } })], w2.prototype, "layers", void 0), e([r("layers")], w2.prototype, "_writeLayers", null), e([y({ type: ["GroupLayer"] })], w2.prototype, "operationalLayerType", void 0), e([y({ json: { origins: { "web-document": { read: false, write: false } } } })], w2.prototype, "portalItem", null), e([y()], w2.prototype, "spatialReference", void 0), e([y({ json: { read: false }, readOnly: true, value: "group" })], w2.prototype, "type", void 0), e([y({ type: ["independent", "inherited", "exclusive"], value: "independent", json: { write: true, origins: { "web-map": { type: ["independent", "exclusive"], write: (e4, i, t4) => {
  "inherited" !== e4 && (i[t4] = e4);
} } } } })], w2.prototype, "visibilityMode", null), w2 = e([a("esri.layers.GroupLayer")], w2);
var M = w2;
export {
  M as default
};
//# sourceMappingURL=GroupLayer-TE2MMVOZ.js.map

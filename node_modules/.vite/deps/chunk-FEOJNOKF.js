import {
  v as v2
} from "./chunk-VIDC736D.js";
import {
  b as b2,
  c,
  v
} from "./chunk-67UNUI4B.js";
import {
  Z as Z2
} from "./chunk-2XKILFME.js";
import {
  _ as _2
} from "./chunk-7JB7RSO7.js";
import {
  C,
  b,
  d,
  j,
  o as o2,
  p as p2,
  q as q2
} from "./chunk-NLWV7Q6F.js";
import {
  n as n2,
  t as t2
} from "./chunk-SS3YG6J3.js";
import {
  N
} from "./chunk-TEHNQYQD.js";
import {
  F,
  J,
  P,
  Z,
  _,
  e,
  o,
  p,
  q,
  x
} from "./chunk-TPJLFGOT.js";
import {
  n,
  r,
  t
} from "./chunk-CQX57DED.js";
import {
  l,
  w
} from "./chunk-H7RDAEPY.js";

// node_modules/@arcgis/core/views/interactive/keybindings.js
var e2 = { redo: "r", undo: "z", center: "Alt", constraint: "Shift", cancel: "Escape", delete: ["Backspace", "Delete"], complete: "Enter", vertexAdd: "f", pan: " " };
var t3 = { toggle: "Control" };

// node_modules/@arcgis/core/views/interactive/snapping/SnappingPoint.js
function l2(n6) {
  return n6;
}
function i(t5) {
  return t(t5);
}
function f(n6, r3, e3) {
  return r(n6, r3, e3);
}
function s(n6, t5, r3) {
  return null == n6 ? null : c2(r3.coordinateHelper.vectorToDehydratedPoint(n6, m), t5, r3);
}
function c2(n6, r3, o3) {
  if (null == n6)
    return null;
  if (null == r3)
    return l2(r(n6.x, n6.y, n6.z ?? 0));
  if ("2d" === r3.type)
    return l2(r(n6.x, n6.y, 0));
  const { elevationInfo: i2 } = o3, f3 = c(r3, n6, i2, b2) ?? 0;
  return l2(r(n6.x, n6.y, f3));
}
function a(n6, t5, { z: e3, m: l5, spatialReference: i2, elevationInfo: f3 }) {
  if (null == e3 && null == l5) {
    const t6 = Z2(n6[0], n6[1], void 0, i2);
    return null != l5 && (t6.m = l5, t6.hasM = true), t6;
  }
  if (null == t5 || "2d" === t5.type) {
    const t6 = Z2(n6[0], n6[1], e3, i2);
    return null != l5 && (t6.m = l5, t6.hasM = true), t6;
  }
  const s3 = v(t5, n6, i2, b2, f3) ?? 0, c4 = Z2(n6[0], n6[1], s3, i2);
  return null != l5 && (c4.m = l5, c4.hasM = true), c4;
}
function p3(n6, t5) {
  return Z2(n6[0], n6[1], n6[2], t5);
}
var m = Z2(0, 0, 0, null);

// node_modules/@arcgis/core/views/interactive/snapping/snappingUtils.js
function p4(e3, n6) {
  const t5 = e3.x - n6.x, r3 = e3.y - n6.y;
  return t5 * t5 + r3 * r3;
}
function g(e3, n6) {
  return Math.sqrt(p4(e3, n6));
}
function u(e3, n6) {
  n6.sort((n7, r3) => p(n7.targetPoint, e3) - p(r3.targetPoint, e3));
}
var c3;
function l3({ point: e3, distance: n6, returnEdge: t5, returnVertex: o3, coordinateHelper: { spatialReference: i2 } }, s3, a2) {
  return { point: Z2(e3[0], e3[1], e3[2], i2.toJSON()), mode: s3, distance: n6, returnEdge: t5, returnVertex: o3, query: null != a2 ? a2.toJSON() : { where: "1=1" } };
}
function d2(e3, n6, t5) {
  return { left: s(e3.leftVertex.pos, n6, t5), right: s(e3.rightVertex.pos, n6, t5) };
}
function E(e3) {
  return e3.createQuery();
}
function f2(t5, r3 = () => {
}) {
  const s3 = l(() => ({ view: t5.view, snappingOptions: t5.snappingOptions }), ({ view: e3, snappingOptions: n6 }) => {
    const s4 = "snapping-toggle", a2 = _2.TOOL;
    if (t5.removeHandles(s4), e3 && null != n6) {
      const o3 = [e3.on("key-down", (e4) => {
        e4.key !== t3.toggle || e4.repeat || (n6.enabledToggled = true, r3());
      }, a2), e3.on("key-up", (e4) => {
        e4.key === t3.toggle && (n6.enabledToggled = false, r3());
      }, a2), e3.on("pointer-move", (e4) => {
        const t6 = e4.native.ctrlKey;
        n6.enabledToggled !== t6 && (n6.enabledToggled = t6, r3());
      }, a2)];
      t5.addHandles(o3, s4);
    }
  }, w);
  t5.addHandles(s3);
}
!function(e3) {
  e3[e3.TARGET = 0] = "TARGET", e3[e3.REFERENCE = 1] = "REFERENCE", e3[e3.REFERENCE_EXTENSION = 2] = "REFERENCE_EXTENSION";
}(c3 || (c3 = {}));

// node_modules/@arcgis/core/views/support/geometry3dUtils.js
function Y2({ start: t5, end: o3, type: c4 }, u2, a2) {
  const i2 = [], p5 = o2(D, o3, t5), A2 = o2(G, t5, u2), L = p2(p5), h = 2 * j(p5, A2), E4 = h * h - 4 * L * (p2(A2) - a2 * a2);
  if (0 === E4) {
    const n6 = -h / (2 * L);
    (c4 === z.PLANE || n6 >= 0) && i2.push(d(n2(), t5, p5, n6));
  } else if (E4 > 0) {
    const n6 = Math.sqrt(E4), s3 = (-h + n6) / (2 * L);
    (c4 === z.PLANE || s3 >= 0) && i2.push(d(n2(), t5, p5, s3));
    const r3 = (-h - n6) / (2 * L);
    (c4 === z.PLANE || r3 >= 0) && i2.push(d(n2(), t5, p5, r3));
  }
  return i2;
}
function j2(t5, s3) {
  const e3 = t5.start, c4 = t5.end, u2 = o2(D, c4, e3), a2 = o(G, -u2[1], u2[0], 0), f3 = s3.start, i2 = s3.end, E4 = J(J2, i2, f3), N3 = P(E4, a2), d3 = o(K, e3[0], e3[1], 0), m3 = J(O, d3, f3), y = P(m3, a2);
  if (Math.abs(N3) < C2)
    return Math.abs(y), [];
  const P3 = q(Q, f3, E4, y / N3);
  if (s3.type === v2.RAY) {
    const t6 = J(S, P3, f3);
    if (P(t6, E4) < -C2)
      return [];
  }
  if (t5.type === z.HALF_PLANE) {
    const t6 = C(S, P3, e3);
    if (j(t6, u2) < -C2)
      return [];
  }
  return [t(P3)];
}
function k(t5, n6) {
  return q3(U(T, n6[2], t5), n6);
}
function v3(t5, n6) {
  const s3 = 0, r3 = g2(U(T, s3, t5), U(V, s3, n6)), e3 = [];
  for (const o3 of r3)
    e3.push(t2(o3));
  return e3;
}
function M(t5, n6) {
  return H(t5, U(T, t5[2], n6));
}
function l4(t5, s3, r3) {
  const o3 = o2(D, t5, s3), u2 = r3 / q2(o3), a2 = d(n(), s3, o3, u2);
  return a2[2] = t5[2], a2;
}
function H(t5, { start: n6, end: s3, type: r3 }) {
  const e3 = J(D, t5, n6), o3 = J(G, s3, n6), c4 = P(e3, o3) / P(o3, o3);
  return q(n(), n6, o3, r3 === v2.RAY ? Math.max(c4, 0) : c4);
}
function x2({ start: t5, end: e3, type: o3 }, c4, u2) {
  const a2 = [], f3 = e(D, e3, t5), i2 = o2(G, t5, c4), p5 = p2(f3), A2 = 2 * j(f3, i2), L = A2 * A2 - 4 * p5 * (p2(i2) - u2 * u2);
  if (0 === L) {
    const n6 = -A2 / (2 * p5);
    (o3 === v2.LINE || n6 >= 0) && a2.push(q(n(), t5, f3, n6));
  } else if (L > 0) {
    const n6 = Math.sqrt(L), s3 = (-A2 + n6) / (2 * p5);
    (o3 === v2.LINE || s3 >= 0) && a2.push(q(n(), t5, f3, s3));
    const r3 = (-A2 - n6) / (2 * p5);
    (o3 === v2.LINE || r3 >= 0) && a2.push(q(n(), t5, f3, r3));
  }
  return a2;
}
function g2(n6, s3) {
  const r3 = n6.start, e3 = n6.end, o3 = s3.start, c4 = s3.end, u2 = J(D, e3, r3), a2 = J(G, c4, o3), f3 = J(J2, o3, r3), i2 = _(K, u2, a2), p5 = P(f3, i2);
  if (!N(p5, 0, C2))
    return [];
  const E4 = Z(i2);
  if (N(E4, 0, C2))
    return [];
  const d3 = _(O, f3, a2), m3 = P(d3, i2) / E4, P3 = q(Q, r3, u2, m3);
  if (n6.type === v2.RAY) {
    const t5 = J(S, P3, r3);
    if (P(u2, t5) < -C2)
      return [];
  }
  if (s3.type === v2.RAY) {
    const t5 = J(S, P3, o3);
    if (P(a2, t5) < -C2)
      return [];
  }
  return [t(P3)];
}
function q3({ start: t5, end: n6, type: s3 }, r3) {
  const e3 = J(D, r3, t5), o3 = J(G, n6, t5), c4 = _(J2, o3, e3);
  if (Z(c4) / Z(o3) < C2)
    switch (s3) {
      case v2.LINE:
        return [t(r3)];
      case v2.RAY:
        return P(o3, e3) < -C2 ? [] : [t(r3)];
    }
  return [];
}
function w2(n6, s3, r3) {
  return N(b(r3, n6), s3 * s3, C2) ? [t(r3)] : [];
}
function U(t5, n6, { start: s3, end: r3, type: e3 }) {
  return o(t5.start, s3[0], s3[1], n6), o(t5.end, r3[0], r3[1], n6), t5.type = B[e3], t5;
}
var z;
!function(t5) {
  t5[t5.PLANE = 0] = "PLANE", t5[t5.HALF_PLANE = 1] = "HALF_PLANE";
}(z || (z = {}));
var B = { [z.PLANE]: v2.LINE, [z.HALF_PLANE]: v2.RAY };
var C2 = 1e-6;
var D = n();
var G = n();
var J2 = n();
var K = n();
var O = n();
var Q = n();
var S = n();
var T = { start: n(), end: n(), type: v2.LINE };
var V = { start: n(), end: n(), type: v2.LINE };

// node_modules/@arcgis/core/views/interactive/snapping/SnappingConstraint.js
var x3 = class {
  intersect(t5) {
    return G2(this, t5);
  }
};
var T2 = class extends x3 {
  constructor(t5) {
    super(), this.point = t5;
  }
  equals(t5) {
    return U2(t5) && F(this.point, t5.point);
  }
  closestTo() {
    return i(this.point);
  }
};
var j3 = class extends x3 {
  constructor(t5, s3, e3) {
    super(), this.start = t5, this.end = s3, this.type = e3, this.lineLike = { start: this.start, end: this.end, type: this.type };
  }
  equals(t5) {
    return F2(t5) && this.type === t5.type && F(this.start, t5.start) && F(this.end, t5.end);
  }
  closestTo(t5) {
    const s3 = H(t5, this.lineLike);
    return l2(s3);
  }
};
var P2 = class extends j3 {
  constructor(t5, s3) {
    super(t5, s3, v2.LINE);
  }
};
var Z3 = class _Z extends x3 {
  constructor(t5, s3, e3) {
    super(), this.intersection = t5, this.first = s3, this.second = e3;
  }
  equals(t5) {
    return t5 instanceof _Z && this.first.equals(t5.first) && this.second.equals(t5.second);
  }
  closestTo() {
    return i(this.intersection);
  }
};
var E2 = class _E extends x3 {
  constructor(t5, s3, e3) {
    super(), this.basePoint = t5, this.first = s3, this.second = e3;
  }
  equals(t5) {
    return t5 instanceof _E && this.first.equals(t5.first) && this.second.equals(t5.second);
  }
  closestTo(t5) {
    const s3 = this.basePoint;
    return l2(r(s3[0], s3[1], t5[2]));
  }
};
var v4 = class extends x3 {
  constructor(t5, s3) {
    super(), this.center = t5, this.radius = s3;
  }
  equals(t5) {
    return H2(t5) && this.center[0] === t5.center[0] && this.center[1] === t5.center[1] && this.radius === t5.radius;
  }
  closestTo(t5) {
    const s3 = l4(t5, this.center, this.radius);
    return l2(s3);
  }
};
var w3 = class extends x3 {
  constructor(t5, s3, e3) {
    super(), this.start = t5, this.end = s3, this.type = e3, this.planeLike = { start: t5, end: s3, type: e3 };
  }
  equals(t5) {
    return S2(t5) && this.type === t5.type && F(this.start, t5.start) && F(this.end, t5.end);
  }
  closestTo(t5) {
    return l2(M(t5, this.planeLike));
  }
  closestEndTo(e3) {
    const { start: n6, end: r3 } = this;
    return Math.sign(j(o2(z2, r3, n6), o2(B2, e3, n6))) > 0 ? r3 : n6;
  }
};
var A = class extends w3 {
  constructor(t5, s3) {
    super(t5, s3, z.HALF_PLANE);
  }
};
var I = class extends w3 {
  constructor(t5, s3) {
    super(t5, s3, z.PLANE);
  }
};
var N2 = class extends x3 {
  constructor(t5, s3, e3) {
    super(), this.start = t5, this.end = s3, this.getZ = e3, this.planeLike = { start: t5, end: s3, type: z.PLANE };
  }
  equals(t5) {
    return _3(t5) && F(this.start, t5.start) && F(this.end, t5.end) && this.getZ === t5.getZ;
  }
  closestTo(t5) {
    return b3(this, t5);
  }
  addIfOnTheGround(t5, s3) {
    for (const e3 of s3) {
      const s4 = this.getZ(e3[0], e3[1], e3[2]) ?? 0;
      Math.abs(e3[2] - s4) < C2 && (e3[2] = s4, t5.push(e3));
    }
  }
};
function b3(t5, s3) {
  const e3 = M(s3, t5.planeLike);
  return e3[2] = t5.getZ(s3[0], s3[1], s3[2]) ?? C3, l2(e3);
}
function G2(t5, s3) {
  let e3 = [];
  if (U2(t5)) {
    const { point: n6 } = t5;
    F2(s3) ? e3 = q3(s3.lineLike, n6) : H2(s3) ? e3 = w2(s3.center, s3.radius, n6) : S2(s3) ? e3 = k(s3.planeLike, n6) : _3(s3) && (e3 = O2(s3, t5));
  } else if (F2(t5)) {
    const { lineLike: n6 } = t5;
    U2(s3) ? e3 = q3(n6, s3.point) : F2(s3) ? e3 = g2(n6, s3.lineLike) : H2(s3) ? e3 = x2(n6, s3.center, s3.radius) : S2(s3) ? e3 = j2(s3.planeLike, n6) : _3(s3) && (e3 = O2(s3, t5));
  } else if (H2(t5)) {
    const { center: n6, radius: r3 } = t5;
    if (F2(s3))
      e3 = x2(s3.lineLike, n6, r3);
    else if (U2(s3))
      e3 = w2(n6, r3, s3.point);
    else {
      if (S2(s3))
        return Y2(s3.planeLike, n6, r3).map((e4) => new E2(e4, t5, s3));
      _3(s3) && (e3 = O2(s3, t5));
    }
  } else if (S2(t5)) {
    const { planeLike: n6 } = t5;
    if (S2(s3))
      return v3(n6, s3.planeLike).map((e4) => new E2(e4, t5, s3));
    if (U2(s3))
      e3 = k(n6, s3.point);
    else if (F2(s3))
      e3 = j2(n6, s3.lineLike);
    else {
      if (H2(s3))
        return Y2(n6, s3.center, s3.radius).map((e4) => new E2(e4, t5, s3));
      _3(s3) && (e3 = O2(s3, t5));
    }
  } else
    _3(t5) && (e3 = O2(t5, s3));
  return M2(e3, t5, s3);
}
function O2(t5, s3) {
  const { planeLike: e3, getZ: n6 } = t5, i2 = [];
  if (U2(s3))
    t5.addIfOnTheGround(i2, k(e3, s3.point));
  else if (F2(s3))
    t5.addIfOnTheGround(i2, j2(e3, s3.lineLike));
  else if (H2(s3))
    for (const [o3, c4] of Y2(e3, s3.center, s3.radius)) {
      const t6 = n6(o3, c4, 0);
      null != t6 && i2.push(r(o3, c4, t6));
    }
  else if (S2(s3) || _3(s3))
    for (const [o3, c4] of v3(e3, s3.planeLike)) {
      const t6 = n6(o3, c4, 0) ?? C3;
      i2.push(r(o3, c4, t6));
    }
  return i2;
}
function M2(t5, s3, e3) {
  return t5.map((t6) => new Z3(l2(t6), s3, e3));
}
function U2(t5) {
  return t5 instanceof T2;
}
function F2(t5) {
  return t5 instanceof j3;
}
function H2(t5) {
  return t5 instanceof v4;
}
function S2(t5) {
  return t5 instanceof w3;
}
function _3(t5) {
  return t5 instanceof N2;
}
var z2 = n2();
var B2 = n2();
var C3 = 0;

// node_modules/@arcgis/core/views/interactive/snapping/SnappingDomain.js
var E3;
!function(E4) {
  E4[E4.FEATURE = 1] = "FEATURE", E4[E4.SELF = 2] = "SELF", E4[E4.ALL = 3] = "ALL";
}(E3 || (E3 = {}));

// node_modules/@arcgis/core/views/interactive/snapping/candidates/SnappingCandidate.js
var t4 = class {
  constructor(t5, s3, i2, o3) {
    this.targetPoint = t5, this.constraint = s3, this.isDraped = i2, this.domain = o3;
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/candidates/FeatureSnappingCandidate.js
var n3 = class extends t4 {
  constructor({ targetPoint: o3, objectId: n6, constraint: r3, isDraped: i2 }) {
    super(o3, r3, i2, E3.FEATURE), this.objectId = n6;
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/hints/SnappingHint.js
var s2 = class {
  constructor(s3, t5) {
    this.isDraped = s3, this.domain = t5;
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/hints/LineSnappingHint.js
var n4 = class _n extends s2 {
  constructor(t5, e3, s3, n6, r3 = E3.ALL, a2 = true, h = true) {
    super(n6, r3), this.type = t5, this.lineStart = e3, this.lineEnd = s3, this.fadeLeft = a2, this.fadeRight = h;
  }
  equals(e3) {
    return e3 instanceof _n && (this.type === e3.type && F(this.lineStart, e3.lineStart) && F(this.lineEnd, e3.lineEnd) && this.fadeLeft === e3.fadeLeft && this.fadeRight === e3.fadeRight);
  }
  get length() {
    return x(this.lineStart, this.lineEnd);
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/candidates/EdgeSnappingCandidate.js
var r2 = class extends n3 {
  constructor(n6) {
    super({ ...n6, constraint: new P2(n6.edgeStart, n6.edgeEnd) });
  }
  get hints() {
    return [new n4(c3.REFERENCE, this.constraint.start, this.constraint.end, this.isDraped, this.domain)];
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/hints/PointSnappingHint.js
var n5 = class _n extends s2 {
  constructor(t5, s3, n6) {
    super(s3, n6), this.point = t5;
  }
  equals(s3) {
    return s3 instanceof _n && F(this.point, s3.point);
  }
};

export {
  E3 as E,
  l2 as l,
  f,
  s,
  c2 as c,
  a,
  p3 as p,
  e2 as e,
  p4 as p2,
  g,
  u,
  c3 as c2,
  l3 as l2,
  d2 as d,
  E as E2,
  f2,
  s2,
  n4 as n,
  n5 as n2,
  H,
  T2 as T,
  Z3 as Z,
  v4 as v,
  A,
  I,
  N2 as N,
  t4 as t,
  n3,
  r2 as r
};
//# sourceMappingURL=chunk-FEOJNOKF.js.map

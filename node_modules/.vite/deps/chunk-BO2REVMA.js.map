{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderTechnique/BindType.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderModules/Uniform.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar a;!function(a){a[a.Pass=0]=\"Pass\",a[a.Draw=1]=\"Draw\"}(a||(a={}));export{a as BindType};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{BindType as e}from\"../shaderTechnique/BindType.js\";class i{constructor(i,s,t,r,a=null){this.name=i,this.type=s,this.arraySize=a,this.bind={[e.Pass]:null,[e.Draw]:null},null!=t&&null!=r&&(this.bind[t]=r)}equals(e){return this.type===e.type&&this.name===e.name&&this.arraySize===e.arraySize}}export{i as Uniform};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../core/Error.js\";import t from\"../../../../../core/Logger.js\";import{assert as r}from\"../../lib/Util.js\";const n=t.getLogger(\"esri.views.3d.webgl-engine.core.shaderModules.shaderBuilder\");class s{constructor(){this._includedModules=new Map}include(e,t){if(this._includedModules.has(e)){const r=this._includedModules.get(e);if(r!==t){n.error(\"Trying to include shader module multiple times with different sets of options.\");const t=new Set;for(const n of Object.keys(r))r[n]!==e[n]&&t.add(n);for(const n of Object.keys(e))r[n]!==e[n]&&t.add(n);t.forEach((t=>console.error(`  ${t}: current ${r[t]} new ${e[t]}`)))}}else this._includedModules.set(e,t),e(this.builder,t)}}class i extends s{constructor(){super(...arguments),this.vertex=new c,this.fragment=new c,this.attributes=new u,this.varyings=new l,this.extensions=new m,this.constants=new h}get fragmentUniforms(){return this.fragment.uniforms.entries}get builder(){return this}generate(e){const t=this.extensions.generateSource(e),r=this.attributes.generateSource(e),n=this.varyings.generateSource(e),s=\"vertex\"===e?this.vertex:this.fragment,i=s.uniforms.generateSource(),o=s.code.generateSource(),a=\"vertex\"===e?_:d,c=this.constants.generateSource().concat(s.constants.generateSource());return`#version 300 es\\n${t.join(\"\\n\")}\\n\\n${a}\\n\\n${c.join(\"\\n\")}\\n\\n${i.join(\"\\n\")}\\n\\n${r.join(\"\\n\")}\\n\\n${n.join(\"\\n\")}\\n\\n${o.join(\"\\n\")}`}generateBind(e,t){const r=new Map;this.vertex.uniforms.entries.forEach((t=>{const n=t.bind[e];null!=n&&r.set(t.name,n)})),this.fragment.uniforms.entries.forEach((t=>{const n=t.bind[e];null!=n&&r.set(t.name,n)}));const n=Array.from(r.values()),s=n.length;return(e,r,i)=>{for(let o=0;o<s;++o)n[o](t,e,r,i)}}}class o{constructor(){this._entries=new Map}add(...e){for(const t of e)this._add(t)}get(e){return this._entries.get(e)}_add(t){if(null!=t){if(this._entries.has(t.name)&&!this._entries.get(t.name).equals(t))throw new e(`Duplicate uniform name ${t.name} for different uniform type`);this._entries.set(t.name,t)}else n.error(`Trying to add null Uniform from ${(new Error).stack}.`)}generateSource(){return Array.from(this._entries.values()).map((e=>null!=e.arraySize?`uniform ${e.type} ${e.name}[${e.arraySize}];`:`uniform ${e.type} ${e.name};`))}get entries(){return Array.from(this._entries.values())}}class a{constructor(){this._entries=new Array}add(e){this._entries.push(e)}generateSource(){return this._entries}}class c extends s{constructor(){super(...arguments),this.uniforms=new o,this.code=new a,this.constants=new h}get builder(){return this}}class u{constructor(){this._entries=new Array}add(e,t){this._entries.push([e,t])}generateSource(e){return\"fragment\"===e?[]:this._entries.map((e=>`in ${e[1]} ${e[0]};`))}}class l{constructor(){this._entries=new Map}add(e,t){this._entries.has(e)&&r(this._entries.get(e)===t),this._entries.set(e,t)}generateSource(e){const t=new Array;return this._entries.forEach(((r,n)=>t.push(\"vertex\"===e?`out ${r} ${n};`:`in ${r} ${n};`))),t}}class m{constructor(){this._entries=new Set}add(e){this._entries.add(e)}generateSource(e){const t=\"vertex\"===e?m.ALLOWLIST_VERTEX:m.ALLOWLIST_FRAGMENT;return Array.from(this._entries).filter((e=>t.includes(e))).map((e=>`#extension ${e} : enable`))}}m.ALLOWLIST_FRAGMENT=[\"GL_EXT_shader_texture_lod\",\"GL_OES_standard_derivatives\"],m.ALLOWLIST_VERTEX=[];class h{constructor(){this._entries=new Set}add(e,t,r){let n=\"ERROR_CONSTRUCTOR_STRING\";switch(t){case\"float\":n=h._numberToFloatStr(r);break;case\"int\":n=h._numberToIntStr(r);break;case\"bool\":n=r.toString();break;case\"vec2\":n=`vec2(${h._numberToFloatStr(r[0])},                            ${h._numberToFloatStr(r[1])})`;break;case\"vec3\":n=`vec3(${h._numberToFloatStr(r[0])},                            ${h._numberToFloatStr(r[1])},                            ${h._numberToFloatStr(r[2])})`;break;case\"vec4\":n=`vec4(${h._numberToFloatStr(r[0])},                            ${h._numberToFloatStr(r[1])},                            ${h._numberToFloatStr(r[2])},                            ${h._numberToFloatStr(r[3])})`;break;case\"ivec2\":n=`ivec2(${h._numberToIntStr(r[0])},                             ${h._numberToIntStr(r[1])})`;break;case\"ivec3\":n=`ivec3(${h._numberToIntStr(r[0])},                             ${h._numberToIntStr(r[1])},                             ${h._numberToIntStr(r[2])})`;break;case\"ivec4\":n=`ivec4(${h._numberToIntStr(r[0])},                             ${h._numberToIntStr(r[1])},                             ${h._numberToIntStr(r[2])},                             ${h._numberToIntStr(r[3])})`;break;case\"mat2\":case\"mat3\":case\"mat4\":n=`${t}(${Array.prototype.map.call(r,(e=>h._numberToFloatStr(e))).join(\", \")})`}return this._entries.add(`const ${t} ${e} = ${n};`),this}static _numberToIntStr(e){return e.toFixed(0)}static _numberToFloatStr(e){return Number.isInteger(e)?e.toFixed(1):e.toString()}generateSource(){return Array.from(this._entries)}}const d=\"#ifdef GL_FRAGMENT_PRECISION_HIGH\\n  precision highp float;\\n  precision highp sampler2D;\\n#else\\n  precision mediump float;\\n  precision mediump sampler2D;\\n#endif\\n\\nout vec4 fragColor;\",_=\"precision highp float;\\nprecision highp sampler2D;\";export{a as Code,s as Includes,i as ShaderBuilder,c as Stage,o as Uniforms};\n"],
  "mappings": "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",
  "names": ["a", "i", "s", "a", "s", "t", "n", "i", "o", "a", "c", "e", "r"]
}

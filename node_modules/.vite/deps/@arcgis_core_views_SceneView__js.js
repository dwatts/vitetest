import {
  d as d20,
  o as o34,
  t as t34
} from "./chunk-5XCEDULD.js";
import {
  s as s39
} from "./chunk-6ONSKTRS.js";
import {
  P as P8,
  n as n38
} from "./chunk-QQ4DNBSC.js";
import "./chunk-HGOUCXFH.js";
import {
  a as a31,
  l as l21,
  s as s35,
  t as t36,
  t2 as t37
} from "./chunk-ZYPAFVYT.js";
import {
  E as E15
} from "./chunk-X65XM5YN.js";
import "./chunk-JORCYNDS.js";
import "./chunk-BZUKDBTT.js";
import {
  f as f22,
  p as p13,
  r as r38,
  t as t40
} from "./chunk-42GKKMUF.js";
import {
  u as u17,
  w as w16,
  x as x13
} from "./chunk-JKNFSP7C.js";
import {
  j as j7
} from "./chunk-FWMTC2JP.js";
import {
  d as d24
} from "./chunk-RBIHT5UN.js";
import {
  f as f23
} from "./chunk-KD3Y6TRE.js";
import {
  d as d25
} from "./chunk-XNWXRFSS.js";
import {
  t as t41
} from "./chunk-ZGOWGH4U.js";
import {
  F as F14,
  L as L7,
  x as x14
} from "./chunk-GIWW523T.js";
import {
  i as i29,
  t as t39
} from "./chunk-6ZOOONBN.js";
import {
  c as c21,
  s as s38
} from "./chunk-T4Z6JSL3.js";
import {
  d as d22,
  m as m15
} from "./chunk-WPLRPMTD.js";
import {
  d as d23
} from "./chunk-SRWW5SDM.js";
import {
  a as a33,
  l as l25
} from "./chunk-RUXRAV72.js";
import {
  m as m16,
  s as s40
} from "./chunk-ESVCD7X5.js";
import {
  f as f20
} from "./chunk-O7B7MV7H.js";
import {
  H as H6,
  _ as _11,
  o as o37
} from "./chunk-NF2COQRF.js";
import {
  l as l23,
  u as u16
} from "./chunk-BC3GW7NA.js";
import {
  F as F13,
  I as I11,
  a as a32,
  m as m14,
  v as v12
} from "./chunk-37N7UY7F.js";
import {
  C as C10,
  s as s37
} from "./chunk-GM6POGRC.js";
import {
  h as h18,
  l as l22,
  n as n37,
  o as o36,
  y as y9
} from "./chunk-DEKAIZFC.js";
import "./chunk-QVPAZ7EL.js";
import {
  f as f21,
  l as l24
} from "./chunk-BW5RT4PN.js";
import {
  d as d21,
  i as i28
} from "./chunk-MIADLPIQ.js";
import {
  B as B3,
  D as D4,
  F as F10,
  U as U7
} from "./chunk-DB3QP4OO.js";
import {
  e as e28,
  n as n36,
  o as o33,
  z as z9
} from "./chunk-T62MZV3U.js";
import {
  f as f19
} from "./chunk-7NHQKERX.js";
import {
  S as S10,
  b as b4,
  e as e29,
  i as i24,
  s as s31,
  w as w15
} from "./chunk-7EPJSBI5.js";
import {
  s as s32,
  s2 as s33,
  t as t32,
  v as v11
} from "./chunk-SBSD57XC.js";
import {
  t as t31
} from "./chunk-4YFLUPDH.js";
import {
  u as u15,
  y as y8
} from "./chunk-7ZRUUF6B.js";
import {
  g as g11,
  h as h17,
  i as i25,
  r as r35
} from "./chunk-TJQ73ZDX.js";
import {
  A as A15,
  i as i26,
  t as t33
} from "./chunk-2TSOURFN.js";
import {
  m as m11
} from "./chunk-UOUZR2TX.js";
import "./chunk-FCJWVHPT.js";
import {
  e as e26,
  t as t29,
  z as z8
} from "./chunk-YDZG6FES.js";
import {
  d2 as d18,
  e as e27,
  i as i23,
  n as n35,
  o as o32,
  t as t30,
  u as u13
} from "./chunk-HTGM7KAM.js";
import "./chunk-ZAPLLPYK.js";
import {
  d as d19,
  u as u14
} from "./chunk-3VN6RF6P.js";
import "./chunk-7YCGPGGL.js";
import "./chunk-GPABU246.js";
import {
  d as d17,
  f as f18
} from "./chunk-UXOJL4UN.js";
import {
  a as a30
} from "./chunk-ZP577M7K.js";
import {
  r as r34
} from "./chunk-KILCBNKU.js";
import {
  g as g10,
  i as i22,
  u as u12
} from "./chunk-2KRMZDXT.js";
import {
  F as F12,
  c as c19,
  o as o31,
  t as t27
} from "./chunk-BLRS5QI4.js";
import {
  t as t23
} from "./chunk-23N5B2NF.js";
import {
  A as A12,
  E as E12,
  I as I8
} from "./chunk-BUKSB3RJ.js";
import "./chunk-Y3PBROKK.js";
import {
  O as O8,
  d as d16,
  h as h16,
  l as l20,
  m as m10,
  n as n34,
  o as o30,
  q as q4,
  r as r33,
  u as u11
} from "./chunk-7FGF24AQ.js";
import {
  A as A13,
  L as L6,
  N as N5,
  j as j6,
  l as l19,
  n2 as n33,
  o as o29
} from "./chunk-YOWAMJJI.js";
import {
  u as u10
} from "./chunk-PFDC65N2.js";
import "./chunk-6HOJZLKI.js";
import "./chunk-ZIIRSX6D.js";
import "./chunk-JQKL7AD5.js";
import {
  K as K3,
  t as t26
} from "./chunk-6WY3ZZYN.js";
import "./chunk-CS6BZGQO.js";
import "./chunk-YZTKL3LQ.js";
import {
  a as a28
} from "./chunk-I7EXY23J.js";
import "./chunk-SCHIU6CT.js";
import {
  E as E14,
  _ as _10,
  f as f17,
  he,
  i as i21,
  ie,
  m as m9,
  n as n31,
  o as o27,
  r as r29,
  r2 as r31,
  r4 as r32,
  s as s28,
  s2 as s29
} from "./chunk-XXN3TEOU.js";
import {
  J as J4,
  X as X3,
  n as n32
} from "./chunk-FIJZ6LYC.js";
import "./chunk-MUANV6E3.js";
import {
  $,
  ht
} from "./chunk-SFIT2AUF.js";
import {
  V as V4,
  n as n28
} from "./chunk-DBIFU6GO.js";
import {
  A as A14,
  M as M5,
  c as c18,
  i as i20,
  o2 as o28,
  t as t25,
  w as w14
} from "./chunk-V33FVMPT.js";
import {
  s as s30,
  t as t28
} from "./chunk-UGRKILUT.js";
import {
  G as G6,
  W as W5,
  Z as Z2,
  ls,
  ps,
  us
} from "./chunk-U67EYFX3.js";
import "./chunk-5GYSL2SB.js";
import "./chunk-3NWIYHNX.js";
import "./chunk-PLKG3UR7.js";
import "./chunk-BD4RGMMN.js";
import "./chunk-4BA5YJ7C.js";
import "./chunk-LBRZG7XH.js";
import {
  A as A10,
  A2 as A11,
  B as B4,
  C as C8,
  D as D5,
  D2 as D6,
  E as E10,
  F as F11,
  G as G7,
  H as H5,
  J as J3,
  K as K2,
  L as L5,
  N as N3,
  O as O7,
  P as P7,
  Q,
  R as R8,
  S as S8,
  S2 as S9,
  T as T10,
  T2 as T11,
  U as U6,
  V as V3,
  W as W6,
  X as X2,
  Y as Y3,
  _ as _9,
  a as a22,
  a2 as a26,
  b as b3,
  c as c16,
  d as d13,
  d2 as d15,
  f as f15,
  g as g9,
  h as h15,
  i as i17,
  j as j5,
  l as l18,
  m as m7,
  m2 as m8,
  p as p11,
  p2 as p12,
  q as q3,
  s as s26,
  s2 as s27,
  u as u9,
  w as w13,
  x as x12,
  y as y7,
  z as z7
} from "./chunk-5IRKUUA3.js";
import {
  t as t22
} from "./chunk-644IM3NW.js";
import {
  v as v10
} from "./chunk-TE7N6C3J.js";
import {
  st
} from "./chunk-WRC5WFEM.js";
import {
  E as E11,
  I as I7,
  a2 as a27
} from "./chunk-UYTAZUBJ.js";
import {
  C as C9
} from "./chunk-2EO2WRP7.js";
import "./chunk-IAWQREMS.js";
import {
  c as c17
} from "./chunk-EPDLDPS4.js";
import "./chunk-NBYHM3OO.js";
import "./chunk-CERU5LKM.js";
import {
  f as f16
} from "./chunk-JZVYLVFO.js";
import "./chunk-FAOMDC3K.js";
import {
  a as a29,
  t as t24
} from "./chunk-SCAYUERS.js";
import "./chunk-B76MSEZ4.js";
import "./chunk-ZYHVS2T2.js";
import {
  I as I10,
  n as n30,
  r as r30
} from "./chunk-XYSQCP5F.js";
import {
  E as E13,
  I as I9,
  N as N4,
  n as n29
} from "./chunk-W5D3JTKS.js";
import "./chunk-XACNEHDM.js";
import "./chunk-IRBH32SX.js";
import "./chunk-MPIXWRXJ.js";
import {
  o as o24
} from "./chunk-PC4A4CQR.js";
import {
  e as e25
} from "./chunk-VYGC2LVC.js";
import {
  a as a24,
  n as n26,
  n2 as n27
} from "./chunk-CXYYGJUL.js";
import {
  o as o23,
  r as r27
} from "./chunk-FJA4J75M.js";
import {
  n as n23,
  v as v9
} from "./chunk-AN3WFAN2.js";
import "./chunk-XKYCNHCM.js";
import {
  L as L4,
  d as d12,
  y as y6
} from "./chunk-YEDW7SLL.js";
import {
  t as t14
} from "./chunk-N4JKQR77.js";
import {
  S as S7,
  o as o15
} from "./chunk-BDX5TRUE.js";
import {
  A as A7,
  _ as _7,
  c as c10,
  l as l15
} from "./chunk-LIXBKTBN.js";
import {
  e as e23,
  f as f13,
  t as t17,
  u as u7
} from "./chunk-VDSNHCMM.js";
import {
  E as E8
} from "./chunk-6LC2JTLC.js";
import {
  s as s25
} from "./chunk-XM3YSFN6.js";
import {
  w as w8
} from "./chunk-NIZWDAMQ.js";
import {
  t as t15
} from "./chunk-DU3C7D26.js";
import "./chunk-YQALOTSV.js";
import "./chunk-T52K6PNI.js";
import {
  i as i12
} from "./chunk-UPDSQXLR.js";
import "./chunk-NOWEY45I.js";
import "./chunk-FNMOXP37.js";
import "./chunk-7BSXIYP2.js";
import "./chunk-ACTOBSLJ.js";
import {
  a as a20
} from "./chunk-XUU35WPC.js";
import "./chunk-6QR5R4JX.js";
import {
  c as c14,
  i as i16,
  n as n25,
  w as w10
} from "./chunk-KSA6GV6M.js";
import {
  R as R7,
  i as i15,
  x as x11
} from "./chunk-K4WBDIIJ.js";
import {
  A as A9,
  c as c13,
  f as f14,
  g as g8,
  l as l16,
  t as t20,
  w as w9
} from "./chunk-ROPKVK6V.js";
import {
  r as r26
} from "./chunk-KM375BNF.js";
import {
  u as u8
} from "./chunk-H3DKDGMJ.js";
import {
  c as c12
} from "./chunk-FB6EWBGE.js";
import "./chunk-3TDCCT2R.js";
import "./chunk-CWXDLB2P.js";
import "./chunk-Z2RTGLQI.js";
import {
  e as e22,
  i as i13,
  t as t16
} from "./chunk-V6CD66ZZ.js";
import {
  W as W3,
  _ as _6,
  a as a21,
  h as h12,
  l as l14,
  r as r23,
  s as s23
} from "./chunk-6FHMQNMS.js";
import "./chunk-5ZW42GDY.js";
import "./chunk-D7YAG5U3.js";
import "./chunk-LGDKASPG.js";
import "./chunk-YQDOKTNT.js";
import "./chunk-SH6HJSS2.js";
import {
  r as r25,
  t as t18
} from "./chunk-KFDARCTS.js";
import {
  T as T8,
  e2 as e20
} from "./chunk-TRGMWULG.js";
import {
  R as R6,
  n as n20,
  o as o17
} from "./chunk-WTPQKRQM.js";
import {
  I as I6,
  O as O5,
  T as T9,
  e as e19,
  e2 as e21,
  f as f12,
  g as g7,
  h2 as h11,
  n as n22,
  o2 as o19,
  r2 as r22,
  t as t19,
  v as v7
} from "./chunk-SMDDCTGQ.js";
import {
  E as E7
} from "./chunk-NU4UASX6.js";
import "./chunk-PKCLTDZO.js";
import {
  c as c15,
  v as v8
} from "./chunk-4YXJLES6.js";
import {
  c as c9
} from "./chunk-EHQZFPMP.js";
import {
  d as d11
} from "./chunk-VC3BY3DV.js";
import "./chunk-WH76OAIT.js";
import "./chunk-B4ONZAW2.js";
import "./chunk-JHDKOKT6.js";
import "./chunk-YLTVH2K4.js";
import "./chunk-FB4A6PBH.js";
import "./chunk-CG3URTR2.js";
import {
  s as s24
} from "./chunk-UX3LCC3X.js";
import "./chunk-AB23UNQC.js";
import "./chunk-RDWKBYTH.js";
import "./chunk-IBJTEQQG.js";
import {
  o as o20
} from "./chunk-SADO52IH.js";
import "./chunk-WVOBJDWI.js";
import {
  F as F9,
  W as W4
} from "./chunk-LIO6VZRI.js";
import "./chunk-7DFZCT3D.js";
import "./chunk-ASBUA7EG.js";
import "./chunk-FY4ZONHH.js";
import {
  h as h10
} from "./chunk-73PNWDTS.js";
import {
  o as o21
} from "./chunk-PKS3ZVLN.js";
import "./chunk-N3RXOITN.js";
import "./chunk-DOR4M5EA.js";
import {
  c as c11,
  h as h13,
  n as n24
} from "./chunk-3ROGWJVH.js";
import {
  A as A8,
  E as E9,
  O as O6,
  o as o22,
  r as r24
} from "./chunk-BUCIQGFS.js";
import "./chunk-CR5XNTAP.js";
import "./chunk-Z6IKMUOC.js";
import "./chunk-PV5KBAYL.js";
import "./chunk-YVVROPAO.js";
import "./chunk-2EWAI4LP.js";
import "./chunk-DNEN337Y.js";
import {
  t as t13,
  u as u6
} from "./chunk-FKARCCEM.js";
import {
  a as a19,
  s as s21
} from "./chunk-MHIYPQCZ.js";
import "./chunk-IWA3Q52A.js";
import "./chunk-4KPDZI74.js";
import "./chunk-WA4HIOYR.js";
import "./chunk-BFVOSCOB.js";
import "./chunk-QALEHGSZ.js";
import "./chunk-GYNE34WO.js";
import {
  e as e24
} from "./chunk-QS45OHBM.js";
import "./chunk-IVMJPIWO.js";
import "./chunk-3I3GE5YW.js";
import "./chunk-WRFNQB7U.js";
import "./chunk-UUW6REOV.js";
import "./chunk-2US5EKDI.js";
import {
  s as s22
} from "./chunk-Z3NHJA5D.js";
import {
  i2 as i14
} from "./chunk-BO2REVMA.js";
import {
  n as n21,
  o as o18
} from "./chunk-V66LHQVK.js";
import {
  l2 as l12,
  n3 as n17,
  t as t12
} from "./chunk-UAIJDJWO.js";
import "./chunk-2CKXYQCA.js";
import {
  D as D3,
  N as N2,
  O as O4,
  a as a17,
  i as i11,
  n as n18,
  s as s19
} from "./chunk-JP7O2ZWE.js";
import "./chunk-4Y7ZTMES.js";
import "./chunk-ODTMOFOP.js";
import "./chunk-AHBQVOT4.js";
import {
  W as W2
} from "./chunk-Z6R62RNV.js";
import {
  I as I5,
  L as L3,
  P as P5,
  k as k7,
  l as l11,
  p2 as p9,
  v as v5
} from "./chunk-3LLZ72VA.js";
import "./chunk-4SIKLJSS.js";
import "./chunk-AER5JAFS.js";
import "./chunk-FKEHFW5J.js";
import {
  a as a16
} from "./chunk-7HZ72XIE.js";
import "./chunk-ALPCRJS4.js";
import {
  o as o13,
  r as r17
} from "./chunk-WDZ5AAFL.js";
import "./chunk-XL7RF4A6.js";
import "./chunk-ZL3HOHNK.js";
import "./chunk-PR2OEILG.js";
import "./chunk-67BT7WH5.js";
import "./chunk-TDXHXKUI.js";
import {
  d as d9,
  h as h8,
  x as x9
} from "./chunk-JPKFB2QL.js";
import "./chunk-KSBQD24F.js";
import {
  t as t11
} from "./chunk-UM64E5NS.js";
import {
  f as f10
} from "./chunk-2SZNVP5H.js";
import "./chunk-2XKILFME.js";
import "./chunk-G4LSNP77.js";
import "./chunk-S5RIUWET.js";
import "./chunk-MVWFPLOX.js";
import "./chunk-X3YW4YOG.js";
import "./chunk-IG234GCS.js";
import "./chunk-WTKN55TU.js";
import "./chunk-TDPKDZC3.js";
import "./chunk-M5UHI5WR.js";
import "./chunk-BA6PBZHC.js";
import "./chunk-G65FMKS5.js";
import {
  A as A5,
  T as T4,
  d as d8,
  e as e13,
  m as m6,
  o as o10,
  u as u4,
  w as w6
} from "./chunk-SNFNEEDE.js";
import {
  r as r15
} from "./chunk-M7PTINEZ.js";
import {
  H as H4
} from "./chunk-Z7LZRT7C.js";
import {
  s as s18,
  u as u3
} from "./chunk-SGBMUZSF.js";
import "./chunk-3TMT4LDG.js";
import "./chunk-OX5TJXHM.js";
import {
  t as t9,
  y as y5
} from "./chunk-BDWD2ZNU.js";
import "./chunk-FF5LS3YE.js";
import {
  B as B2,
  C as C5,
  D as D2,
  E as E5,
  F as F6,
  G as G5,
  I as I4,
  L,
  M as M4,
  P as P4,
  R as R4,
  T as T3,
  U as U4,
  _ as _3
} from "./chunk-BCDDCNQ2.js";
import {
  i as i9,
  x as x8
} from "./chunk-FIBWCATC.js";
import "./chunk-D3BOGOKY.js";
import "./chunk-QOWAKGE4.js";
import {
  P as P6,
  T as T7,
  ne,
  re,
  se
} from "./chunk-GZTS5346.js";
import {
  A as A6
} from "./chunk-EK3Y2IYO.js";
import {
  s as s20
} from "./chunk-6S2FCH6S.js";
import {
  n as n19,
  r as r20
} from "./chunk-BZL5MAFP.js";
import "./chunk-XY26YCFX.js";
import {
  a as a14,
  n as n16,
  r as r18
} from "./chunk-3TTW7E7W.js";
import {
  C as C6,
  F as F8,
  K,
  L as L2,
  R as R5,
  T as T6,
  U as U5,
  W,
  _ as _5,
  g as g6,
  h as h9,
  k as k6,
  l as l10,
  q2,
  x as x10
} from "./chunk-FOEAKQNX.js";
import {
  F as F7,
  T as T5,
  Y as Y2,
  Z,
  _ as _4,
  a as a15,
  c as c7,
  d as d10,
  f as f11,
  i as i10,
  k2 as k5,
  p as p8,
  r as r19,
  tt,
  w as w7,
  z as z5
} from "./chunk-LEDSC236.js";
import "./chunk-NETCTS4Y.js";
import {
  S as S6
} from "./chunk-OKABUMQT.js";
import {
  e as e15,
  o as o11,
  t as t10
} from "./chunk-CW7LIPBH.js";
import {
  e as e16
} from "./chunk-TYOIANOD.js";
import {
  e as e14,
  r as r16
} from "./chunk-VN2IXVGV.js";
import {
  E as E6
} from "./chunk-WWUAHPIM.js";
import {
  O as O3
} from "./chunk-BN6X2OXK.js";
import "./chunk-FVR25IMN.js";
import "./chunk-EV77QZBT.js";
import "./chunk-QZ6WR57P.js";
import "./chunk-467UETSR.js";
import {
  r as r10,
  s as s17
} from "./chunk-SHFLRM67.js";
import {
  e as e12,
  l as l9,
  n as n14,
  r as r11,
  t as t8
} from "./chunk-YGUWDSEH.js";
import {
  n as n12
} from "./chunk-6RU2CUTK.js";
import "./chunk-GOK4EI36.js";
import "./chunk-LO3LAMAS.js";
import "./chunk-ZWFMUHG3.js";
import "./chunk-EFRTD25L.js";
import "./chunk-EAGDM3GO.js";
import "./chunk-GSS6WNQU.js";
import "./chunk-C2EHS6UI.js";
import {
  C as C7,
  U as U8,
  a as a23,
  a2 as a25,
  c as c20,
  e as e30,
  h as h19,
  i as i19,
  i2 as i27,
  i3 as i30,
  m as m12,
  m2 as m13,
  o as o35,
  r as r36,
  r2 as r37,
  s as s34,
  s2 as s36,
  t as t21,
  t2 as t35,
  t3 as t38,
  w as w11,
  w2 as w12,
  z as z6
} from "./chunk-CNMVDP2Z.js";
import {
  M as M6,
  a as a34,
  n as n39,
  r as r39,
  w as w17
} from "./chunk-G3BNSWI4.js";
import {
  d as d4,
  l as l17
} from "./chunk-ICGBQNK3.js";
import "./chunk-AAWIXPYE.js";
import {
  o2 as o26,
  r as r28
} from "./chunk-NEBQZ6AZ.js";
import {
  _ as _8,
  d as d14,
  i as i18
} from "./chunk-7JB7RSO7.js";
import {
  o as o25
} from "./chunk-CEUJOC5P.js";
import "./chunk-F4ILXEXC.js";
import "./chunk-QTN4N5B5.js";
import "./chunk-G3Q2URFK.js";
import {
  p as p10
} from "./chunk-F6TKAVSX.js";
import {
  e as e18,
  r as r21
} from "./chunk-D5NSNTGJ.js";
import {
  o as o16
} from "./chunk-63ERNIOV.js";
import {
  i as i4,
  o as o4,
  r as r7,
  s as s10
} from "./chunk-XABSD6D5.js";
import {
  e as e17
} from "./chunk-DTEODQ6R.js";
import "./chunk-QNFDBY7V.js";
import "./chunk-RVQLSA5X.js";
import "./chunk-5KLICR5E.js";
import "./chunk-YYTXJF6W.js";
import {
  C as C4,
  F as F5,
  I as I3,
  c as c6,
  g as g5
} from "./chunk-KRCNIFX2.js";
import {
  I as I2
} from "./chunk-LVVQ2RQY.js";
import "./chunk-M6OG7C2T.js";
import {
  r as r12
} from "./chunk-GOK5MP3B.js";
import {
  A as A4,
  a as a12,
  k as k4,
  m as m5,
  o as o9,
  r as r13
} from "./chunk-NLWV7Q6F.js";
import "./chunk-DSWGERIY.js";
import "./chunk-Y2ZDD3I4.js";
import {
  a as a18,
  l as l13,
  o as o14
} from "./chunk-RVS5HU2K.js";
import {
  a as a13,
  f as f9,
  o as o12,
  p as p7,
  u as u5
} from "./chunk-JB7FDW5N.js";
import {
  f as f8,
  n as n15,
  r as r14
} from "./chunk-SS3YG6J3.js";
import {
  v as v6
} from "./chunk-NVGPNIR6.js";
import {
  c as c8
} from "./chunk-B4D7M7HT.js";
import "./chunk-3T2ETA25.js";
import "./chunk-5IYCCZ54.js";
import "./chunk-JLSXEPY6.js";
import {
  d as d7
} from "./chunk-VMTVUE47.js";
import {
  c as c5
} from "./chunk-GDZM4A6K.js";
import {
  h as h14
} from "./chunk-XWGNMTES.js";
import "./chunk-6NNEHJYI.js";
import {
  An,
  Cn,
  Ee,
  Hn,
  In,
  Tn,
  ce,
  gn,
  kn,
  nn,
  yn,
  zn
} from "./chunk-BNBT4QTW.js";
import "./chunk-3FQOSG5O.js";
import "./chunk-W4KI5YEI.js";
import "./chunk-CAFGOFIE.js";
import {
  B,
  C as C3,
  R as R3,
  b as b2,
  c as c3,
  e as e11,
  g as g4,
  h as h5,
  i as i7,
  k as k3,
  l as l8,
  m as m4,
  n as n10,
  r as r9,
  x as x6,
  z as z3
} from "./chunk-7EG7BYWF.js";
import {
  h2 as h7,
  p as p6,
  w as w5,
  z as z4
} from "./chunk-JNDFAMXY.js";
import "./chunk-NTEKJWGF.js";
import "./chunk-TFIKV5RU.js";
import "./chunk-KW6QQDGN.js";
import {
  E as E4,
  I,
  N,
  O as O2,
  P as P3,
  S as S5,
  a as a10,
  h as h4,
  i as i6,
  k as k2,
  o as o8,
  s as s14,
  w as w4
} from "./chunk-AQ7R6V4L.js";
import {
  c as c4,
  d as d6,
  i as i8,
  p as p5,
  s as s16,
  x as x7
} from "./chunk-DOQ3SAAR.js";
import "./chunk-4BXK4H4L.js";
import "./chunk-SLVNG7FV.js";
import {
  t as t7
} from "./chunk-OZXJDVTE.js";
import "./chunk-UXVZ4PI3.js";
import "./chunk-DTYFMKYK.js";
import "./chunk-7S7LC3XK.js";
import "./chunk-XR4HIGQP.js";
import "./chunk-AUKRB7YY.js";
import "./chunk-KK5CYPXW.js";
import "./chunk-JNO3YVNK.js";
import {
  n as n11
} from "./chunk-DU6E4DU3.js";
import {
  t as t6
} from "./chunk-DKJBDKGA.js";
import {
  n as n13
} from "./chunk-4CZO65BK.js";
import {
  _ as _2,
  d as d5
} from "./chunk-SVCGLUNW.js";
import "./chunk-3KEIFTQ6.js";
import "./chunk-DEZCXTA3.js";
import {
  h as h6
} from "./chunk-RRJGZKNX.js";
import "./chunk-PL5Q4C6Y.js";
import {
  a as a11,
  f as f7,
  l as l7,
  s as s15,
  y as y4
} from "./chunk-A6VKJXIH.js";
import "./chunk-KFSY6ZZH.js";
import {
  E as E3,
  V as V2
} from "./chunk-7EQSYZHW.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-GGOVZ2GK.js";
import "./chunk-HIPTG7BJ.js";
import "./chunk-WLWP35G2.js";
import {
  o as o7
} from "./chunk-JPW73GY2.js";
import "./chunk-HXPVVSLV.js";
import "./chunk-4OR73Y2R.js";
import {
  C as C2,
  E as E2,
  F as F4,
  G as G4,
  H as H3,
  J as J2,
  M as M3,
  R as R2,
  U as U2,
  a as a7,
  b,
  c as c2,
  e as e9,
  f as f5,
  i as i5,
  m as m3,
  o as o6,
  p as p4,
  q,
  s as s13,
  v as v4,
  x as x5,
  y as y3
} from "./chunk-EKJ2DJIR.js";
import {
  F as F3,
  M,
  i as i3,
  k,
  l as l4,
  m as m2,
  o as o3,
  s as s9
} from "./chunk-TEHNQYQD.js";
import {
  A as A2,
  E,
  F as F2,
  G,
  H,
  J,
  O,
  P,
  S as S2,
  U,
  V,
  X,
  Y,
  _,
  e as e7,
  g as g2,
  j as j2,
  o as o2,
  p as p2,
  r as r5,
  s as s7,
  u as u2,
  v as v3,
  x as x2,
  z as z2
} from "./chunk-TPJLFGOT.js";
import {
  e as e6,
  f as f2,
  i as i2,
  n as n7,
  r as r4,
  t as t5
} from "./chunk-CQX57DED.js";
import {
  D,
  G as G2,
  a as a5,
  a2 as a6,
  j as j3,
  l as l3,
  r2 as r6,
  s as s8,
  w as w2
} from "./chunk-3CQBBMMD.js";
import "./chunk-2CTB7MKH.js";
import "./chunk-Z2ZUNW5S.js";
import "./chunk-7L7Z2HXM.js";
import "./chunk-75NKPXTR.js";
import "./chunk-EUVARFSM.js";
import {
  M as M2,
  e as e8
} from "./chunk-3VUFACNT.js";
import {
  d as d3,
  f as f3,
  f2 as f4,
  g as g3,
  p as p3,
  x as x3,
  x2 as x4
} from "./chunk-ZEEBL7ZN.js";
import {
  A2 as A3,
  G as G3,
  H as H2,
  P as P2,
  R,
  S as S3,
  S2 as S4,
  T as T2,
  o as o5,
  r as r8
} from "./chunk-RTDN6KAT.js";
import {
  s as s12
} from "./chunk-GJ7PJ7XG.js";
import {
  e as e10
} from "./chunk-C5FJDP6J.js";
import "./chunk-AHL6RC7E.js";
import "./chunk-RLLQRKO4.js";
import "./chunk-XUY2GLHG.js";
import "./chunk-JYZSPYYW.js";
import "./chunk-5EXFDBQJ.js";
import "./chunk-57CHUY45.js";
import "./chunk-SJ2GJCS2.js";
import {
  U as U3,
  a as a8,
  f as f6,
  h as h3,
  j as j4,
  l as l6,
  w as w3
} from "./chunk-H7RDAEPY.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-S5OISW44.js";
import {
  n as n8
} from "./chunk-7KH4CLS5.js";
import {
  a as a9,
  n as n9
} from "./chunk-WCHO7VLT.js";
import "./chunk-JL3TJGVW.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-43LWRDQS.js";
import "./chunk-R6YKST3K.js";
import {
  vt
} from "./chunk-ZJEWQGHG.js";
import {
  s as s11
} from "./chunk-YGB42LDG.js";
import "./chunk-F3KGLZDZ.js";
import {
  l as l5
} from "./chunk-MP6GH2AC.js";
import {
  A,
  F,
  e2 as e5,
  m,
  n3 as n4,
  n5,
  r3,
  s2 as s5,
  t,
  t2 as t3,
  t5 as t4,
  u2 as u,
  v,
  y2 as y,
  y3 as y2
} from "./chunk-V76KGJFU.js";
import {
  a2 as a4,
  e as e3,
  h as h2,
  l as l2,
  n as n2
} from "./chunk-HB2SQRT2.js";
import "./chunk-U3J7253Q.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-ZWUBORGT.js";
import {
  S,
  d as d2,
  e as e4,
  n as n6,
  v as v2
} from "./chunk-3R7FAT25.js";
import {
  C,
  T,
  a as a3,
  c,
  d,
  g,
  j,
  p,
  r as r2,
  s as s6,
  w
} from "./chunk-7I33FAWS.js";
import {
  e as e2,
  f,
  i,
  l,
  n,
  o,
  r,
  t as t2
} from "./chunk-DWOEYHKS.js";
import {
  s2 as s3,
  s3 as s4
} from "./chunk-HMVAPW5X.js";
import {
  a as a2
} from "./chunk-IYZKKFJM.js";
import {
  a,
  h,
  has,
  n as n3,
  s,
  s2,
  x,
  z
} from "./chunk-JZJWZ6DN.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/views/support/GroundViewElevationSampler.js
var m17 = class extends n8.EventedAccessor {
  constructor(e65) {
    super(e65), this.demResolution = { min: -1, max: -1 }, this.noDataValue = l18;
  }
  initialize() {
    this.view.basemapTerrain.on("elevation-change", () => this.emit("changed", {}));
  }
  get extent() {
    const e65 = this.view.basemapTerrain;
    if (null == e65 || null == e65.extent || null == e65.spatialReference)
      return null;
    const t68 = c2(e65.extent, e65.spatialReference);
    return t68.zmin = e65.visibleElevationBounds.min, t68.zmax = e65.visibleElevationBounds.max, t68;
  }
  get spatialReference() {
    var _a;
    return ((_a = this.view.basemapTerrain) == null ? void 0 : _a.spatialReference) ?? f3.WGS84;
  }
  elevationAt(e65, t68) {
    var _a;
    if (null == this.extent || !e8(this.extent, e65, t68)) {
      const o61 = null != this.extent ? `${this.extent.xmin}, ${this.extent.ymin}, ${this.extent.xmax}, ${this.extent.ymax}` : null;
      return s3.getLogger(this).warn("#elevationAt()", `Point used to sample elevation (${e65}, ${t68}) is outside of the sampler extent (${o61})`), this.noDataValue;
    }
    return ((_a = this.view.elevationProvider) == null ? void 0 : _a.getElevation(e65, t68, 0, this.spatialReference, "ground")) ?? this.noDataValue;
  }
  queryElevation(e65) {
    return u6(e65.clone(), this);
  }
};
e([y2({ readOnly: true })], m17.prototype, "demResolution", void 0), e([y2({ readOnly: true })], m17.prototype, "extent", null), e([y2({ readOnly: true })], m17.prototype, "noDataValue", void 0), e([y2()], m17.prototype, "spatialReference", null), e([y2({ constructOnly: true })], m17.prototype, "view", void 0), m17 = e([a4("esri.views.support.GroundViewElevationSampler")], m17);
var u18 = m17;

// node_modules/@arcgis/core/views/GroundView.js
var l26 = class extends m {
  constructor(e65) {
    super(e65), this.view = null, this.layerViews = new V2();
  }
  initialize() {
    this.addHandles(f6(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.ground;
    }, (e65) => e65.load())), this.addHandles(this.layerViews.on("after-changes", () => this._layerViewsAfterChangesHandler()));
  }
  destroy() {
    this.removeAllHandles(), this._set("view", null);
    for (const e65 of this.layerViews)
      e65.destroy();
    this.layerViews.length = 0;
  }
  get elevationSampler() {
    return this.view ? "2d" === this.view.type ? null : this.view.ready && this.view.basemapTerrain && this.view.basemapTerrain.ready ? new u18({ view: this.view }) : null : null;
  }
  get updating() {
    return !this.suspended && this.layerViews.some((e65) => e65.updating);
  }
  get suspended() {
    return !this.view || this.view.suspended;
  }
  _layerViewsAfterChangesHandler() {
    this.removeHandles("updating"), this.addHandles(this.layerViews.map((e65) => l6(() => e65.updating, () => this._updateUpdating(), U3)).toArray(), "updating"), this._updateUpdating();
  }
  _updateUpdating() {
    this.notifyChange("updating");
  }
};
e([y2({ readOnly: true })], l26.prototype, "elevationSampler", null), e([y2({ type: Boolean, readOnly: true })], l26.prototype, "updating", null), e([y2({ constructOnly: true })], l26.prototype, "view", void 0), e([y2({ type: V2, readOnly: true })], l26.prototype, "layerViews", void 0), e([y2({ readOnly: true })], l26.prototype, "suspended", null), l26 = e([a4("esri.views.GroundView")], l26);
var d26 = l26;

// node_modules/@arcgis/core/views/3d/layerViewModuleImportUtils.js
var r40 = () => import("./TileLayerView3D-FCTNM5HC.js");
var i31 = () => import("./ElevationLayerView3D-6G5SSZQB.js");
var a35 = { "base-dynamic": () => import("./BaseDynamicLayerView3D-7L2OQ6PC.js"), "base-elevation": i31, "base-tile": r40, "bing-maps": r40, "building-scene": () => import("./BuildingSceneLayerView3D-DDNMLW5H.js"), csv: () => import("./CSVLayerView3D-TCTBCPOM.js"), dimension: () => import("./DimensionLayerView3D-RUK45EXJ.js"), elevation: i31, feature: () => import("./FeatureLayerView3D-74EWNWGH.js"), geojson: () => import("./GeoJSONLayerView3D-4HN43JJ5.js"), graphics: () => import("./GraphicsLayerView3D-Z46WILX2.js"), group: () => import("./GroupLayerView-YOR7U2HW.js"), imagery: () => import("./ImageryLayerView3D-3BPHJNXO.js"), "integrated-mesh": () => import("./IntegratedMeshLayerView3D-LORBVEP3.js"), "line-of-sight": () => import("./LineOfSightLayerView3D-JMVWL5KX.js"), "map-image": () => import("./MapImageLayerView3D-PL5RTRQD.js"), media: () => import("./MediaLayerView3D-AOE57W5R.js"), "ogc-feature": () => import("./OGCFeatureLayerView3D-AUMWFSUH.js"), "open-street-map": r40, "oriented-imagery": () => import("./FeatureLayerView3D-74EWNWGH.js"), "point-cloud": () => import("./PointCloudLayerView3D-VIPX2HWV.js"), voxel: () => import("./VoxelLayerView3D-5BIMFPPZ.js"), route: () => import("./RouteLayerView3D-G4HW67V4.js"), scene: (e65) => null == e65.profile || "mesh-pyramids" === e65.profile ? import("./SceneLayerView3D-GU5TLAHR.js") : import("./SceneLayerGraphicsView3D-L6ADXGQI.js"), stream: () => import("./StreamLayerView3D-ZCGU5RGY.js"), tile: r40, "imagery-tile": () => import("./ImageryTileLayerView3D-XHIZIOPJ.js"), "vector-tile": () => import("./VectorTileLayerView3D-AUKEP3CT.js"), wcs: () => import("./ImageryTileLayerView3D-XHIZIOPJ.js"), "web-tile": r40, wfs: () => import("./WFSLayerView3D-UVWRVIJA.js"), wms: () => import("./WMSLayerView3D-YRAIIMDH.js"), wmts: () => import("./WMTSLayerView3D-YGHNEPM7.js"), "geo-rss": null, kml: null, "knowledge-graph": null, "link-chart": null, "knowledge-graph-sublayer": null, "map-notes": null, "subtype-group": null, unknown: null, unsupported: null, video: null };
function s41(r62) {
  const i60 = r62.declaredClass ? r62.declaredClass.slice(r62.declaredClass.lastIndexOf(".") + 1) : "Unknown", a67 = i60.replaceAll(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
  return new s4(`${a67}:view-not-supported`, `${i60} is not supported in 3D`);
}
var l27 = { hasLayerViewModule: (e65) => null != a35[e65.type], importLayerView: (e65) => {
  const r62 = a35[e65.type];
  if (null == r62)
    throw s41(e65);
  return r62(e65);
} };

// node_modules/@arcgis/core/views/3d/analysis/AnalysisViewManager3D.js
var y10 = "analyses-owner-handles";
var _12;
var p14;
!function(e65) {
  e65[e65.PENDING = 0] = "PENDING", e65[e65.CREATED = 1] = "CREATED";
}(_12 || (_12 = {})), function(e65) {
  e65[e65.ADDED = 0] = "ADDED", e65[e65.REMOVED = 1] = "REMOVED";
}(p14 || (p14 = {}));
var V5 = class extends d7 {
  constructor(e65) {
    super(e65), this._allAnalysisViews = new V2(), this._creatingViewCount = 0, this._items = /* @__PURE__ */ new Map(), this._scheduledUpdateHandle = null, this._attachedToViewResolver = A16(), this._analysisModules = { "area-measurement": { module: null }, dimension: { module: null }, "direct-line-measurement": { module: null }, "line-of-sight": { module: null }, slice: { module: null } };
  }
  destroy() {
    this._disconnectOwners(), this._attachedToViewResolver.reject(c("AnalysisViewManager was destroyed"));
  }
  attach() {
    this._connectOwners(), this._attachedToViewResolver.resolve();
  }
  detach() {
    this._disconnectOwners(), this._attachedToViewResolver.reject(c()), this._attachedToViewResolver = A16();
  }
  get updating() {
    return !this.view.ready || 0 !== this._creatingViewCount || this._allAnalysisViews.some((e65) => e65.updating);
  }
  get testInfo() {
    return { allAnalysisViews: this._allAnalysisViews };
  }
  async whenAnalysisView(e65) {
    await this._attachedToViewResolver.promise;
    const s69 = this._items.get(e65);
    if (null == s69 || s69.state.list === p14.REMOVED) {
      throw new s4("AnalysisViewManager:no-analysisview-for-analysis", "The analysis has not been added to view.analyses", { analysis: e65 });
    }
    return s69.createAnalysisViewTask.promise;
  }
  _connectOwners() {
    this.handles.add(this._connectAnalysesCollection(this.view.analyses), y10);
  }
  _disconnectOwners() {
    this.handles.remove(y10), this._update(), this._creatingViewCount = 0;
  }
  _connectAnalysesCollection(e65) {
    for (const i60 of e65)
      this._addAnalysis(i60);
    const s69 = e65.on("after-add", (e66) => this._addAnalysis(e66.item)), t68 = e65.on("after-remove", (e66) => this._removeAnalysis(e66.item));
    return { remove: () => {
      s69.remove(), t68.remove();
      for (const s70 of e65)
        this._removeAnalysis(s70);
    } };
  }
  _addAnalysis(e65) {
    const t68 = this._items.get(e65);
    if (null == t68) {
      const t69 = { state: { view: _12.PENDING, list: p14.ADDED }, analysis: e65, view: null, createAnalysisViewTask: null };
      this._items.set(e65, t69), t69.createAnalysisViewTask = d5((e66) => this._createAnalysisViewPromise(t69, e66));
    } else
      t68.state.list = p14.ADDED;
  }
  _removeAnalysis(e65) {
    const s69 = this._items.get(e65);
    null != s69 ? (s69.state.list = p14.REMOVED, this._scheduleUpdate()) : s3.getLogger(this).error("Trying to remove analysis which was not added");
  }
  _scheduleUpdate() {
    null == this._scheduledUpdateHandle && (this._scheduledUpdateHandle = v(() => this._update()));
  }
  _update() {
    this._scheduledUpdateHandle = o(this._scheduledUpdateHandle), this._items.forEach((e65) => {
      if (e65.state.list === p14.REMOVED)
        switch (this._items.delete(e65.analysis), e65.state.view) {
          case _12.PENDING:
            e65.createAnalysisViewTask = e2(e65.createAnalysisViewTask);
            break;
          case _12.CREATED:
            null != e65.view && (this._allAnalysisViews.remove(e65.view), e65.view = l(e65.view), e65.createAnalysisViewTask = null);
        }
    });
  }
  async _createAnalysisViewPromise(e65, s69) {
    const t68 = e65.analysis, i60 = t68.type, a67 = this._analysisModules[i60];
    if (this._creatingViewCount += 1, null == a67.module)
      try {
        a67.module = await this._loadAnalysisModule(i60);
      } catch (o61) {
        throw this._creatingViewCount -= 1, o61;
      }
    if (a3(s69))
      throw this._creatingViewCount -= 1, c("AnalysisView creation aborted");
    const n77 = new a67.module.default({ analysis: t68, view: this.view });
    try {
      await n77.when();
    } catch (o61) {
      throw this._creatingViewCount -= 1, o61;
    }
    if (a3(s69))
      throw this._creatingViewCount -= 1, n77.destroy(), c("AnalysisView creation aborted");
    return e65.view = n77, e65.state.view = _12.CREATED, this._allAnalysisViews.add(n77), this._creatingViewCount -= 1, n77;
  }
  _loadAnalysisModule(e65) {
    switch (e65) {
      case "area-measurement":
        return import("./AreaMeasurementAnalysisView3D-S7AUJ2VL.js");
      case "dimension":
        return import("./DimensionAnalysisView3D-TUICDLM3.js");
      case "direct-line-measurement":
        return import("./DirectLineMeasurementAnalysisView3D-7ZDFNYEQ.js");
      case "line-of-sight":
        return import("./LineOfSightAnalysisView3D-CSAEZIHO.js");
      case "slice":
        return import("./SliceAnalysisView3D-RFZ7XL52.js");
    }
  }
};
function A16() {
  const e65 = C();
  return e65.promise.catch(() => {
  }), e65;
}
e([y2()], V5.prototype, "updating", null), e([y2({ constructOnly: true })], V5.prototype, "view", void 0), e([y2()], V5.prototype, "_allAnalysisViews", void 0), e([y2()], V5.prototype, "_creatingViewCount", void 0), V5 = e([a4("esri.views.3d.analysis.AnalysisViewManager3D")], V5);
var v13 = V5;

// node_modules/@arcgis/core/views/3d/state/Constraints.js
var c22 = class extends m {
  constructor(t68) {
    super(t68), this.collision = new y11(), this.distance = 1 / 0, this.minimumPoiDistance = 4, this.tilt = null;
  }
  get altitude() {
    return this.mode === l13.Local ? null : this._get("altitude") || null;
  }
  set altitude(t68) {
    this.mode !== l13.Local ? this._set("altitude", t68) : s3.getLogger(this).warn("Altitude constraint is ignored in local scenes");
  }
  clampAltitude(t68) {
    return this.altitude ? i3(t68, this.altitude.min, this.altitude.max) : t68;
  }
  clampTilt(t68, e65) {
    if (!this.tilt)
      return e65;
    const i60 = this.tilt(t68);
    return i3(e65, i60.min, i60.max);
  }
  clampDistance(t68) {
    return Math.min(t68, this.distance);
  }
  createDefaultTilt() {
    return this.mode === l13.Local ? this._createDefaultTiltLocal() : this._createDefaultTiltGlobal();
  }
  createConstantMaxTilt(t68) {
    return (e65, i60 = h20) => (i60.min = d27.min, i60.max = t68, i60);
  }
  _createDefaultTiltLocal() {
    const t68 = this.collision.enabled ? U5([[4e3, d27.max], [1e4, M(88)], [6e6, M(88)]]) : () => d27.max;
    return (e65, i60 = h20) => (i60.min = d27.min, i60.max = t68(e65), i60);
  }
  _createDefaultTiltGlobal() {
    const t68 = this.collision.enabled ? U5([[4e3, d27.max], [5e4, M(88)], [6e6, M(88)], [2e7, d27.min]]) : U5([[3e5, d27.max], [3e6, M(88)], [6e6, M(88)], [2e7, d27.min]]);
    return (e65, i60 = h20) => (i60.min = d27.min, i60.max = t68(e65), i60);
  }
};
function p15(t68) {
  return { min: -2e5, max: 4 * t68.radius };
}
e([y2()], c22.prototype, "altitude", null), e([y2({ readOnly: true })], c22.prototype, "collision", void 0), e([y2()], c22.prototype, "distance", void 0), e([y2({ readOnly: true })], c22.prototype, "minimumPoiDistance", void 0), e([y2()], c22.prototype, "tilt", void 0), e([y2({ constructOnly: true })], c22.prototype, "mode", void 0), c22 = e([a4("esri.views.3d.state.Constraints")], c22);
var u19 = p15(s12);
var d27 = { min: M(0.5), max: M(179.5) };
var h20 = { min: 0, max: 0 };
var y11 = class extends m {
  constructor() {
    super(...arguments), this.enabled = true, this.elevationMargin = 5;
  }
};
e([y2({ type: Boolean })], y11.prototype, "enabled", void 0), e([y2({ type: Number })], y11.prototype, "elevationMargin", void 0), y11 = e([a4("esri.views.3d.state.Constraints.CollisionConstraint")], y11);

// node_modules/@arcgis/core/views/3d/constraints/AltitudeConstraint.js
var p16 = class extends m {
  constructor() {
    super(...arguments), this.min = u19.min, this.max = u19.max;
  }
};
e([y2({ type: Number })], p16.prototype, "min", void 0), e([y2({ type: Number })], p16.prototype, "max", void 0), p16 = e([a4("esri.views.3d.constraints.AltitudeConstraint")], p16);

// node_modules/@arcgis/core/views/3d/constraints/ClipDistanceConstraint.js
var o38 = class extends m {
  constructor() {
    super(...arguments), this.mode = "auto";
  }
  get near() {
    return this._get("near");
  }
  set near(t68) {
    this._set("near", t68), t68 >= this._get("far") && (this.far = t68 + 1e-9), this.mode = "manual";
  }
  castNear(t68) {
    return Math.max(1e-8, t68);
  }
  get far() {
    return this._get("far");
  }
  set far(t68) {
    this._set("far", t68), t68 <= this._get("near") && (this.near = t68 - 1e-9), this.mode = "manual";
  }
  castFar(t68) {
    return Math.max(1e-8, t68);
  }
  autoUpdate(t68, r62) {
    "auto" === this.mode && (this._get("near") !== t68 && this._set("near", t68), this._get("far") !== r62 && this._set("far", r62));
  }
};
e([y2({ type: Number, value: 1e-8 })], o38.prototype, "near", null), e([s11("near")], o38.prototype, "castNear", null), e([y2({ type: Number, value: 1e-8 })], o38.prototype, "far", null), e([s11("far")], o38.prototype, "castFar", null), e([y2({ type: ["auto", "manual"] })], o38.prototype, "mode", void 0), o38 = e([a4("esri.views.3d.constraints.ClipDistanceConstraint")], o38);

// node_modules/@arcgis/core/views/3d/constraints/TiltConstraint.js
var c23 = { min: m2(d27.min), max: m2(d27.max) };
var p17 = class extends m {
  constructor() {
    super(...arguments), this.mode = "auto";
  }
  get max() {
    return this._get("max");
  }
  set max(t68) {
    this._set("max", t68), this.mode = "manual";
  }
  castMax(t68) {
    return i3(t68, c23.min, c23.max);
  }
  autoUpdate(t68) {
    "auto" === this.mode && this._get("max") !== t68 && this._set("max", t68);
  }
};
e([y2({ type: ["auto", "manual"] })], p17.prototype, "mode", void 0), e([y2({ type: Number, value: c23.max })], p17.prototype, "max", null), e([s11("max")], p17.prototype, "castMax", null), p17 = e([a4("esri.views.3d.constraints.TiltConstraint")], p17);

// node_modules/@arcgis/core/views/3d/constraints/Constraints.js
var c24 = class extends m {
  constructor() {
    super(...arguments), this.tilt = new p17(), this.altitude = new p16(), this.clipDistance = new o38();
  }
};
e([y2({ type: p17 })], c24.prototype, "tilt", void 0), e([y2({ type: p16 })], c24.prototype, "altitude", void 0), e([y2({ type: o38 })], c24.prototype, "clipDistance", void 0), c24 = e([a4("esri.views.3d.constraints.Constraints")], c24);

// node_modules/@arcgis/core/webscene/SunLighting.js
var d28;
var i32 = d28 = class extends l5 {
  constructor(e65) {
    super(e65), this.type = "sun", this.date = null, this.directShadowsEnabled = false, this.displayUTCOffset = null;
  }
  readDate(e65, t68) {
    return null != t68.datetime && new Date(t68.datetime) || null;
  }
  writeDate(e65, t68, r62) {
    t68[r62] = e65.getTime();
  }
  readDirectShadowsEnabled(e65, t68) {
    return !!t68.directShadows;
  }
  writedirectShadowsEnabled(e65, t68, r62) {
    e65 && (t68[r62] = e65);
  }
  writeDisplayUTCOffset(e65, t68) {
    null != e65 && (t68.displayUTCOffset = e65);
  }
  clone() {
    return new d28(this.cloneConstructProperties());
  }
  cloneConstructProperties() {
    const e65 = { directShadowsEnabled: this.directShadowsEnabled, displayUTCOffset: null != this.displayUTCOffset ? this.displayUTCOffset : null };
    return null != this.date && (e65.date = new Date(this.date.getTime())), e65;
  }
};
e([y2({ readOnly: true, type: ["sun"], json: { write: true } })], i32.prototype, "type", void 0), e([y2({ type: Date, json: { type: Number, write: { target: "datetime" } } })], i32.prototype, "date", void 0), e([o5("date", ["datetime"])], i32.prototype, "readDate", null), e([r8("date")], i32.prototype, "writeDate", null), e([y2({ type: Boolean, json: { default: false, write: { target: "directShadows" } } })], i32.prototype, "directShadowsEnabled", void 0), e([o5("directShadowsEnabled", ["directShadows"])], i32.prototype, "readDirectShadowsEnabled", null), e([r8("directShadowsEnabled")], i32.prototype, "writedirectShadowsEnabled", null), e([y2({ type: Number, json: { write: true } })], i32.prototype, "displayUTCOffset", void 0), e([r8("displayUTCOffset")], i32.prototype, "writeDisplayUTCOffset", null), i32 = d28 = e([a4("esri.webscene.SunLighting")], i32);
var p18 = i32;

// node_modules/@arcgis/core/views/3d/environment/SunLighting.js
var r41;
var l28 = "esri.views.3d.environment.SunLighting";
var c25 = s3.getLogger(l28);
var d29 = r41 = class extends n8.EventedMixin(p18) {
  constructor(e65) {
    super(e65), this.cameraTrackingEnabled = true, this.positionTimezoneInfo = { hours: 0, minutes: 0, seconds: 0, autoUpdated: true };
    const t68 = (/* @__PURE__ */ new Date()).getFullYear(), n77 = /* @__PURE__ */ new Date("March 15, " + t68 + " 12:00:00 UTC");
    this._set("defaultDate", n77), this._set("date", n77);
  }
  get ambientOcclusionEnabled() {
    return t6(c25, "ambientOcclusionEnabled", { replacement: "ambient occlusion is automatically shown and this property has no effect", version: "4.27" }), this._get("ambientOcclusionEnabled") ?? false;
  }
  set ambientOcclusionEnabled(e65) {
    t6(c25, "ambientOcclusionEnabled", { replacement: "ambient occlusion is automatically shown and this property has no effect", version: "4.27" }), this._set("ambientOcclusionEnabled", e65);
  }
  get waterReflectionEnabled() {
    return t6(c25, "waterReflectionEnabled", { replacement: "reflections are automatically shown and this property has no effect", version: "4.27" }), this._get("waterReflectionEnabled") ?? false;
  }
  set waterReflectionEnabled(e65) {
    t6(c25, "waterReflectionEnabled", { replacement: "reflections are automatically shown and this property has no effect", version: "4.27" }), this._set("waterReflectionEnabled", e65);
  }
  get defaultDate() {
    return new Date(this._get("defaultDate").getTime());
  }
  static fromWebsceneLighting(e65) {
    return new r41(e65.cloneConstructProperties());
  }
  set defaultDate(e65) {
    const t68 = this._get("date") === this._get("defaultDate");
    e65 = new Date(e65.getTime()), this._set("defaultDate", e65), t68 && this._set("date", e65);
  }
  set date(e65) {
    null != e65 && (this.positionTimezoneInfo.autoUpdated = false, this._set("date", new Date(e65.getTime())));
  }
  autoUpdate(e65, t68) {
    const n77 = r41.calculateTimezoneOffset(this.positionTimezoneInfo);
    this.positionTimezoneInfo.hours = t68.hours, this.positionTimezoneInfo.minutes = t68.minutes, this.positionTimezoneInfo.seconds = t68.seconds;
    let o61 = null;
    null != e65 && (this.positionTimezoneInfo.autoUpdated = true, isNaN(e65.getTime()) ? (o61 = this.defaultDate.getTime(), this._set("date", this.defaultDate)) : (o61 = this.date && this.date.getTime(), this._set("date", new Date(e65.getTime()))));
    const i60 = r41.calculateTimezoneOffset(this.positionTimezoneInfo);
    if (n77 !== i60 && (u20.target = this, u20.timezoneOffset = i60, this.emit("timezone-will-change", u20), u20.target = null), null != e65)
      return isNaN(e65.getTime()) || o61 !== e65.getTime();
  }
  clone() {
    const e65 = this._get("date") === this._get("defaultDate"), t68 = new r41({ ...this.cloneConstructProperties(), defaultDate: this.defaultDate, cameraTrackingEnabled: this.cameraTrackingEnabled });
    return e65 && t68._set("date", t68._get("defaultDate")), t68.positionTimezoneInfo.autoUpdated = this.positionTimezoneInfo.autoUpdated, t68.positionTimezoneInfo.hours = this.positionTimezoneInfo.hours, t68.positionTimezoneInfo.minutes = this.positionTimezoneInfo.minutes, t68.positionTimezoneInfo.seconds = this.positionTimezoneInfo.seconds, t68;
  }
  cloneWithWebsceneLighting(e65) {
    const t68 = this.clone();
    return null != e65.date && (t68.date = e65.date), t68.directShadowsEnabled = e65.directShadowsEnabled, t68.displayUTCOffset = e65.displayUTCOffset, t68;
  }
  cloneNonPersistentConstructProperties() {
    return { cameraTrackingEnabled: this.cameraTrackingEnabled };
  }
};
e([y2({ type: Boolean })], d29.prototype, "cameraTrackingEnabled", void 0), e([y2({ type: Boolean })], d29.prototype, "ambientOcclusionEnabled", null), e([y2({ type: Boolean })], d29.prototype, "waterReflectionEnabled", null), e([y2({ type: Date })], d29.prototype, "defaultDate", null), e([y2({ type: Date })], d29.prototype, "date", null), d29 = r41 = e([a4(l28)], d29), function(e65) {
  function t68({ hours: e66, minutes: t69, seconds: n77 }) {
    return Math.round(e66 + t69 / 60 + n77 / 3600);
  }
  e65.calculateTimezoneOffset = t68;
}(d29 || (d29 = {}));
var u20 = { target: null, timezoneOffset: 0 };
var m18 = d29;

// node_modules/@arcgis/core/webscene/VirtualLighting.js
var s42;
var c26 = s42 = class extends l5 {
  constructor(r62) {
    super(r62), this.type = "virtual", this.directShadowsEnabled = false;
  }
  clone() {
    return new s42(this.cloneConstructProperties());
  }
  cloneConstructProperties() {
    return { directShadowsEnabled: this.directShadowsEnabled };
  }
};
e([y2({ readOnly: true, type: ["virtual"], json: { write: true } })], c26.prototype, "type", void 0), e([y2({ type: Boolean, json: { default: false, name: "directShadows", write: true } })], c26.prototype, "directShadowsEnabled", void 0), c26 = s42 = e([a4("esri.webscene.VirtualLighting")], c26);
var a36 = c26;

// node_modules/@arcgis/core/views/3d/environment/VirtualLighting.js
var i33;
var c27 = "esri.views.3d.environment.VirtualLighting";
var l29 = s3.getLogger(c27);
var p19 = i33 = class extends n8.EventedMixin(a36) {
  constructor(e65) {
    super(e65), this.cameraTrackingEnabled = true;
  }
  get ambientOcclusionEnabled() {
    return t6(l29, "ambientOcclusionEnabled", { replacement: "ambient occlusion is automatically shown and this property has no effect", version: "4.27" }), this._get("ambientOcclusionEnabled") ?? false;
  }
  set ambientOcclusionEnabled(e65) {
    t6(l29, "ambientOcclusionEnabled", { replacement: "ambient occlusion is automatically shown and this property has no effect", version: "4.27" }), this._set("ambientOcclusionEnabled", e65);
  }
  get waterReflectionEnabled() {
    return t6(l29, "waterReflectionEnabled", { replacement: "water reflections are automatically shown and this property has no effect", version: "4.27" }), this._get("waterReflectionEnabled") ?? false;
  }
  set waterReflectionEnabled(e65) {
    t6(l29, "waterReflectionEnabled", { replacement: "water reflections are automatically shown and this property has no effect", version: "4.27" }), this._set("waterReflectionEnabled", e65);
  }
  clone() {
    return new i33({ ...this.cloneConstructProperties(), cameraTrackingEnabled: this.cameraTrackingEnabled });
  }
  static fromWebsceneLighting(e65) {
    return new i33(e65.cloneConstructProperties());
  }
  cloneWithWebsceneLighting(e65) {
    const t68 = this.clone();
    return t68.directShadowsEnabled = e65.directShadowsEnabled, t68;
  }
  cloneNonPersistentConstructProperties() {
    return { cameraTrackingEnabled: this.cameraTrackingEnabled };
  }
};
e([y2({ type: Boolean })], p19.prototype, "ambientOcclusionEnabled", null), e([y2({ type: Boolean })], p19.prototype, "waterReflectionEnabled", null), e([y2({ type: Boolean })], p19.prototype, "cameraTrackingEnabled", void 0), p19 = i33 = e([a4(c27)], p19);
var m19 = p19;

// node_modules/@arcgis/core/views/3d/environment/lightingUtils.js
var i34 = { key: "type", defaultKeyValue: "sun", base: null, typeMap: { sun: m18, virtual: m19 } };

// node_modules/@arcgis/core/views/3d/environment/SceneViewAtmosphere.js
var t42;
var i35 = t42 = class extends m {
  set quality(r62) {
    ["low", "high"].includes(r62) && this._set("quality", r62);
  }
  clone() {
    return new t42({ quality: this.quality });
  }
};
e([y2({ type: ["low", "high"], value: "low" })], i35.prototype, "quality", null), i35 = t42 = e([a4("esri.views.3d.environment.SceneViewAtmosphere")], i35);

// node_modules/@arcgis/core/views/3d/environment/SunnyWeather.js
var p20;
var c28 = p20 = class extends l5 {
  constructor(r62) {
    super(r62), this.type = "sunny", this.cloudCover = 0.5;
  }
  clone() {
    return new p20({ cloudCover: this.cloudCover });
  }
};
e([o7({ sunny: "sunny" })], c28.prototype, "type", void 0), e([y2({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], c28.prototype, "cloudCover", void 0), c28 = p20 = e([a4("esri.views.3d.environment.SunnyWeather")], c28);
var n40 = c28;

// node_modules/@arcgis/core/views/3d/environment/CloudyWeather.js
var c29;
var p21 = c29 = class extends l5 {
  constructor(o61) {
    super(o61), this.type = "cloudy", this.cloudCover = 0.5;
  }
  clone() {
    return new c29({ cloudCover: this.cloudCover });
  }
};
e([o7({ cloudy: "cloudy" })], p21.prototype, "type", void 0), e([y2({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], p21.prototype, "cloudCover", void 0), p21 = c29 = e([a4("esri.views.3d.environment.CloudyWeather")], p21);
var u21 = p21;

// node_modules/@arcgis/core/views/3d/environment/FoggyWeather.js
var p22;
var c30 = p22 = class extends l5 {
  constructor(r62) {
    super(r62), this.type = "foggy", this.fogStrength = 0.5;
  }
  clone() {
    return new p22({ fogStrength: this.fogStrength });
  }
};
e([o7({ foggy: "foggy" })], c30.prototype, "type", void 0), e([y2({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], c30.prototype, "fogStrength", void 0), c30 = p22 = e([a4("esri.views.3d.environment.FoggyWeather")], c30);
var n41 = c30;

// node_modules/@arcgis/core/views/3d/environment/RainyWeather.js
var i36;
var p23 = i36 = class extends l5 {
  constructor(r62) {
    super(r62), this.type = "rainy", this.cloudCover = 0.5, this.precipitation = 0.5;
  }
  clone() {
    return new i36({ cloudCover: this.cloudCover, precipitation: this.precipitation });
  }
};
e([o7({ rainy: "rainy" })], p23.prototype, "type", void 0), e([y2({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], p23.prototype, "cloudCover", void 0), e([y2({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], p23.prototype, "precipitation", void 0), p23 = i36 = e([a4("esri.views.3d.environment.RainyWeather")], p23);
var c31 = p23;

// node_modules/@arcgis/core/views/3d/environment/SnowyWeather.js
var i37;
var p24 = i37 = class extends l5 {
  constructor(o61) {
    super(o61), this.type = "snowy", this.cloudCover = 0.5, this.precipitation = 0.5, this.snowCover = "disabled";
  }
  clone() {
    return new i37({ cloudCover: this.cloudCover, precipitation: this.precipitation, snowCover: this.snowCover });
  }
};
e([o7({ snowy: "snowy" })], p24.prototype, "type", void 0), e([y2({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], p24.prototype, "cloudCover", void 0), e([y2({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], p24.prototype, "precipitation", void 0), e([y2({ type: ["enabled", "disabled"], nonNullable: true, json: { write: true } })], p24.prototype, "snowCover", void 0), p24 = i37 = e([a4("esri.views.3d.environment.SnowyWeather")], p24);
var n42 = p24;

// node_modules/@arcgis/core/views/3d/environment/weather.js
var n43 = { key: "type", base: n40, typeMap: { sunny: n40, cloudy: u21, rainy: c31, snowy: n42, foggy: n41 } };
var a37 = Object.keys(n43.typeMap);
function s43(e65, r62) {
  return !!a37.includes(e65) || (r62.error(`"${e65}" is not a valid weather type`), false);
}
var p25 = 1e4;

// node_modules/@arcgis/core/webscene/lightingTypes.js
var i38 = { key: "type", defaultKeyValue: "sun", base: null, typeMap: { sun: p18, virtual: a36 } };

// node_modules/@arcgis/core/webscene/background/Background.js
var t43 = class extends l5 {
  constructor(r62) {
    super(r62);
  }
  clone() {
  }
};
e([y2({ readOnly: true, json: { read: false } })], t43.prototype, "type", void 0), t43 = e([a4("esri.webscene.background.Background")], t43);
var c32 = t43;

// node_modules/@arcgis/core/webscene/background/ColorBackground.js
var l30;
var a38 = { ...p6, nonNullable: true };
var i39 = l30 = class extends c32 {
  constructor(o61) {
    super(o61), this.type = "color", this.color = new h6([0, 0, 0, 1]);
  }
  clone() {
    return new l30(this.cloneProperties());
  }
  cloneProperties() {
    return { color: this.color.clone() };
  }
};
e([o7({ color: "color" }, { readOnly: true })], i39.prototype, "type", void 0), e([y2(a38)], i39.prototype, "color", void 0), i39 = l30 = e([a4("esri.webscene.background.ColorBackground")], i39);
var n44 = i39;

// node_modules/@arcgis/core/webscene/background/utils.js
var o39 = { base: c32, key: "type", typeMap: { color: n44 } };
function t44(e65) {
  return (r62, o61, t68) => {
    if (!r62)
      return r62;
    for (const n77 in e65.typeMap)
      if (r62.type === n77) {
        const o62 = new e65.typeMap[n77]();
        return o62.read(r62, t68), o62;
      }
  };
}
var n45 = { types: o39, json: { read: t44(o39), write: { overridePolicy: (e65, r62, o61) => ({ enabled: !o61 || !o61.isPresentation }) } } };

// node_modules/@arcgis/core/webscene/Environment.js
var g12;
var u22 = "esri.webscene.Environment";
var d30 = s3.getLogger(u22);
var b5 = (e65, t68, o61) => ({ enabled: !o61 || !o61.isPresentation });
var y12 = g12 = class extends l5 {
  constructor(e65) {
    super(e65), this.lighting = new p18(), this.background = null, this.atmosphereEnabled = true, this.starsEnabled = true;
  }
  set weather(e65) {
    s43(e65 == null ? void 0 : e65.type, d30) && this._set("weather", e65);
  }
  clone() {
    return new g12(this.cloneConstructProperties());
  }
  cloneConstructProperties() {
    return { lighting: this.lighting && "virtual" === this.lighting.type ? a36.prototype.clone.call(this.lighting) : p18.prototype.clone.call(this.lighting), background: a2(this.background), atmosphereEnabled: this.atmosphereEnabled, starsEnabled: this.starsEnabled, weather: this.weather.clone() };
  }
};
e([y2({ types: i38, nonNullable: true, json: { write: true } })], y12.prototype, "lighting", void 0), e([y2(n45)], y12.prototype, "background", void 0), e([y2({ type: Boolean, nonNullable: true, json: { write: { overridePolicy: b5 } } })], y12.prototype, "atmosphereEnabled", void 0), e([y2({ type: Boolean, nonNullable: true, json: { write: { overridePolicy: b5 } } })], y12.prototype, "starsEnabled", void 0), e([y2({ types: n43, nonNullable: true, json: { write: true }, value: new n40() })], y12.prototype, "weather", null), y12 = g12 = e([a4(u22)], y12);
var j8 = y12;

// node_modules/@arcgis/core/views/3d/environment/SceneViewEnvironment.js
var u23;
var b6 = u23 = class extends j8 {
  constructor(t68) {
    super(t68), this.atmosphere = new i35(), this.lighting = new m18(), this.cachedCameraTrackingEnabled = null;
  }
  static fromWebsceneEnvironment(t68) {
    const i60 = t68.cloneConstructProperties();
    return new u23({ ...i60, lighting: i60.lighting ? "virtual" === i60.lighting.type ? m19.fromWebsceneLighting(i60.lighting) : m18.fromWebsceneLighting(i60.lighting) : void 0 });
  }
  castLighting(t68) {
    return this._convertLighting(t68);
  }
  applyLighting(t68) {
    this.lighting = this._convertLighting(t68);
  }
  _convertLighting(t68) {
    var _a, _b;
    return t68 ? t68 instanceof m18 || t68 instanceof m19 ? t68 : t68 instanceof p18 ? this.lighting && "virtual" !== this.lighting.type ? this.lighting.cloneWithWebsceneLighting(t68) : new m18({ ...t68.cloneConstructProperties(), ...(_a = this.lighting) == null ? void 0 : _a.cloneNonPersistentConstructProperties() }) : t68 instanceof a36 ? this.lighting && "virtual" === this.lighting.type ? this.lighting.cloneWithWebsceneLighting(t68) : new m19({ ...t68.cloneConstructProperties(), ...(_b = this.lighting) == null ? void 0 : _b.cloneNonPersistentConstructProperties() }) : S(i34, t68) : new m18();
  }
  clone() {
    return new u23({ lighting: this.lighting.clone(), atmosphere: this.atmosphere.clone(), weather: this.weather.clone(), atmosphereEnabled: this.atmosphereEnabled, starsEnabled: this.starsEnabled, background: a2(this.background) });
  }
  cloneWithWebsceneEnvironment(t68) {
    return new u23({ atmosphere: this.atmosphere.clone(), weather: this.weather.clone(), atmosphereEnabled: this.atmosphereEnabled, starsEnabled: this.starsEnabled, background: a2(this.background), ...t68.cloneConstructProperties(), lighting: this._getLighting(t68) });
  }
  _getLighting(t68) {
    switch (t68.lighting.type) {
      case "sun":
        return this.lighting && "sun" === this.lighting.type ? this.lighting.cloneWithWebsceneLighting(t68.lighting) : m18.fromWebsceneLighting(t68.lighting);
      case "virtual":
        return this.lighting && "virtual" === this.lighting.type ? this.lighting.cloneWithWebsceneLighting(t68.lighting) : m19.fromWebsceneLighting(t68.lighting);
      default:
        return n13(t68.lighting), m18.fromWebsceneLighting(t68.lighting);
    }
  }
};
e([y2({ type: i35, json: { read: false }, nonNullable: true })], b6.prototype, "atmosphere", void 0), e([y2({ nonNullable: true })], b6.prototype, "lighting", void 0), e([s11("lighting")], b6.prototype, "castLighting", null), b6 = u23 = e([a4("esri.views.3d.environment.SceneViewEnvironment")], b6);
var f24 = b6;

// node_modules/@arcgis/core/views/3d/environment/AtmosphereType.js
var a39;
!function(a67) {
  a67[a67.Realistic = 0] = "Realistic", a67[a67.Local = 1] = "Local", a67[a67.Mars = 2] = "Mars", a67[a67.None = 3] = "None";
}(a39 || (a39 = {}));

// node_modules/@arcgis/core/views/3d/environment/ChapmanAtmosphereTechnique.js
var f25 = class extends n21 {
  constructor() {
    super(...arguments), this.heightParameters = n14(), this.radii = n15(), this.innerFadeDistance = 0, this.altitudeFade = 0, this.hazeStrength = 1, this.renderScale = n15(), this.backgroundColor = n7();
  }
};
var p26 = class _p extends e22 {
  initializeProgram(e65) {
    return new i13(e65.rctx, _p.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return this.configuration.reduced ? W3({ blending: s23(R4.ONE, R4.ZERO), depthTest: { func: I4.ALWAYS }, colorWrite: _6 }) : this.configuration.haze ? W3({ blending: l14(R4.ONE, R4.ZERO, R4.ONE_MINUS_SRC_COLOR, R4.ONE), colorWrite: _6 }) : W3({ blending: s23(R4.SRC_ALPHA, R4.ONE_MINUS_SRC_ALPHA), depthTest: { func: I4.LEQUAL }, colorWrite: _6 });
  }
};
p26.shader = new t16(z9, () => import("./ChapmanAtmosphere.glsl-TENB5RKQ.js"));

// node_modules/@arcgis/core/views/3d/environment/ChapmanAtmosphereTechniqueConfiguration.js
var s44 = class extends t18 {
  constructor() {
    super(...arguments), this.haze = false, this.reduced = false;
  }
};
e([r25()], s44.prototype, "haze", void 0), e([r25()], s44.prototype, "reduced", void 0);

// node_modules/@arcgis/core/views/3d/environment/ChapmanAtmosphere.js
var q5 = class {
  constructor(t68, s69) {
    this._view = t68, this.type = a39.Realistic, this._handles = new t3(), this._passParameters = new f25(), this._rootTileElevationMin = NaN, this._lowerBoundEarthRadius = s12.radius, this._fadeHaze = 0, this._tmpScale = n15(), this._updateRadius(s12.radius);
    const i60 = s69.renderContext.rctx;
    this._updateRootTileElevationBounds(), this._handles.add([l6(() => {
      var _a, _b;
      return (_b = (_a = this._view) == null ? void 0 : _a.basemapTerrain) == null ? void 0 : _b.rootTileElevationBounds;
    }, () => {
      var _a;
      return ((_a = this._view) == null ? void 0 : _a.basemapTerrain) ? this._updateRootTileElevationBounds() : null;
    }), l6(() => {
      var _a, _b;
      return (_b = (_a = this._view) == null ? void 0 : _a.basemapTerrain) == null ? void 0 : _b.visibleElevationBounds;
    }, () => {
      var _a;
      return ((_a = this._view) == null ? void 0 : _a.basemapTerrain) ? this._updateVisibleElevationBounds() : null;
    })]);
    const a67 = new s44();
    a67.haze = false, this._atmosphereTechnique = s69.techniqueRepository.acquire(p26, a67), a67.haze = true, this._atmosphereHazeTechnique = s69.techniqueRepository.acquire(p26, a67), a67.reduced = true, a67.haze = false, this._atmosphereReducedTechnique = s69.techniqueRepository.acquire(p26, a67), a67.haze = true, this._atmosphereHazeReducedTechnique = s69.techniqueRepository.acquire(p26, a67), this._vao = f14(i60, A9);
  }
  destroy() {
    this._handles.destroy(), this._atmosphereTechnique.release(), this._atmosphereHazeTechnique.release(), this._atmosphereReducedTechnique.release(), this._atmosphereHazeReducedTechnique.release(), this._vao.dispose();
  }
  render(e65, t68) {
    this._render(e65, t68 ? this._atmosphereTechnique : this._atmosphereReducedTechnique, e65.offscreenRenderingHelper.depthTexture, t68, false);
  }
  renderHaze(e65, t68, s69) {
    this._fadeHaze = t68, this._render(e65, s69 ? this._atmosphereHazeTechnique : this._atmosphereHazeReducedTechnique, e65.offscreenRenderingHelper.linearDepthTexture, s69, true);
  }
  _render(e65, t68, i60, r62, o61) {
    if (null == i60)
      return;
    const d52 = e65.offscreenRenderingHelper;
    this._update(e65.bindParameters.camera), this._passParameters.depthTexture = i60;
    const u51 = d52.background.color;
    o2(this._passParameters.backgroundColor, u51[0] * u51[3], u51[1] * u51[3], u51[2] * u51[3]);
    const p54 = e65.rctx.bindTechnique(t68, this._passParameters, e65.bindParameters);
    if (r62)
      d52.renderDepthDetached(() => this._renderCommon(p54, e65));
    else {
      const t69 = e65.rctx.getViewport(), r63 = s7(e65.bindParameters.camera.eye) - s12.radius;
      let n77;
      if (r63 < n36) {
        const e66 = Math.min(1, Math.max(0, r63 / n36));
        n77 = o61 ? s9(0.4, 0.5, e66) : s9(0.2, 0.3, e66);
      } else {
        const e66 = Math.min(1, Math.max(0, (r63 - n36) / (15 * n36)));
        n77 = o61 ? s9(0.5, 1, e66) : s9(0.3, 0.6, e66);
      }
      const u52 = Math.floor(n77 * e65.bindParameters.camera.fullViewport[2]), c58 = Math.floor(n77 * e65.bindParameters.camera.fullViewport[3]);
      e65.rctx.setViewport(0, 0, u52, c58), d52.renderToTargets(() => this._renderCommon(p54, e65), d52.tmpColor, d52.tmpDepth, [0, 0, 0, 1], false, false), e65.rctx.setViewport(t69.x, t69.y, t69.width, t69.height), r13(this._tmpScale, u52 / e65.bindParameters.camera.fullViewport[2], c58 / e65.bindParameters.camera.fullViewport[3]), d52.compositeAtmosphereToMain(e65.bindParameters, o61, i60, this._tmpScale);
    }
  }
  _renderCommon(e65, t68) {
    null != this._vao && (t68.rctx.bindVAO(this._vao), e65.assertCompatibleVertexAttributeLocations(this._vao), t68.rctx.drawArrays(E5.TRIANGLE_STRIP, 0, 4));
  }
  _adjustRadiusForTesselation(e65) {
    return e65 * Math.cos(Math.PI / 16 / 16);
  }
  _updateRootTileElevationBounds() {
    const e65 = this._view.basemapTerrain.rootTileElevationBounds.min;
    e65 !== this._rootTileElevationMin && (this._rootTileElevationMin = e65, this._lowerBoundEarthRadius = s12.radius, this._updateVisibleElevationBounds());
  }
  _updateVisibleElevationBounds() {
    const e65 = this._adjustRadiusForTesselation(s12.radius + this._view.basemapTerrain.visibleElevationBounds.min);
    e65 < this._lowerBoundEarthRadius && this._updateRadius(e65);
  }
  _updateRadius(e65) {
    this._lowerBoundEarthRadius = e65, r13(this._passParameters.radii, e65, e65 + n36), this._passParameters.innerFadeDistance = 2 * Math.sqrt((2 * e65 - o33) * o33);
  }
  _update(e65) {
    if (!e65)
      return;
    const r62 = v3(e65.eye), a67 = Math.sqrt(r62), o61 = r62 - this._passParameters.radii[1] * this._passParameters.radii[1], n77 = i3((a67 - this._passParameters.radii[0]) / n36, 0, 1);
    r6(this._passParameters.heightParameters, a67, r62, o61, n77), this._passParameters.altitudeFade = e28(a67 - this._lowerBoundEarthRadius), this._passParameters.hazeStrength = s9(s9(0.6, 1, k(9500, 10500, a67 - s12.radius)), 1, this._fadeHaze);
  }
  static isSupported(e65) {
    return e65.renderContext.rctx.capabilities.depthTexture;
  }
};

// node_modules/@arcgis/core/views/3d/environment/CloudsCompositionTechnique.js
var u24 = class _u extends e22 {
  constructor(e65) {
    super(e65, new t18(), () => this.destroy());
  }
  initializeProgram(e65) {
    return new i13(e65.rctx, _u.shader.get().build(), E7);
  }
  initializePipeline() {
    return W3({ blending: l14(R4.ONE, R4.ZERO, R4.SRC_ALPHA, R4.ONE), depthTest: { func: I4.LEQUAL }, colorWrite: _6 });
  }
};
u24.shader = new t16(f19, () => import("./CloudsComposition.glsl-WIZBAFGV.js"));

// node_modules/@arcgis/core/views/3d/environment/CloudsComposition.js
var u25 = class extends m {
  constructor(e65) {
    super(e65), this._technique = new u24(e65), this._vao = f14(e65.rctx);
  }
  destroy() {
    this._technique = f(this._technique), this._vao = t2(this._vao);
  }
  render(e65) {
    const o61 = e65.bindParameters.cloudsFade;
    if (null == this._vao || null == o61.data)
      return;
    if (!this._technique.compiled)
      return void this.requestRender();
    const r62 = e65.rctx.bindTechnique(this._technique, m20, e65.bindParameters);
    e65.rctx.bindVAO(this._vao), r62.assertCompatibleVertexAttributeLocations(this._vao), e65.rctx.drawArrays(E5.TRIANGLE_STRIP, 0, 4);
  }
};
e([y2({ constructOnly: true })], u25.prototype, "rctx", void 0), e([y2({ constructOnly: true })], u25.prototype, "viewingMode", void 0), e([y2({ constructOnly: true })], u25.prototype, "planetRadius", void 0), e([y2({ constructOnly: true })], u25.prototype, "requestRender", void 0), u25 = e([a4("esri.views.3d.environment.CloudsComposition")], u25);
var m20 = new n21();

// node_modules/@arcgis/core/views/3d/environment/CloudsTechnique.js
var d31 = class _d extends e22 {
  constructor(e65, r62) {
    super(e65, r62, () => this.destroy());
  }
  initializeProgram(e65) {
    return new i13(e65.rctx, _d.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return W3({ blending: s23(R4.CONSTANT_COLOR, R4.ONE_MINUS_CONSTANT_COLOR, T3.ADD, this.configuration.writeTextureChannels === E13.RG ? [1, 1, 0, 0] : [0, 0, 1, 1]), depthTest: { func: I4.LEQUAL }, colorWrite: _6 });
  }
};
d31.shader = new t16(b4, () => import("./Clouds.glsl-3WAUE25P.js"));

// node_modules/@arcgis/core/views/3d/environment/NoiseTextureAtlasTechnique.js
var d32 = class _d extends e22 {
  initializeProgram(e65) {
    return new i13(e65.rctx, _d.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return W3({ blending: this.configuration.mode === t32.Full ? s23(R4.ONE, R4.ZERO) : l14(R4.ZERO, R4.ONE, R4.ONE, R4.ZERO), depthTest: { func: I4.ALWAYS }, colorWrite: _6 });
  }
};
d32.shader = new t16(v11, () => import("./NoiseTextureAtlas.glsl-NHTAGWOT.js"));

// node_modules/@arcgis/core/views/3d/environment/NoiseTextureAtlas.js
var f26 = class extends m {
  constructor(e65) {
    super(e65), this._needsRender = true, this._passParameters = new s33(), this._frameBuffer = new x11(e65.context.renderContext.rctx, new e20(t31)), this._vao = f14(e65.context.renderContext.rctx);
  }
  get _techniqueRepository() {
    return this.context.techniqueRepository;
  }
  get textureAtlas() {
    return null != this._texture ? null != this._weatherMapTechnique && this._weatherMapTechnique.compiled && this._needsRender && (this._texture = this._render(t32.WeatherMap)) : null != this._fullTechnique && this._fullTechnique.compiled && (this._texture = this._render(t32.Full)), this._texture;
  }
  _setDirty() {
    this._needsRender = true;
  }
  updateWeatherMap(e65) {
    this._passParameters.weatherTile[0] === e65[0] && this._passParameters.weatherTile[1] === e65[1] || (a12(this._passParameters.weatherTile, e65), this._setDirty());
  }
  destroy() {
    this._fullTechniqueCached = f(this._fullTechniqueCached), this._weatherMapTechniqueCached = f(this._weatherMapTechniqueCached), this._frameBuffer = t2(this._frameBuffer), this._vao = t2(this._vao);
  }
  get _fullTechnique() {
    if (null == this._fullTechniqueCached) {
      const e65 = new s32();
      e65.mode = t32.Full, this._fullTechniqueCached = this._techniqueRepository.acquire(d32, e65);
    }
    return this._fullTechniqueCached;
  }
  get _weatherMapTechnique() {
    if (null == this._weatherMapTechniqueCached) {
      const e65 = new s32();
      e65.mode = t32.WeatherMap, this._weatherMapTechniqueCached = this._techniqueRepository.acquire(d32, e65);
    }
    return this._weatherMapTechniqueCached;
  }
  _render(e65) {
    if (null == this._vao || null == this._frameBuffer)
      return null;
    const t68 = e65 === t32.Full ? this._fullTechnique : this._weatherMapTechnique, r62 = this.context.renderContext.rctx, s69 = r62.getViewport();
    r62.setViewport(0, 0, t31, t31), r62.bindFramebuffer(this._frameBuffer);
    const i60 = r62.bindTechnique(t68, this._passParameters, null);
    return r62.bindVAO(this._vao), i60.assertCompatibleVertexAttributeLocations(this._vao), r62.gl.drawArrays(r62.gl.TRIANGLE_STRIP, 0, 4), r62.setViewport(s69.x, s69.y, s69.width, s69.height), this._needsRender = false, this._frameBuffer.colorTexture;
  }
};
e([y2({ constructOnly: true })], f26.prototype, "context", void 0), e([y2({ readOnly: true })], f26.prototype, "_techniqueRepository", null), f26 = e([a4("esri.views.3d.environment.NoiseTextureAtlas")], f26);

// node_modules/@arcgis/core/views/3d/environment/CloudsGenerator.js
var B5 = class extends m {
  constructor(e65) {
    super(e65), this._handles = new t3(), this._techniques = new Array(), this._techniqueConfiguration = new i24(), this._bindParameters = new o27(null, null, null), this._passParameters = new w15(), this._drawParameters = new S10(), this._weatherTile = n15(), this._weatherTileCount = 128, this._faceIndex = 0, this._tileIndex = 0, this.coverage = s9(e29.default.coverage[0], e29.default.coverage[1], 0.5), this.density = s9(e29.default.density[0], e29.default.density[1], 0.5), this.absorption = s9(e29.default.absorption[0], e29.default.absorption[1], 0.5), this.cloudSize = s9(e29.default.cloudSize[0], e29.default.cloudSize[1], 0.5), this.detailSize = s9(e29.default.detailSize[0], e29.default.detailSize[1], 0.5), this.smoothness = s9(e29.default.smoothness[0], e29.default.smoothness[1], 0.5), this.cloudHeight = s9(e29.default.cloudHeight[0], e29.default.cloudHeight[1], 0.5), this.raymarchingSteps = e29.default.raymarchingSteps, this._viewMatrix = e15(), this._dirty = false, this.running = false, this._vao = f14(e65.context.renderContext.rctx);
  }
  _getTechnique(e65) {
    const t68 = 1 - this.context.renderContext.bindParameters.cloudsFade.readChannels, s69 = t68 === E13.RG ? 2 * e65 : 2 * e65 + 1, i60 = this._techniques[s69];
    return i60 || (this._techniqueConfiguration.writeTextureChannels = t68, this._techniqueConfiguration.steps = e65, this._techniques[s69] = new d31({ rctx: this.context.renderContext.rctx, viewingMode: this.view.state.viewingMode }, this._techniqueConfiguration), this._techniques[s69]);
  }
  updateWeatherTile() {
    const e65 = this.view.camera.position.latitude, t68 = this.view.camera.position.longitude;
    if (null == e65 || null == t68)
      return;
    r13(this._weatherTile, (e65 + 90) / 180, (t68 + 180) / 360);
    const s69 = Math.floor(this._weatherTileCount * Math.abs(2 * this._weatherTile[0] - 1));
    this._weatherTile[0] = Math.floor(2 * this._weatherTileCount * this._weatherTile[0]), this._weatherTile[1] = Math.floor(4 * (this._weatherTileCount - s69) * this._weatherTile[1]);
    let i60 = 0, r62 = 0;
    if (null != this.view.environment && "virtual" !== this.view.environment.lighting.type && null != this.view.environment.lighting.date) {
      const e66 = new Date(this.view.environment.lighting.date);
      e66.setUTCHours(this.view.environment.lighting.date.getUTCHours() + (this.view.environment.lighting.displayUTCOffset ?? 0)), i60 = 31 * e66.getUTCMonth() + e66.getUTCDate(), r62 = e66.getUTCFullYear();
    }
    this._weatherTile[0] = (this._weatherTile[0] + i60) % (2 * this._weatherTileCount), this._weatherTile[1] = (this._weatherTile[1] + r62 % 100) % (4 * this._weatherTileCount), k4(this._passParameters.weatherTile, this._weatherTile) || this.setDirty();
  }
  initialize() {
    const e65 = A3(this.view.spatialReference);
    this._passParameters.cloudRadius = 0.5 * e65.radius, this.setDirty(), this.updateWeatherTile(), this._handles.add([this.view.resourceController.scheduler.registerTask(I3.CLOUDS_GENERATOR, this), l6(() => [this.coverage, this.density, this.absorption, this.cloudSize, this.detailSize, this.smoothness, this.cloudHeight, this.raymarchingSteps], () => this.setDirty(), h3)]);
  }
  destroy() {
    this._handles.destroy(), this._techniques.forEach((e65) => f(e65)), this._frameBufferCube = t2(this._frameBufferCube), this._techniques.length = 0, this._vao.dispose(), this._passParameters.noiseTexture = l(this._passParameters.noiseTexture);
  }
  get _tilesPerFace() {
    switch (this._techniqueConfiguration.steps) {
      case s31.SIXTEEN:
        return 1;
      case s31.HUNDRED:
        return 4;
      case s31.COUNT:
      case s31.TWOHUNDRED:
        return 8;
    }
  }
  _ensureNoiseTexture() {
    if (null != this._passParameters.noiseTexture)
      this._passParameters.noiseTexture.updateWeatherMap(this._passParameters.weatherTile);
    else {
      const e65 = this.context;
      this._passParameters.noiseTexture = new f26({ context: e65 }), this._passParameters.noiseTexture.updateWeatherMap(this._passParameters.weatherTile);
    }
    return null != this._passParameters.noiseTexture.textureAtlas;
  }
  _ensureFrameBufferCube(e65) {
    if (null == this._frameBufferCube) {
      const t68 = new e20(e65);
      t68.target = M4.TEXTURE_CUBE_MAP, t68.wrapMode = D2.CLAMP_TO_EDGE, this._frameBufferCube = new x11(this.context.renderContext.rctx, t68);
    }
    return this._frameBufferCube;
  }
  get cubeMap() {
    return this._frameBufferCube;
  }
  destroyFrameBufferCube() {
    this._frameBufferCube = t2(this._frameBufferCube);
  }
  applyPreset(e65, t68) {
    const s69 = e65.median, r62 = (e66) => {
      const r63 = s9(e66[0], e66[1], s69);
      return t68 < 0.5 ? s9(e66[0], r63, 2 * t68) : s9(r63, e66[1], 2 * (t68 - 0.5));
    };
    this.coverage = r62(e65.coverage), this.density = r62(e65.density), this.absorption = r62(e65.absorption), this.cloudSize = r62(e65.cloudSize), this.detailSize = r62(e65.detailSize), this.smoothness = r62(e65.smoothness), this.cloudHeight = r62(e65.cloudHeight), this.raymarchingSteps = e65.raymarchingSteps;
  }
  setDirty() {
    this._dirty = this.running = true;
  }
  runTask(e65) {
    0 === this._faceIndex && 0 === this._tileIndex && (this._passParameters.raymarchingSteps = this.raymarchingSteps, this.updateWeatherTile(), a12(this._passParameters.weatherTile, this._weatherTile));
    const t68 = this._getTechnique(this._passParameters.raymarchingSteps);
    if (!t68.compiled)
      return g5.YIELD;
    if (!this.context.renderContext.bindParameters.cloudsFade.isCameraPositionFinal || this.context.renderContext.bindParameters.cloudsFade.isFading || !this._ensureNoiseTexture())
      return g5.YIELD;
    0 === this._faceIndex && 0 === this._tileIndex && (this.context.renderContext.bindParameters.cloudsFade.renderingStage = N4.RENDERING, this._passParameters.absorption = this.absorption, this._passParameters.density = this.density, this._passParameters.cloudSize = this.cloudSize, this._passParameters.detailSize = this.detailSize, this._passParameters.smoothness = this.smoothness, this._passParameters.cloudHeight = this.cloudHeight, this._passParameters.coverage = this.coverage, this._dirty = false);
    const s69 = this.context.renderContext.rctx, i60 = s69.bindTechnique(t68, this._passParameters, this._bindParameters);
    s69.bindVAO(this._vao), i60.assertCompatibleVertexAttributeLocations(this._vao);
    const r62 = s69.getViewport(), a67 = t68.configuration.cubeMapSize, o61 = a67 / this._tilesPerFace, n77 = this._tileIndex * o61;
    s69.setViewport(0, n77, a67, o61);
    const h46 = this._ensureFrameBufferCube(a67);
    s69.bindFramebuffer(h46);
    const u51 = N6[this._faceIndex], l63 = A17[this._faceIndex];
    z3(this._viewMatrix, O9, u51, l63), a13(this._drawParameters.viewMatrix, this._viewMatrix);
    const m44 = M4.TEXTURE_CUBE_MAP_POSITIVE_X + this._faceIndex;
    return h46.setColorTextureTarget(m44), i60.bindDraw(this._drawParameters, this._bindParameters, this._passParameters), s69.gl.drawArrays(s69.gl.TRIANGLE_STRIP, 0, 4), s69.gl.flush(), s69.setViewport(r62.x, r62.y, r62.width, r62.height), this.requestRender(), ++this._tileIndex, 4 === this._faceIndex && this._tileIndex === this._tilesPerFace ? (this.running = this._dirty, this._faceIndex = 0, this._tileIndex = 0, this.context.renderContext.bindParameters.cloudsFade.renderingStage = N4.FINISHED_RENDERING) : this._tileIndex === this._tilesPerFace && (++this._faceIndex, this._tileIndex = 0), e65.madeProgress(), g5.YIELD;
  }
};
e([y2({ constructOnly: true })], B5.prototype, "context", void 0), e([y2({ constructOnly: true })], B5.prototype, "view", void 0), e([y2({ constructOnly: true })], B5.prototype, "requestRender", void 0), e([y2()], B5.prototype, "coverage", void 0), e([y2()], B5.prototype, "density", void 0), e([y2()], B5.prototype, "absorption", void 0), e([y2()], B5.prototype, "cloudSize", void 0), e([y2()], B5.prototype, "detailSize", void 0), e([y2()], B5.prototype, "smoothness", void 0), e([y2()], B5.prototype, "cloudHeight", void 0), e([y2()], B5.prototype, "raymarchingSteps", void 0), e([y2()], B5.prototype, "running", void 0), B5 = e([a4("esri.views.3d.environment.CloudsGenerator")], B5);
var N6 = [r18(1, 0, 0), r18(-1, 0, 0), r18(0, 1, 0), r18(0, -1, 0), r18(0, 0, 1)];
var A17 = [r18(0, 1, 0), r18(0, 1, 0), r18(0, 0, -1), r18(0, 0, 1), r18(0, 1, 0)];
var O9 = a14();

// node_modules/@arcgis/core/views/3d/environment/FogTechnique.js
var m21 = class _m extends e22 {
  constructor(e65) {
    super(e65, new t18(), () => this.destroy());
  }
  initializeProgram(e65) {
    return new i13(e65.rctx, _m.shader.get().build(), E7);
  }
  initializePipeline() {
    return W3({ blending: l14(R4.SRC_ALPHA, R4.ZERO, R4.ONE_MINUS_SRC_ALPHA, R4.ONE), colorWrite: _6 });
  }
};
m21.shader = new t16(y8, () => import("./Fog.glsl-FB5QVI3F.js"));

// node_modules/@arcgis/core/views/3d/environment/Fog.js
var y13 = 0.95;
var b7 = 1;
var v14 = class extends m {
  constructor(t68) {
    super(t68), this._passParameters = new u15();
    const e65 = t68.context.renderContext.rctx;
    this._vao = f14(e65, A9), this._technique = new m21(t68);
    const s69 = A3(t68.view.spatialReference);
    this._planetRadius = s69.radius, this._atmosphereRadius = s69.radius + n36;
  }
  destroy() {
    this._technique.release(), this._vao.dispose();
  }
  set strength(t68) {
    this._passParameters.fogStrength = t68;
  }
  get strength() {
    return this._passParameters.fogStrength;
  }
  render(t68, e65) {
    if (this._update(t68, e65), this._passParameters.fogAmount <= 0)
      return;
    const s69 = this._technique;
    if (!s69.compiled)
      return void this.context.requestRender();
    const r62 = t68.offscreenRenderingHelper;
    r62.renderDepthDetached(() => {
      this._passParameters.depthTexture = r62.depthTexture;
      const e66 = t68.rctx.bindTechnique(s69, this._passParameters, t68.bindParameters);
      this._renderFog(e66, t68);
    });
  }
  _renderFog(t68, e65) {
    const s69 = e65.rctx;
    s69.bindVAO(this._vao), t68.assertCompatibleVertexAttributeLocations(this._vao), s69.drawArrays(E5.TRIANGLE_STRIP, 0, 4);
  }
  _update(t68, e65) {
    const r62 = t68.bindParameters.camera;
    z2(P9, r62.eye);
    const o61 = Math.max(0, P(P9, t68.bindParameters.lighting.mainLight.direction)), m44 = e65.color;
    g2(w18, m44, 0.1), A2(this._passParameters.fogColor, w18, m44, o61);
    const h46 = s7(r62.eye), u51 = h46 * h46;
    this._passParameters.atmosphereC = u51 - this._atmosphereRadius * this._atmosphereRadius, this._passParameters.fogAmount = (1 - k(y13 * p25, b7 * p25, Math.abs(h46 - this._planetRadius))) * e65.amount, this._passParameters.fogStrength = e65.strength;
  }
  static isSupported(t68) {
    return t68.capabilities.depthTexture;
  }
};
e([y2({ constructOnly: true })], v14.prototype, "context", void 0), e([y2({ constructOnly: true })], v14.prototype, "view", void 0), e([y2({ constructOnly: true })], v14.prototype, "rctx", void 0), e([y2({ constructOnly: true })], v14.prototype, "viewingMode", void 0), v14 = e([a4("esri.views.3d.environment.Fog")], v14);
var x15 = class {
  constructor() {
    this.color = n7(), this.strength = 0, this.amount = 0;
  }
};
var P9 = n7();
var w18 = n7();

// node_modules/@arcgis/core/views/3d/environment/SimpleAtmosphereTechnique.js
var h21 = class _h extends e22 {
  initializeProgram(e65) {
    return new i13(e65.rctx, _h.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return this.configuration.geometry === r35.Cylinder ? W3({ blending: l14(R4.SRC_ALPHA, R4.ONE, R4.ONE_MINUS_SRC_ALPHA, R4.ONE_MINUS_SRC_ALPHA), culling: r23, depthTest: { func: I4.LEQUAL }, colorWrite: _6 }) : W3({ blending: l14(R4.SRC_ALPHA, R4.ONE, R4.ONE_MINUS_SRC_ALPHA, R4.ONE_MINUS_SRC_ALPHA), depthTest: { func: I4.LEQUAL }, colorWrite: _6 });
  }
};
h21.shader = new t16(h17, () => import("./SimpleAtmosphere.glsl-UUMUECSJ.js"));

// node_modules/@arcgis/core/views/3d/environment/resources/SimpleAtmosphereTexture.js
var e31 = new Uint8ClampedArray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 12, 0, 0, 0, 12, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 15, 0, 0, 0, 15, 0, 0, 0, 15, 0, 0, 0, 15, 16, 0, 0, 16, 16, 0, 0, 16, 16, 0, 0, 16, 16, 0, 0, 16, 15, 0, 0, 17, 15, 0, 0, 17, 15, 0, 0, 17, 15, 0, 0, 17, 14, 0, 0, 18, 14, 0, 0, 18, 14, 0, 0, 18, 13, 0, 0, 19, 13, 0, 0, 19, 13, 0, 0, 19, 13, 0, 0, 19, 13, 0, 0, 20, 13, 0, 0, 20, 13, 0, 0, 20, 13, 0, 0, 20, 12, 0, 0, 21, 12, 0, 0, 21, 12, 0, 0, 21, 12, 0, 0, 21, 12, 0, 0, 22, 12, 0, 0, 22, 12, 0, 0, 22, 12, 0, 0, 22, 11, 0, 0, 23, 11, 0, 0, 23, 11, 0, 0, 23, 11, 0, 0, 24, 11, 0, 0, 24, 11, 0, 0, 24, 11, 0, 0, 24, 10, 0, 0, 25, 10, 0, 0, 25, 10, 0, 0, 25, 10, 0, 0, 26, 10, 0, 0, 26, 10, 0, 0, 26, 10, 0, 0, 26, 9, 0, 0, 27, 9, 0, 0, 27, 9, 0, 0, 27, 18, 0, 0, 28, 18, 0, 0, 28, 18, 0, 0, 28, 18, 0, 0, 28, 18, 0, 0, 29, 18, 0, 0, 29, 18, 0, 0, 29, 17, 0, 0, 30, 17, 0, 0, 30, 17, 0, 0, 30, 17, 0, 0, 30, 16, 0, 0, 31, 16, 0, 0, 31, 16, 0, 0, 31, 16, 0, 0, 32, 16, 0, 0, 32, 16, 0, 0, 32, 15, 0, 0, 33, 15, 0, 0, 33, 15, 0, 0, 33, 15, 0, 0, 34, 15, 8, 0, 34, 15, 8, 0, 34, 15, 8, 0, 34, 15, 7, 0, 35, 15, 7, 0, 35, 15, 7, 0, 35, 21, 7, 0, 36, 21, 7, 0, 36, 21, 7, 0, 36, 21, 7, 0, 37, 21, 7, 0, 37, 21, 7, 0, 37, 20, 7, 0, 38, 20, 7, 0, 38, 20, 7, 0, 38, 20, 7, 0, 39, 20, 7, 0, 39, 20, 7, 0, 39, 20, 7, 0, 39, 19, 6, 0, 40, 19, 6, 0, 40, 19, 6, 0, 40, 19, 6, 0, 41, 19, 6, 0, 41, 19, 6, 0, 41, 18, 6, 0, 42, 18, 6, 0, 42, 18, 6, 0, 42, 24, 6, 0, 43, 24, 6, 0, 43, 24, 6, 0, 43, 23, 6, 0, 44, 23, 6, 0, 44, 23, 6, 0, 44, 23, 6, 0, 45, 23, 6, 0, 45, 23, 6, 0, 45, 22, 6, 0, 46, 22, 6, 0, 46, 22, 6, 0, 46, 22, 5, 0, 47, 22, 5, 0, 47, 22, 5, 0, 47, 21, 5, 0, 48, 21, 5, 0, 48, 21, 5, 0, 48, 21, 5, 0, 49, 21, 5, 0, 49, 26, 5, 0, 49, 25, 5, 0, 50, 25, 5, 0, 50, 25, 5, 0, 50, 25, 5, 0, 51, 25, 5, 0, 51, 25, 5, 0, 51, 25, 5, 0, 52, 25, 5, 0, 52, 25, 5, 0, 52, 24, 5, 0, 53, 24, 5, 0, 53, 24, 5, 0, 53, 24, 9, 0, 54, 28, 9, 0, 54, 28, 9, 0, 54, 28, 9, 0, 55, 28, 9, 0, 55, 27, 9, 0, 56, 27, 9, 0, 56, 27, 9, 0, 56, 27, 9, 4, 57, 27, 9, 4, 57, 27, 9, 4, 57, 26, 9, 4, 58, 26, 9, 4, 58, 26, 9, 4, 58, 26, 9, 4, 59, 26, 9, 4, 59, 26, 9, 4, 59, 26, 8, 4, 60, 30, 8, 4, 60, 30, 8, 4, 60, 29, 8, 4, 61, 29, 8, 4, 61, 29, 8, 4, 62, 29, 8, 4, 62, 29, 8, 4, 62, 28, 8, 4, 63, 28, 8, 4, 63, 28, 8, 4, 63, 28, 12, 4, 64, 28, 12, 4, 64, 28, 12, 4, 64, 27, 12, 4, 65, 27, 12, 8, 65, 27, 12, 8, 65, 31, 12, 8, 66, 31, 12, 8, 66, 30, 11, 8, 67, 30, 11, 8, 67, 30, 11, 8, 67, 30, 11, 8, 68, 30, 11, 8, 68, 30, 11, 8, 68, 30, 15, 7, 69, 30, 15, 7, 69, 30, 15, 7, 69, 33, 15, 11, 70, 33, 15, 11, 70, 32, 14, 11, 71, 32, 14, 11, 71, 32, 14, 11, 71, 32, 18, 14, 72, 32, 18, 14, 72, 32, 18, 14, 72, 31, 17, 14, 73, 35, 17, 14, 73, 34, 17, 17, 74, 34, 21, 17, 74, 34, 21, 17, 74, 34, 20, 17, 75, 34, 20, 20, 75, 34, 20, 20, 75, 34, 23, 20, 76, 34, 23, 20, 76, 36, 23, 23, 77, 36, 23, 23, 77, 36, 23, 23, 77, 36, 23, 23, 78, 36, 26, 26, 78, 36, 26, 26, 78, 36, 26, 26, 79, 36, 26, 29, 79, 38, 26, 29, 80, 38, 29, 29, 80, 38, 29, 29, 80, 38, 28, 31, 81, 38, 28, 31, 81, 38, 31, 31, 81, 37, 31, 34, 82, 37, 31, 34, 82, 37, 31, 37, 83, 40, 34, 37, 83, 40, 34, 37, 83, 39, 33, 39, 84, 39, 33, 39, 84, 39, 36, 42, 84, 39, 36, 42, 85, 39, 36, 42, 85, 39, 36, 42, 85, 39, 39, 44, 86, 39, 39, 44, 86, 41, 38, 47, 87, 41, 41, 47, 87, 41, 41, 50, 87, 41, 41, 49, 88, 41, 41, 52, 88, 40, 43, 52, 89, 43, 43, 52, 89, 43, 43, 54, 89, 42, 45, 54, 90, 42, 45, 57, 90, 42, 45, 57, 90, 42, 45, 59, 91, 42, 48, 59, 91, 44, 47, 61, 92, 44, 47, 61, 92, 44, 50, 61, 92, 44, 49, 63, 93, 44, 49, 63, 93, 44, 52, 66, 93, 43, 52, 65, 94, 46, 54, 68, 94, 46, 54, 70, 95, 46, 54, 70, 95, 46, 54, 70, 95, 45, 56, 72, 96, 45, 56, 72, 96, 45, 58, 74, 97, 47, 58, 76, 97, 47, 58, 76, 97, 47, 60, 78, 98, 47, 60, 78, 98, 47, 60, 81, 98, 49, 62, 80, 99, 49, 62, 82, 99, 48, 61, 84, 100, 48, 64, 84, 100, 48, 64, 84, 100, 50, 63, 86, 101, 50, 66, 86, 101, 50, 66, 88, 101, 50, 65, 90, 102, 52, 67, 89, 103, 51, 69, 91, 104, 51, 68, 92, 105, 52, 69, 93, 107, 52, 71, 94, 108, 54, 70, 96, 109, 53, 71, 96, 111, 52, 73, 98, 112, 54, 72, 98, 114, 53, 73, 100, 115, 54, 72, 100, 117, 54, 73, 102, 118, 55, 74, 104, 120, 55, 76, 105, 121, 56, 77, 106, 123, 56, 76, 107, 124, 57, 79, 107, 126, 58, 78, 110, 128, 57, 79, 111, 129, 56, 80, 113, 131, 58, 79, 112, 132, 57, 82, 114, 134, 58, 81, 116, 136, 60, 82, 117, 137, 59, 83, 117, 139, 60, 83, 119, 141, 59, 84, 120, 142, 60, 85, 122, 144, 59, 86, 122, 146, 60, 86, 126, 148, 62, 87, 127, 149, 61, 88, 127, 151, 62, 88, 128, 153, 63, 89, 130, 155, 62, 90, 131, 156, 63, 90, 132, 158, 64, 91, 134, 160, 65, 91, 135, 162, 64, 92, 136, 163, 63, 93, 138, 165, 66, 95, 139, 167, 65, 95, 140, 169, 66, 95, 142, 171, 67, 96, 142, 172, 66, 97, 144, 174, 67, 99, 145, 176, 67, 97, 148, 178, 67, 99, 147, 180, 68, 100, 149, 181, 68, 100, 150, 183, 69, 101, 152, 185, 70, 102, 153, 187, 71, 103, 155, 188, 70, 103, 156, 190, 70, 104, 157, 192, 71, 105, 158, 194, 71, 106, 160, 195, 72, 106, 161, 197, 72, 108, 161, 199, 73, 108, 163, 200, 73, 109, 164, 202, 74, 109, 165, 204, 74, 110, 167, 206, 75, 111, 168, 207, 74, 112, 170, 209, 75, 112, 170, 210, 76, 113, 171, 212, 76, 114, 173, 214, 77, 115, 174, 215, 78, 115, 175, 217, 78, 116, 175, 218, 78, 117, 177, 220, 78, 118, 178, 221, 79, 118, 180, 223, 80, 120, 180, 224, 81, 120, 181, 226, 81, 120, 182, 227, 82, 121, 184, 229, 82, 122, 185, 230, 84, 123, 186, 232, 83, 123, 187, 233, 84, 124, 189, 234, 84, 125, 188, 235, 85, 126, 189, 237, 86, 126, 190, 238, 86, 127, 191, 239, 87, 127, 192, 240, 87, 129, 193, 242, 88, 129, 194, 243, 89, 130, 195, 244, 90, 131, 196, 245, 90, 132, 197, 246, 91, 132, 197, 247, 92, 133, 198, 248, 92, 134, 199, 249, 93, 135, 200, 250, 94, 136, 201, 251, 95, 137, 202, 252, 96, 138, 203, 253, 97, 140, 204, 254, 98, 141, 205, 254, 99, 142, 206, 255, 101, 143, 207, 255, 102, 144, 208, 255, 103, 146, 209, 255, 104, 147, 209, 255, 106, 148, 210, 255, 107, 149, 211, 255, 108, 151, 212, 255, 110, 152, 213, 255, 111, 153, 213, 255, 112, 154, 214, 255, 114, 156, 215, 255, 115, 157, 215, 255, 117, 158, 216, 255, 118, 160, 217, 255, 120, 161, 217, 255, 121, 162, 218, 255, 123, 164, 218, 255, 124, 165, 219, 255, 125, 166, 219, 255, 127, 167, 220, 255, 129, 169, 220, 255, 130, 170, 221, 255, 132, 171, 221, 255, 133, 173, 222, 255, 134, 174, 222, 255, 136, 175, 223, 255, 139, 178, 224, 255, 142, 180, 224, 255, 144, 182, 225, 255, 147, 185, 226, 255, 150, 187, 226, 255, 153, 189, 227, 255, 155, 191, 228, 255, 158, 194, 228, 255, 160, 196, 229, 255, 163, 198, 229, 255, 165, 200, 230, 255, 168, 202, 231, 255, 170, 203, 231, 255, 172, 205, 232, 255, 174, 207, 232, 255, 176, 209, 233, 255, 178, 210, 234, 255, 180, 212, 234, 255, 182, 214, 235, 255, 184, 215, 236, 255, 186, 217, 237, 255, 188, 219, 238, 255, 190, 220, 238, 255, 192, 221, 239, 255, 193, 222, 240, 255, 194, 224, 240, 255, 196, 225, 241, 255, 197, 226, 241, 255, 198, 226, 242, 255, 199, 227, 242, 255, 200, 228, 242, 255, 201, 228, 243, 255, 202, 229, 243, 255, 203, 230, 243, 255, 204, 230, 244, 255, 205, 231, 244, 255, 207, 232, 244, 255, 208, 233, 245, 255, 209, 233, 245, 255, 211, 234, 246, 255, 213, 235, 246, 255, 217, 238, 247, 255, 222, 240, 248, 255, 226, 242, 249, 255, 231, 245, 250, 255, 236, 247, 251, 255, 241, 249, 252, 255, 245, 251, 253, 255, 249, 252, 254, 255, 255, 255, 255, 255]);

// node_modules/@arcgis/core/views/3d/environment/LocalAtmosphere.js
var d33 = class {
  constructor(e65, t68) {
    this.type = a39.Local, this._configuration = new i25(), this._passParameters = new g11(), this._configuration.geometry = r35.Cylinder, this._technique = t68.techniqueRepository.acquire(h21, this._configuration);
    const r62 = t68.renderContext.rctx;
    this._vao = this._createVertexArrayObject(r62), this._vaoCount = n20(this._vao, "geometry");
    const p54 = new e20();
    p54.wrapMode = D2.CLAMP_TO_EDGE, p54.flipped = true, p54.width = 1, p54.height = 512, this._passParameters.texture = new T8(r62, p54, e31);
  }
  destroy() {
    this._passParameters.texture = t2(this._passParameters.texture), this._vao.dispose(), this._technique.release();
  }
  render(e65) {
    const t68 = e65.rctx, r62 = t68.bindTechnique(this._technique, this._passParameters, e65.bindParameters);
    y14(v15, e65.bindParameters.camera.viewMatrix), r62.setUniformMatrix4fv("view", v15), t68.bindVAO(this._vao), r62.assertCompatibleVertexAttributeLocations(this._vao), t68.drawArrays(E5.TRIANGLES, 0, this._vaoCount);
  }
  renderHaze() {
    return false;
  }
  _createVertexArrayObject(e65) {
    const t68 = st(1, 2, false), r62 = t68.indices[0][1], s69 = t68.vertexAttributes[0][1];
    for (let a67 = 0; a67 < r62.length; a67 += 3) {
      const e66 = r62[a67];
      r62[a67] = r62[a67 + 2], r62[a67 + 2] = e66;
    }
    const o61 = s69.data, i60 = T12.createBuffer(r62.length), m44 = i60.position;
    for (let a67 = 0; a67 < r62.length; ++a67) {
      const e66 = 3 * r62[a67];
      m44.set(a67, 0, o61[e66]), m44.set(a67, 1, o61[e66 + 1]), m44.set(a67, 2, o61[e66 + 2]);
    }
    return new r26(e65, E7, { geometry: r15(T12) }, { geometry: c12.createVertex(e65, F6.STATIC_DRAW, i60.buffer) });
  }
};
function y14(e65, r62) {
  n10(e65, r62), e65[12] = 0, e65[13] = 0, e65[14] = 0, e65[15] = 1;
}
var v15 = e15();
var T12 = H4().vec3f(O3.POSITION);

// node_modules/@arcgis/core/views/3d/environment/resources/MarsAtmosphereTexture.js
var e32 = new Uint8ClampedArray([0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 12, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 16, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 19, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 22, 11, 0, 0, 23, 11, 0, 0, 23, 11, 0, 0, 23, 11, 0, 0, 23, 11, 0, 0, 24, 11, 0, 0, 24, 11, 0, 0, 24, 10, 0, 0, 25, 10, 0, 0, 25, 10, 0, 0, 26, 10, 0, 0, 26, 9, 0, 0, 27, 9, 0, 0, 27, 9, 0, 0, 28, 9, 0, 0, 28, 9, 0, 0, 29, 9, 0, 0, 29, 8, 0, 0, 30, 8, 0, 0, 30, 8, 0, 0, 31, 8, 0, 0, 31, 8, 0, 0, 32, 8, 0, 0, 32, 8, 0, 0, 32, 8, 0, 0, 32, 8, 0, 0, 33, 8, 0, 0, 33, 8, 0, 0, 34, 7, 0, 0, 35, 7, 0, 0, 35, 7, 0, 0, 36, 7, 0, 0, 36, 7, 7, 0, 37, 7, 7, 0, 37, 7, 7, 0, 38, 7, 7, 0, 38, 13, 7, 0, 39, 13, 7, 0, 39, 13, 6, 0, 40, 13, 6, 0, 40, 12, 6, 0, 41, 12, 6, 0, 41, 12, 6, 0, 41, 12, 6, 0, 42, 12, 6, 0, 42, 12, 6, 0, 43, 12, 6, 0, 43, 12, 6, 0, 44, 12, 6, 0, 44, 11, 6, 0, 45, 11, 6, 6, 45, 11, 6, 6, 46, 11, 5, 5, 47, 11, 5, 5, 47, 11, 5, 5, 48, 11, 5, 5, 48, 10, 5, 5, 49, 10, 5, 5, 49, 10, 5, 5, 50, 15, 5, 5, 51, 15, 5, 5, 51, 15, 5, 5, 51, 15, 5, 5, 51, 15, 5, 5, 52, 15, 5, 5, 52, 14, 5, 5, 53, 14, 5, 5, 54, 14, 5, 5, 54, 14, 5, 5, 55, 14, 5, 5, 55, 14, 5, 5, 56, 13, 4, 4, 57, 13, 4, 4, 57, 13, 4, 4, 58, 13, 4, 4, 58, 13, 4, 4, 59, 13, 4, 4, 59, 17, 4, 4, 60, 17, 4, 4, 60, 17, 4, 4, 60, 17, 4, 4, 61, 17, 4, 4, 61, 16, 4, 4, 62, 16, 4, 4, 63, 16, 4, 4, 63, 16, 8, 4, 64, 16, 8, 4, 64, 16, 8, 4, 65, 15, 8, 4, 66, 15, 8, 4, 66, 15, 8, 4, 67, 19, 8, 4, 68, 19, 8, 4, 68, 18, 7, 4, 69, 18, 7, 4, 69, 18, 7, 4, 69, 18, 7, 4, 70, 18, 7, 4, 70, 18, 7, 4, 71, 18, 7, 4, 71, 18, 7, 4, 72, 17, 7, 3, 73, 17, 7, 3, 73, 21, 7, 3, 74, 21, 7, 3, 74, 20, 7, 3, 75, 20, 7, 3, 76, 20, 7, 3, 76, 20, 7, 3, 77, 20, 7, 3, 77, 20, 7, 3, 78, 20, 7, 3, 78, 20, 7, 7, 78, 19, 6, 6, 79, 19, 10, 6, 80, 19, 10, 6, 80, 22, 9, 6, 81, 22, 9, 6, 81, 22, 9, 6, 82, 22, 9, 6, 83, 22, 9, 6, 83, 21, 9, 6, 84, 21, 9, 6, 84, 21, 9, 6, 85, 21, 9, 6, 86, 21, 9, 6, 86, 23, 9, 6, 87, 23, 9, 6, 87, 23, 9, 6, 87, 23, 9, 6, 88, 23, 9, 6, 88, 23, 9, 6, 89, 23, 8, 6, 90, 23, 8, 6, 90, 22, 8, 6, 91, 22, 8, 6, 91, 25, 8, 6, 92, 25, 8, 5, 93, 25, 8, 5, 93, 24, 8, 5, 94, 24, 8, 5, 94, 24, 11, 5, 95, 24, 11, 5, 96, 24, 11, 5, 96, 26, 11, 5, 97, 26, 11, 5, 97, 26, 11, 5, 97, 26, 10, 5, 98, 26, 10, 5, 98, 26, 10, 5, 99, 25, 10, 5, 100, 25, 10, 5, 100, 25, 10, 5, 101, 25, 10, 5, 101, 25, 10, 5, 102, 27, 10, 5, 103, 27, 10, 5, 103, 27, 10, 5, 104, 27, 10, 5, 104, 27, 12, 5, 105, 26, 12, 5, 106, 26, 12, 5, 106, 29, 12, 5, 106, 29, 12, 5, 106, 29, 12, 7, 107, 28, 12, 7, 108, 28, 12, 7, 108, 28, 12, 7, 109, 28, 12, 7, 109, 30, 12, 7, 110, 30, 11, 7, 111, 30, 11, 7, 111, 30, 11, 7, 112, 30, 11, 7, 112, 29, 11, 7, 113, 29, 11, 7, 114, 29, 11, 7, 114, 31, 11, 7, 115, 31, 11, 7, 115, 31, 11, 7, 115, 31, 11, 7, 116, 31, 11, 7, 116, 33, 13, 7, 117, 33, 13, 9, 117, 32, 13, 9, 118, 32, 13, 9, 118, 32, 13, 9, 119, 34, 15, 8, 120, 34, 15, 8, 120, 34, 15, 8, 121, 36, 15, 8, 121, 36, 15, 8, 122, 36, 15, 8, 122, 35, 15, 8, 123, 37, 14, 8, 124, 37, 14, 8, 124, 37, 14, 8, 124, 37, 14, 8, 124, 39, 14, 8, 125, 39, 16, 8, 125, 38, 16, 8, 126, 38, 16, 8, 127, 38, 16, 8, 127, 40, 16, 10, 128, 40, 16, 10, 128, 40, 16, 10, 129, 42, 18, 10, 129, 41, 18, 10, 130, 41, 18, 10, 130, 43, 18, 10, 131, 43, 18, 10, 131, 42, 17, 10, 132, 42, 17, 12, 132, 42, 17, 12, 133, 44, 17, 12, 133, 44, 17, 12, 133, 46, 17, 11, 134, 46, 17, 11, 134, 45, 19, 11, 135, 45, 19, 11, 135, 47, 19, 11, 136, 47, 19, 11, 136, 47, 19, 11, 137, 47, 19, 11, 137, 48, 20, 11, 138, 48, 20, 11, 138, 50, 20, 13, 139, 50, 20, 13, 139, 49, 20, 13, 140, 49, 22, 13, 140, 51, 22, 13, 141, 51, 22, 13, 141, 50, 22, 13, 142, 52, 22, 13, 142, 52, 21, 12, 143, 53, 21, 12, 143, 53, 21, 12, 143, 53, 21, 12, 143, 53, 21, 14, 144, 53, 23, 14, 144, 55, 23, 14, 145, 55, 23, 14, 145, 56, 23, 14, 146, 56, 23, 14, 146, 57, 24, 14, 147, 57, 24, 14, 147, 59, 24, 16, 148, 59, 24, 16, 148, 58, 24, 15, 149, 58, 26, 15, 149, 58, 26, 15, 149, 60, 26, 15, 150, 60, 26, 15, 150, 61, 25, 15, 151, 61, 25, 15, 151, 62, 25, 17, 152, 62, 25, 17, 152, 64, 25, 17, 152, 64, 27, 17, 152, 63, 27, 17, 153, 63, 27, 17, 153, 65, 27, 17, 153, 66, 28, 17, 154, 66, 28, 17, 154, 67, 28, 16, 155, 67, 28, 16, 155, 67, 30, 16, 155, 69, 29, 18, 156, 69, 29, 18, 156, 68, 29, 18, 157, 70, 29, 18, 157, 70, 29, 18, 157, 71, 31, 18, 158, 71, 31, 18, 158, 72, 30, 19, 159, 72, 30, 19, 159, 74, 30, 19, 159, 73, 30, 19, 160, 73, 32, 19, 160, 74, 32, 19, 161, 74, 32, 21, 161, 76, 32, 21, 161, 78, 33, 21, 161, 78, 33, 21, 161, 79, 35, 20, 162, 78, 34, 20, 163, 79, 34, 22, 164, 81, 36, 22, 164, 82, 36, 22, 165, 81, 35, 22, 166, 82, 37, 21, 167, 84, 37, 21, 167, 85, 36, 21, 168, 86, 38, 23, 169, 88, 38, 23, 169, 88, 38, 23, 170, 88, 39, 23, 170, 89, 39, 24, 171, 91, 40, 24, 171, 92, 40, 24, 172, 93, 40, 24, 173, 94, 41, 25, 173, 95, 41, 25, 174, 96, 42, 25, 175, 98, 42, 25, 175, 99, 43, 26, 176, 99, 43, 26, 177, 101, 45, 26, 177, 102, 44, 26, 178, 103, 46, 27, 179, 104, 46, 27, 179, 105, 46, 27, 179, 106, 45, 28, 180, 108, 47, 28, 180, 108, 46, 28, 181, 109, 48, 28, 182, 111, 48, 29, 182, 111, 49, 29, 183, 114, 49, 29, 184, 114, 50, 30, 184, 114, 50, 30, 185, 116, 51, 30, 185, 117, 51, 30, 186, 119, 52, 31, 187, 119, 53, 31, 187, 121, 53, 31, 188, 122, 54, 33, 188, 123, 54, 32, 189, 124, 55, 32, 189, 125, 55, 32, 189, 126, 56, 34, 190, 128, 56, 34, 190, 128, 57, 33, 191, 130, 57, 33, 191, 131, 58, 35, 192, 131, 58, 35, 192, 133, 59, 34, 193, 134, 60, 35, 194, 135, 60, 35, 194, 136, 61, 37, 195, 139, 61, 37, 195, 139, 62, 36, 196, 141, 62, 36, 196, 141, 63, 38, 197, 142, 63, 38, 197, 143, 64, 39, 198, 144, 64, 39, 198, 146, 66, 39, 198, 146, 67, 39, 198, 147, 67, 38, 199, 147, 68, 40, 199, 149, 68, 40, 200, 150, 69, 40, 200, 152, 70, 41, 201, 154, 71, 41, 201, 154, 71, 42, 202, 155, 72, 42, 202, 156, 73, 41, 203, 157, 73, 43, 203, 158, 74, 42, 204, 160, 75, 44, 204, 161, 76, 44, 204, 162, 77, 44, 205, 164, 77, 45, 205, 165, 78, 45, 206, 166, 79, 45, 206, 168, 80, 46, 207, 169, 81, 46, 207, 170, 83, 47, 207, 171, 83, 47, 207, 172, 83, 47, 207, 174, 85, 48, 208, 175, 85, 48, 208, 177, 85, 48, 209, 178, 87, 49, 209, 180, 87, 49, 210, 181, 87, 49, 210, 182, 89, 50, 210, 182, 89, 50, 211, 185, 91, 50, 211, 186, 91, 51, 212, 186, 93, 51, 212, 189, 94, 52, 212, 190, 95, 51, 213, 192, 96, 51, 213, 193, 96, 53, 213, 194, 97, 52, 214, 195, 98, 54, 214, 197, 98, 55, 215, 198, 100, 55, 215, 199, 101, 55, 215, 200, 102, 55, 216, 202, 103, 55, 216, 203, 104, 55, 216, 204, 105, 57, 216, 205, 106, 57, 216, 207, 107, 58, 216, 208, 108, 58, 217, 209, 109, 59, 217, 210, 110, 60, 217, 211, 111, 60, 218, 212, 112, 61, 218, 213, 113, 61, 218, 214, 114, 62, 219, 217, 115, 63, 219, 217, 116, 64, 219, 218, 118, 64, 220, 219, 119, 65, 220, 220, 121, 66, 220, 222, 121, 67, 221, 222, 122, 67, 221, 222, 123, 68, 221, 223, 124, 69, 222, 224, 125, 70, 222, 225, 127, 71, 222, 226, 128, 72, 223, 228, 129, 73, 223, 228, 130, 74, 223, 229, 132, 75, 223, 230, 135, 79, 224, 231, 138, 81, 224, 233, 141, 84, 224, 233, 144, 87, 225, 235, 147, 91, 225, 236, 150, 94, 225, 237, 154, 97, 225, 238, 158, 102, 225, 239, 161, 107, 225, 239, 165, 110, 225, 240, 168, 114, 226, 241, 172, 118, 226, 241, 176, 122, 226, 241, 181, 126, 226, 242, 183, 130, 227, 243, 186, 135, 227, 243, 190, 139, 227, 244, 194, 143, 227, 244, 197, 147, 228, 244, 200, 150, 228, 245, 204, 154, 228, 245, 207, 157, 228, 245, 210, 161, 229, 246, 212, 164, 229, 246, 215, 167, 229, 246, 217, 169, 229, 246, 220, 172, 230, 247, 221, 174, 230]);

// node_modules/@arcgis/core/views/3d/environment/MarsAtmosphere.js
var L8 = 128;
var E16 = -o33;
var G8 = 0;
var H7 = 50;
var N7 = () => 1 - 511 / 512;
var B6 = U5([[50, 0.1015625], [500, 0.21875], [5e3, 1 - 250 / 512], [5e4, 0.4140625]]);
var z10 = class {
  constructor(e65, t68) {
    this.view = e65, this.type = a39.Mars, this._passParameters = new g11(), this._vaoCount = 0, this._texV1 = 1;
    const s69 = A3(e65.spatialReference);
    this._planetRadius = s69.radius, this._outerRimWidth = s69.outerAtmosphereRimWidth, this._innerRimFactor = (this._planetRadius + E16) / this._planetRadius, this._middleRimFactor = (this._planetRadius + G8) / this._planetRadius, this._outerRimFactor = (this._planetRadius + this._outerRimWidth) / this._planetRadius, this._texV0 = G8 / this._outerRimWidth, this._texVScale = this._texV1 - this._texV0, this._techniqueRepository = t68.techniqueRepository;
    const o61 = t68.renderContext.rctx;
    this._cameraChangeHandle = l6(() => {
      var _a;
      return (_a = this.view.state) == null ? void 0 : _a.camera;
    }, () => t68.requestRender(), w3), this._vao = this._createRibbon(o61), this._vaoCount = n20(this._vao, "geometry"), this._fadeVao = f14(o61), this._fadeVaoCount = n20(this._fadeVao, "geometry");
    const a67 = new e20();
    a67.wrapMode = D2.CLAMP_TO_EDGE, a67.flipped = true, a67.width = 1, a67.height = 512, this._passParameters.texture = new T8(o61, a67, e32);
    const n77 = new i25();
    n77.geometry = r35.Cone, this._coneTechnique = this._techniqueRepository.acquire(h21, n77), n77.geometry = r35.Underground, this._undergroundTechnique = this._techniqueRepository.acquire(h21, n77);
  }
  destroy() {
    this._coneTechnique.release(), this._undergroundTechnique.release(), this._cameraChangeHandle.remove(), this._passParameters.texture = t2(this._passParameters.texture), this._fadeVao.dispose(), this._vao.dispose();
  }
  render(e65) {
    const t68 = e65.bindParameters.camera;
    this._update(t68);
    const s69 = e65.rctx;
    this._passParameters.undergroundFadeAlpha < 1 && (s69.bindTechnique(this._coneTechnique, this._passParameters, e65.bindParameters), s69.bindVAO(this._vao), s69.drawArrays(E5.TRIANGLES, 0, this._vaoCount)), this._passParameters.undergroundFadeAlpha > 0 && (s69.bindTechnique(this._undergroundTechnique, this._passParameters, e65.bindParameters), s69.bindVAO(this._fadeVao), s69.drawArrays(E5.TRIANGLE_STRIP, 0, this._fadeVaoCount));
  }
  renderHaze() {
  }
  _update(s69) {
    const r62 = n7(), i60 = this._planetRadius, o61 = s7(s69.eye), a67 = o61 - i60;
    if (a67 < 0) {
      const e65 = Math.min(-a67 / 5e3, 1);
      this._passParameters.undergroundFadeAlpha = e65;
    } else
      this._passParameters.undergroundFadeAlpha = 0;
    const p54 = Math.max(H7, a67), u51 = i60 + E16;
    this._passParameters.innerScale = Y4(i60 + p54, i60, u51) - 1, this._passParameters.altitudeFade = e28(a67), g2(r62, s69.eye, (i60 + H7) / o61), J5(r62, s69.center, s69.up, i60, this._passParameters.silhouette);
    const c58 = this._computeScreenRimWidth(s69, r62, s69.up, this._passParameters.silhouette), _33 = N7(), d52 = B6(a67);
    let f49 = this._texV0 + _33 * this._texVScale, g36 = this._texV0 + c58 * d52 * this._texVScale;
    if (a67 > H7) {
      J5(s69.eye, s69.center, s69.up, i60, this._passParameters.silhouette);
      const r63 = this._computeScreenRimWidth(s69, s69.eye, s69.up, this._passParameters.silhouette), o62 = i3((r63 - 1.5) / (c58 - 1.5), 0, 1);
      f49 = this._texV0 + o62 * _33 * this._texVScale, g36 = this._texV0 + s9(this._texV1, c58 * d52, o62) * this._texVScale;
    }
    r13(this._passParameters.texV, f49, g36);
  }
  _createRibbon(e65) {
    const t68 = t14(3 + 3 * L8 * 3), s69 = new Uint32Array(3 * L8 * 5);
    t68[0] = 0, t68[1] = 0, t68[2] = -1;
    for (let o61 = 0; o61 < L8; o61++) {
      const e66 = 9 * o61 + 3;
      t68[e66] = o61, t68[e66 + 1] = this._innerRimFactor, t68[e66 + 2] = -1, t68[e66 + 3] = o61, t68[e66 + 4] = this._middleRimFactor, t68[e66 + 5] = 0, t68[e66 + 6] = o61, t68[e66 + 7] = this._outerRimFactor, t68[e66 + 8] = 1;
      const r63 = 3 * o61 + 1, i61 = o61 === L8 - 1 ? 1 : r63 + 3, a67 = 15 * o61;
      s69[a67] = r63, s69[a67 + 1] = r63 + 1, s69[a67 + 2] = i61 + 1, s69[a67 + 3] = i61 + 1, s69[a67 + 4] = i61, s69[a67 + 5] = r63, s69[a67 + 6] = r63 + 1, s69[a67 + 7] = r63 + 2, s69[a67 + 8] = i61 + 2, s69[a67 + 9] = i61 + 2, s69[a67 + 10] = i61 + 1, s69[a67 + 11] = r63 + 1, s69[a67 + 12] = r63, s69[a67 + 13] = i61, s69[a67 + 14] = 0;
    }
    const r62 = Z3.createBuffer(s69.length), i60 = r62.position;
    for (let o61 = 0; o61 < s69.length; ++o61) {
      const e66 = 3 * s69[o61];
      i60.set(o61, 0, t68[e66]), i60.set(o61, 1, t68[e66 + 1]), i60.set(o61, 2, t68[e66 + 2]);
    }
    return new r26(e65, E7, { geometry: r15(Z3) }, { geometry: c12.createVertex(e65, F6.STATIC_DRAW, r62.buffer) });
  }
  _computeScreenRimWidth(e65, t68, s69, r62) {
    return u2(Q2, r62.center, r62.v2), g2(X4, Q2, this._outerRimFactor), k3(K4, t68, Q2, s69), u3(Q2, K4, e65.projectionMatrix, e65.viewport, Q2), u3(X4, K4, e65.projectionMatrix, e65.viewport, X4), x2(Q2, X4) / e65.height;
  }
};
function J5(e65, t68, s69, r62, i60) {
  const o61 = s7(e65), a67 = r62 * Math.sqrt(o61 * o61 - r62 * r62) / o61, n77 = Math.sqrt(r62 * r62 - a67 * a67), p54 = i60.v1, u51 = i60.v2;
  return g2(i60.center, e65, n77 / o61), _(p54, e65, t68), v3(p54) < 1 && _(p54, e65, s69), g2(p54, p54, a67 / s7(p54)), _(u51, p54, e65), g2(u51, u51, a67 / s7(u51)), a67;
}
var K4 = e15();
var Q2 = n7();
var X4 = n7();
function Y4(e65, t68, s69) {
  return e65 * e65 / (Math.sqrt(e65 * e65 - t68 * t68) * Math.sqrt(e65 * e65 - s69 * s69) + t68 * s69);
}
var Z3 = H4().vec3f(O3.POSITION);

// node_modules/@arcgis/core/views/3d/environment/PrecipitationTechnique.js
var g13 = class extends n21 {
  constructor() {
    super(...arguments), this.time = 0, this.radius = 1, this.width = 500, this.opacity = 1;
  }
};
var d34 = class _d extends e22 {
  initializeProgram(e65) {
    return new i13(e65.rctx, _d.shader.get().build(this.configuration), h22);
  }
  initializePipeline() {
    return W3({ blending: l14(R4.ONE, R4.ONE, R4.ONE_MINUS_SRC_ALPHA, R4.ONE_MINUS_SRC_ALPHA), depthTest: { func: I4.LEQUAL }, colorWrite: _6 });
  }
};
d34.shader = new t16(A15, () => import("./Precipitation.glsl-BIBD654J.js"));
var h22 = /* @__PURE__ */ new Map([[O3.POSITION, 0], [O3.INSTANCEFEATUREATTRIBUTE, 1]]);

// node_modules/@arcgis/core/views/3d/environment/Precipitation.js
var A18 = class extends m {
  constructor(e65) {
    super(e65), this._numParticles = 25e4, this._rainSpeed = 0.1, this._snowSpeed = 0.01, this._passParameters = new g13(), this._animation = new e21(), this._updatingTracking = new c5(), this._passParameters.time = 0, this._passParameters.radius = A3(e65.view.spatialReference).radius, this._techniqueRepository = e65.context.techniqueRepository;
  }
  destroy() {
    this._updatingTracking.destroy(), this._numParticles = 0, this._snowTechniqueCached = f(this._snowTechniqueCached), this._rainTechniqueCached = f(this._rainTechniqueCached), this._vao = t2(this._vao), this._instanceIdBuffer = t2(this._instanceIdBuffer);
  }
  get updating() {
    return this._updatingTracking.updating;
  }
  get _rainTechnique() {
    if (null == this._rainTechniqueCached) {
      const e65 = new i26();
      e65.type = t33.Rain, this._rainTechniqueCached = this._techniqueRepository.acquire(d34, e65);
    }
    return this._rainTechniqueCached;
  }
  get _snowTechnique() {
    if (null == this._snowTechniqueCached) {
      const e65 = new i26();
      e65.type = t33.Snow, this._snowTechniqueCached = this._techniqueRepository.acquire(d34, e65);
    }
    return this._snowTechniqueCached;
  }
  update(e65) {
    return this._animation.advance(e65);
  }
  render(e65, t68, r62) {
    var _a;
    const s69 = "rainy" === r62 ? this._rainTechnique : this._snowTechnique;
    if (!s69.compiled)
      return void this.context.requestRender();
    const o61 = e65.rctx;
    if (this._ensureResources(o61), null == s69 || null == this._vao || null == this._instanceIdBuffer)
      return;
    if (null != e65.bindParameters.cloudsFade.data && (this._passParameters.opacity = 1 - e65.bindParameters.cloudsFade.fadeInOutHeight.factor), this._passParameters.opacity <= 0)
      return;
    const a67 = 0.35;
    t68 = t68 < 0.5 ? s9(0, a67, 2 * t68) : s9(a67, 1, 2 * (t68 - 0.5)), this._passParameters.time = ("rainy" === r62 ? this._rainSpeed : this._snowSpeed) * u(this._animation.time) % 1e5;
    const c58 = o61.bindTechnique(s69, this._passParameters, e65.bindParameters);
    o61.bindVAO(this._vao), c58.assertCompatibleVertexAttributeLocations(this._vao), R6(o61, h22, this._instanceIdBuffer, P10, 0), (_a = o61.capabilities.instancing) == null ? void 0 : _a.drawArraysInstanced(E5.TRIANGLES, 0, 3, this._numParticles * t68), o17(o61, h22, this._instanceIdBuffer, P10);
  }
  _ensureResources(e65) {
    null == this._vao && (this._vao = this._createVertexArrayObject(e65)), null == this._instanceIdBuffer && (this._instanceIdBuffer = this._createInstanceIndices(e65));
  }
  _createInstanceIndices(e65) {
    const t68 = [];
    for (let i60 = 0; i60 < this._numParticles; i60++)
      t68.push(i60);
    return c12.createVertex(e65, F6.STATIC_DRAW, new Float32Array(t68));
  }
  _createVertexArrayObject(e65) {
    const t68 = new Float32Array([-1, 0, 1, 1, 0, -1, 1, 0, 1]);
    return new r26(e65, h22, { geometry: r15(v16) }, { geometry: c12.createVertex(e65, F6.STATIC_DRAW, t68) });
  }
};
e([y2({ constructOnly: true })], A18.prototype, "context", void 0), e([y2({ constructOnly: true })], A18.prototype, "view", void 0), e([y2({ readOnly: true })], A18.prototype, "updating", null), e([y2()], A18.prototype, "_updatingTracking", void 0), A18 = e([a4("esri.views.3d.environment.Precipitation")], A18);
var v16 = H4().vec3f(O3.POSITION);
var P10 = r15(H4().f32(O3.INSTANCEFEATUREATTRIBUTE), 1);

// node_modules/@arcgis/core/views/3d/environment/StarsTechnique.js
var d35 = class extends n21 {
  constructor() {
    super(...arguments), this.modelMatrix = e15();
  }
};
var h23 = class _h extends e22 {
  constructor(e65) {
    super(e65, new t18(), () => this.destroy());
  }
  initializeProgram(e65) {
    return new i13(e65.rctx, _h.shader.get().build(), E7);
  }
  initializePipeline() {
    return W3({ blending: l14(R4.SRC_ALPHA, R4.ONE, R4.ONE_MINUS_SRC_ALPHA, R4.ONE_MINUS_SRC_ALPHA), depthTest: { func: I4.LEQUAL }, colorWrite: _6 });
  }
};
h23.shader = new t16(f20, () => import("./Stars.glsl-FCYUAALG.js"));

// node_modules/@arcgis/core/views/3d/environment/Stars.js
var x16 = class extends m {
  get updating() {
    return this._updatingTracking.updating || this.loading;
  }
  get loading() {
    return null != this._loadDataTask && !this._loadDataTask.finished;
  }
  constructor(t68) {
    super(t68), this._loadDataTask = null, this._numPoints = 0, this._renderParameter = new d35(), this._updatingTracking = new c5();
  }
  initialize() {
    this._loadDataTask = this._createLoadDataTask();
  }
  destroy() {
    this._loadDataTask = e2(this._loadDataTask), this._updatingTracking.destroy(), this._numPoints = 0, this._technique = f(this._technique), this._vao = t2(this._vao), L9 = null;
  }
  render(t68) {
    const { rctx: e65 } = t68;
    if (this._ensureResources(e65), null == this._technique || null == this._vao)
      return;
    if (!this._technique.compiled)
      return void this.requestRender();
    const r62 = e65.bindTechnique(this._technique, this._renderParameter, t68.bindParameters);
    e65.bindVAO(this._vao), r62.assertCompatibleVertexAttributeLocations(this._vao), e65.drawArrays(E5.POINTS, 0, this._numPoints);
  }
  _ensureResources(t68) {
    if (null != this._technique || null == L9)
      return;
    this._technique = new h23({ rctx: t68, viewingMode: this.view.state.viewingMode }), this._numPoints = L9.byteLength / I12;
    const e65 = new Float32Array(L9, 0, 2 * this._numPoints), r62 = new Uint8Array(L9, 2 * this._numPoints * 4, this._numPoints);
    this._vao = this._createVertexArrayObject(t68, e65, r62, this._numPoints), this._updatingTracking.add(() => "virtual" !== this.view.environment.lighting.type ? this.view.environment.lighting.date : null, (t69) => this._update(t69), h3);
  }
  _computeDayDuration(t68) {
    const e65 = t68, r62 = new Date(t68.getFullYear(), 0, 1, 11, 58, 56);
    return (+e65 - +r62) / (+new Date(t68.getFullYear() + 1, 0, 1, 11, 58, 55) - +r62);
  }
  _update(t68) {
    if (!t68)
      return;
    const e65 = (t68.getHours() / 12 + t68.getMinutes() / 60 * (2 / 24) + t68.getSeconds() / 60 * (2 / 1440) - 0.9972222) % 2, r62 = 2 * this._computeDayDuration(t68), s69 = n10(this._renderParameter.modelMatrix, S11);
    x6(s69, s69, -r62 * Math.PI), c3(s69, O10, s69), x6(s69, s69, -e65 * Math.PI), this.requestRender();
  }
  _hexToRGB(t68) {
    return [parseInt(t68.substring(0, 2), 16), parseInt(t68.substring(2, 4), 16), parseInt(t68.substring(4, 6), 16)];
  }
  _unpackUint8Attributes(t68) {
    return t68 >= 192 ? [2.9, t68 - 192] : t68 >= 160 ? [2.5, t68 - 160] : t68 >= 128 ? [2, t68 - 128] : t68 >= 96 ? [1.5, t68 - 96] : t68 >= 64 ? [1, t68 - 64] : t68 >= 32 ? [0.7, t68 - 32] : [0.4, t68];
  }
  _createVertexArrayObject(t68, e65, r62, s69) {
    const i60 = M7.createBuffer(s69), a67 = i60.position, o61 = i60.color, n77 = i60.size;
    for (let c58 = 0; c58 < s69; c58++) {
      const t69 = e65[2 * c58], s70 = e65[2 * c58 + 1];
      a67.set(c58, 0, -Math.cos(t69) * Math.sin(s70)), a67.set(c58, 1, -Math.sin(t69) * Math.sin(s70)), a67.set(c58, 2, -Math.cos(s70));
      const i61 = this._unpackUint8Attributes(r62[c58]), f49 = this._hexToRGB(q6[i61[1]]);
      o61.set(c58, 0, 255 * f49[0]), o61.set(c58, 1, 255 * f49[1]), o61.set(c58, 2, 255 * f49[2]), o61.set(c58, 3, 255), n77.set(c58, i61[0]);
    }
    return new r26(t68, E7, { geometry: r15(M7) }, { geometry: c12.createVertex(t68, F6.STATIC_DRAW, i60.buffer) });
  }
  _createLoadDataTask() {
    if (null != L9)
      return null;
    const t68 = d5(async (t69) => {
      const { data: r62 } = await n9("esri/views/3d/environment/resources/stars.wsv", { responseType: "array-buffer", signal: t69 });
      this._verifyStarData(r62), L9 = r62;
    });
    return t68.promise.catch((t69) => {
      d(t69) || s3.getLogger(this).error(t69);
    }).then(() => {
      this.destroyed || (this.requestRender(), this.notifyChange("updating"));
    }), t68;
  }
  _verifyStarData(t68) {
    if (!t68)
      throw new s4("stars:no-data-received", "Failed to create stars because star catalogue is missing");
    const e65 = t68.byteLength / I12;
    if (e65 % 1 != 0 || e65 > 5e4 || e65 < 5e3)
      throw new s4("stars:invalid-data", "Failed to create stars because star catalogue data is invalid");
  }
};
e([y2({ constructOnly: true })], x16.prototype, "view", void 0), e([y2({ constructOnly: true })], x16.prototype, "requestRender", void 0), e([y2({ readOnly: true })], x16.prototype, "updating", null), e([y2()], x16.prototype, "_loadDataTask", void 0), e([y2()], x16.prototype, "_updatingTracking", void 0), x16 = e([a4("esri.views.3d.environment.Stars")], x16);
var q6 = ["9bb2ff", "9eb5ff", "aabfff", "bbccff", "ccd8ff ", "dae2ff", "e4e9ff", "eeefff", "f8f6ff", "fff9fb", "fff5ef", "fff1e5", "ffeddb", "ffe9d2", "ffe6ca", "ffe3c3", "ffe0bb", "ffddb4", "ffdaad", "ffd6a5", "ffd29c", "ffcc8f", "ffc178", "ffa94b", "ff7b00"];
var O10 = t10(1, 0, 0, 0, 0, 0.9174771405229186, 0.39778850739794974, 0, 0, -0.39778850739794974, 0.9174771405229186, 0, 0, 0, 0, 1);
var S11 = t10(1, 0, 0, 0, 0, 0.9174771405229186, -0.39778850739794974, 0, 0, 0.39778850739794974, 0.9174771405229186, 0, 0, 0, 0, 1);
var I12 = 9;
var M7 = H4().vec3f(O3.POSITION).vec4u8(O3.COLOR).f32(O3.SIZE);
var L9 = null;

// node_modules/@arcgis/core/views/3d/environment/weatherUtils.js
function h24(e65, t68, r62) {
  const o61 = e65.parallax.anchorPointClouds;
  e65.fadeIn.stage === r30.FINISHED && (e65.fadeIn.factor = 0, r5(o61, R9), e65.fadeIn.stage = r30.CHANGE_ANCHOR, e65.crossFade.enabled = false, e65.fadeInOut.stage = I10.FINISHED), e65.fadeIn.stage === r30.CHANGE_ANCHOR && e65.isCameraPositionFinal && (n29(e65.data) && e65.renderingStage !== N4.RENDERING || e65.renderingStage === N4.FADING_TEXTURE_CHANNELS) && (r5(o61, R9), e65.fadeIn.stage = r30.FADE_IN, e65.startTime = t68, e65.renderingStage === N4.FADING_TEXTURE_CHANNELS && (e65.renderingStage = N4.SWITCH_CHANNELS)), e65.fadeIn.factor < 1 && e65.fadeIn.stage === r30.FADE_IN ? e65.fadeIn.factor = r62 ? i3((t68 - e65.startTime) / (G9 * r62), 0, 1) : 1 : e65.fadeIn.factor >= 1 && e65.fadeIn.stage === r30.FADE_IN && (e65.fadeIn.stage = r30.FINISHED, e65.fadeIn.factor = 1);
}
function D7(e65, t68, r62) {
  const { fadeInOut: o61, crossFade: s69 } = e65;
  o61.stage === I10.FINISHED && (e65.startTime = t68, o61.factor = 1, o61.stage = I10.FADE_OUT), o61.factor > 0 && o61.stage === I10.FADE_OUT ? o61.factor = r62 ? 1 - i3((t68 - e65.startTime) / (U9 * r62), 0, 1) : 0 : (o61.factor <= 0 && o61.stage === I10.FADE_OUT && (o61.factor = 0, r5(e65.parallax.anchorPointClouds, R9)), o61.factor <= 0 && o61.stage === I10.FADE_OUT && e65.isCameraPositionFinal && (o61.factor = 0, o61.stage = I10.SWITCH, e65.crossFade.enabled = false, s69.factor = 1), o61.stage === I10.SWITCH && (n29(e65.data) && e65.renderingStage !== N4.RENDERING || e65.renderingStage === N4.FADING_TEXTURE_CHANNELS) && (e65.startTime = t68, o61.factor = 0, o61.stage = I10.FADE_IN, r5(e65.parallax.anchorPointClouds, R9), e65.crossFade.enabled = false, s69.factor = 1, e65.renderingStage === N4.FADING_TEXTURE_CHANNELS && (e65.renderingStage = N4.SWITCH_CHANNELS)), o61.factor < 1 && o61.stage === I10.FADE_IN ? o61.factor = r62 ? i3((t68 - e65.startTime) / (G9 * r62), 0, 1) : 1 : o61.factor >= 1 && o61.stage === I10.FADE_IN && (o61.stage = I10.FINISHED, o61.factor = 1));
}
function T13(e65, t68, r62, o61) {
  const { crossFade: s69 } = e65, d52 = e65.parallax.anchorPointClouds;
  e65.crossFade.enabled && !o61 || (r5(e65.parallaxNew.anchorPointClouds, R9), e65.startTime = t68, s69.factor = 0, e65.crossFade.enabled = true), s69.factor < 1 && e65.crossFade.enabled ? s69.factor = r62 ? i3((t68 - e65.startTime) / (b8 * r62), 0, 1) : 1 : s69.factor >= 1 && e65.crossFade.enabled && (e65.crossFade.enabled = false, s69.factor = 1, r5(d52, e65.parallaxNew.anchorPointClouds), e65.renderingStage === N4.FADING_TEXTURE_CHANNELS && (e65.renderingStage = N4.SWITCH_CHANNELS));
}
function A19(e65, t68, r62, o61) {
  const s69 = e65.fadeInOutHeight, n77 = s69.stage === n30.FINISHED ? r62 : e65.startTimeHeightFade;
  if (0 !== o61) {
    const a67 = (r62 - n77) / (j9 * o61);
    s69.factor += t68 ? -a67 : a67;
  } else
    s69.factor = t68 ? 0 : 1;
  e65.startTimeHeightFade = r62, s69.factor = i3(s69.factor, 0, 1), s69.stage = n30.HEIGHT_FADE;
}
function _13(a67, i60, c58, I28, _33) {
  a67.renderingStage === N4.FINISHED_RENDERING && (a67.renderingStage = N4.FADING_TEXTURE_CHANNELS);
  const p54 = s7(i60.eye);
  a67.fadeInOutHeight.factor < 0 && (a67.fadeInOutHeight.factor = p54 - s12.radius > p25 ? 1 : 0), a67.isCameraPositionFinal = G(a67.cameraPositionLastFrame, i60.eye), z2(R9, i60.eye), g2(R9, R9, s12.radius);
  const G20 = a67.parallax;
  0 === G20.anchorPointClouds[0] && 0 === G20.anchorPointClouds[1] && 0 === G20.anchorPointClouds[2] && r5(G20.anchorPointClouds, R9);
  const U23 = s7(e7(L10, G20.anchorPointClouds, R9));
  let b26 = true;
  if (U23 > a67.fadeIn.distanceThresholdFactor * G20.cloudsHeight || a67.fadeIn.stage !== r30.FINISHED)
    h24(a67, I28, _33);
  else if (U23 > a67.fadeInOut.distanceThresholdFactor * G20.cloudsHeight || a67.fadeInOut.stage !== I10.FINISHED)
    D7(a67, I28, _33);
  else if (U23 > a67.crossFade.distanceThresholdFactor * G20.cloudsHeight || a67.crossFade.enabled || a67.renderingStage === N4.FADING_TEXTURE_CHANNELS) {
    T13(a67, I28, _33, (c58 !== I2.IDLE || !n29(a67.data)) && a67.renderingStage !== N4.FADING_TEXTURE_CHANNELS);
  } else
    b26 = false;
  const j25 = p54 - s12.radius;
  if ((j25 > 1.7 * p25 || j25 < -p25) && a67.fadeInOutHeight.factor < 1 ? a67.fadeInOutHeight.factor = 1 : (j25 > p25 || j25 < -0.35 * p25) && a67.fadeInOutHeight.factor < 1 ? A19(a67, false, I28, _33) : j25 < p25 && j25 > -0.35 * p25 && a67.fadeInOutHeight.factor > 0 ? A19(a67, true, I28, _33) : a67.fadeInOutHeight.stage = n30.FINISHED, a67.renderingStage === N4.SWITCH_CHANNELS && (a67.readChannels = 1 - a67.readChannels, a67.renderingStage = N4.FINISHED), G20.radiusCurvatureCorrectionFactor = 0.84 * Math.sqrt(Math.max(p54 * p54 - s12.radius * s12.radius, 0)) / p54, d9(O11, G20.anchorPointClouds, P11), b2(G20.transform, o11, P11[3], x9(P11)), b26) {
    const { parallaxNew: t68 } = a67;
    d9(O11, t68.anchorPointClouds, P11), b2(t68.transform, o11, P11[3], x9(P11));
  }
  r5(a67.cameraPositionLastFrame, i60.eye);
}
function p27(a67) {
  return a67.crossFade.enabled || a67.fadeInOut.stage !== I10.FINISHED || a67.fadeIn.stage !== r30.FINISHED || a67.fadeInOutHeight.stage !== n30.FINISHED || a67.renderingStage !== N4.FINISHED;
}
var O11 = r4(0, 0, 1);
var P11 = h8();
var R9 = n7();
var L10 = n7();
var G9 = 1;
var U9 = 0.5;
var b8 = 1.3;
var j9 = 1;

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Update.js
var e33;
!function(e65) {
  e65[e65.Immediate = 0] = "Immediate", e65[e65.Faded = 1] = "Faded";
}(e33 || (e33 = {}));

// node_modules/@arcgis/core/views/3d/environment/EnvironmentRenderer.js
var H8;
var V6 = [E8.POSTPROCESSING_ENVIRONMENT_OPAQUE, E8.POSTPROCESSING_ENVIRONMENT_TRANSPARENT];
var k8 = H8 = class extends m {
  constructor(e65) {
    super(e65), this._context = null, this._atmosphere = null, this._oldWeatherParameters = new G10(), this._newWeatherParameters = new G10(), this._fadedWeatherParameters = new G10(), this._weatherParameters = this._newWeatherParameters;
  }
  initialize() {
    this.view._stage.addRenderPlugin(V6, this);
  }
  destroy() {
    var _a;
    this.removeHandles(), this.uninitializeRenderContext(), null != ((_a = this.view) == null ? void 0 : _a._stage) && this.view._stage.removeRenderPlugin(this), this._set("view", null);
  }
  get atmosphere() {
    return this._atmosphere;
  }
  get _atmosphereType() {
    return null != this.atmosphere ? this.atmosphere.type : a39.None;
  }
  get canRender() {
    return !(null === this._atmosphere && null === this._stars);
  }
  get needsLinearDepth() {
    return this._atmosphereType === a39.Realistic;
  }
  updateAnimation(e65) {
    return null != this._precipitation && this._precipitation.update(e65);
  }
  get updating() {
    return null != this._stars && this._stars.updating || null != this._clouds && this._clouds.running;
  }
  get weatherVisible() {
    return s7(this.view.state.camera.eye) - A3(this.view.spatialReference).radius <= p25;
  }
  get _stars() {
    var _a;
    const e65 = this.view, t68 = ((_a = e65.environment) == null ? void 0 : _a.starsEnabled) ?? false, s69 = this._get("_stars");
    return t68 && null != this._context ? null != s69 ? s69 : new x16({ view: e65, requestRender: () => this._setNeedsRender() }) : (l(s69), null);
  }
  get _precipitation() {
    const e65 = this._get("_precipitation");
    if (!this._precipitationEnabled || null == this._context)
      return l(e65), null;
    const t68 = this.view, s69 = this._context;
    return null != e65 && e65.context === s69 ? e65 : (l(e65), new A18({ context: s69, view: t68 }));
  }
  get _clouds() {
    const e65 = this._get("_clouds");
    if (!this.weatherEnabled || null == this._context)
      return l(e65), null;
    if (null != e65)
      return e65;
    const t68 = this.view, s69 = this._context;
    return l(e65), new B5({ context: s69, view: t68, requestRender: () => this._setNeedsRender() });
  }
  get _cloudsComposition() {
    const e65 = this._get("_cloudsComposition");
    if (!this.weatherEnabled || null == this._context)
      return l(e65), null;
    const t68 = this.view.state.viewingMode, s69 = this._context.renderContext.rctx, i60 = A3(this.view.spatialReference).radius;
    return null != e65 && e65.viewingMode === t68 && e65.planetRadius === i60 ? e65 : (l(e65), new u25({ rctx: s69, viewingMode: t68, planetRadius: i60, requestRender: () => this._setNeedsRender() }));
  }
  get _fog() {
    const e65 = this._get("_fog");
    if (!this.weatherEnabled || null == this._context)
      return l(e65), null;
    if (null != e65)
      return e65;
    const t68 = this.view, s69 = this._context, i60 = this._context.renderContext.rctx, a67 = this.view.state.viewingMode;
    return new v14({ context: s69, view: t68, rctx: i60, viewingMode: a67 });
  }
  get weatherEnabled() {
    var _a, _b;
    return !!((_b = (_a = this.view) == null ? void 0 : _a.environmentManager) == null ? void 0 : _b.weatherEnabled);
  }
  get _precipitationEnabled() {
    return this.weatherEnabled && ("rainy" === this.view.environment.weather.type || "snowy" === this.view.environment.weather.type);
  }
  initializeRenderContext(e65 = null) {
    this._context = e65;
    const t68 = () => this._setNeedsRender();
    this.addHandles([l6(() => ({ viewingMode: this.view.state.viewingMode, enabled: this.view.environment.atmosphereEnabled }), (e66) => this._updateAtmosphere(e66), w3), l6(() => this._stars, t68), l6(() => this._precipitation, t68), l6(() => this._clouds, () => this._updateWeather(), h3), l6(() => this._fog, () => this._updateFogHaze(), h3), l6(() => this.view.state.mode, () => {
      this._setNeedsRender();
    }, U3), l6(() => this._weatherUpdateParameters, () => {
      this._updateWeather(), this._updateFogHaze();
    }, w3)]);
  }
  uninitializeRenderContext() {
    this._context = null, this._atmosphere = l(this._atmosphere), this._set("_stars", l(this._stars)), this._set("_precipitation", l(this._precipitation)), this._set("_clouds", l(this._clouds)), this._set("_cloudsComposition", l(this._cloudsComposition)), this._set("_fog", l(this._fog));
  }
  prepareRender(e65) {
    var _a;
    e65.bindParameters.cloudsFade.data = I9(this._clouds) ? this._clouds : null, "local" !== this.view.viewingMode && null != ((_a = e65.bindParameters.cloudsFade.data) == null ? void 0 : _a.cubeMap) && (_13(e65.bindParameters.cloudsFade, e65.bindParameters.camera, this.view.state.mode, e65.time, this.view.qualitySettings.fadeDuration), this._updateWeatherFading(e65.bindParameters), e65.bindParameters.cloudsFade.renderingStage === N4.FINISHED && null != this._clouds && 0 === this._clouds.coverage && false === this._clouds.running && (this._clouds.destroyFrameBufferCube(), e65.bindParameters.cloudsFade.data = null));
  }
  render(e65) {
    var _a, _b, _c, _d, _e4, _f, _g, _h, _i;
    if (e65.output === h10.Color)
      switch (e65.bindParameters.slot) {
        case E8.POSTPROCESSING_ENVIRONMENT_OPAQUE:
          null != this._stars && this._stars.render(e65), null != this.atmosphere && (this.atmosphere.render(e65, ((_a = this.view) == null ? void 0 : _a.qualitySettings.highResolutionAtmosphere) || ((_d = (_c = (_b = this.view) == null ? void 0 : _b._stage) == null ? void 0 : _c.renderer) == null ? void 0 : _d.isFeatureEnabled(o34.HighResolutionAtmosphere))), null != this._cloudsComposition && null != e65.bindParameters.cloudsFade.data && (this.weatherVisible && null != this._clouds && this._clouds.updateWeatherTile(), this._cloudsComposition.render(e65)), p27(e65.bindParameters.cloudsFade) && null != this._context && null != ((_e4 = e65.bindParameters.cloudsFade.data) == null ? void 0 : _e4.cubeMap) && this._context.requestRender());
          break;
        case E8.POSTPROCESSING_ENVIRONMENT_TRANSPARENT:
          if (null != this.atmosphere && (this.atmosphere.renderHaze(e65, this._weatherParameters.hazeAmount, ((_f = this.view) == null ? void 0 : _f.qualitySettings.highResolutionAtmosphere) || ((_i = (_h = (_g = this.view) == null ? void 0 : _g._stage) == null ? void 0 : _h.renderer) == null ? void 0 : _i.isFeatureEnabled(o34.HighResolutionAtmosphere))), this._weatherParameters.fog.amount > 0 && null != this._fog && this._fog.render(e65, this._weatherParameters.fog), null != this._precipitation)) {
            const t68 = this.view.environment.weather;
            "rainy" !== t68.type && "snowy" !== t68.type || this._precipitation.render(e65, t68.precipitation, t68.type);
          }
      }
  }
  updateLightSources(e65, t68, s69, r62) {
    if (null != this._context) {
      const i60 = this._context.renderContext;
      i60.bindParameters.oldLighting.copyFrom(i60.bindParameters.lighting), i60.bindParameters.newLighting.noonFactor = t68, i60.bindParameters.newLighting.globalFactor = s69, i60.bindParameters.newLighting.set(e65);
      r62 === e33.Faded || i60.bindParameters.weatherFading ? i60.bindParameters.fadeLighting(0) : i60.bindParameters.fadeLighting(1), this._context.requestRender();
    }
  }
  get _weatherUpdateParameters() {
    const e65 = this.weatherEnabled ? this.view.environment.weather : null;
    return null == e65 ? null : "rainy" === e65.type || "snowy" === e65.type ? { type: e65.type, weatherAdjustment: e65.cloudCover, effect: e65.precipitation } : { type: e65.type, weatherAdjustment: "foggy" === e65.type ? e65.fogStrength : e65.cloudCover };
  }
  _updateWeatherFading(e65) {
    if (!e65.weatherFading)
      return;
    const t68 = e65.cloudsFade;
    return t68.fadeIn.stage === r30.FADE_IN ? (e65.fadeLighting(t68.fadeIn.factor), void this._fadeWeather(t68.fadeIn.factor)) : t68.fadeInOut.stage === I10.FADE_IN ? (e65.fadeLighting(t68.fadeInOut.factor), void this._fadeWeather(t68.fadeInOut.factor)) : t68.crossFade.enabled ? (e65.fadeLighting(t68.crossFade.factor), void this._fadeWeather(t68.crossFade.factor)) : (e65.fadeLighting(0), void this._fadeWeather(0));
  }
  _fadeWeather(e65) {
    const { _newWeatherParameters: t68, _oldWeatherParameters: s69 } = this;
    e65 >= 1 ? this._weatherParameters = t68 : (this._fadedWeatherParameters.lerp(s69, t68, e65), this._weatherParameters = this._fadedWeatherParameters);
  }
  _updateWeather() {
    const e65 = this._weatherUpdateParameters;
    null != e65 && null != this._clouds && (this._clouds.applyPreset(e29[e65.type], e65.weatherAdjustment), this._setNeedsRender());
  }
  _setNeedsRender() {
    null != this._context && this._context.requestRender();
  }
  _updateFogHaze() {
    const e65 = this._weatherUpdateParameters;
    if (null == this._fog || null == e65 || null == this._context)
      return;
    const t68 = this._context.renderContext.bindParameters;
    switch (this._oldWeatherParameters.copyFrom(this._weatherParameters), e65.type) {
      case "foggy":
        this._newWeatherParameters.fog.strength = s9(3e-5, 5e-3, e65.weatherAdjustment ** 3), r5(this._newWeatherParameters.fog.color, B7), this._newWeatherParameters.fog.amount = 1, this._newWeatherParameters.hazeAmount = 1, this._setNeedsRender();
        break;
      case "rainy":
        this._newWeatherParameters.fog.strength = s9(4e-6, 2e-4, (e65.effect ?? 0) ** 3), r5(this._newWeatherParameters.fog.color, D8), this._newWeatherParameters.fog.amount = 1, this._newWeatherParameters.hazeAmount = 0, this._setNeedsRender();
        break;
      case "snowy":
        this._newWeatherParameters.fog.strength = s9(4e-6, 2e-4, (e65.effect ?? 0) ** 3), r5(this._newWeatherParameters.fog.color, B7), this._newWeatherParameters.fog.amount = 1, this._newWeatherParameters.hazeAmount = 1, this._setNeedsRender();
        break;
      default:
        this._newWeatherParameters.fog.strength = 0, this._newWeatherParameters.fog.amount = 0, this._newWeatherParameters.hazeAmount = 1, this._setNeedsRender();
    }
    t68.weatherFading ? this._fadeWeather(0) : this._fadeWeather(1);
  }
  _updateAtmosphere(e65) {
    const t68 = this._selectAtmosphereType(e65);
    if (t68 !== a39.None && this._context) {
      if (!this._atmosphere || this._atmosphere.type !== t68) {
        this._atmosphere = l(this._atmosphere);
        const e66 = this._getAtmosphereClass(t68);
        e66 && (this._atmosphere = new e66(this.view, this._context));
      }
    } else
      this._atmosphere = l(this._atmosphere);
    this._setNeedsRender();
  }
  _getAtmosphereClass(e65) {
    switch (e65) {
      case a39.Realistic:
        return q5;
      case a39.Local:
        return d33;
      case a39.Mars:
        return z10;
      default:
      case a39.None:
        return null;
    }
  }
  _selectAtmosphereType(e65) {
    const { enabled: t68, viewingMode: s69 } = e65;
    return !t68 || P2(this.view.spatialReference) ? a39.None : s69 === l13.Local ? a39.Local : null != this._context && q5.isSupported(this._context) && R(this.view.spatialReference) ? a39.Realistic : T2(this.view.spatialReference) ? a39.Mars : a39.None;
  }
  get test() {
    return { atmosphere: this._atmosphere, clouds: this._clouds, selectAtmosphereType: () => this._selectAtmosphereType({ viewingMode: this.view.state.viewingMode, enabled: this.view.environment.atmosphereEnabled }), stubGetAtmosphereClass: (e65) => {
      Q3 = H8.prototype._getAtmosphereClass, H8.prototype._getAtmosphereClass = e65;
    }, restoreGetAtmosphereClass: () => {
      H8.prototype._getAtmosphereClass = Q3;
    } };
  }
};
e([y2({ constructOnly: true })], k8.prototype, "view", void 0), e([y2({ readOnly: true })], k8.prototype, "atmosphere", null), e([y2({ readOnly: true })], k8.prototype, "_atmosphereType", null), e([y2({ type: Boolean, readOnly: true })], k8.prototype, "updating", null), e([y2({ readOnly: true })], k8.prototype, "weatherVisible", null), e([y2()], k8.prototype, "_context", void 0), e([y2()], k8.prototype, "_atmosphere", void 0), e([y2({ readOnly: true })], k8.prototype, "_stars", null), e([y2({ readOnly: true })], k8.prototype, "_precipitation", null), e([y2({ readOnly: true })], k8.prototype, "_clouds", null), e([y2({ readOnly: true })], k8.prototype, "_cloudsComposition", null), e([y2({ readOnly: true })], k8.prototype, "_fog", null), e([y2({ readOnly: true })], k8.prototype, "weatherEnabled", null), e([y2({ readOnly: true })], k8.prototype, "_precipitationEnabled", null), e([y2({ readOnly: true })], k8.prototype, "_weatherUpdateParameters", null), k8 = H8 = e([a4("esri.views.3d.environment.EnvironmentRenderer")], k8);
var G10 = class {
  constructor() {
    this.fog = new x15(), this.hazeAmount = 1;
  }
  copyFrom(e65) {
    this.fog.amount = e65.fog.amount, this.hazeAmount = e65.hazeAmount, this.fog.strength = e65.fog.strength, r5(this.fog.color, e65.fog.color);
  }
  lerp(e65, t68, r62) {
    this.fog.amount = s9(e65.fog.amount, t68.fog.amount, r62), this.hazeAmount = s9(e65.hazeAmount, t68.hazeAmount, r62), this.fog.strength = s9(e65.fog.strength, t68.fog.strength, r62), A2(this.fog.color, e65.fog.color, t68.fog.color, r62);
  }
};
var D8 = r4(0.5, 0.5, 0.5);
var B7 = r4(1.5, 1.5, 1.5);
var Q3;

// node_modules/@arcgis/core/views/3d/support/earthUtils.js
function u26(t68, n77, o61) {
  if (null == n77.longitude || null == n77.latitude || null == o61.longitude || null == o61.latitude)
    throw new Error("Invalid points: no lon/lat");
  return i40(t68, n77.longitude, n77.latitude, o61.longitude, o61.latitude);
}
function i40(t68, e65, r62, u51, i60) {
  const s69 = M(r62), l63 = M(i60), a67 = s69 - l63, c58 = M(e65) - M(u51), d52 = Math.sin(a67 / 2), h46 = Math.sin(c58 / 2), m44 = 2 * F3(Math.sqrt(d52 * d52 + Math.cos(s69) * Math.cos(l63) * h46 * h46)) * t68;
  return Math.round(1e4 * m44) / 1e4;
}
function s45(t68, n77, o61) {
  const i60 = n77.spatialReference, s69 = A3(i60), l63 = new x4(n77.x, t68.y, i60), a67 = new x4(o61.x, t68.y, i60), c58 = new x4(t68.x, n77.y, i60), d52 = new x4(t68.x, o61.y, i60);
  return { lon: u26(s69.radius, l63, a67), lat: u26(s69.radius, c58, d52) };
}
function l31(e65, r62, u51) {
  const i60 = r62 / u51, s69 = M(e65), l63 = Math.sin(i60 / 2), a67 = Math.cos(s69), c58 = 2 * F3(Math.sqrt(l63 * l63 / (a67 * a67)));
  return m2(c58);
}
function a40(t68, n77) {
  let o61 = t68 / 15;
  return n77 || (o61 = Math.round(o61)), o61;
}
function c33(t68, n77) {
  const o61 = t68 == null ? void 0 : t68[0];
  if (null == o61)
    return null;
  n77 || (n77 = { hours: 0, minutes: 0, seconds: 0 }), n77.hours = a40(o61, true);
  const e65 = n77.hours % 1;
  n77.hours -= e65, n77.minutes = 60 * e65;
  const r62 = n77.minutes % 1;
  return n77.minutes -= r62, n77.seconds = Math.round(60 * r62), n77;
}

// node_modules/@arcgis/core/chunks/SunCalc.js
var t45;
var r42;
var e34;
var o40 = { exports: {} };
o40.exports, t45 = o40, r42 = function() {
  var n77 = Math.PI, t68 = Math.sin, r62 = Math.cos, e65 = Math.tan, o61 = Math.asin, u51 = Math.atan2, a67 = Math.acos, i60 = n77 / 180, c58 = 864e5, f49 = 2440588, s69 = 2451545, d52 = { dec: 0, ra: 0 };
  function p54(n78) {
    return n78.valueOf() / c58 - 0.5 + f49;
  }
  function v37(n78) {
    return new Date((n78 + 0.5 - f49) * c58);
  }
  function M22(n78) {
    return p54(n78) - s69;
  }
  var l63 = 23.4397 * i60;
  function h46(n78, o62) {
    return u51(t68(n78) * r62(l63) - e65(o62) * t68(l63), r62(n78));
  }
  function x34(n78, e66) {
    return o61(t68(e66) * r62(l63) + r62(e66) * t68(l63) * t68(n78));
  }
  function N19(n78, o62, a68) {
    return u51(t68(n78), r62(n78) * t68(o62) - e65(a68) * r62(o62));
  }
  function P26(n78, e66, u52) {
    return o61(t68(e66) * t68(u52) + r62(e66) * r62(u52) * r62(n78));
  }
  function m44(n78, t69) {
    return i60 * (280.16 + 360.9856235 * n78) - t69;
  }
  function E39(n78) {
    return i60 * (357.5291 + 0.98560028 * n78);
  }
  function I28(n78) {
    return i60 * (1.9148 * t68(n78) + 0.02 * t68(2 * n78) + 3e-4 * t68(3 * n78));
  }
  function g36(t69, r63) {
    return t69 + r63 + 102.9372 * i60 + n77;
  }
  function O26(n78, t69) {
    var r63 = E39(n78), e66 = g36(r63, I28(r63));
    return t69 || (t69 = { dec: 0, ra: 0 }), t69.dec = x34(e66, 0), t69.ra = h46(e66, 0), t69;
  }
  var T29 = { PolarException: { NORMAL: 0, MIDNIGHT_SUN: 1, POLAR_NIGHT: 2 }, getPosition: function(n78, t69, r63, e66) {
    var o62 = i60 * -r63, u52 = i60 * t69, a68 = M22(n78), c59 = O26(a68, d52), f50 = m44(a68, o62) - c59.ra;
    return e66 || (e66 = { azimuth: 0, altitude: 0 }), e66.azimuth = N19(f50, u52, c59.dec), e66.altitude = P26(f50, u52, c59.dec), e66;
  } }, A33 = [[-0.83, "sunrise", "sunset"]];
  T29.addTime = function(n78, t69, r63) {
    A33.push([n78, t69, r63]);
  };
  var H24 = 9e-4;
  function L25(t69, r63) {
    return Math.round(t69 - H24 - r63 / (2 * n77));
  }
  function R21(t69, r63, e66) {
    return H24 + (t69 + r63) / (2 * n77) + e66;
  }
  function _33(n78, r63, e66) {
    return s69 + n78 + 53e-4 * t68(r63) - 69e-4 * t68(2 * e66);
  }
  function G20(n78, e66, o62) {
    return a67((t68(n78) - t68(e66) * t68(o62)) / (r62(e66) * r62(o62)));
  }
  function z20(n78) {
    var e66 = i60 * (134.963 + 13.064993 * n78), o62 = i60 * (93.272 + 13.22935 * n78), u52 = i60 * (218.316 + 13.176396 * n78) + 6.289 * i60 * t68(e66), a68 = 5.128 * i60 * t68(o62), c59 = 385001 - 20905 * r62(e66);
    return { ra: h46(u52, a68), dec: x34(u52, a68), dist: c59 };
  }
  return T29.getTimes = function(n78, e66, o62) {
    var u52 = i60 * -o62, a68 = i60 * e66, c59 = L25(M22(n78), u52), f50 = R21(0, u52, c59), s70 = E39(f50), d53 = I28(s70), p55 = g36(s70, d53), l64 = x34(p55, 0), h47 = _33(f50, s70, p55);
    function N20(n79) {
      return _33(R21(G20(n79, a68, l64), u52, c59), s70, p55);
    }
    function P27(n79) {
      var e67 = (t68(n79) - t68(a68) * t68(l64)) / (r62(a68) * r62(l64));
      return e67 < -1 ? T29.PolarException.MIDNIGHT_SUN : e67 > 1 ? T29.PolarException.POLAR_NIGHT : T29.PolarException.NORMAL;
    }
    var m45, O27, H25, z21, D19, S25 = { solarNoon: v37(h47), nadir: v37(h47 - 0.5), polarException: T29.PolarException.NORMAL };
    for (m45 = 0, O27 = A33.length; m45 < O27; m45 += 1)
      D19 = h47 - ((z21 = N20((H25 = A33[m45])[0] * i60)) - h47), S25[H25[1]] = v37(D19), S25[H25[2]] = v37(z21);
    return S25.polarException = P27(A33[0][0] * i60), S25;
  }, T29.getMoonPosition = function(n78, t69, r63) {
    var o62 = i60 * -r63, u52 = i60 * t69, a68 = M22(n78), c59 = z20(a68), f50 = m44(a68, o62) - c59.ra, s70 = P26(f50, u52, c59.dec);
    return s70 += 0.017 * i60 / e65(s70 + 10.26 * i60 / (s70 + 5.1 * i60)), { azimuth: N19(f50, u52, c59.dec), altitude: s70, distance: c59.dist };
  }, T29.getMoonFraction = function(n78) {
    var e66 = M22(n78), o62 = O26(e66), i61 = z20(e66), c59 = 149598e3, f50 = a67(t68(o62.dec) * t68(i61.dec) + r62(o62.dec) * r62(i61.dec) * r62(o62.ra - i61.ra)), s70 = u51(c59 * t68(f50), i61.dist - c59 * r62(f50));
    return (1 + r62(s70)) / 2;
  }, T29;
}, void 0 !== (e34 = r42()) && (t45.exports = e34);
var u27 = t7(o40.exports);

// node_modules/@arcgis/core/views/3d/support/sunUtils.js
var j10 = { local: { altitude: 1500, ambientAtNight: 0.1, ambientAtNoon: 0.45, ambientAtTwilight: 0.2, directAtNoon: 0.65, directAtTwilight: 0.7 }, global: { altitude: 8e5, ambient: 0.015, direct: 0.75 }, planarDirection: { localAltitude: 1e4, globalAltitude: 1e6, globalAngles: { azimuth: 1.3 * Math.PI, altitude: 0.6 * Math.PI } } };
var x17 = class {
  constructor(t68, e65) {
    this.direct = t68, this.ambient = e65;
  }
};
function S12(i60, n77, o61, a67, l63, s69) {
  o2(s69.ambient.color, 1, 1, 1), s69.ambient.intensity = j10.global.ambient, o2(s69.direct.color, 1, 1, 1), s69.direct.intensity = j10.global.direct;
  const c58 = n77[2], r62 = i3((Math.abs(c58) - j10.local.altitude) / (j10.global.altitude - j10.local.altitude), 0, 1);
  let u51;
  if (s69.globalFactor = r62, null != i60 && (u51 = u27.getTimes(i60, n77[1], n77[0])), r62 < 1) {
    let e65;
    if (null != i60)
      e65 = nt(i60, u51, a67);
    else {
      const t68 = F15(a67);
      e65 = { direct: { intensity: j10.local.directAtNoon * t68.direct, color: r4(1, 1, 1) }, ambient: { intensity: j10.local.ambientAtNoon * t68.ambient, color: r4(1, 1, 1) }, timeOfDay: "early afternoon" };
    }
    A2(s69.ambient.color, e65.ambient.color, s69.ambient.color, r62), s69.ambient.intensity = s9(e65.ambient.intensity, s69.ambient.intensity, r62), A2(s69.direct.color, e65.direct.color, s69.direct.color, r62), s69.direct.intensity = s9(e65.direct.intensity, s69.direct.intensity, r62), s69.specularStrength = "rainy" === a67 || "snowy" === a67 || "foggy" === a67 ? 0 : 1, s69.environmentStrength = "rainy" === a67 ? 0.7 : "snowy" === a67 || "foggy" === a67 ? 0.75 : 1;
  }
  s69.noonFactor = null != i60 ? H9(i60, u51) : 1, null != i60 ? P12(i60, n77, o61, s69.direct.directionToLightSource) : O12(l63, o61, s69.direct.directionToLightSource);
}
function O12(t68, e65, n77) {
  e65 === l13.Global ? z2(lt, t68.eye) : o2(lt, 0, 0, 1), g2(st2, t68.viewForward, -1);
  const o61 = x10(st2, lt), a67 = Math.max(o61 - 2 * rt, 0), l63 = 0.85 * a67 / (a67 + 1), s69 = Math.max(rt, o61 - rt - l63);
  g4(at, -s69, t68.viewRight), O(n77, st2, at), u2(n77, n77, g2(ct, t68.viewRight, ut)), z2(n77, n77);
}
function P12(t68, i60, s69, c58) {
  const r62 = G11, u51 = r9(I13);
  if (s69 === l13.Global)
    u27.getPosition(t68, 0, 0, r62), o2(c58, 0, 0, -1), l8(u51, u51, -r62.azimuth), m4(u51, u51, -r62.altitude), O(c58, c58, u51);
  else {
    const n77 = j10.planarDirection, a67 = n77.globalAngles, s70 = i60[2];
    let m44 = (Math.abs(s70) - n77.localAltitude) / (n77.globalAltitude - n77.localAltitude);
    m44 = i3(m44, 0, 1), m44 < 1 ? (u27.getPosition(t68, i60[1], i60[0], r62), r62.azimuth = (1 - m44) * r62.azimuth + m44 * a67.azimuth, r62.altitude = (1 - m44) * r62.altitude + m44 * a67.altitude) : (r62.azimuth = a67.azimuth, r62.altitude = a67.altitude), o2(c58, 0, -1, 0), x6(u51, u51, -r62.azimuth), l8(u51, u51, -r62.altitude), O(c58, c58, u51);
  }
}
function z11(t68, e65) {
  if (e65 === l13.Global)
    return true;
  const i60 = j10.planarDirection;
  return Math.abs(t68) < i60.localAltitude;
}
var D9 = r4(0.5773502691896258, -0.5773502691896258, 0.5773502691896258);
var E17 = class {
  constructor() {
    this.ambient = { color: r4(1, 1, 1), intensity: 0.55 }, this.direct = { color: r4(1, 1, 1), intensity: 0.55, directionToLightSource: t5(D9) }, this.noonFactor = 0.5, this.globalFactor = 0, this.specularStrength = 1, this.environmentStrength = 1;
  }
};
var I13 = e15();
var G11 = { azimuth: 0, altitude: 0 };
function H9(t68, i60) {
  const n77 = t68.valueOf();
  let o61, a67;
  i60.polarException === u27.PolarException.MIDNIGHT_SUN ? (o61 = n77 - 60 * (t68.getHours() + 48) * 60 * 1e3 - 60 * t68.getMinutes() * 1e3, a67 = o61 + 432e6) : i60.polarException === u27.PolarException.POLAR_NIGHT ? (o61 = n77 - 2, a67 = n77 - 1) : (o61 = i60.sunrise.valueOf(), a67 = i60.sunset.valueOf());
  const l63 = o61 + (a67 - o61) / 2;
  return 1 - i3(Math.abs(n77 - l63) / 432e5, 0, 1);
}
function F15(t68) {
  switch (t68) {
    case "disabled":
    case "sunny":
    case "cloudy":
      return new x17(1, 1);
    case "rainy":
      return new x17(0.4, 1.2);
    case "snowy":
      return new x17(0.5, 1.3);
    case "foggy":
      return new x17(0.2, 1.6);
  }
}
function L11(t68, e65) {
  const i60 = (t68[0] + t68[1] + t68[2]) / 3;
  t68[0] += (i60 - t68[0]) * e65, t68[1] += (i60 - t68[1]) * e65, t68[2] += (i60 - t68[2]) * e65;
}
var R10 = r4(0.01, 0.01, 0.01);
var U10 = r4(1, 0.6, 0.5);
var _14 = r4(1, 0.98, 0.98);
var C11 = r4(1, 1, 1);
var V7 = r4(0.8, 0.8, 1);
var q7 = r4(0.8, 0.8, 1);
var B8 = r4(0.98, 0.98, 1);
var J6 = r4(1, 1, 1);
var K5 = r14(0.01, j10.local.ambientAtNight);
var Q4 = r14(j10.local.directAtTwilight, j10.local.ambientAtTwilight);
var W7 = r14(0.9 * j10.local.directAtNoon, j10.local.ambientAtNoon);
var X5 = r14(j10.local.directAtNoon, j10.local.ambientAtNoon);
var Y5 = W7;
var Z4 = _14;
var $2 = B8;
var tt2 = Q4;
var et = U10;
var it = q7;
function nt(t68, e65, i60) {
  const n77 = t68.valueOf();
  let o61, a67;
  e65.polarException === u27.PolarException.MIDNIGHT_SUN ? (o61 = n77 - 60 * (t68.getHours() + 48) * 60 * 1e3 - 60 * t68.getMinutes() * 1e3, a67 = o61 + 432e6) : e65.polarException === u27.PolarException.POLAR_NIGHT ? (o61 = n77 - 2, a67 = n77 - 1) : (o61 = e65.sunrise.valueOf(), a67 = e65.sunset.valueOf());
  const l63 = a67 - o61, s69 = o61 + l63 / 2, u51 = l63 / 4, h46 = s69 - u51, f49 = s69 + u51, g36 = 0.06 * l63, b26 = o61 - g36 / 2, y32 = o61 + g36 / 2, A33 = a67 - g36 / 2, N19 = a67 + g36 / 2, v37 = n15(), M22 = n7(), j25 = n7();
  let x34 = "";
  if (n77 < b26 || n77 > N19)
    a12(v37, K5), r5(M22, R10), r5(j25, V7), x34 = "night";
  else if (n77 < y32) {
    const t69 = (n77 - b26) / (y32 - b26);
    A4(v37, K5, Q4, t69), A2(M22, R10, U10, t69), A2(j25, V7, q7, t69), x34 = "sun rising";
  } else if (n77 < h46) {
    const t69 = (n77 - y32) / (h46 - y32);
    A4(v37, Q4, W7, t69), A2(M22, U10, _14, t69), A2(j25, q7, B8, t69), x34 = "early morning";
  } else if (n77 < s69) {
    const t69 = (n77 - h46) / (s69 - h46);
    A4(v37, W7, X5, t69), A2(M22, _14, C11, t69), A2(j25, B8, J6, t69), x34 = "late morning";
  } else if (n77 < f49) {
    const t69 = (n77 - s69) / (f49 - s69);
    A4(v37, X5, Y5, t69), A2(M22, C11, Z4, t69), A2(j25, J6, $2, t69), x34 = "early afternoon";
  } else if (n77 < A33) {
    const t69 = (n77 - f49) / (A33 - f49);
    A4(v37, Y5, tt2, t69), A2(M22, Z4, et, t69), A2(j25, $2, it, t69), x34 = "late afternoon";
  } else if (n77 < N19) {
    const t69 = (n77 - A33) / (N19 - A33);
    A4(v37, tt2, K5, t69), A2(M22, et, R10, t69), A2(j25, it, V7, t69), x34 = "sun setting";
  }
  let S25 = 0;
  switch (i60) {
    case "rainy":
    case "foggy":
      S25 = 0.8;
      break;
    case "snowy":
      S25 = 0.5;
  }
  S25 > 0 && (L11(M22, S25), L11(j25, S25));
  const O26 = F15(i60);
  return { direct: { intensity: v37[0] * O26.direct, color: M22 }, ambient: { intensity: v37[1] * O26.ambient, color: j25 }, timeOfDay: x34 };
}
var at = e15();
var lt = n7();
var st2 = n7();
var ct = n7();
var rt = 0.25;
var ut = 0.2;

// node_modules/@arcgis/core/views/3d/environment/SceneViewEnvironmentManager.js
var k9 = class extends n8.EventedAccessor {
  constructor() {
    super(), this._referencePointUpdateDelay = 200, this._referencePointUpdateInterval = 3e3, this._referencePointUpdateDistThreshold = 1e6, this._referencePosUpdateQuery = null, this._referencePosMapCoordsRequested = null, this._viewHandles = new t3(), this._preserveAbsoluteDateTime = false, this._trackingEnabled = false, this._referencePosResetPreserveAbsoluteTime = false, this._referencePosUpdateTimer = null, this._referencePosMapCoords = null, this._mainLight = new n25(), this._ambientLight = new i16(), this._moonLight = new c14(), this.disableQueries = false, this._disableWeather = false, this._renderer = null, this._referencePosWGS84Comparable = null, this._resetReferencePosition();
  }
  destroy() {
    this.disconnectView(), this._viewHandles.destroy();
  }
  get _view() {
    var _a;
    return (_a = this._renderer) == null ? void 0 : _a.view;
  }
  get updating() {
    var _a;
    return !((this.disableQueries || !this._referencePosUpdateQuery && !this._referencePosMapCoordsRequested) && !((_a = this._renderer) == null ? void 0 : _a.updating));
  }
  get weatherEnabled() {
    var _a, _b, _c;
    return ((_a = this._view) == null ? void 0 : _a.environment.atmosphereEnabled) && !this._disableWeather && ((_c = (_b = this._view) == null ? void 0 : _b.state) == null ? void 0 : _c.viewingMode) === l13.Global && R(this._view.spatialReference);
  }
  get weatherVisible() {
    var _a;
    return this.weatherEnabled && ((_a = this._renderer) == null ? void 0 : _a.weatherVisible);
  }
  get referencePositionWGS84Comparable() {
    return this._referencePosWGS84Comparable;
  }
  connectView(e65) {
    if (this._renderer)
      return;
    this._renderer = new k8({ view: e65 });
    const t68 = () => this._updateRenderParameters(), r62 = () => this._cameraHandler();
    this._viewHandles.add([l6(() => e65.environment.lighting, (e66) => this._updateLightingHandler(e66), U3), l6(() => "virtual" !== e65.environment.lighting.type ? e65.environment.lighting.date : null, (e66) => this._lightingDateHandler(e66), U3), l6(() => e65.stationary, () => this._interactingStationaryHandler()), l6(() => e65.environment.lighting.directShadowsEnabled, t68, U3), l6(() => e65.qualitySettings.ambientOcclusion, t68, U3), l6(() => e65.qualitySettings.reflections, t68, U3), l6(() => {
      var _a;
      return (_a = e65.environment.background) == null ? void 0 : _a.color;
    }, t68, U3), l6(() => e65.spatialReference, () => this._resetReferencePosition(true), U3), l6(() => e65.environment.weather.type, () => this._updateLighting(null, e33.Faded), U3), l6(() => this.weatherEnabled, () => this._updateLighting(null, e33.Faded), U3), l6(() => e65.viewingMode, () => this._resetReferencePosition(true), w3), l6(() => "virtual" !== e65.environment.lighting.type && e65.environment.lighting.cameraTrackingEnabled, (e66) => this._updateCameraTracking(e66), w3), l6(() => e65.state.camera, r62, w3), l6(() => this.disableQueries, r62)]), this._updateRenderParameters(), this._updateLighting(), this._cameraHandler(), this.notifyChange("updating");
  }
  disconnectView() {
    this._viewHandles.removeAll(), this._resetReferencePosition(), this._renderer = l(this._renderer);
  }
  _updateLightingHandler(e65) {
    this._updateCameraTracking("virtual" !== e65.type && e65.cameraTrackingEnabled), this._lightingDateHandler("virtual" !== e65.type ? e65.date : null), this._updateRenderParameters();
  }
  _updateCameraTracking(e65) {
    if (this._trackingEnabled = e65, e65)
      this._cameraHandler();
    else {
      const e66 = this._view.environment.lighting;
      "virtual" !== (e66 == null ? void 0 : e66.type) && (e66.positionTimezoneInfo.autoUpdated = false);
    }
  }
  _lightingDateHandler(e65) {
    const t68 = this._view.environment.lighting;
    if ("virtual" !== (t68 == null ? void 0 : t68.type)) {
      if (e65) {
        if (!t68.positionTimezoneInfo.autoUpdated) {
          this._preserveAbsoluteDateTime = true;
          const r62 = this._view.spatialReference;
          if (!ce(r62)) {
            const e66 = this._view.camera.position;
            if (!this._referencePosMapCoords || !this._referencePosMapCoords.equals(e66))
              return void this._requestReferencePositionUpdate(e66);
          }
          if (this._preupdateTracking(e65), null != this._referencePosWGS84Comparable) {
            const e66 = c33(this._referencePosWGS84Comparable, D10);
            null != e66 && (t68.autoUpdate(null, e66), this._trackingEnabled && (t68.positionTimezoneInfo.autoUpdated = true));
          }
        }
        this._updateLighting(e65);
      }
    } else
      this._updateLighting();
  }
  _preupdateTracking(e65) {
    !this._trackingEnabled && "virtual" !== this._view.environment.lighting.type && this._view.environment.lighting.cameraTrackingEnabled && this._cameraHandler(e65);
  }
  _cameraHandler(e65 = null) {
    const t68 = this._view;
    if (!t68.ready)
      return;
    const r62 = t68.stateManager.camera;
    r62 && (this._cameraHandlerClientSide(r62, e65) || this._cameraHandlerServerSide(r62));
  }
  _cameraHandlerClientSide(e65, t68) {
    const r62 = R(this._view.spatialReference);
    if (r62 && !ce(this._view.spatialReference))
      return "virtual" === this._view.environment.lighting.type && this._updateLighting(), false;
    const i60 = e65.position;
    return null == this._referencePosWGS84Comparable && (this._referencePosWGS84Comparable = n7()), r62 ? gn(i60, this._referencePosWGS84Comparable) : o2(this._referencePosWGS84Comparable, i60.longitude ?? 0, i60.latitude ?? 0, i60.z ?? 0), this.notifyChange("referencePositionWGS84Comparable"), this._autoUpdateTimezone(this._referencePosWGS84Comparable, t68) || this._updateLighting(t68), true;
  }
  _cameraHandlerServerSide(e65) {
    const t68 = e65.position;
    (!this._referencePosMapCoords || this._referencePosMapCoordsRequested || this._exceedsReferencePosDistThreshold(t68)) && this._requestReferencePositionUpdate(t68, true), this._view.mapCoordsHelper && this._referencePosWGS84Comparable && (this._referencePosWGS84Comparable[2] = (t68.z ?? 0) * this._view.mapCoordsHelper.unitInMeters, this._referencePosChanged());
  }
  _interactingStationaryHandler() {
    this._view.stationary && this._executePendingReferencePositionUpdate();
  }
  _updateLighting(e65, t68 = e33.Immediate) {
    const r62 = this._view;
    e65 = e65 || ("virtual" === r62.environment.lighting.type ? null : r62.environment.lighting.date);
    const i60 = this._referencePosWGS84Comparable, s69 = null != i60 ? q8 : E18, n77 = this.weatherVisible ? r62.environment.weather.type : "disabled";
    null != i60 ? S12(e65, i60, r62.state.viewingMode, n77, r62.state.camera, s69) : "virtual" === r62.environment.lighting.type && O12(r62.state.camera, r62.state.viewingMode, s69.direct.directionToLightSource);
    const o61 = this._mainLight, a67 = s69.direct;
    g2(o61.intensity, a67.color, a67.intensity * Math.PI), r5(o61.direction, a67.directionToLightSource), o61.specularStrength = s69.specularStrength, o61.environmentStrength = s69.environmentStrength;
    const h46 = this._ambientLight;
    g2(h46.intensity, s69.ambient.color, s69.ambient.intensity);
    const c58 = this._moonLight;
    A2(c58.intensity, A20, I14, s69.globalFactor);
    const l63 = (1 - 0.5 * s69.globalFactor) * (1 - 0.4 * s69.noonFactor * (1 - s69.globalFactor));
    g2(c58.intensity, c58.intensity, l63), r5(c58.direction, a67.directionToLightSource), this._renderer.updateLightSources([o61, h46, c58], s69.noonFactor, s69.globalFactor, t68), this._updateRenderParameters();
  }
  _autoUpdateTimezone(e65, t68 = null) {
    if ("virtual" === this._view.environment.lighting.type || !this._view.environment.lighting.cameraTrackingEnabled || null == e65)
      return false;
    const r62 = Q5;
    r62.setTime((t68 || this._view.environment.lighting.date).getTime());
    const i60 = c33(e65, D10);
    if (null == i60)
      return false;
    let s69 = this._view.environment.lighting.positionTimezoneInfo;
    if (s69.autoUpdated) {
      if (s69.hours === i60.hours && s69.minutes === i60.minutes && s69.seconds === i60.seconds)
        return false;
    } else
      s69 = i60;
    const n77 = r62.getUTCHours() - (i60.hours - s69.hours), o61 = r62.getUTCMinutes() - (i60.minutes - s69.minutes), a67 = r62.getUTCSeconds() - (i60.seconds - s69.seconds);
    return r62.setUTCHours(n77), r62.setUTCMinutes(o61), r62.setUTCSeconds(a67), !t68 && this._view.environment.lighting.autoUpdate(r62, i60);
  }
  _updateRenderParameters() {
    const e65 = this._view._stage;
    if (!e65)
      return;
    const r62 = null == this._referencePosWGS84Comparable || z11(this._referencePosWGS84Comparable[2], this._view.state.viewingMode), i60 = this._view.environment.background, s69 = i60 instanceof n44 ? { type: "color", color: e12(h6.toUnitRGBA(i60.color)) } : { type: "color", color: r11(0, 0, 0, 1) };
    e65.renderer.setParameters({ shadowMap: this._view.environment.lighting.directShadowsEnabled && r62, background: s69, environment: this._view.environment, weatherVisible: this._view.environmentManager.weatherVisible, qualitySettings: this._view.qualitySettings });
  }
  _resetReferencePosition(e65 = false) {
    this._cancelReferencePosUpdates(), this._referencePosMapCoords = null, this._referencePosMapCoordsRequested = null, this._referencePosResetPreserveAbsoluteTime = null, this._referencePosWGS84Comparable = null, this.notifyChange("updating"), e65 && this._cameraHandler();
  }
  _requestReferencePositionUpdate(e65, t68 = false) {
    if (!this.disableQueries && (this._referencePosMapCoordsRequested ? this._referencePosMapCoordsRequested.copy(e65) : this._referencePosMapCoordsRequested = e65.clone(), this._referencePosResetPreserveAbsoluteTime = !!t68, !this._referencePosUpdateQuery && !this._referencePosUpdateTimer && this._view.stationary)) {
      const e66 = this._referencePosUpdateQuery = g(this._referencePointUpdateDelay).then(() => {
        if (this._referencePosUpdateQuery === e66) {
          const t70 = () => this._referencePosUpdateQuery !== e66;
          return this._doReferencePositionUpdateQuery(t70);
        }
      }).catch((e67) => {
        "mapcoordshelper:missing-geometry-service" === e67.name && (this.disableQueries = true);
      }).then(() => {
        this._referencePosUpdateQuery === e66 && (this._referencePosUpdateQuery = null, this._referencePosUpdateTimer || this._executePendingReferencePositionUpdate(), this.notifyChange("updating"));
      }), t69 = this._referencePosUpdateTimer = g(this._referencePointUpdateInterval).then(() => {
        this._referencePosUpdateTimer === t69 && (this._referencePosUpdateTimer = null, this._referencePosUpdateQuery || this._executePendingReferencePositionUpdate());
      });
      this.notifyChange("updating");
    }
  }
  async _doReferencePositionUpdateQuery(e65) {
    this._referencePosResetPreserveAbsoluteTime && (this._preserveAbsoluteDateTime = false), this._referencePosMapCoords ? this._referencePosMapCoords.copy(this._referencePosMapCoordsRequested) : this._referencePosMapCoords = this._referencePosMapCoordsRequested.clone(), this._referencePosResetPreserveAbsoluteTime = null, this._referencePosMapCoordsRequested = null;
    const t68 = await this._view.mapCoordsHelper.toGeographic(this._referencePosMapCoords);
    if (!e65() && !isNaN(t68[0]) && !isNaN(t68[1])) {
      const e66 = (this._referencePosMapCoords.z ?? 0) * this._view.mapCoordsHelper.unitInMeters;
      this._referencePosWGS84Comparable ? (this._referencePosWGS84Comparable[0] = t68[0], this._referencePosWGS84Comparable[1] = t68[1], this._referencePosWGS84Comparable[2] = e66) : this._referencePosWGS84Comparable = [t68[0], t68[1], e66], this._referencePosChanged();
    }
  }
  _executePendingReferencePositionUpdate() {
    const e65 = this._referencePosMapCoordsRequested;
    e65 && this._requestReferencePositionUpdate(e65, this._referencePosResetPreserveAbsoluteTime);
  }
  _referencePosChanged() {
    this._preserveAbsoluteDateTime ? this._updateLighting() : this._autoUpdateTimezone(this._referencePosWGS84Comparable) || this._updateLighting(), this.notifyChange("referencePositionWGS84Comparable");
  }
  _exceedsReferencePosDistThreshold(e65) {
    if (this._referencePosMapCoords) {
      let t68 = this._referencePosMapCoords.distance(e65);
      return this._view.mapCoordsHelper && (t68 *= this._view.mapCoordsHelper.unitInMeters), t68 > this._referencePointUpdateDistThreshold;
    }
    return true;
  }
  _cancelReferencePosUpdates() {
    const e65 = !!this._referencePosUpdateQuery;
    return this._referencePosUpdateQuery = null, this._referencePosUpdateTimer = null, e65;
  }
  get test() {
    const e65 = this;
    return { get renderer() {
      return e65._renderer;
    }, set referencePointUpdateInterval(t68) {
      e65._referencePointUpdateInterval = t68;
    }, set referencePointUpdateDistThreshold(t68) {
      e65._referencePointUpdateDistThreshold = t68;
    }, set referencePosUpdateTimer(t68) {
      e65._referencePosUpdateTimer = t68;
    }, set referencePointUpdateDelay(t68) {
      e65._referencePointUpdateDelay = t68;
    }, set disableWeather(t68) {
      e65._disableWeather = t68;
    } };
  }
};
e([y2({ type: Boolean, readOnly: true })], k9.prototype, "updating", null), e([y2()], k9.prototype, "disableQueries", void 0), e([y2()], k9.prototype, "_disableWeather", void 0), e([y2()], k9.prototype, "weatherEnabled", null), e([y2()], k9.prototype, "weatherVisible", null), e([y2()], k9.prototype, "referencePositionWGS84Comparable", null), e([y2()], k9.prototype, "_renderer", void 0), e([y2()], k9.prototype, "_referencePosWGS84Comparable", void 0), k9 = e([a4("esri.views.3d.environment.SceneViewEnvironmentManager")], k9);
var q8 = new E17();
var E18 = new E17();
var Q5 = /* @__PURE__ */ new Date();
var D10 = { hours: 0, minutes: 0, seconds: 0 };
var A20 = r4(0.22, 0.22, 0.33);
var I14 = r4(0.22, 0.22, 0.22);

// node_modules/@arcgis/core/views/3d/camera/constraintUtils/ConstraintTypes.js
var L12;
!function(L25) {
  L25[L25.NONE = 0] = "NONE", L25[L25.TILT = 1] = "TILT", L25[L25.ALTITUDE = 2] = "ALTITUDE", L25[L25.DISTANCE = 4] = "DISTANCE", L25[L25.COLLISION = 8] = "COLLISION", L25[L25.ALL = 15] = "ALL", L25[L25.ALL_EXCEPT_COLLISION = 7] = "ALL_EXCEPT_COLLISION";
}(L12 || (L12 = {}));

// node_modules/@arcgis/core/views/3d/camera/constraintUtils/InteractionType.js
var O13;
!function(O26) {
  O26[O26.NONE = 0] = "NONE", O26[O26.ZOOM = 1] = "ZOOM", O26[O26.TUMBLE = 2] = "TUMBLE", O26[O26.LOOK_AROUND = 3] = "LOOK_AROUND", O26[O26.PAN = 4] = "PAN", O26[O26.ASCEND = 5] = "ASCEND";
}(O13 || (O13 = {}));

// node_modules/@arcgis/core/views/3d/camera/constraintUtils/TiltMode.js
var O14;
!function(O26) {
  O26[O26.TUMBLE = 0] = "TUMBLE", O26[O26.LOOK_AROUND = 1] = "LOOK_AROUND";
}(O14 || (O14 = {}));

// node_modules/@arcgis/core/views/3d/camera/constraintUtils/common.js
function r43(t68, n77) {
  return 0 != (t68 & n77);
}
function e35(t68, n77, a67, i60, m44, o61) {
  0 !== t68 && (a67 ? (o61.min = Math.min(o61.min, n77), o61.max = Math.max(o61.max, n77)) : null != i60 ? (o61.min -= Math.max(0, (n77 - o61.min) * (1 - i60)), o61.max += Math.max(0, (n77 - o61.max) * (1 - i60))) : m44 && (o61.min -= Math.max(0, n77 - o61.min - m44), o61.max += Math.max(0, n77 - o61.max - m44)));
}
var c34 = { selection: L12.NONE, interactionType: O13.NONE, interactionFactor: 0, interactionStartCamera: null, interactionDirection: null, tiltMode: O14.TUMBLE };
function s46(i60, m44, o61, r62) {
  return m44 = m44 || i60.viewForward, r5(r62, m44), g2(r62, r62, Math.sign(P(m44, o61))), r62;
}

// node_modules/@arcgis/core/views/3d/camera/constraintUtils/altitude.js
function f27(t68, r62, n77 = c34) {
  const c58 = l32(t68, r62, n77);
  if (0 === c58)
    return false;
  const a67 = t68.renderCoordsHelper, m44 = a67.getAltitude(r62.eye) + c58, u51 = s46(r62, n77.interactionDirection, j11(t68, r62, Math.sign(c58), C12), g14), f49 = r5(M8, r62.viewForward), d52 = a67.intersectInfiniteManifold(p8(r62.eye, u51), m44, h25);
  return r62.eye = null != d52 ? d52 : a67.setAltitude(h25, m44, r62.eye), r62.center = j6(h25, r62.eye, f49, r62.center), true;
}
function l32(e65, r62, n77 = c34) {
  if (!d36(e65, n77) || !e65.state.constraints.altitude)
    return 0;
  const o61 = T14(e65.state.constraints.altitude, x18);
  y15(e65, n77, o61);
  const i60 = e65.renderCoordsHelper.getAltitude(r62.eye), c58 = i3(i60, o61.min, o61.max) - i60;
  return Math.abs(c58) <= 1e-6 ? 0 : c58;
}
function d36(t68, e65) {
  const r62 = t68.state.constraints.altitude;
  return !(!t68.state.isGlobal || !r62) && (e65.interactionType !== O13.TUMBLE || !r43(e65.selection, L12.TILT));
}
function y15(t68, e65, r62) {
  const n77 = e65.interactionType;
  if (n77 === O13.NONE)
    return;
  const { min: o61, max: i60 } = r62, { interactionStartCamera: s69, interactionFactor: c58 } = e65;
  if (!s69)
    return;
  const m44 = n77 === O13.TUMBLE || n77 === O13.ZOOM, p54 = l32(t68, s69), f49 = 0 === p54 ? 0 : t68.renderCoordsHelper.getAltitude(s69.eye);
  r62.min = o61, r62.max = i60;
  e35(p54, f49, m44, c58, 0.05 * f49, r62);
}
function j11(t68, e65, n77, o61) {
  return t68.renderCoordsHelper.worldUpAtPosition(e65.eye, o61), g2(o61, o61, n77), o61;
}
function T14(t68, e65) {
  return e65.min = t68.min, e65.max = t68.max, e65;
}
var x18 = { min: 0, max: 0 };
var g14 = n7();
var C12 = n7();
var M8 = n7();
var h25 = n7();

// node_modules/@arcgis/core/views/3d/camera/constraintUtils/distance.js
function d37(n77, e65, r62 = c34) {
  if (!n77.state.isLocal)
    return 0;
  const t68 = n77.state.constraints.distance;
  if (!n77.pointsOfInterest.surfaceOrigin.renderLocation || t68 === 1 / 0)
    return 0;
  j12.min = 0, j12.max = t68, O15(n77, r62, j12);
  const o61 = l33(n77, e65), i60 = j12.max - o61;
  return i60 >= -1e-6 ? 0 : i60;
}
function y16(t68, o61, i60 = c34) {
  const u51 = d37(t68, o61, i60);
  if (0 === u51)
    return false;
  const p54 = t68.pointsOfInterest.surfaceOrigin;
  if (!p54.renderLocation)
    return false;
  const y32 = l33(t68, o61) + u51, O26 = r5(x19, o61.eye), j25 = s46(o61, i60.interactionDirection, L13(o61, p54.renderLocation, h26), I15);
  if (!Z(w7(p54.renderLocation, y32), p8(o61.eye, j25), k10))
    return false;
  o61.eye = k10;
  const C26 = e7(g15, o61.eye, O26);
  o61.center = u2(k10, o61.center, C26);
  const N19 = t68.renderCoordsHelper.getAltitude(o61.center), v37 = t68.renderCoordsHelper.intersectInfiniteManifold(o61.ray, N19, k10);
  return null != v37 && (o61.center = v37), true;
}
function O15(n77, e65, r62) {
  const t68 = e65.interactionType;
  if (t68 === O13.NONE)
    return;
  const { min: o61, max: i60 } = r62, { interactionStartCamera: c58, interactionFactor: s69 } = e65;
  if (!c58)
    return;
  const a67 = t68 === O13.ZOOM || t68 === O13.PAN, f49 = d37(n77, c58), m44 = 0 === f49 ? 0 : l33(n77, c58);
  r62.min = o61, r62.max = i60;
  e35(f49, m44, a67, s69, 0.05 * m44, r62);
}
function l33(n77, e65) {
  const r62 = n77.pointsOfInterest.surfaceOrigin;
  return r62.renderLocation ? x2(e65.eye, r62.renderLocation) : 0;
}
function L13(n77, e65, r62) {
  return H(r62, n77.eye, e65);
}
var j12 = { min: 0, max: 0 };
var x19 = n7();
var g15 = n7();
var I15 = n7();
var h26 = n7();
var k10 = n7();

// node_modules/@arcgis/core/views/3d/camera/intersectionUtils.js
function u28(e65, r62, n77, t68) {
  return null != e65.renderCoordsHelper.fromRenderCoords(r62.eye, M9, t68) && p4(n77, M9);
}
function g16(e65, r62) {
  return e65.elevationProvider ? e65.elevationProvider.getElevation(r62[0], r62[1], r62[2], e65.renderCoordsHelper.spatialReference, "ground") ?? 0 : 0;
}
function f28(o61, s69, a67, c58) {
  const l63 = o61.state.camera.clone();
  s69 && a67 && c58 && (l63.eye = s69, l63.center = a67, l63.up = c58), m22(o61, l63.ray, b9) || r5(b9, l63.center);
  const d52 = o61.state.constraints, u51 = d52.minimumPoiDistance;
  if (p2(l63.eye, b9) < u51) {
    const r62 = d52.collision.enabled;
    r5(w19, l63.viewForward), g2(w19, w19, u51), r62 ? l63.eye = e7(M9, b9, w19) : u2(b9, l63.eye, w19);
    const s70 = o61.renderCoordsHelper, a68 = s70.getAltitude(l63.eye), c59 = d52.collision.elevationMargin;
    r62 && a68 < c59 && (e7(w19, b9, l63.eye), l63.eye = s70.setAltitude(M9, c59, l63.eye), u2(b9, l63.eye, w19));
  }
  return l63.center = b9, l63;
}
function p28(e65, n77, t68) {
  if (!e65.state.isGlobal || !e65.stateManager.constraintsManager)
    return false;
  const i60 = g16(e65, n77), o61 = e65.stateManager.constraintsManager.nearFarHeuristic, { far: s69 } = o61.compute(n77, t68, e65.renderDataExtent, i60, H10), a67 = s69 * s69;
  return p2(n77, t68) > a67;
}
function m22(e65, r62, n77) {
  let t68 = v17[e65.viewingMode];
  t68 || (t68 = A14(e65.state.viewingMode), t68.options.backfacesTerrain = !e65.state.isGlobal, t68.options.invisibleTerrain = true, v17[e65.viewingMode] = t68);
  const { isGlobal: i60 } = e65.state;
  return !(!e65.sceneIntersectionHelper.intersectRay(r62, t68, n77) || p28(e65, r62.origin, n77)) || (!(!e65.renderCoordsHelper.intersectManifold(r62, 0, n77) || p28(e65, r62.origin, n77)) || !!i60 && y17(r62, n77, A3(e65.spatialReference).radius));
}
function y17(e65, r62, t68) {
  const a67 = P(e65.origin, e65.origin) - t68 * t68, c58 = a67 > 0 ? Math.sqrt(a67) / 3 : 1;
  return g2(r62, e65.direction, c58 / s7(e65.direction)), u2(r62, r62, e65.origin), true;
}
var v17 = {};
var M9 = n7();
var b9 = n7();
var w19 = n7();
var H10 = { near: 0, far: 0 };

// node_modules/@arcgis/core/views/3d/camera/constraintUtils/surfaceCollision.js
function o41(r62, o61, l63 = i41.EYE) {
  const a67 = r62.state.constraints;
  if (!a67.collision.enabled)
    return false;
  const N19 = g16(r62, o61.eye), A33 = r62.renderCoordsHelper.getAltitude(o61.eye), C26 = N19 + a67.collision.elevationMargin;
  if (A33 >= C26)
    return false;
  const f49 = s7(o61.eye);
  if (e7(c35, o61.center, o61.eye), o61.eye = r62.renderCoordsHelper.setAltitude(_15, C26, o61.eye), l63 === i41.EYE_AND_CENTER)
    o61.center = u2(c35, o61.eye, c35);
  else if (l63 === i41.EYE_AND_CENTER_SCALE) {
    const e65 = (f49 - A33 + C26) / f49;
    o61.center = g2(c35, o61.center, e65);
  }
  return true;
}
var i41;
!function(e65) {
  e65[e65.EYE = 0] = "EYE", e65[e65.EYE_AND_CENTER = 1] = "EYE_AND_CENTER", e65[e65.EYE_AND_CENTER_SCALE = 2] = "EYE_AND_CENTER_SCALE";
}(i41 || (i41 = {}));
var c35 = n7();
var _15 = n7();

// node_modules/@arcgis/core/views/3d/state/utils/viewUtils.js
function n46(c58, n77, e65) {
  c58.worldUpAtPosition(n77, i42), e7(m23, e65, n77);
  const a67 = s7(m23);
  return 0 === a67 ? 0 : l4(P(m23, i42) / a67);
}
var i42 = n7();
var m23 = n7();

// node_modules/@arcgis/core/views/3d/camera/constraintUtils/tilt.js
function x20(t68, n77, r62 = c34, i60 = true) {
  V8.eyeCenterDistance = 0, V8.requiresTwoSteps = false;
  const a67 = U11(t68, n77, r62, void 0, V8);
  if (0 === a67)
    return false;
  switch (g4(_16, -a67, n77.viewRight), r62.tiltMode) {
    case O14.LOOK_AROUND:
      O(K6, n77.viewForward, _16), g2(K6, K6, V8.eyeCenterDistance), n77.center = u2(z12, n77.eye, K6);
      break;
    case O14.TUMBLE:
      e7(K6, n77.center, n77.eye), O(K6, K6, _16), n77.eye = e7(z12, n77.center, K6);
      break;
    default:
      n13(r62.tiltMode);
  }
  return n77.up = O(z12, n77.up, _16), !V8.requiresTwoSteps || !i60 || x20(t68, n77, r62, false);
}
function U11(e65, t68, n77 = c34, r62 = c34, i60) {
  if (!e65.state.constraints.tilt)
    return 0;
  const s69 = t68.distance, a67 = e65.state.constraints.tilt(s69, J7);
  return N8(e65, n77, a67), r62.interactionType === O13.TUMBLE && r43(r62.selection, L12.ALTITUDE) && B9(e65, r62.interactionStartCamera, a67), n77.tiltMode === O14.LOOK_AROUND || r62.tiltMode === O14.LOOK_AROUND ? L14(e65, t68, a67, i60) : P13(e65, t68, a67);
}
function P13(e65, n77, r62) {
  const i60 = n46(e65.renderCoordsHelper, n77.center, n77.eye), s69 = i60 - i3(i60, r62.min, r62.max);
  return k11(s69) ? s69 : 0;
}
function L14(e65, t68, n77, r62) {
  switch (r62 && (r62.requiresTwoSteps = false), e65.viewingMode) {
    case "global":
      return v18(e65, t68, n77, r62);
    case "local":
      return q9(e65, t68, n77, r62);
  }
}
function q9(e65, n77, r62, i60) {
  const s69 = n46(e65.renderCoordsHelper, n77.center, n77.eye), a67 = i3(s69, r62.min, r62.max), o61 = s69 - a67;
  if (!k11(o61))
    return 0;
  if (i60) {
    const t68 = e65.pointsOfInterest.centerOnSurfaceFrequent.estimatedSurfaceAltitude, r63 = e65.renderCoordsHelper.getAltitude(n77.eye) - t68, s70 = Math.cos(a67);
    Math.abs(s70) > 1e-4 ? i60.eyeCenterDistance = r63 / s70 : i60.eyeCenterDistance = n77.distance;
  }
  return o61;
}
function v18(e65, n77, r62, i60) {
  const s69 = b10(e65, n77, Q6), a67 = i3(s69.tiltAtCenter, r62.min, r62.max);
  if (!k11(s69.tiltAtCenter - a67))
    return 0;
  let o61, c58;
  return s69.centerIsOnSurface ? (o61 = H11(s69), c58 = E19(s69, o61)) : (o61 = s69.constraints.clampTilt(s69.eyeCenterDistance, s69.tiltAtCenter), i60 && o61 < Math.PI / 2 && (i60.requiresTwoSteps = true, o61 = Math.PI / 2 - 1e-5), c58 = F16(s69, o61)), i60 && (i60.eyeCenterDistance = g17(s69, o61)), c58;
}
function b10(e65, t68, r62) {
  const i60 = e65.pointsOfInterest.centerOnSurfaceFrequent.estimatedSurfaceAltitude, s69 = i60 + A3(e65.spatialReference).radius, a67 = e65.renderCoordsHelper.intersectManifold(t68.ray, i60, z12);
  return r62.eyeCenterDistance = t68.distance, r62.centerIsOnSurface = false, null != a67 ? (r62.eyeCenterDistance = x2(t68.eye, a67), r62.tiltAtCenter = n46(e65.renderCoordsHelper, a67, t68.eye), r62.centerIsOnSurface = true) : e65.state.isLocal ? r62.tiltAtCenter = n46(e65.renderCoordsHelper, t68.center, t68.eye) : (Y2(T5(tt, s69), t68.ray, z12), r62.eyeCenterDistance = x2(t68.eye, z12), r62.tiltAtCenter = l4(-P(t68.viewForward, z2(z12, z12)))), r62.radius = s69, r62.eyeRadius = s7(t68.eye), r62.constraints = e65.state.constraints, r62;
}
function k11(e65) {
  return Math.abs(e65) > 1e-9;
}
function H11(e65) {
  const { constraints: t68, eyeCenterDistance: n77, tiltAtCenter: r62 } = e65;
  let i60 = r62, s69 = t68.clampTilt(n77, r62);
  const a67 = g17(e65, s69);
  if (t68.clampTilt(a67, r62) === s69)
    return s69;
  let o61 = 0;
  for (; o61 < 10 && k11(s69 - i60); ) {
    const n78 = (i60 + s69) / 2, r63 = g17(e65, n78);
    k11(t68.clampTilt(r63, n78) - n78) ? i60 = n78 : s69 = n78, o61++;
  }
  return s69;
}
function g17(e65, n77) {
  if (!e65.centerIsOnSurface)
    return e65.eyeCenterDistance;
  const i60 = Math.PI - i3(n77, 0, Math.PI), s69 = F3(e65.radius / e65.eyeRadius * Math.sin(i60)), a67 = Math.PI - i60 - s69, o61 = Math.sin(a67) / Math.sin(i60);
  if (e65.eyeRadius < e65.radius && o61 > 1) {
    const t68 = Math.PI - s69, n78 = Math.PI - i60 - t68;
    return Math.sin(n78) / Math.sin(i60) * e65.eyeRadius;
  }
  return o61 * e65.eyeRadius;
}
function E19(e65, t68) {
  const n77 = F3(e65.radius / e65.eyeRadius * Math.sin(e65.tiltAtCenter)), i60 = F3(e65.radius / e65.eyeRadius * Math.sin(t68));
  return e65.eyeRadius > e65.radius ? n77 - i60 : i60 - n77;
}
function F16(e65, t68) {
  return e65.tiltAtCenter - Math.PI / 2 - (t68 - Math.PI / 2);
}
function N8(e65, t68, n77) {
  if (t68.interactionType === O13.NONE)
    return;
  const { interactionStartCamera: r62, interactionFactor: i60 } = t68;
  if (!r62)
    return;
  const { min: s69, max: a67 } = n77, o61 = U11(e65, r62, c34, t68), c58 = 0 === o61 ? 0 : n46(e65.renderCoordsHelper, r62.center, r62.eye);
  n77.min = s69, n77.max = a67, t68.interactionType === O13.TUMBLE ? (r43(t68.selection, L12.ALTITUDE) && B9(e65, r62, n77), e35(o61, c58, true, i60, G12, n77)) : e35(o61, c58, false, i60, G12, n77);
}
function B9(e65, t68, r62) {
  const i60 = e65.state.constraints;
  if (e65.state.isLocal || !i60.altitude || !t68)
    return;
  const s69 = v3(t68.center), a67 = Math.sqrt(s69), o61 = t68.distance, c58 = A3(e65.spatialReference).radius, u51 = i60.altitude.min + c58, l63 = i60.altitude.max + c58, m44 = (u51 * u51 - o61 * o61 - s69) / (-2 * a67 * o61), d52 = (l63 * l63 - o61 * o61 - s69) / (-2 * a67 * o61);
  r62.min = Math.max(r62.min, Math.min(Math.PI - l4(d52), r62.max)), r62.max = Math.min(r62.max, Math.PI - l4(m44));
}
var K6 = n7();
var _16 = e15();
var z12 = n7();
var G12 = M(5);
var J7 = { min: 0, max: 0 };
var Q6 = { constraints: null, radius: 0, eyeRadius: 0, centerIsOnSurface: true, eyeCenterDistance: 0, tiltAtCenter: 0 };
var V8 = { eyeCenterDistance: 0, requiresTwoSteps: false };

// node_modules/@arcgis/core/views/animation/easing.js
function t46(t68) {
  return t68;
}
var u29 = (t68) => t68 * t68;
var o42 = (t68) => 1 - u29(1 - t68);
var i43 = (t68) => t68 < 0.5 ? u29(2 * t68) / 2 : (o42(2 * (t68 - 0.5)) + 1) / 2;
var n47 = (t68) => t68 * t68 * t68;
var c36 = (t68) => 1 - n47(1 - t68);
var a41 = (t68) => t68 < 0.5 ? n47(2 * t68) / 2 : (c36(2 * (t68 - 0.5)) + 1) / 2;
var s47 = (t68) => t68 * t68 * t68 * t68;
var q10 = (t68) => 1 - s47(1 - t68);
var r44 = (t68) => t68 < 0.5 ? s47(2 * t68) / 2 : (q10(2 * (t68 - 0.5)) + 1) / 2;
var e36 = (t68) => t68 * t68 * t68 * t68 * t68;
var b11 = (t68) => 1 - e36(1 - t68);
var d38 = (t68) => t68 < 0.5 ? e36(2 * t68) / 2 : (b11(2 * (t68 - 0.5)) + 1) / 2;
var h27 = (t68) => 1 - Math.cos(t68 * Math.PI / 2);
var p29 = (t68) => 1 - h27(1 - t68);
var x21 = (t68) => t68 < 0.5 ? h27(2 * t68) / 2 : (p29(2 * (t68 - 0.5)) + 1) / 2;
var M10 = (t68) => 2 ** (10 * (t68 - 1));
var f29 = (t68) => 1 - M10(1 - t68);
var l34 = (t68) => t68 < 0.5 ? M10(2 * t68) / 2 : (f29(2 * (t68 - 0.5)) + 1) / 2;
var I16 = (t68) => -(Math.sqrt(1 - t68 * t68) - 1);
var P14 = (t68) => 1 - I16(1 - t68);
var g18 = (t68) => t68 < 0.5 ? I16(2 * t68) / 2 : (P14(2 * (t68 - 0.5)) + 1) / 2;
function j13(t68) {
  const u51 = 2 * (t68 - Math.sqrt((t68 - 1) * t68)), o61 = u51 / 2 / t68;
  return (i60) => i60 < o61 ? t68 * i60 * i60 : u51 * i60 - u51 + 1;
}
function k12(t68, u51) {
  return (o61, i60) => o61 < u51 ? u51 * t68(o61 / u51, i60) : 1 - t68((1 - o61) / (1 - u51), i60) * (1 - u51);
}
var m24 = k12(j13(1), 1);
var v19 = k12(j13(1), 0);
var w20 = k12(j13(1), 0.5);
var y18 = k12(j13(2), 1);
var z13 = k12(j13(2), 0);
var A21 = k12(j13(2), 0.5);
var B10 = k12(j13(3), 1);
var C13 = k12(j13(3), 0);
var D11 = k12(j13(3), 0.5);
var E20 = k12(j13(4), 1);
var F17 = k12(j13(4), 0);
var G13 = k12(j13(4), 0.5);
var H12 = { linear: t46, "in-quad": u29, "out-quad": o42, "in-out-quad": i43, "in-coast-quad": m24, "out-coast-quad": v19, "in-out-coast-quad": w20, "in-cubic": n47, "out-cubic": c36, "in-out-cubic": a41, "in-coast-cubic": y18, "out-coast-cubic": z13, "in-out-coast-cubic": A21, "in-quart": s47, "out-quart": q10, "in-out-quart": r44, "in-coast-quart": B10, "out-coast-quart": C13, "in-out-coast-quart": D11, "in-quint": e36, "out-quint": b11, "in-out-quint": d38, "in-coast-quint": E20, "out-coast-quint": F17, "in-out-coast-quint": G13, "in-sine": h27, "out-sine": p29, "in-out-sine": x21, "in-expo": M10, "out-expo": f29, "in-out-expo": l34, "in-circ": I16, "out-circ": P14, "in-out-circ": g18 };

// node_modules/@arcgis/core/views/3d/camera/constraintUtils.js
function E21(t68, o61, n77 = U12, e65 = o61) {
  e65 !== o61 && e65.copyFrom(o61), e65.computeUp(t68.state.viewingMode);
  let s69 = false;
  for (let i60 = 0; i60 < C14; i60++) {
    let o62 = 0;
    for (const i61 of N9)
      if (r43(n77.selection, i61.type)) {
        const r62 = Math.abs(i61.error(t68, e65, n77));
        i61.apply(t68, e65, n77) && (s69 = true, o62 += r62);
      }
    if (0 === o62)
      break;
  }
  const c58 = r43(n77.selection, L12.COLLISION), l63 = u30(n77.interactionType, t68);
  return c58 && o41(t68, e65, l63) && (s69 = true), s69 && e65.computeUp(t68.state.viewingMode), s69;
}
function u30(t68, o61) {
  switch (t68) {
    case O13.PAN:
      return i41.EYE_AND_CENTER;
    case O13.ASCEND:
      return o61.state.isGlobal ? i41.EYE_AND_CENTER_SCALE : i41.EYE_AND_CENTER;
    default:
      return i41.EYE;
  }
}
function T15(t68) {
  const o61 = Math.min(1, t68 / 150);
  return a41(o61);
}
function y19(t68, o61, r62) {
  return U11(t68, o61, r62) * o61.distance;
}
var N9 = [{ type: L12.TILT, error: y19, apply: x20 }, { type: L12.ALTITUDE, error: l32, apply: f27 }, { type: L12.DISTANCE, error: d37, apply: y16 }];
var U12 = { selection: L12.ALL, interactionType: O13.NONE, interactionFactor: 0, interactionStartCamera: null, interactionDirection: null, tiltMode: O14.TUMBLE };
var C14 = 5;

// node_modules/@arcgis/core/views/3d/animation/pointToPoint/Camera.js
var P15 = n7();
var g19 = n7();
var _17 = n7();
var k13 = n7();
var v20 = n7();
var x22 = n7();
var z14 = { upward: r4(0, 0, 1), forward: r4(0, 1, 0), sideway: r4(1, 0, 0) };
var b12 = e14();
var T16 = class {
  constructor(t68 = l13.Global) {
    this.viewingMode = t68, this.center = n7(), this.pitch = 0, this.yaw = 0, this.distance = 0, this.lookAtDirection = t5(z14.forward);
  }
  pixelsPerPanAtZoom(t68) {
    return this.size / 2 / (this._zoomToPanScale * t68);
  }
  zoomAtPixelsPerPan(t68) {
    return this.size / 2 / (this._zoomToPanScale * t68);
  }
  pixelsPerRotateAtZoom() {
    const t68 = Math.max(Math.cos(Math.abs(this.pitch)), 0.5);
    return this.size / 2 / t68;
  }
  compareTo(t68, e65) {
    if (e65 || (e65 = { pan: 0, rotate: 0, sourceZoom: 0, targetZoom: 0 }), this.viewingMode === l13.Global) {
      const i61 = (s7(this.center) + s7(t68.center)) / 2;
      e65.pan = x10(this.center, t68.center) * i61;
    } else
      e65.pan = x2(this.center, t68.center);
    let i60 = Math.abs(t68.yaw - this.yaw);
    i60 >= Math.PI && (i60 = 2 * Math.PI - i60);
    const o61 = Math.abs(t68.pitch - this.pitch);
    return e65.rotate = Math.max(i60, o61), e65.sourceZoom = this.distance, e65.targetZoom = t68.distance, e65;
  }
  interpolate(e65, i60, s69) {
    this.viewingMode === l13.Global ? k6(e65.center, i60.center, s69.pan, this.center) : A2(this.center, e65.center, i60.center, s69.pan), this.distance = isFinite(i60.distance) ? s9(e65.distance, i60.distance, s69.zoom) : e65.distance, this.pitch = s9(e65.pitch, i60.pitch, s69.rotate);
    let a67 = e65.yaw;
    const h46 = i60.yaw;
    Math.abs(h46 - a67) >= Math.PI && (a67 += 2 * (a67 < h46 ? 1 : -1) * Math.PI), this.yaw = s9(a67, h46, s69.rotate);
  }
  copyFrom(t68) {
    r5(this.center, t68.center), this.pitch = t68.pitch, this.yaw = t68.yaw, this.distance = t68.distance, r5(this.lookAtDirection, t68.lookAtDirection), this.size = t68.size, this.copyFromCommon(t68), this.viewingMode = t68.viewingMode;
  }
  copyFromRenderCamera(t68) {
    const e65 = this._lookAtOrientation(t68.center, b12);
    r5(this.center, t68.center), e7(k13, t68.center, t68.eye), S2(k13, k13, e65), S2(v20, t68.up, e65), this.distance = s7(k13), 0 !== this.distance && (k13[0] /= this.distance, k13[1] /= this.distance, k13[2] /= this.distance), this.pitch = this._eyeUpToPitch(k13), this.yaw = this._eyeUpToYaw(k13, v20), this.size = Math.sqrt(t68.width * t68.width + t68.height * t68.height), this.copyFromCommon(t68);
  }
  copyFromCommon(t68) {
    this.fov = t68.fov, this._zoomToPanScale = Math.atan(0.5 * this.fov);
  }
  copyToRenderCamera(t68) {
    const i60 = this._lookAtOrientation(this.center, b12);
    o12(i60, i60), this._axisAngleVec3(z14.sideway, this.pitch - Math.PI / 2, z14.forward, k13), this._axisAngleVec3(z14.upward, this.yaw, k13), this._axisAngleVec3(z14.sideway, this.pitch - Math.PI / 2, z14.upward, v20), this._axisAngleVec3(z14.upward, this.yaw, v20), g2(k13, k13, this.distance), S2(k13, k13, i60), S2(v20, v20, i60), t68.center = this.center, t68.eye = e7(k13, this.center, k13), t68.up = v20;
  }
  _axisAngleVec3(t68, e65, i60, s69 = i60) {
    const a67 = Math.cos(e65), o61 = Math.sin(e65);
    return g2(P15, i60, a67), _(g19, t68, i60), g2(g19, g19, o61), g2(_17, t68, (1 - a67) * P(t68, i60)), u2(s69, u2(s69, P15, g19), _17);
  }
  _lookAtOrientation(t68, e65 = e14()) {
    return this._upAtLookAt(t68, _17), _(P15, this.lookAtDirection, _17), z2(P15, P15), 0 === P15[0] && 0 === P15[1] && 0 === P15[2] && r5(P15, z14.sideway), _(g19, _17, P15), z2(g19, g19), e65[0] = P15[0], e65[1] = g19[0], e65[2] = _17[0], e65[3] = P15[1], e65[4] = g19[1], e65[5] = _17[1], e65[6] = P15[2], e65[7] = g19[2], e65[8] = _17[2], e65;
  }
  _upAtLookAt(t68, e65) {
    return this.viewingMode === l13.Local ? r5(e65, z14.upward) : z2(e65, t68);
  }
  _eyeUpToPitch(t68) {
    return Math.PI - x10(z14.upward, t68);
  }
  _eyeUpToYaw(t68, e65) {
    const i60 = x22;
    return Math.abs(e65[2]) < 0.5 ? (r5(i60, e65), t68[2] > 0 && g2(i60, i60, -1)) : r5(i60, t68), _(g19, i60, z14.upward), z2(g19, g19), x10(z14.sideway, g19, z14.upward);
  }
};

// node_modules/@arcgis/core/views/animation/pointToPoint/Settings.js
var o43 = { desiredScreenFlow: 2, minDuration: n4(500), maxDuration: n4(8e3) };

// node_modules/@arcgis/core/views/animation/pointToPoint/Definition.js
var t47 = class _t3 {
  constructor(t68) {
    this._createCamera = t68, this.compared = { sourceZoom: 0, targetZoom: 0, pan: 0, rotate: 0 }, this.settings = { desiredScreenFlow: o43.desiredScreenFlow }, this.source = t68(), this.target = t68();
  }
  clone() {
    const e65 = new _t3(this._createCamera);
    return e65.copyFrom(this), e65;
  }
  copyFrom(e65) {
    this.update(e65.source, e65.target, e65.settings);
  }
  update(t68, r62, s69) {
    this.source !== t68 && this.source.copyFrom(t68), this.target !== r62 && this.target.copyFrom(r62), this.compared = this.source.compareTo(this.target, this.compared), this.settings.desiredScreenFlow = null != s69.desiredScreenFlow ? s69.desiredScreenFlow : o43.desiredScreenFlow, this.desiredPixelFlow = this.settings.desiredScreenFlow * this.target.size, this.halfWindowSize = this.target.size / 2;
  }
  halfWindowPanAtZoom(e65) {
    const t68 = this.target.pixelsPerPanAtZoom(e65);
    return this.halfWindowSize / t68;
  }
  get hasZoom() {
    return Math.abs(this.compared.sourceZoom - this.compared.targetZoom) > 1e-5;
  }
  get hasPan() {
    return this.compared.pan > 1e-9;
  }
  get hasRotate() {
    return this.compared.rotate > 1e-9;
  }
};

// node_modules/@arcgis/core/views/animation/pointToPoint/Path.js
var e37 = class {
  constructor() {
    this.segments = [];
  }
  get time() {
    return this.segments.reduce((e65, o61) => t4(e65 + o61.time), t4(0));
  }
  interpolateComponentsAt(t68, e65) {
    t68 = Math.min(Math.max(t68, 0), 1), t68 *= this.time;
    let o61 = 0, s69 = 0;
    const n77 = this.definition;
    for (let a67 = 0; a67 < this.segments.length; a67++) {
      const m44 = this.segments[a67], i60 = m44.definition;
      if (t68 <= m44.time || a67 === this.segments.length - 1) {
        if (e65 = this.segmentInterpolateComponentsAt(m44, 0 === m44.time ? 0 : t68 / m44.time, e65), n77.hasPan && !isNaN(e65.pan) && isFinite(n77.compared.pan) ? e65.pan = (o61 + i60.compared.pan * e65.pan) / n77.compared.pan : e65.pan = 1, n77.hasRotate && !isNaN(e65.rotate) && isFinite(n77.compared.rotate) ? e65.rotate = (s69 + i60.compared.rotate * e65.rotate) / n77.compared.rotate : e65.rotate = 1, n77.hasZoom && !isNaN(e65.zoom) && isFinite(i60.compared.targetZoom)) {
          const t69 = e65.zoom * (i60.compared.targetZoom - i60.compared.sourceZoom) + i60.compared.sourceZoom, o62 = this.segments[0].definition.compared.sourceZoom, s70 = this.segments[this.segments.length - 1].definition.compared.targetZoom;
          e65.zoom = (t69 - o62) / (s70 - o62);
        } else
          e65.zoom = 1;
        return e65;
      }
      t68 -= m44.time, o61 += i60.compared.pan, s69 += i60.compared.rotate;
    }
  }
  segmentInterpolateComponentsAt(t68, e65, o61) {
    return t68.interpolateComponentsAt(e65, o61);
  }
};

// node_modules/@arcgis/core/views/animation/pointToPoint/Segment.js
var i44 = class {
  get time() {
    return this._time;
  }
  constructor(t68) {
    t68 && this.update(t68);
  }
  update(t68) {
    t68 && (this.definition ? this.definition.copyFrom(t68) : this.definition = t68.clone()), this._updatePrecomputedVariables(), this._updatePixelFlow();
  }
  _updatePrecomputedVariables() {
    const t68 = this.definition, i60 = t68.compared, o61 = i60.sourceZoom, e65 = i60.targetZoom;
    this._zoomSign = o61 > e65 ? 1 : -1, this._panPixelsAtSource = i60.pan * t68.source.pixelsPerPanAtZoom(o61);
    const n77 = (t68.source.pixelsPerRotateAtZoom(o61) + t68.target.pixelsPerRotateAtZoom(e65)) / 2;
    this._rotatePixels = i60.rotate * n77;
  }
  _updatePixelFlow() {
    const i60 = this.definition.compared.sourceZoom, o61 = this.definition.compared.targetZoom, { hasZoom: e65, hasPan: n77, hasRotate: s69 } = this.definition;
    let a67 = 0, h46 = 0;
    e65 && (n77 && (a67 = (o61 / i60 - 1) / (-1 / (this._zoomSign * this.definition.halfWindowSize) * Math.LN2 * this._panPixelsAtSource)), s69 && (h46 = this._zoomSign * (Math.log(i60 / o61) / Math.LN2) * this.definition.halfWindowSize / this._rotatePixels)), this._zoomPixelFlow = 0, this._panPixelFlow = 0, this._rotatePixelFlow = 0;
    const l63 = this.definition.desiredPixelFlow;
    if (e65 && n77 && s69) {
      const t68 = a67 + h46 + a67 * h46;
      this._zoomPixelFlow = a67 * h46 / t68 * l63, this._panPixelFlow = h46 / t68 * l63, this._rotatePixelFlow = a67 / t68 * l63;
    } else if (e65 && n77) {
      const t68 = 1 + a67;
      this._zoomPixelFlow = a67 / t68 * l63, this._panPixelFlow = 1 / t68 * l63;
    } else if (e65 && s69) {
      const t68 = 1 + h46;
      this._zoomPixelFlow = h46 / t68 * l63, this._rotatePixelFlow = 1 / t68 * l63;
    } else if (n77 && s69) {
      const t68 = this._panPixelsAtSource / this._rotatePixels, i61 = 1 + t68;
      this._panPixelFlow = t68 / i61 * l63, this._rotatePixelFlow = 1 / i61 * l63;
    } else
      n77 ? this._panPixelFlow = l63 : e65 ? this._zoomPixelFlow = l63 : s69 && (this._rotatePixelFlow = l63);
    this._time = s69 ? this.rotateTime : e65 ? this.zoomTime : n77 ? this.panTime : t4(0);
  }
  get rotateTime() {
    return this.definition.hasRotate ? t4(this._rotatePixels / this._rotatePixelFlow) : t4(0);
  }
  get zoomTime() {
    return this.definition.hasZoom ? t4(this._zoomSign * (Math.log(this.definition.compared.sourceZoom / this.definition.compared.targetZoom) / Math.LN2) * this.definition.halfWindowSize / this._zoomPixelFlow) : t4(0);
  }
  get panTime() {
    if (this.definition.hasPan) {
      if (this.definition.hasZoom) {
        const i60 = -1 / (this._zoomSign * this.definition.halfWindowSize) * Math.LN2, o61 = i60 * this._panPixelsAtSource;
        return t4(Math.log(o61 * (this._zoomPixelFlow / this._panPixelFlow) + 1) / (i60 * this._zoomPixelFlow));
      }
      return t4(this._panPixelsAtSource / this._panPixelFlow);
    }
    return t4(0);
  }
  _interpolateComponentsZoom(t68) {
    if (0 === t68 || 1 === t68)
      return t68;
    if (this.definition.hasZoom) {
      const i60 = this.definition.compared.sourceZoom, o61 = this.definition.compared.targetZoom;
      return (i60 * (i60 / o61) ** -t68 - i60) / (o61 - i60);
    }
    return t68;
  }
  _interpolateComponentsPan(t68) {
    if (0 === t68 || 1 === t68)
      return t68;
    if (this.definition.hasPan && this.definition.hasZoom) {
      const i60 = -1 / (this._zoomSign * this.definition.halfWindowSize) * this._zoomPixelFlow;
      return 1 / this._panPixelsAtSource * (this._panPixelFlow * (2 ** (i60 * t68 * this._time) - 1)) / (i60 * Math.LN2);
    }
    return t68;
  }
  _interpolateComponentsRotate(t68) {
    return t68;
  }
  interpolateComponentsAt(t68, i60) {
    t68 = Math.min(Math.max(t68, 0), 1);
    const o61 = this._interpolateComponentsZoom(t68), e65 = this._interpolateComponentsPan(t68), n77 = this._interpolateComponentsRotate(t68);
    return i60 ? (i60.zoom = o61, i60.pan = e65, i60.rotate = n77) : i60 = { zoom: o61, pan: e65, rotate: n77 }, i60;
  }
};

// node_modules/@arcgis/core/views/animation/pointToPoint/apex/functions.js
function o44(o61, a67, e65) {
  const n77 = a67 - o61.compared.sourceZoom, t68 = o61.halfWindowPanAtZoom(n77);
  return -o61.halfWindowSize * (e65.ascensionFactor * Math.LN2 * o61.compared.pan + t68) * Math.log(o61.compared.sourceZoom / a67) / (o61.desiredPixelFlow * Math.LN2 * t68);
}
function a42(o61, a67, e65) {
  const n77 = 1 / a67, t68 = Math.log(o61.compared.sourceZoom * n77), i60 = 1 / o61.desiredPixelFlow, r62 = 1 / Math.LN2, d52 = a67 - o61.compared.sourceZoom, c58 = 1 / d52, l63 = (e65.ascensionFactor * Math.LN2 * o61.compared.pan + o61.halfWindowPanAtZoom(d52)) / o61.halfWindowPanAtZoom(1);
  return o61.halfWindowSize * n77 * i60 * r62 * c58 * l63 - o61.halfWindowSize * t68 * i60 * r62 * c58 + o61.halfWindowSize * t68 * i60 * r62 * l63 / (d52 * d52);
}
function e38(o61, a67, e65) {
  const n77 = a67 - o61.compared.sourceZoom, t68 = 1 / n77, i60 = 1 / a67, r62 = Math.log(o61.compared.sourceZoom * i60), d52 = (e65.ascensionFactor * Math.LN2 * o61.compared.pan + o61.halfWindowPanAtZoom(n77)) / o61.halfWindowPanAtZoom(1);
  return o61.halfWindowSize * t68 * (-2 * t68 * i60 * d52 + 2 * t68 * r62 + 2 * i60 - 2 * r62 * d52 / (n77 * n77) - d52 / (a67 * a67)) / (o61.desiredPixelFlow * Math.LN2);
}
function n48(o61, a67) {
  return -o61.halfWindowSize * Math.log(o61.compared.sourceZoom / a67) / (o61.desiredPixelFlow * Math.LN2);
}
function t48(o61, a67) {
  return o61.halfWindowSize / (a67 * o61.desiredPixelFlow * Math.LN2);
}
function i45(o61, a67) {
  return -o61.halfWindowSize / (a67 * a67 * o61.desiredPixelFlow * Math.LN2);
}
function r45(o61, a67, e65) {
  return -o61.compared.pan * o61.halfWindowSize * (e65.ascensionFactor + e65.descensionFactor - 1) / (o61.desiredPixelFlow * o61.halfWindowPanAtZoom(a67));
}
function d39(o61, a67, e65) {
  return o61.compared.pan * o61.halfWindowSize * (e65.ascensionFactor + e65.descensionFactor - 1) / (o61.desiredPixelFlow * o61.halfWindowPanAtZoom(a67 * a67));
}
function c37(o61, a67, e65) {
  return -2 * o61.compared.pan * o61.halfWindowSize * (e65.ascensionFactor + e65.descensionFactor - 1) / (o61.desiredPixelFlow * o61.halfWindowPanAtZoom(a67 * a67 * a67));
}
function l35(o61, a67, e65) {
  return o61.halfWindowSize * (-o61.halfWindowPanAtZoom(a67) - e65.descensionFactor * Math.LN2 * o61.compared.pan + o61.halfWindowPanAtZoom(o61.compared.targetZoom)) * Math.log(a67 / o61.compared.targetZoom) / (o61.desiredPixelFlow * Math.LN2 * o61.halfWindowPanAtZoom(-a67 + o61.compared.targetZoom));
}
function m25(o61, a67, e65) {
  const n77 = Math.log(a67 / o61.compared.targetZoom), t68 = 1 / o61.desiredPixelFlow, i60 = 1 / Math.LN2, r62 = -a67 + o61.compared.targetZoom, d52 = 1 / r62, c58 = (-o61.halfWindowPanAtZoom(a67) - e65.descensionFactor * Math.LN2 * o61.compared.pan + o61.halfWindowPanAtZoom(o61.compared.targetZoom)) / o61.halfWindowPanAtZoom(1);
  return -o61.halfWindowSize * n77 * t68 * i60 * d52 + o61.halfWindowSize * n77 * t68 * i60 * c58 / (r62 * r62) + o61.halfWindowSize * t68 * i60 * d52 * c58 / a67;
}
function h28(o61, a67, e65) {
  const n77 = a67 - o61.compared.targetZoom, t68 = 1 / n77, i60 = 1 / a67, r62 = Math.log(a67 / o61.compared.targetZoom), d52 = (o61.halfWindowPanAtZoom(a67) + e65.descensionFactor * Math.LN2 * o61.compared.pan - o61.halfWindowPanAtZoom(o61.compared.targetZoom)) / o61.halfWindowPanAtZoom(1);
  return o61.halfWindowSize * t68 * (-2 * t68 * i60 * d52 - 2 * t68 * r62 + 2 * i60 + 2 * r62 * d52 / (n77 * n77) - d52 / (a67 * a67)) / (o61.desiredPixelFlow * Math.LN2);
}
function s48(o61, a67) {
  return o61.halfWindowSize * Math.log(a67 / o61.compared.targetZoom) / (o61.desiredPixelFlow * Math.LN2);
}
function f30(o61, a67) {
  return o61.halfWindowSize / (a67 * o61.desiredPixelFlow * Math.LN2);
}
function w21(o61, a67) {
  return -o61.halfWindowSize / (a67 * a67 * o61.desiredPixelFlow * Math.LN2);
}
function p30(o61) {
  const a67 = Math.LN2 * o61.compared.pan, e65 = o61.compared.sourceZoom - o61.compared.targetZoom, n77 = o61.halfWindowPanAtZoom(e65), t68 = o61.halfWindowSize * Math.log(o61.compared.sourceZoom / o61.compared.targetZoom) / (o61.desiredPixelFlow * Math.LN2 * n77);
  return o61.compared.sourceZoom <= o61.compared.targetZoom ? t68 * (a67 - n77) : t68 * (a67 + n77);
}

// node_modules/@arcgis/core/views/animation/pointToPoint/apex/planning.js
function f31(f49, Z11) {
  let P26 = D12(f49, Z11);
  const b26 = { ascensionFactor: null != Z11.ascensionFactor ? Z11.ascensionFactor : 0.5, descensionFactor: null != Z11.descensionFactor ? Z11.descensionFactor : 0.5 }, g36 = 0 === b26.ascensionFactor, h46 = 0 === b26.descensionFactor, M22 = g36 ? n48 : o44, k24 = g36 ? t48 : a42, N19 = g36 ? i45 : e38, j25 = h46 ? s48 : l35, w29 = h46 ? f30 : m25, z20 = h46 ? w21 : h28, A33 = (o61) => M22(f49, o61, b26) + r45(f49, o61, b26) + j25(f49, o61, b26), I28 = (o61) => k24(f49, o61, b26) + d39(f49, o61, b26) + w29(f49, o61, b26), q19 = (o61) => N19(f49, o61, b26) + c37(f49, o61, b26) + z20(f49, o61, b26);
  let v37 = A33(P26);
  const y32 = p30(f49);
  let B20;
  const C26 = Z11.maximumIterations || 20, E39 = null != Z11.maximumDistance ? Z11.maximumDistance : 1 / 0;
  for (B20 = 0; B20 < C26; B20++) {
    const o61 = 1e-6, e65 = (I28(P26) + o61) / q19(P26);
    if (isNaN(e65) || P26 >= E39 && e65 < 0) {
      if (!isFinite(E39))
        return null;
      P26 = E39, v37 = A33(P26);
      break;
    }
    if (P26 -= e65, P26 < f49.compared.sourceZoom || P26 < f49.compared.targetZoom)
      return null;
    const n77 = A33(P26);
    if (Math.abs(n77 - v37) / v37 <= 5e-3)
      break;
    v37 = n77;
  }
  return v37 > y32 * (1 - 0.3) || P26 < f49.compared.sourceZoom || P26 < f49.compared.targetZoom ? null : P26;
}
function D12(o61, e65) {
  const n77 = Math.max(o61.compared.sourceZoom, o61.compared.targetZoom), a67 = o61.source.zoomAtPixelsPerPan(o61.desiredPixelFlow / o61.compared.pan) / 2;
  return a67 < n77 ? null != e65.maximumDistance ? n77 + (e65.maximumDistance - n77) / 2 : 1.5 * n77 : e65.maximumDistance ? Math.min(e65.maximumDistance, a67) : a67;
}

// node_modules/@arcgis/core/views/animation/pointToPoint/apex/Path.js
var s49 = class extends e37 {
  constructor(i60, e65) {
    super(), this._preallocSegments = [new i44(), new i44(), new i44()], this._ascensionSegment = null, this._descensionSegment = null, this.update(i60, e65);
  }
  update(i60, e65) {
    if (!i60)
      return;
    this.definition ? this.definition.copyFrom(i60) : this.definition = i60.clone();
    let n77 = null;
    e65 && e65.apex && (n77 = f31(i60, e65.apex)), this.segments.length = 0, this._ascensionSegment = null, this._descensionSegment = null, null == n77 ? this._updateWithoutApex() : this._updateWithApex(n77, e65 == null ? void 0 : e65.apex);
  }
  segmentInterpolateComponentsAt(n77, t68, o61) {
    return o61 = n77.interpolateComponentsAt(t68, o61), n77 === this._ascensionSegment ? o61.zoom = o42(o61.zoom) : n77 === this._descensionSegment && (o61.zoom = u29(o61.zoom)), o61;
  }
  _updateWithApex(i60, e65) {
    const [n77, t68, o61] = this._preallocSegments, s69 = (e65 == null ? void 0 : e65.ascensionFactor) ?? 0.5, d52 = Math.min(1 - s69, null != (e65 == null ? void 0 : e65.ascensionFactor) && null != e65.descensionFactor ? e65.descensionFactor : 0.5), a67 = 1 - s69 - d52;
    n77.definition ? n77.definition.copyFrom(this.definition) : n77.definition = this.definition.clone(), n77.definition.compared.targetZoom = i60, n77.definition.compared.pan = this.definition.compared.pan * s69, n77.definition.compared.rotate = this.definition.compared.rotate * s69, n77.update(), this._ascensionSegment = n77, this.segments.push(n77), a67 > 0 && (t68.definition ? t68.definition.copyFrom(this.definition) : t68.definition = this.definition.clone(), t68.definition.copyFrom(this.definition), t68.definition.compared.sourceZoom = i60, t68.definition.compared.targetZoom = i60, t68.definition.compared.pan = this.definition.compared.pan * a67, t68.definition.compared.rotate = this.definition.compared.rotate * a67, t68.update(), this.segments.push(t68)), o61.definition ? o61.definition.copyFrom(this.definition) : o61.definition = this.definition.clone(), o61.definition.compared.sourceZoom = i60, o61.definition.compared.pan = this.definition.compared.pan * d52, o61.definition.compared.rotate = this.definition.compared.rotate * d52, o61.update(), this._descensionSegment = o61, this.segments.push(o61);
  }
  _updateWithoutApex() {
    const [i60] = this._preallocSegments;
    i60.update(this.definition), this.segments.push(i60);
  }
};

// node_modules/@arcgis/core/views/animation/pointToPoint/Animation.js
var m26 = { zoom: 0, pan: 0, rotate: 0 };
var h29 = class {
  get time() {
    return this._time;
  }
  constructor(i60) {
    this._createCamera = i60, this._time = n4(0), this.definition = new t47(i60), this.path = new s49();
  }
  update(t68, s69, o61) {
    this.definition.update(t68, s69, o61), this.path.update(this.definition, o61), this._time = this._applyTimeSettings(r3(isFinite(this.path.time) ? this.path.time : t4(0)), o61), this._easing = o61.easing ?? (this._time >= 1e3 ? w20 : f29);
  }
  cameraAt(t68, i60) {
    i60 = i60 || this._createCamera(), t68 = Math.min(Math.max(0, t68), 1), t68 = this._normalizedEasing(t68);
    const e65 = this.path.interpolateComponentsAt(t68, m26);
    return i60.interpolate(this.definition.source, this.definition.target, e65), i60;
  }
  _normalizedEasing(t68) {
    const i60 = this._easing(0, this._time), e65 = this._easing(1, this._time);
    return (this._easing(t68, this._time) - i60) / (e65 - i60);
  }
  _applyTimeSettings(i60, e65) {
    const n77 = null != e65.speedFactor ? e65.speedFactor : 1;
    null != e65.duration ? i60 = e65.duration : null != e65.speedFactor && (i60 = n4(i60 / n77));
    const a67 = null != e65.minDuration ? e65.minDuration : o43.minDuration / n77, s69 = null != e65.maxDuration ? e65.maxDuration : o43.maxDuration / n77;
    return n4(Math.min(Math.max(a67, i60), s69));
  }
};

// node_modules/@arcgis/core/views/3d/animation/pointToPoint/Animation.js
var c38 = n7();
var h30 = class {
  get finished() {
    return this.currentTime >= this._animation.time;
  }
  get time() {
    return this._animation.time;
  }
  constructor(i60) {
    this.currentTime = n4(0), this._animation = new h29(() => new T16(i60)), this._current = new T16(i60);
  }
  update(i60, m44, s69) {
    const a67 = this._animation.definition.source, o61 = this._animation.definition.target, h46 = e7(c38, m44.center, i60.center), u51 = s7(h46);
    u51 >= 1e-5 ? (h46[0] /= u51, h46[1] /= u51, h46[2] /= u51) : (h46[0] = 0, h46[1] = 1, h46[0] = 0), r5(a67.lookAtDirection, h46), r5(o61.lookAtDirection, h46), a67.copyFromRenderCamera(i60), o61.copyFromRenderCamera(m44), this._current.copyFrom(a67), this._animation.update(a67, o61, s69), this.currentTime = n4(0), i60.almostEquals(m44) && (this.currentTime = this._animation.time);
  }
  cameraAt(t68, i60) {
    return this._animation.cameraAt(t68, this._current), i60 = i60 || new $(), this._current.copyToRenderCamera(i60), i60;
  }
  step(e65, r62) {
    return this.finished || (this.currentTime = n4(this.currentTime + r3(e65)), this.currentTime >= this.time && (this.currentTime = this.time)), this.cameraAt(this.currentTime / this.time, r62);
  }
};

// node_modules/@arcgis/core/views/3d/state/controllers/CameraController.js
var s50;
!function(t68) {
  t68.Ready = "ready", t68.Rejected = "rejected", t68.Running = "running", t68.Stopped = "stopped", t68.Finished = "finished";
}(s50 || (s50 = {}));
var i46 = class extends m {
  constructor(t68) {
    super(t68), this.state = s50.Ready;
  }
  get active() {
    return this.state === s50.Running;
  }
  get isInteractive() {
    return false;
  }
  get canStop() {
    return false;
  }
  stopController() {
    return !!this.canStop && (this.state = s50.Stopped, true);
  }
  finishController() {
    this.state = s50.Finished;
  }
  get steppingFinished() {
    return false;
  }
};
e([y2({ constructOnly: true })], i46.prototype, "view", void 0), e([y2({ readOnly: true })], i46.prototype, "active", null), e([y2()], i46.prototype, "state", void 0), e([y2({ readOnly: true })], i46.prototype, "isInteractive", null), i46 = e([a4("esri.views.3d.state.controllers.CameraController")], i46);

// node_modules/@arcgis/core/views/3d/state/controllers/AnimationController.js
var a43 = class extends i46 {
  constructor() {
    super(...arguments), this._asyncResult = null;
  }
  get canStop() {
    return true;
  }
  set asyncResult(t68) {
    this._asyncResult && (this._asyncResult.reject(c()), this._asyncResult = null), this.state === s50.Finished || this.state === s50.Stopped ? (r(t68), this.state === s50.Finished ? t68.resolve() : t68.reject(c())) : this._asyncResult = t68;
  }
  get asyncResult() {
    return this._asyncResult;
  }
  onControllerStart() {
    this.state = s50.Running, null != this.viewAnimation && this.viewAnimation.when(() => this.updateStateFromViewAnimation(), () => this.updateStateFromViewAnimation());
  }
  updateStateFromViewAnimation() {
    null == this.viewAnimation || this.state !== s50.Ready && this.state !== s50.Running || (this.viewAnimation.state === a25.State.FINISHED ? this.finish() : this.viewAnimation.state === a25.State.STOPPED && (this.state = s50.Stopped));
  }
  onControllerEnd() {
    null == this.viewAnimation || this.viewAnimation.done || (this.state === s50.Finished ? this.viewAnimation.finish() : this.state === s50.Stopped && this.viewAnimation.stop()), this._asyncResult && (this.state === s50.Finished ? this._asyncResult.resolve() : this._asyncResult.reject(c()));
  }
  finish() {
    this.finishController();
  }
};
a43 = e([a4("esri.views.3d.state.controllers.AnimationController")], a43);

// node_modules/@arcgis/core/views/3d/state/controllers/PointToPointAnimationController.js
var h31 = class extends a43 {
  get intersectionHelper() {
    return this.view.sceneIntersectionHelper;
  }
  constructor(i60) {
    super(i60), this.mode = "interaction", this._hasTarget = false;
  }
  initialize() {
    this.animation = new h30(this.view.state.viewingMode), this.viewAnimation = "interaction" === this.mode ? null : new a25();
  }
  get isInteractive() {
    return "interaction" === this.mode;
  }
  begin(i60, t68) {
    this._hasTarget = true;
    const e65 = this.animationSettings(t68);
    p31.copyFrom(this.view.state.camera);
    const n77 = A14(this.view.state.viewingMode);
    this.intersectionHelper.intersectRay(p31.ray, n77, l36) && (p31.center = l36), this.animation.update(p31, i60, e65), this.animation.finished && this.finish();
  }
  finish() {
    this.animation.currentTime = this.animation.time, super.finish();
  }
  get steppingFinished() {
    return this._hasTarget && this.animation.finished;
  }
  stepController(i60, t68) {
    this._hasTarget && this.animation.step(i60, t68);
  }
  onControllerEnd(i60) {
    this._hasTarget && (this.animation.cameraAt(this.animation.currentTime / this.animation.time, i60), this.animation.currentTime = this.animation.time), super.onControllerEnd(i60);
  }
  animationSettings(i60 = {}) {
    return { apex: { maximumDistance: this.view.state.constraints.clampAltitude(1 / 0) / 6, ascensionFactor: void 0, descensionFactor: void 0 }, ...i60, easing: "string" == typeof i60.easing ? H12[i60.easing] : i60.easing };
  }
};
e([y2({ constructOnly: true })], h31.prototype, "mode", void 0), e([y2({ readOnly: true })], h31.prototype, "isInteractive", null), h31 = e([a4("esri.views.3d.state.controllers.PointToPointAnimationController")], h31);
var p31 = new $();
var l36 = n7();

// node_modules/@arcgis/core/geometry/support/axisAngle.js
function i47(n77 = x24) {
  return [n77[0], n77[1], n77[2], n77[3]];
}
function m27(n77, t68) {
  return j14(n77[0], n77[1], n77[2], t68, r19.get());
}
function j14(n77, t68, r62, u51, o61 = i47()) {
  return o61[0] = n77, o61[1] = t68, o61[2] = r62, o61[3] = u51, o61;
}
function k14(n77, t68, r62) {
  return _(v22(r62), n77, t68), z2(v22(r62), v22(r62)), r62[3] = a15(n77, t68), r62;
}
function v22(n77) {
  return n77;
}
var x24 = [0, 0, 1, 0];
var S13 = e16();
var b13 = e16();

// node_modules/@arcgis/core/views/3d/support/geometryUtils/sphere.js
function s51(r62, s69, p54, e65) {
  const n77 = u12(s69, p54, m28);
  return Z(r62, n77, e65);
}
var m28 = d10();

// node_modules/@arcgis/core/views/3d/state/utils/navigationUtils.js
var N10;
!function(t68) {
  t68[t68.Ellipsoid = 0] = "Ellipsoid", t68[t68.Silhouette = 1] = "Silhouette";
}(N10 || (N10 = {}));
var Q7 = 30;
var X6 = [1, 3e8];
var Y6 = 80;
var Z5 = 8;
var $3 = 200;
var _18 = 1508e5;
var tt3 = 5;
var et2 = 50;
var nt2 = 5;
var ot = 10;
var rt2 = 90;
var at2 = { exclude: /* @__PURE__ */ new Set([L4]) };
function it2(t68, e65, n77) {
  return n77[0] = e65[0] / (t68.fullWidth / t68.pixelRatio), n77[1] = e65[1] / (t68.fullHeight / t68.pixelRatio), n77;
}
function st3(t68) {
  for (; t68 > Math.PI; )
    t68 -= 2 * Math.PI;
  for (; t68 < -Math.PI; )
    t68 += 2 * Math.PI;
  return t68;
}
function ct2(t68, e65, n77) {
  const o61 = g4(f11.get(), n77[3], v22(n77));
  null == o61 || B(o61, o11) || (e7(oe, t68.eye, e65), O(oe, oe, o61), t68.eye = u2(oe, oe, e65), e7(oe, t68.center, e65), O(oe, oe, o61), t68.center = u2(oe, oe, e65), t68.up = O(oe, t68.up, o61));
}
function lt2(t68, e65, n77, o61) {
  return q2(t68, i22(e65, n77, ce2), o61);
}
function mt(t68, e65, n77, o61) {
  return q2(t68, u12(e65, n77, ce2), o61);
}
function ut2(t68, e65, n77, o61) {
  const r62 = c7.get();
  let a67 = 1 - n77;
  e7(r62, e65, t68.eye);
  const i60 = s7(r62);
  let s69 = i60 * (1 - a67);
  a67 >= 0 && s69 < o61 && (s69 = o61, a67 = -(s69 - i60) / i60), Math.abs(i60 - s69) < 1e-6 || (g2(r62, r62, a67), t68.eye = u2(oe, t68.eye, r62), t68.center = A2(oe, t68.center, e65, a67));
}
function pt(t68, e65, n77) {
  e65.getScreenCenter(ft), s51(t68, e65, ft, oe) && (e65.center = oe);
  const o61 = e65.distance, r62 = o61 * n77;
  if (Math.abs(o61 - r62) < 1e-6)
    return;
  const a67 = g2(c7.get(), e65.viewForward, r62);
  e65.eye = e7(oe, e65.center, a67);
}
var ft = i8();
function ht2(t68, e65) {
  o2(e65, 0, 0, 0);
  for (const n77 of t68)
    u2(e65, e65, n77);
  g2(e65, e65, 1 / t68.length);
}
function Mt(t68, e65, n77, o61) {
  return Math.sin(t68 / s7(e65)) * (n77 + o61.radius);
}
function yt(t68, e65, n77, o61) {
  return Mt(Math.PI / 2, e65, n77, o61) + (t68 - Math.PI / 2);
}
var gt;
!function(t68) {
  t68[t68.Vertical = 0] = "Vertical", t68[t68.Horizontal = 1] = "Horizontal";
}(gt || (gt = {}));
var dt = { Elevation: 3e4, Angle: M(16) };
var bt = { Pole: 0.95, Angle: M(18), Tilt: 45 };
var vt2 = M(80);
function jt(t68, e65, n77, o61, r62, a67) {
  const i60 = n7(), s69 = _4();
  let c58 = true, l63 = true;
  return t68.intersectScreen(n77, i60, a67) ? s69[3] = s7(i60) : (l63 = false, e65.aboveGround && r62 !== N10.Ellipsoid ? s69[3] = Math.max(s7(e65.center), 0.9 * o61.radius) : s69[3] = s7(e65.eye) - e65.relativeElevation, r62 === N10.Silhouette ? It(s69, e65, n77, i60) : c58 = s51(s69, e65, n77, i60)), { sphere: s69, scenePickPoint: c58 ? i60 : null, hasGeometryIntersection: l63 };
}
function zt(t68, e65, n77) {
  if (s7(t68.eye) - n77.radius > dt.Elevation)
    return gt.Horizontal;
  u12(t68, e65, le);
  return -Math.sign(t68.relativeElevation) * (0.5 * Math.PI + a15(t68.eye, le.direction)) < dt.Angle ? gt.Vertical : gt.Horizontal;
}
function xt(t68, e65, n77) {
  e7(Pt, n77, e65), t68.eye = e7(oe, t68.eye, Pt), t68.center = e7(oe, t68.center, Pt);
}
var Pt = n7();
function It(t68, e65, n77, o61) {
  const r62 = u12(e65, n77, ce2);
  return null != r62 && (Y2(t68, r62, kt), Z(t68, r62, o61) ? !(p2(kt, r62.origin) < p2(o61, r62.origin)) || (r5(o61, kt), false) : (e7(wt, e65.eye, e65.center), z2(wt, wt), F8(wt, -P(z2(wt, wt), kt), St), q2(St, r62, o61), false));
}
var kt = n7();
var wt = n7();
var St = h9();
function Et(a67, i60, s69, c58, l63, m44) {
  let u51 = 0;
  if (_(ie2, a67, i60), e7(re2, a67, i60), s7(a67) <= l63 || !c58.aboveGround) {
    _(s69, re2, c58.eye);
    const p54 = P(a67, i60) / (s7(a67) * s7(i60));
    if (p54 < 0.9999)
      u51 = l4(p54);
    else {
      const t68 = s7(_(n7(), a67, i60)) / (s7(a67) * s7(i60));
      u51 = F3(t68);
    }
    const f49 = Math.cos(i3(r7.normalize(M(m44)), 0, vt2));
    u51 = -u51 - Math.max(0, s7(i60) - l63) / (f49 * l63);
  } else
    e7(At, c58.eye, c58.center), _(s69, re2, At), u51 = -s7(re2) / l63;
  return z2(s69, s69), g2(s69, s69, s7(ie2)), u51;
}
var At = n7();
function Ht(r62, a67, i60, s69) {
  let c58, l63;
  const m44 = Math.cos(i3(r7.normalize(M(s69)), 0, vt2));
  return c58 = a67 > i60 ? -(a67 - i60) / (m44 * i60) : a67 < -i60 ? Math.PI - (a67 + i60) / (m44 * i60) : l4(a67 / i60), l63 = r62 > i60 ? -(r62 - i60) / (m44 * i60) : r62 < -i60 ? Math.PI - (r62 + i60) / (m44 * i60) : l4(r62 / i60), (l63 - c58) * i60;
}
function Ut(t68, e65, n77, o61, r62, a67, i60, s69, c58, l63) {
  const m44 = Ht(t68[2], e65[2], a67[3], s69), u51 = c58 ? Ht(t68[0], e65[0], a67[3], 180) : e65[0] - t68[0], f49 = Math.sin(i60) * u51 - Math.cos(i60) * m44, h46 = Math.cos(i60) * u51 + Math.sin(i60) * m44;
  z2(oe, r62);
  const M22 = c58 ? f49 / Math.sqrt(Math.abs(a67[3] ** 2 - P(n77, oe) ** 2)) : f49 / a67[3], y32 = h46 / Math.sqrt(Math.abs(a67[3] ** 2 - P(n77, o61) ** 2));
  r13(l63, M22, y32);
}
function Gt(t68, e65, n77, o61, r62, a67, i60, s69, c58, l63) {
  _(ie2, t68, e65), D4(a67.up, a67.eye, Lt, Nt, Qt), D4([0, 0, 1], a67.eye, Dt, Jt, Kt), r5(n77, Jt), r5(o61, Dt), z2(n77, n77), g2(n77, n77, s7(ie2)), B3(t68, z2(Nt, Nt), z2(Qt, Qt), z2(Lt, Lt), Xt), B3(e65, Nt, Qt, Lt, Yt), Ut(Xt, Yt, t68, Dt, Jt, i60, s69, c58, l63, r62);
}
function qt(t68, e65, n77, o61, r62, a67, s69) {
  g4(_t, r62, o61), g4(te, s69, a67), c3(ee, _t, te), e7(e65, t68, n77), O(e65, e65, ee), u2(e65, e65, n77);
}
function Ct(t68, e65, n77, o61, r62, a67) {
  g4(_t, o61, n77), g4(te, a67, r62), c3(ee, _t, te), e7(oe, t68.eye, e65), O(oe, oe, ee), t68.eye = u2(oe, oe, e65), e7(oe, t68.center, e65), O(oe, oe, ee), t68.center = u2(oe, oe, e65), e7(oe, t68.up, e65), O(oe, oe, ee), t68.up = u2(oe, oe, e65);
}
function Ft(t68, e65, n77, o61, r62, a67) {
  return (Math.abs(o61) > Math.PI - bt.Angle || Math.abs(o61) < bt.Angle) && (Math.abs(t68[2]) < n77 * bt.Pole || Math.abs(e65) > n77) && a67.aboveGround && r62 < bt.Tilt;
}
function Rt(t68, e65, n77, o61, r62, a67) {
  if (a67)
    k14(n77, o61, $t), ct2(e65, t68, $t);
  else {
    const a68 = Et(n77, o61, se2, e65, t68[3], r62);
    ct2(e65, t68, m27(se2, a68));
  }
}
function Vt(t68, e65, n77, o61, r62, a67, i60) {
  const s69 = i60 ? 20 : 1, c58 = 1e-12;
  let l63, m44;
  r5(ne2, o61), ae.copyFrom(e65);
  for (let u51 = 0; u51 < s69 && p2(n77, ne2) > c58 && (l63 = p2(n77, ne2), Gt(n77, ne2, Jt, Dt, Zt, ae, t68, r62, a67, i60), Ct(ae, t68, Dt, Zt[1], Jt, Zt[0]), qt(ne2, ne2, t68, Dt, Zt[1], Jt, Zt[0]), m44 = p2(n77, ne2), m44 < l63 || 0 === u51); u51++)
    e65.copyFrom(ae);
}
function Tt(n77, o61, r62, a67, i60, s69, c58) {
  Ft(r62, P(o61.up, r62), n77[3], -r7.normalize(M(i60)), s69, o61) ? Vt(n77, o61, r62, a67, -r7.normalize(M(i60)), s69, c58) : Rt(n77, o61, r62, a67, s69, c58);
}
function Ot(t68, e65, n77, o61, r62, a67) {
  const { eye: i60 } = t68;
  D4([0, 0, 1], i60, Dt, Jt, Kt);
  const s69 = e65.translation[0] * n77.pan, c58 = "zoom" === r62.mode ? 0 : e65.translation[1] * n77.pan, m44 = Math.max(Math.sqrt(Math.abs(1 - P(t68.center, Dt) ** 2 / s7(t68.center) ** 2)), 0.5), u51 = (Math.sin(a67) * c58 + Math.cos(a67) * s69) / m44, p54 = -Math.cos(a67) * c58 + Math.sin(a67) * s69;
  switch (b2(o61.pan.matrix, o61.pan.matrix, u51, Dt), o61.pan.enabled = true, r62.mode) {
    case "pan":
      b2(o61.pan.matrix, o61.pan.matrix, p54, Jt), o61.pan.enabled = true;
      break;
    case "zoom":
      o61.zoom = -e65.translation[1] * n77.zoom;
  }
}
function Wt(t68, e65, n77, o61, r62) {
  const { eye: a67, viewRight: i60 } = t68, s69 = _(c7.get(), i60, a67), c58 = e65.translation[0] * n77.pan;
  switch (0 !== c58 && (b2(o61.pan.matrix, o61.pan.matrix, -c58, s69), o61.pan.enabled = true), r62.mode) {
    case "pan": {
      const t69 = e65.translation[1] * n77.pan;
      0 !== t69 && (b2(o61.pan.matrix, o61.pan.matrix, t69, i60), o61.pan.enabled = true);
      break;
    }
    case "zoom":
      o61.zoom = -e65.translation[1] * n77.zoom;
  }
}
function Bt(n77, o61, r62, a67, i60, s69, c58, l63, m44) {
  Ft(n77.center, P(n77.up, n77.center), s7(n77.center), -r7.normalize(M(s69)), c58, o61) ? Ot(o61, r62, a67, l63, m44, -r7.normalize(M(i60))) : Wt(o61, r62, a67, l63, m44);
}
var Dt = n7();
var Jt = n7();
var Kt = n7();
var Lt = n7();
var Nt = n7();
var Qt = n7();
var Xt = n7();
var Yt = n7();
var Zt = n15();
var $t = i47();
var _t = e15();
var te = e15();
var ee = e15();
var ne2 = n7();
var oe = n7();
var re2 = n7();
var ae = new $();
var ie2 = n7();
var se2 = n7();
var ce2 = { origin: n7(), direction: n7() };
var le = { origin: n7(), direction: n7() };

// node_modules/@arcgis/core/views/3d/state/controllers/global/ZoomStepController.js
var T17 = 0.6;
var F18 = 4;
var k15 = 60;
var A22 = class extends h31 {
  constructor() {
    super(...arguments), this._zoomLocation = n7(), this._tmpCamera = new $(), this._tmpViewDir = n7(), this._tmpRayDir = { origin: n7(), direction: n7() }, this._targetOnSphere = n7(), this._tmpCenter = n7(), this._constraintOptions = { selection: L12.ALL_EXCEPT_COLLISION, interactionType: O13.ZOOM, interactionFactor: null, interactionStartCamera: new $(), interactionDirection: null, tiltMode: O14.TUMBLE }, this._sphere = _4();
  }
  initialize() {
    this._intersector = A14(this.view.state.viewingMode);
  }
  zoomStep(t68, i60) {
    if (!this.active)
      return;
    const e65 = this.view.state, { interactionStartCamera: r62 } = this._constraintOptions;
    r62 && (this.animation.finished ? r62.copyFrom(e65.camera) : this.animation.cameraAt(1, r62));
    let o61 = false, a67 = false;
    this.intersectionHelper.intersectScreen(i60, this._zoomLocation, 0 === this.view.map.ground.opacity ? at2 : {}) && (o61 = t68 > 0, a67 = true), this._tmpCamera.copyFrom(e65.camera), o61 ? this.intersectionHelper.intersectRay(this._tmpCamera.ray, this._intersector, this._tmpCenter) && (this._tmpCamera.center = this._tmpCenter) : this.intersectionHelper.intersectRay(this._tmpCamera.ray, this._intersector, this._zoomLocation) ? this._tmpCamera.center = this._zoomLocation : r5(this._zoomLocation, this._tmpCamera.center), this._updateCamera(this._tmpCamera, t68, this._zoomLocation, i60, a67), this.begin(this._tmpCamera);
  }
  animationSettings() {
    return { duration: n4(600), easing: f29 };
  }
  _updateCamera(t68, e65, r62, s69, _33) {
    const y32 = A3(this.view.spatialReference), d52 = zt(t68, s69, y32), g36 = Math.abs(this.view.camera.position.z);
    z2(H13, t68.eye), g2(H13, H13, -1), u12(t68, s69, this._tmpRayDir), z2(this._tmpRayDir.direction, this._tmpRayDir.direction);
    const w29 = i3(Math.min(Z5, 1 / Math.abs(P(H13, this._tmpRayDir.direction))) * g36, $3, _18);
    if (d52 === gt.Horizontal) {
      let i60 = T17 ** e65;
      this._sphere[3] = s7(r62), e7(this._tmpViewDir, t68.center, t68.eye);
      const o61 = Math.min(s7(this._tmpViewDir), w29);
      let n77 = o61 * i60;
      if (i60 <= 1 && n77 < F18 && (n77 = F18, i60 = n77 / o61), Math.abs(o61 - n77) < 1e-6)
        return;
      const _34 = s7(t68.center);
      if (this._sphere[3] !== _34) {
        const e66 = this._sphere[3] + i60 * (_34 - this._sphere[3]);
        t68.center = g2(E22, t68.center, e66 / _34);
      }
      g2(this._tmpViewDir, this._tmpViewDir, -i60), t68.eye = u2(E22, t68.center, this._tmpViewDir), E21(this.view, t68, this._constraintOptions), p2(r62, t68.center) > 1e-12 && s51(this._sphere, t68, s69, this._targetOnSphere) && Tt(this._sphere, t68, r62, this._targetOnSphere, this.view.camera.heading, this.view.camera.tilt, true);
    } else {
      let i60 = T17 ** Math.abs(e65);
      const o61 = e65 > 0 ? 1 : -1;
      e7(this._tmpViewDir, r62, t68.eye);
      const n77 = s7(this._tmpViewDir), p54 = this.view._stage.renderView.getMinimalDepthForArea(null, s69[0], s69[1], this.view.state.camera, k15);
      let l63 = null != p54 ? p54 : w29;
      l63 = _33 && e65 > 0 ? Math.min(l63, n77) : l63, g2(this._tmpRayDir.direction, this._tmpRayDir.direction, l63), u2(r62, this._tmpRayDir.origin, this._tmpRayDir.direction);
      let y33 = l63 * i60;
      const f49 = Math.max(F18, 1.01 * t68.nearFar[0]);
      if (e65 > 0 && y33 < f49 && (y33 = f49, i60 = y33 / l63), Math.abs(l63 - y33) < 1e-6)
        return;
      g2(this._tmpRayDir.direction, this._tmpRayDir.direction, o61 * (1 - i60)), t68.eye = u2(E22, t68.eye, this._tmpRayDir.direction), t68.center = u2(E22, t68.center, this._tmpRayDir.direction);
    }
    o41(this.view, t68);
  }
};
A22 = e([a4("esri.views.3d.state.controllers.global.ZoomStepController")], A22);
var E22 = n7();
var H13 = n7();

// node_modules/@arcgis/core/views/3d/state/controllers/local/ZoomStepController.js
var M11 = 0.6;
var D13 = 4;
var R11 = 60;
var S14 = class extends h31 {
  constructor() {
    super(...arguments), this._zoomLocation = n7(), this._tmpCamera = new $(), this._tmpRayDir = n7(), this._tmpCenter = n7(), this._constraintOptions = { selection: L12.ALL, interactionType: O13.ZOOM, interactionFactor: null, interactionStartCamera: new $(), interactionDirection: null, tiltMode: O14.TUMBLE };
  }
  zoomStep(t68, e65) {
    if (!this.active)
      return;
    const o61 = this.view.state, { interactionStartCamera: h46 } = this._constraintOptions;
    h46 && (this.animation.finished ? h46.copyFrom(o61.camera) : this.animation.cameraAt(1, h46)), this._tmpCamera.copyFrom(o61.camera);
    const _33 = A14(this.view.state.viewingMode);
    let y32 = false;
    t68 > 0 ? (y32 = this.intersectionHelper.intersectScreenFreePointFallback(e65, this._zoomLocation, 0 === this.view.map.ground.opacity ? at2 : {}), this.intersectionHelper.intersectRay(this._tmpCamera.ray, _33, this._tmpCenter) && (this._tmpCamera.center = this._tmpCenter)) : this.intersectionHelper.intersectRay(this._tmpCamera.ray, _33, this._zoomLocation) ? this._tmpCamera.center = this._zoomLocation : r5(this._zoomLocation, this._tmpCamera.center);
    const C26 = M11 ** t68;
    let f49 = this.view._stage.renderView.getMinimalDepthForArea(this.view.voxelWasm, e65[0], e65[1], this.view.state.camera, R11);
    e7(T18, this._tmpCamera.eye, this._zoomLocation), z2(T18, T18);
    const j25 = i3(Math.min(Z5, 1 / Math.abs(P(F19, T18))) * Math.abs(this.view.camera.position.z), $3, _18);
    if (f49 = null != f49 ? f49 : j25, f49) {
      const t69 = n7();
      e7(t69, this._zoomLocation, this._tmpCamera.eye), (f49 < s7(t69) || !y32) && (z2(t69, t69), u2(this._zoomLocation, this._tmpCamera.eye, g2(t69, t69, f49)));
    }
    this._updateCamera(this._tmpCamera, C26, this._zoomLocation), this.begin(this._tmpCamera);
  }
  animationSettings() {
    return { duration: n4(600), easing: f29 };
  }
  _updateCamera(t68, i60, e65) {
    e7(this._tmpRayDir, e65, t68.eye);
    const o61 = s7(this._tmpRayDir);
    let r62 = o61 * i60;
    const a67 = i60 <= 1, n77 = Math.max(D13, 1.01 * t68.nearFar[0]);
    0 !== r62 && (a67 && r62 < n77 && (r62 = n77, i60 = r62 / o61), Math.abs(o61 - r62) < 1e-6 || (g2(this._tmpRayDir, this._tmpRayDir, i60), t68.eye = e7(U13, e65, this._tmpRayDir), t68.center = A2(U13, t68.center, e65, 1 - i60), E21(this.view, t68, this._constraintOptions)));
  }
};
S14 = e([a4("esri.views.3d.state.controllers.local.ZoomStepController")], S14);
var U13 = n7();
var F19 = r4(0, 0, 1);
var T18 = n7();

// node_modules/@arcgis/core/views/3d/input/handlers/DoubleClickZoom.js
var s52 = class extends i18 {
  constructor(o61, t68) {
    super(true), this._view = o61, this.registerIncoming("double-click", t68, (o62) => this._handleDoubleClick(o62));
  }
  _handleDoubleClick(r62) {
    const s69 = r62.data;
    if (t35(s69, "primary")) {
      const i60 = this._view.state.isGlobal ? new A22({ view: this._view, mode: "animation" }) : new S14({ view: this._view, mode: "animation" });
      this._view.state.switchCameraController(i60), i60.zoomStep(Math.log(0.5) / Math.log(0.6), i8(s69.x, s69.y)), r62.stopPropagation();
    }
  }
};

// node_modules/@arcgis/core/views/3d/state/NearFarHeuristic.js
function c39(e65, t68, i60) {
  return e65 === l13.Global ? new M12(i60) : new u31(t68, i60);
}
var u31 = class {
  constructor(e65, t68) {
    this._elevationProvider = e65, this._referenceEllipsoid = A3(t68), this._unitInMeters = H2(t68, this._referenceEllipsoid.metersPerDegree);
  }
  compute(i60, a67, m44, o61, l63) {
    var _a;
    l63 || (l63 = { near: 0, far: 0 });
    let x34 = i60[2] * this._unitInMeters;
    const c58 = x34, u51 = x34 - o61, M22 = (_a = this._elevationProvider) == null ? void 0 : _a.visibleElevationBounds;
    M22 && (x34 = u51 >= 0 ? c58 - this._unitInMeters * M22.min : this._unitInMeters * M22.max - c58);
    const _33 = { x: (m44 = null != m44 ? m44 : new M2({ xmin: 0, ymin: 0, zmin: 0, xmax: 0, ymax: 0, zmax: 0 })).xmax - m44.xmin, y: m44.ymax - m44.ymin, z: 4 * Math.max(m44.xmax - m44.xmin, m44.ymax - m44.ymin) }, I28 = Math.max(_33.x, _33.y, _33.z);
    e7(E23, a67, i60), v23[0] = E23[0] > 0 ? m44.xmax : m44.xmin, v23[1] = E23[1] > 0 ? m44.ymax : m44.ymin, v23[2] = E23[2] > 0 ? I28 / 2 : -I28 / 2, e7(v23, v23, i60), z2(E23, E23);
    const j25 = 1.1 * P(v23, E23) * this._unitInMeters, b26 = Math.sqrt(x34 * (x34 + 2 * this._referenceEllipsoid.radius)), g36 = Math.max(m44.xmax - m44.xmin, m44.ymax - m44.ymin), w29 = g36 * d40 * this._unitInMeters, z20 = g36 * y21 * this._unitInMeters, U23 = i3((x34 - z20) / (w29 - z20), 0, 1) ** 3, P26 = Math.min(s9(b26, j25, U23), b26) * Math.max(Math.log(Math.abs(u51)), 1);
    return f32(Math.min(P26, Math.max(34064e4, I28)) / this._unitInMeters, p32, this._unitInMeters, l63);
  }
};
var M12 = class {
  constructor(e65) {
    this._referenceEllipsoid = A3(e65);
  }
  compute(i60, r62, s69, n77, m44) {
    m44 || (m44 = { near: 0, far: 0 });
    const o61 = s7(i60), h46 = o61 - this._referenceEllipsoid.radius, l63 = this._referenceEllipsoid.radius + Math.min(0, n77), c58 = Math.abs(h46 - n77), u51 = Math.max(c58, Math.abs(h46)), M22 = Math.sqrt(u51 * (u51 + 2 * l63)), p54 = o61 + this._referenceEllipsoid.radius;
    return f32(1.2 * s9(M22, p54, e28(u51)), i3(2e4 - (Math.log(u51) - 7.983) / 9.011 * 19e3, 1e3, 2e4), 1, m44);
  }
};
function f32(e65, t68, i60, r62) {
  const s69 = _19 / i60;
  return e65 / t68 > s69 ? (r62.far = e65, r62.near = r62.far / t68) : (r62.near = s69, r62.far = r62.near * t68), r62;
}
var p32 = 2e4;
var _19 = 2;
var d40 = 1e-3;
var y21 = 1e-4;
var v23 = n7();
var E23 = n7();

// node_modules/@arcgis/core/views/3d/state/SurfaceCollisionConstraint.js
var n49 = class extends m {
  constructor(e65) {
    super(e65);
  }
  initialize() {
    this.addHandles(this.view.basemapTerrain.on("elevation-change", (e65) => this._handleElevationChangeEvent(e65)));
  }
  _handleElevationChangeEvent(e65) {
    if (this.view.state.cameraController)
      return;
    const t68 = this.view.state.camera;
    null != e65.spatialReference && u28(this.view, t68, e65.extent, e65.spatialReference) && this._applyToCurrentCamera();
  }
  _applyToCurrentCamera() {
    this.view.state.updateCamera((e65) => o41(this.view, e65, i41.EYE_AND_CENTER));
  }
};
e([y2({ constructOnly: true })], n49.prototype, "view", void 0), n49 = e([a4("esri.views.3d.state.ElevationCollisionConstraint")], n49);

// node_modules/@arcgis/core/views/3d/state/ConstraintsManager.js
var _20 = class extends m {
  constructor(t68) {
    super(t68), this.nearFarHeuristic = c39(t68.view.state.viewingMode, t68.view.basemapTerrain, t68.view.renderCoordsHelper.spatialReference);
  }
  initialize() {
    this.addHandles([l6(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this.view.constraints) == null ? void 0 : _a.clipDistance) == null ? void 0 : _b.near, (_d = (_c = this.view.constraints) == null ? void 0 : _c.clipDistance) == null ? void 0 : _d.far];
    }, () => this._clipDistanceNearFarChanged()), l6(() => {
      var _a, _b;
      return (_b = (_a = this.view.constraints) == null ? void 0 : _a.clipDistance) == null ? void 0 : _b.mode;
    }, () => this._updateNearFar()), this.view.state.events.on("before-camera-change", (t68) => this._updateCameraNearFar(t68)), l6(() => this.view.renderDataExtent, () => this._updateNearFar(), U3), l6(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this.view.constraints) == null ? void 0 : _a.altitude) == null ? void 0 : _b.min, (_d = (_c = this.view.constraints) == null ? void 0 : _c.altitude) == null ? void 0 : _d.max];
    }, () => this._updateAltitude(), U3), l6(() => {
      var _a, _b;
      return (_b = (_a = this.view.constraints) == null ? void 0 : _a.tilt) == null ? void 0 : _b.max;
    }, () => this._updateTiltMax(), U3), l6(() => {
      var _a, _b;
      return (_b = (_a = this.view.constraints) == null ? void 0 : _a.tilt) == null ? void 0 : _b.mode;
    }, () => this._updateTilt(), U3), l6(() => {
      var _a;
      return (_a = this.view.state) == null ? void 0 : _a.camera;
    }, () => this._updateTiltAutoMax(), U3), l6(() => {
      var _a, _b, _c, _d, _e4, _f;
      return [(_c = (_b = (_a = this.view.map) == null ? void 0 : _a.ground) == null ? void 0 : _b.navigationConstraint) == null ? void 0 : _c.type, (_f = (_e4 = (_d = this.view.state) == null ? void 0 : _d.constraints) == null ? void 0 : _e4.collision) == null ? void 0 : _f.enabled];
    }, () => this._updateCollision(), U3)]), this.view.state.isLocal && this.addHandles(l6(() => this.view.renderDataExtent, (t68) => this._updateLocalSurfaceDistance(t68), h3)), this._updateNearFar(), this.view.state.viewingMode !== l13.Local && this._updateAltitude(), this._updateTilt(), this._updateCollision(), this._set("surfaceCollisionConstraint", new n49({ view: this.view }));
  }
  destroy() {
    this.surfaceCollisionConstraint && (this.surfaceCollisionConstraint.destroy(), this._set("surfaceCollisionConstraint", null));
  }
  _clipDistanceNearFarChanged() {
    var _a;
    const t68 = (_a = this.view.constraints) == null ? void 0 : _a.clipDistance;
    t68 && "auto" !== t68.mode && this.view.state.updateCamera((i60) => this._updateCameraNearFarManual(i60, t68));
  }
  _updateNearFar() {
    this.view.state.updateCamera((t68) => this._updateCameraNearFar(t68));
  }
  _updateCameraNearFar(t68) {
    const i60 = this.view.constraints && this.view.constraints.clipDistance;
    "manual" === (i60 ? i60.mode : "auto") ? this._updateCameraNearFarManual(t68, i60) : this._updateCameraNearFarAuto(t68, i60);
  }
  _updateCameraNearFarAuto(t68, i60) {
    this.nearFarHeuristic.compute(t68.eye, t68.center, this.view.renderDataExtent, g16(this.view, t68.eye), t68), i60 && i60.autoUpdate(t68.near, t68.far);
  }
  _updateCameraNearFarManual(t68, i60) {
    i60 && (t68.near = i60.near, t68.far = i60.far);
  }
  _updateCollision() {
    var _a, _b, _c;
    const t68 = (_c = (_b = (_a = this.view.map) == null ? void 0 : _a.ground) == null ? void 0 : _b.navigationConstraint) == null ? void 0 : _c.type, i60 = !t68 || "stay-above" === t68, a67 = this.view.state.constraints.collision;
    if (i60 !== a67.enabled) {
      a67.enabled = i60, i60 && this._reapplyConstraints(L12.COLLISION);
      const t69 = this.view.constraints && this.view.constraints.tilt;
      t69 && "auto" !== t69.mode || this._updateTiltAuto();
    }
  }
  _updateAltitude() {
    const t68 = this.view.constraints && this.view.constraints.altitude;
    t68 && this.view.state.viewingMode !== l13.Local ? this.view.state.constraints.altitude = { min: t68.min, max: t68.max } : this.view.state.constraints.altitude = null, this._reapplyConstraints();
  }
  _updateTiltMax() {
    const t68 = this.view.constraints && this.view.constraints.tilt;
    t68 && "auto" !== t68.mode && (this._updateTiltManual(t68), this._reapplyConstraints());
  }
  _updateTilt() {
    const t68 = this.view.constraints && this.view.constraints.tilt;
    "manual" === (t68 ? t68.mode : "auto") ? this._updateTiltManual(t68) : this._updateTiltAuto(), this._reapplyConstraints();
  }
  _updateTiltManual(t68) {
    const i60 = this.view.state.constraints;
    i60.tilt = i60.createConstantMaxTilt(M(t68.max));
  }
  _updateTiltAuto() {
    const t68 = this.view.state.constraints;
    t68.tilt = t68.createDefaultTilt(), this._updateTiltAutoMax();
  }
  _updateTiltAutoMax() {
    const t68 = this.view.constraints && this.view.constraints.tilt;
    if (!t68 || "auto" !== t68.mode)
      return;
    const i60 = this.view.state.constraints;
    if (i60.tilt) {
      const a67 = i60.tilt(this.view.state.camera.distance).max;
      t68.autoUpdate(m2(a67));
    }
  }
  _updateLocalSurfaceDistance(t68) {
    if (null == t68)
      return;
    let i60 = Math.max(t68.width, t68.height);
    if (i60 <= 0)
      return;
    null != t68.zmax && null != t68.zmin && (i60 = Math.max(i60, t68.zmax - t68.zmin));
    const a67 = this.view.state, e65 = 3 * i60 / Math.atan(a67.camera.fov / 2);
    e65 !== a67.constraints.distance && (a67.constraints.distance = e65);
  }
  _reapplyConstraints(t68 = L12.ALL) {
    this.view.state.updateCamera((i60) => E21(this.view, i60, { selection: t68, interactionType: O13.NONE, interactionFactor: null, interactionStartCamera: null, interactionDirection: null, tiltMode: O14.TUMBLE }));
  }
};
e([y2({ constructOnly: true })], _20.prototype, "view", void 0), e([y2({ readOnly: true })], _20.prototype, "surfaceCollisionConstraint", void 0), _20 = e([a4("esri.views.3d.state.ConstraintsManager")], _20);

// node_modules/@arcgis/core/views/3d/state/controllers/SurfaceCollisionCorrectionController.js
var l37 = class extends i46 {
  set desiredCamera(e65) {
    this._set("desiredCamera", e65.clone());
  }
  constructor(e65) {
    super(e65);
  }
  get canStop() {
    return true;
  }
  get constraintEnabled() {
    return this.view.state.constraints.collision.enabled;
  }
  onControllerStart() {
    this.state = s50.Running, this.addHandles(this.view.basemapTerrain.on("elevation-change", (e65) => this._handleElevationChangeEvent(e65))), this._applyCorrection();
  }
  onControllerEnd() {
    this.removeAllHandles();
  }
  stepController() {
  }
  _handleElevationChangeEvent(e65) {
    (null == e65.spatialReference || u28(this.view, this.desiredCamera, e65.extent, e65.spatialReference)) && this._applyCorrection();
  }
  _applyCorrection() {
    this.view.state.updateCamera((e65) => {
      e65.copyViewFrom(this.desiredCamera), o41(this.view, e65, i41.EYE_AND_CENTER) || this.constraintEnabled || (this.state = s50.Stopped);
    });
  }
};
e([y2({ constructOnly: true })], l37.prototype, "desiredCamera", null), l37 = e([a4("esri.views.3d.state.controllers.SurfaceCollisionCorrectionController")], l37);

// node_modules/@arcgis/core/views/3d/support/cameraUtilsInternal.js
var l38 = n7();
var u32 = n7();
function h32() {
  return { direction: n7(), up: n7() };
}
function m29(f49, h46, m44, p54, b26) {
  let d52 = z2(l38, f49), g36 = P(d52, p54);
  const j25 = g36 > 0;
  g36 = Math.abs(g36), g36 > 0.99 && (g36 = Math.abs(P(h46, p54)), g36 < 0.99 ? (r5(d52, h46), j25 && g2(d52, d52, -1)) : d52 = null);
  let k24 = 0;
  if (d52) {
    g2(u32, p54, P(p54, d52)), e7(d52, d52, u32);
    const n77 = P(d52, b26) / (s7(d52) * s7(b26));
    _(u32, d52, b26);
    k24 = (P(u32, p54) > 0 ? 1 : -1) * m2(l4(n77));
  }
  const v37 = m2(l4(-P(p54, f49) / s7(f49)));
  return m44 ? (m44.heading = k24, m44.tilt = v37, m44) : { heading: k24, tilt: v37 };
}

// node_modules/@arcgis/core/chunks/cameraUtilsPlanar.js
var T19 = r4(0, 1, 0);
var j15 = r4(0, 0, 1);
var g20 = e15();
var y22 = n7();
var x25 = n7();
function h33(t68, i60, s69, c58 = h32()) {
  const { direction: m44, up: f49 } = c58;
  return R3(g20, -M(i60)), l8(g20, g20, M(s69)), O(m44, j15, g20), g2(m44, m44, -1), O(f49, T19, g20), c58;
}
function b14(t68, e65, o61, r62) {
  return m29(e65, o61, r62, j15, T19);
}
function v24(t68, e65, o61, r62) {
  const i60 = h33(t68, o61, r62), n77 = n7();
  return g2(n77, i60.direction, -e65), u2(n77, n77, t68), { up: i60.up, eye: n77, heading: o61, tilt: r62 };
}
function R12(e65) {
  return m2(e65);
}
function _21(t68) {
  return M(t68);
}
function E24(t68, e65, o61, r62, i60) {
  const n77 = t68.renderSpatialReference, a67 = t68.map && t68.spatialReference || e65.spatialReference;
  return In(e65, y22, n77), In(e65, x25, n77), y22[0] -= o61 / 2, x25[0] += o61 / 2, y22[1] -= r62 / 2, x25[1] += r62 / 2, Hn(y22, n77, y22, a67), Hn(x25, n77, x25, a67), i60 ? (i60.xmin = y22[0], i60.ymin = y22[1], i60.xmax = x25[0], i60.ymax = x25[1], i60.spatialReference = a67) : i60 = new M2(y22[0], y22[1], x25[0], x25[1], a67), i60;
}
var H14 = Object.freeze(Object.defineProperty({ __proto__: null, directionToHeadingTilt: b14, eyeForCenterWithHeadingTilt: v24, eyeTiltToLookAtTilt: _21, headingTiltToDirectionUp: h33, lookAtTiltToEyeTilt: R12, toExtent: E24 }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/chunks/cameraUtilsSpherical.js
var I17 = r4(0, 0, 1);
var P16 = z2(n7(), r4(1, 1, 1));
var U14 = new i4(-180, 180);
var v25 = e15();
var w22 = n7();
var q11 = n7();
function S15(t68, e65, a67, n77 = h32()) {
  _(w22, t68, I17), 0 === P(w22, w22) && _(w22, t68, P16), g4(v25, -M(e65), t68), b2(v25, v25, -M(a67), w22);
  const { up: r62, direction: h46 } = n77;
  return _(r62, w22, t68), z2(r62, r62), O(r62, r62, v25), z2(h46, t68), j2(h46, h46), O(h46, h46, v25), n77;
}
function _22(t68, e65, o61, a67) {
  const n77 = w22, i60 = q11;
  return z2(n77, t68), _(q11, n77, I17), 0 === P(q11, q11) && _(q11, n77, P16), _(i60, q11, n77), m29(e65, o61, a67, n77, i60);
}
function E25(t68, e65, a67, i60) {
  const s69 = { eye: n7(), up: null, tilt: i60, heading: a67 }, r62 = w22;
  r62[0] = t68[0], r62[1] = t68[2], r62[2] = -t68[1];
  const c58 = e65, l63 = M(a67), m44 = M(i60), f49 = Math.sin(l63), p54 = Math.cos(l63), y32 = Math.sin(m44), d52 = Math.cos(m44), g36 = s7(r62);
  let j25;
  if (Math.abs(m44) < 1e-8)
    j25 = c58 + g36;
  else {
    const t69 = g36 / y32, e66 = F3(c58 / t69), o61 = Math.PI - m44 - e66;
    j25 = t69 * Math.sin(o61);
  }
  const T29 = d52 * c58, b26 = c58 * c58 * (y32 * y32), x34 = p54 * p54 * b26, R21 = j25 - T29, I28 = R21 * R21, P26 = x34 * (x34 + I28 - r62[1] * r62[1]);
  if (P26 < 0)
    return g2(s69.eye, r62, j25 / g36), s69.tilt = 0, W8(s69, t68);
  const U23 = Math.sqrt(P26), v37 = r62[1] * R21, q19 = x34 + I28;
  let S25;
  if (S25 = p54 > 0 ? -U23 + v37 : U23 + v37, Math.abs(q19) < 1e-8)
    return g36 < 1e-8 ? (s69.eye[0] = 0, s69.eye[1] = 0, s69.eye[2] = c58) : g2(s69.eye, r62, j25 / g36), s69.tilt = 0, H15(s69.eye), W8(s69, t68);
  s69.eye[1] = S25 / q19;
  const _33 = f49 * f49 * b26, E39 = y32 * c58, k24 = p54 * E39 * s69.eye[1], z20 = s69.eye[1] * s69.eye[1], A33 = 1 - z20, C26 = Math.sqrt(A33), G20 = x34 * z20 + _33 - 2 * k24 * C26 * R21 + A33 * I28;
  return Math.abs(G20) < 1e-8 ? (g2(s69.eye, r62, j25 / g36), s69.tilt = 0, H15(s69.eye), W8(s69, t68)) : (s69.eye[0] = (A33 * (j25 * r62[0] - T29 * r62[0]) - E39 * C26 * (r62[0] * s69.eye[1] * p54 + r62[2] * f49)) / G20, s69.eye[2] = (A33 * (j25 * r62[2] - T29 * r62[2]) - E39 * C26 * (r62[2] * s69.eye[1] * p54 - r62[0] * f49)) / G20, g2(s69.eye, s69.eye, j25), H15(s69.eye), W8(s69, t68));
}
function H15(t68) {
  const e65 = t68[1];
  t68[1] = -t68[2], t68[2] = e65;
}
function W8(t68, e65) {
  const o61 = S15(e65, t68.heading, t68.tilt);
  return t68.up = o61.up, t68;
}
function k16(t68, e65, o61) {
  const i60 = s7(e65), s69 = Math.sqrt(o61 * o61 + i60 * i60 - 2 * o61 * i60 * Math.cos(Math.PI - t68)), r62 = F3(o61 / (s69 / Math.sin(t68)));
  return m2(t68 - r62);
}
function z15(t68, e65, a67) {
  const i60 = M(t68), s69 = s7(e65);
  return F3(a67 / (s69 / Math.sin(i60))) + i60;
}
function A23(t68, n77, i60, s69, r62) {
  let c58, l63, m44, f49;
  const p54 = n77.latitude, h46 = A3(t68.spatialReference).radius, u51 = n77.longitude, y32 = l31(p54, i60, h46) / 2;
  c58 = u51 - y32, l63 = u51 + y32;
  const M22 = M(p54), b26 = (1 + Math.sin(M22)) / (1 - Math.sin(M22)), x34 = (b26 + 1) * Math.tan(s69 / h46 / 2), I28 = x34 * x34;
  function P26(t69) {
    const o61 = Math.PI / 2;
    return (t69 = o4.normalize(t69, -o61)) > o61 && (t69 = Math.PI - t69), t69;
  }
  if (m44 = 1.5 * Math.PI - 2 * Math.atan(0.5 * (x34 + Math.sqrt(4 * b26 + I28))), f49 = m44 + s69 / h46, m44 = P26(m44), f49 = P26(f49), f49 < m44) {
    const t69 = f49;
    f49 = m44, m44 = t69;
  }
  if (m44 = Math.max(m2(m44), -90), f49 = Math.min(m2(f49), 90), l63 = U14.monotonic(c58, l63), l63 - c58 > 180) {
    const t69 = (l63 - c58 - 180) / 2;
    c58 += t69, l63 -= t69;
  }
  const v37 = t68.spatialReference && t68.spatialReference.isGeographic ? t68.spatialReference : f3.WGS84;
  return r62 ? (r62.xmin = c58, r62.ymin = m44, r62.xmax = l63, r62.ymax = f49, r62.spatialReference = v37) : r62 = new M2(c58, m44, l63, f49, v37), t68.spatialReference && t68.spatialReference.isWebMercator && d3(r62, false, r62), r62;
}
var C15 = Object.freeze(Object.defineProperty({ __proto__: null, directionToHeadingTilt: _22, eyeForCenterWithHeadingTilt: E25, eyeTiltToLookAtTilt: z15, headingTiltToDirectionUp: S15, lookAtTiltToEyeTilt: k16, toExtent: A23 }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/views/support/spatialReferenceSupport.js
function r46(r62, S25) {
  return null != r62 && (null == S25 || (S25 === l13.Local ? !r62.isGeographic || (r62.isWGS84 || r62.wkid === S3.CGCS2000) : r62.isWebMercator || r62.isWGS84 || r62.wkid === S3.CGCS2000 || r62.wkid === S3.GCSMARS2000 || r62.wkid === S3.GCSMARS2000_SPHERE || r62.wkid === S3.GCSMOON2000));
}

// node_modules/@arcgis/core/views/3d/support/cameraUtils.js
var U15 = s3.getLogger("esri.views.3d.support.cameraUtils");
var P17 = 39.37;
var b15 = 96;
var A24 = 1;
var D14 = 8;
var H16 = 5;
var L15 = 1;
var G14 = n7();
var E26 = { heading: 0, tilt: 0 };
var O16 = new x4();
var k17 = new i4(-20037508342788905e-9, 20037508342788905e-9);
var I18 = new i4(-180, 180);
var q12;
function J8(e65) {
  return e65.spatialReference || f3.WGS84;
}
function F20(e65) {
  return "global" === e65.viewingMode ? C15 : H14;
}
function W9(e65, n77, t68, r62, i60) {
  return F20(e65).headingTiltToDirectionUp(n77, t68, r62, i60);
}
function X7(e65, n77) {
  if (null == n77)
    return null;
  const t68 = e65.renderSpatialReference, i60 = F20(e65).headingTiltToDirectionUp, o61 = n7();
  if (!In(n77.position, o61, t68))
    return null;
  const s69 = i60(o61, n77.heading, n77.tilt);
  g2(s69.direction, s69.direction, e65.state.camera.distance), u2(s69.direction, s69.direction, o61);
  const c58 = f28(e65, o61, s69.direction, s69.up);
  return c58.fov = M(n77.fov), c58;
}
!function(e65) {
  e65[e65.LOCKED = 0] = "LOCKED", e65[e65.ADJUST = 1] = "ADJUST";
}(q12 || (q12 = {}));
var K7 = n7();
function Y7(n77, t68, r62) {
  const o61 = n77.renderSpatialReference, a67 = Q8(n77, t68.eye, t68.viewForward, t68.up, E26);
  let l63 = J8(n77);
  return Hn(t68.eye, o61, K7, l63) || (l63 = f3.WGS84, Hn(t68.eye, o61, K7, l63)), null == r62 ? new d4(new x4(K7, l63), a67.heading, a67.tilt, m2(t68.fov)) : (r62.position.x = K7[0], r62.position.y = K7[1], r62.position.z = K7[2], r62.position.spatialReference = l63, r62.heading = a67.heading, r62.tilt = a67.tilt, r62.fov = m2(t68.fov), r62);
}
function N11(e65, n77, t68) {
  const i60 = e65.state.camera, o61 = i60.width / 2 / i60.pixelRatio;
  e65.renderCoordsHelper.viewingMode === l13.Global && null != t68 && (n77 *= Math.cos(M(t68))), n77 /= e65.renderCoordsHelper.unitInMeters;
  return o61 / (b15 * P17 / n77) / Math.tan(i60.fovX / 2);
}
function V9(e65, n77, t68) {
  const i60 = e65.state.camera, o61 = n77 * Math.tan(i60.fovX / 2), a67 = i60.width / 2 / i60.pixelRatio;
  let l63 = b15 * P17 / (a67 / o61);
  return e65.renderCoordsHelper.viewingMode === l13.Global && null != t68 && (l63 /= Math.cos(M(t68))), l63 * e65.renderCoordsHelper.unitInMeters;
}
function Z6(e65, n77, t68, r62, i60, o61) {
  return B11(e65, n77, N11(e65, t68, n77.latitude), r62, i60, o61);
}
function B11(e65, n77, t68, r62, i60, o61) {
  if (ye(o61)) {
    const a68 = new ge(o61.signal);
    return te2(e65, r62.heading, r62.tilt, n77, t68, i60, a68), void a68.resolver.promise.then((n78) => {
      const t69 = pe(e65, n78, r62.fov);
      if (null != t69)
        return o61.resolver.resolve(t69);
      o61.resolver.reject();
    }, (e66) => o61.resolver.reject(e66));
  }
  const a67 = te2(e65, r62.heading, r62.tilt, n77, t68, i60);
  return pe(e65, a67, r62.fov, o61);
}
function Q8(e65, n77, t68, r62, i60) {
  return F20(e65).directionToHeadingTilt(n77, t68, r62, i60);
}
function $4(e65, n77) {
  return !!(e65.basemapTerrain && e65.renderCoordsHelper.fromRenderCoords(n77, O16, e65.spatialReference) && e65.elevationProvider && (a28(e65.elevationProvider, O16) ?? 0) > (O16.z ?? 0) - L15);
}
async function _23(e65, n77, t68) {
  if (!e65.renderCoordsHelper.fromRenderCoords(n77, O16, e65.spatialReference) || !e65.elevationProvider)
    return false;
  const r62 = O16.z ?? 0;
  return (await e65.elevationProvider.queryElevation(O16.x, O16.y, r62, O16.spatialReference, "ground", t68) ?? 0) > r62 - L15;
}
async function ee2(e65, n77, t68) {
  const r62 = n7();
  if (n77)
    if (n77 instanceof x4) {
      if (In(n77, r62, e65.renderSpatialReference), null == n77.z && null != e65.basemapTerrain && null != e65.elevationProvider) {
        const i60 = await e65.elevationProvider.queryElevation(n77.x, n77.y, n77.z ?? 0, n77.spatialReference, "ground", t68);
        return null != i60 && e65.renderCoordsHelper.setAltitude(r62, i60), r62;
      }
    } else
      r5(r62, n77);
  else
    r5(r62, e65.state.camera.center);
  return r62;
}
function ne3(e65, n77) {
  const t68 = n7();
  if (n77 && n77 instanceof x4) {
    if (In(n77, t68, e65.renderSpatialReference), null == n77.z && null != e65.basemapTerrain && null != e65.elevationProvider) {
      const r62 = a28(e65.elevationProvider, n77);
      null != r62 && e65.renderCoordsHelper.setAltitude(t68, r62);
    }
  } else
    r5(t68, n77 || e65.state.camera.center);
  return t68;
}
function te2(e65, n77, t68, r62, i60, o61, a67) {
  const l63 = r62 && r62 instanceof x4 ? r62 : null;
  if (ye(a67))
    return ee2(e65, r62, a67.signal).then((r63) => {
      re3(e65, n77, t68, l63, r63, i60, o61, a67);
    }, (e66) => a67.resolver.reject(e66)), null;
  const s69 = ne3(e65, r62);
  return re3(e65, n77, t68, l63, s69, i60, o61, a67);
}
function re3(e65, n77, t68, r62, i60, o61, a67, l63) {
  if (null == r62) {
    const n78 = e65.renderSpatialReference;
    if (null == (r62 = Tn(i60, n78, J8(e65))))
      return null;
  }
  o61 = Math.max(o61, e65.state.constraints.minimumPoiDistance);
  const s69 = le2(e65, n77, t68, i60, o61, a67), c58 = (0, F20(e65).eyeForCenterWithHeadingTilt)(i60, o61, s69.heading, s69.tilt);
  if (a67 === q12.ADJUST && "global" === e65.viewingMode && t68 > 0) {
    const s70 = () => {
      const s71 = fe(e65, i60, o61, ue(e65, o61, t68, i60));
      return a67 = t68 - s71 < 1 ? q12.LOCKED : q12.ADJUST, re3(e65, n77, s71, r62, i60, o61, a67, l63);
    }, f49 = e65.map.ground.navigationConstraint;
    if (!f49 || "stay-above" === f49.type) {
      if ($4(e65, c58.eye))
        return s70();
      if (ye(l63))
        return _23(e65, c58.eye, l63.signal).then((e66) => e66 ? s70() : (l63.resolver.resolve({ eye: c58.eye, up: c58.up, center: t5(i60), heading: c58.heading, tilt: c58.tilt }), null)), null;
    }
  }
  const m44 = !l63 || ye(l63) ? { center: n7(), eye: n7(), up: n7(), tilt: 0, heading: 0 } : l63;
  return m44.eye = c58.eye, m44.up = c58.up, m44.center = t5(i60), m44.heading = c58.heading, m44.tilt = c58.tilt, ye(l63) && l63.resolver.resolve(m44), m44;
}
function ie3(e65, n77, t68, r62, i60, o61 = null) {
  let a67, l63, s69;
  if (e65.state.isGlobal) {
    if (!r46(n77.spatialReference, l13.Global))
      return ye(o61) && o61.resolver.reject(), null;
    const e66 = new x4(n77.xmin, n77.ymin, n77.spatialReference), t69 = new x4(n77.xmax, n77.ymax, n77.spatialReference), r63 = n77.spatialReference.isGeographic ? I18 : k17;
    a67 = new x4({ x: r63.center(e66.x, t69.x), y: (t69.y + e66.y) / 2, z: null != n77.zmax && null != n77.zmin ? (n77.zmax + n77.zmin) / 2 : void 0, spatialReference: n77.spatialReference });
    const i61 = A3(n77.spatialReference), c59 = s45(a67, e66, t69);
    l63 = c59.lon, s69 = c59.lat, r63.diff(e66.x, t69.x) > r63.range / 2 && (l63 += i61.halfCircumference), l63 = Math.min(l63, i61.halfCircumference), s69 = Math.min(s69, i61.halfCircumference);
  } else {
    const t69 = e65.renderSpatialReference ?? n77.spatialReference;
    t69.equals(n77.spatialReference) || (n77 = nn(n77, t69)), l63 = n77.xmax - n77.xmin, s69 = n77.ymax - n77.ymin;
    const r63 = null != n77.zmax && null != n77.zmin ? (n77.zmax + n77.zmin) / 2 : void 0;
    a67 = new x4({ x: n77.xmin + 0.5 * l63, y: n77.ymin + 0.5 * s69, z: r63, spatialReference: t69 });
  }
  const c58 = null != n77.zmax && null != n77.zmin ? n77.zmax - n77.zmin : 0, u51 = e65.state.camera, f49 = 1 / Math.tan(u51.fovX / 2), d52 = 1 / Math.tan(u51.fovY / 2), v37 = 1 / Math.tan(u51.fov / 2), h46 = Math.max(0.5 * l63 * f49, 0.5 * s69 * d52, 0.5 * c58 * v37) / A24;
  if (ye(o61)) {
    const n78 = new ge(o61.signal);
    return te2(e65, t68, r62, a67, h46, i60, n78), void n78.resolver.promise.then((n79) => {
      const t69 = pe(e65, n79, e65.camera.fov);
      if (null != t69)
        return o61.resolver.resolve(t69);
      o61.resolver.reject();
    }, (e66) => o61.resolver.reject(e66));
  }
  const y32 = te2(e65, t68, r62, a67, h46, i60);
  return pe(e65, y32, e65.camera.fov, o61);
}
function oe2(e65, n77, t68) {
  const r62 = e65.renderSpatialReference, i60 = Tn(t68, r62, J8(e65));
  if (null == i60)
    return null;
  const o61 = Math.tan(n77.fovX / 2), a67 = Math.tan(n77.fovY / 2), l63 = U(n77.eye, t68), c58 = 2 * l63 * o61 * A24, u51 = 2 * l63 * a67 * A24;
  return "global" === e65.viewingMode ? A23(e65, i60, c58, u51) : E24(e65, i60, c58, u51);
}
function ae2(e65, n77, t68) {
  const r62 = e65.pointsOfInterest.centerOnSurfaceFrequent.distance;
  if (Math.log(t68 / r62) / Math.LN2 > D14)
    return true;
  const i60 = e65.renderSpatialReference, o61 = J8(e65), a67 = Tn(n77, i60, o61), l63 = Tn(e65.pointsOfInterest.centerOnSurfaceFrequent.renderLocation, i60, o61);
  if (null == a67 || null == l63)
    return false;
  const s69 = Math.tan(0.5 * e65.state.camera.fov) * r62;
  return l63.distance(a67) / s69 > H16;
}
function le2(e65, n77, t68, r62, i60, o61) {
  let a67 = 0;
  return o61 === q12.ADJUST && ae2(e65, r62, i60) ? (n77 = 0, a67 = ce3(e65, i60, t68, r62)) : a67 = me(e65, r62, i60, t68), a67 = e65.state.constraints.clampTilt(i60, a67), { heading: n77, tilt: t68 = fe(e65, r62, i60, a67) };
}
var se3 = 0.7;
function ce3(e65, n77, t68, r62) {
  const i60 = me(e65, r62, n77, t68);
  if (!e65.state.constraints.tilt)
    return i60;
  const o61 = e65.state.constraints.tilt(n77);
  o61.max = Math.min(o61.max, 0.5 * Math.PI);
  const a67 = o61.min * (1 - se3) + o61.max * se3;
  return Math.min(i60, a67);
}
function ue(e65, n77, t68, r62) {
  let i60 = me(e65, r62, n77, t68);
  if (!e65.state.constraints.tilt)
    return i60;
  const o61 = e65.state.constraints.tilt(n77);
  return i60 = Math.min(i60, 0.5 * Math.PI), o61.min * (1 - se3) + i60 * se3;
}
function fe(e65, n77, t68, r62) {
  return F20(e65).lookAtTiltToEyeTilt(r62, n77, t68);
}
function me(e65, n77, t68, r62) {
  return F20(e65).eyeTiltToLookAtTilt(r62, n77, t68);
}
function pe(n77, t68, r62, i60) {
  if (null == t68)
    return null;
  const o61 = n77.renderSpatialReference, a67 = Tn(t68.eye, o61, J8(n77));
  return null == a67 ? null : null != i60 ? (i60.position = a67, i60.heading = t68.heading, i60.tilt = t68.tilt, i60.fov = r62, i60) : new d4(a67, t68.heading, t68.tilt, r62);
}
function de(e65, n77) {
  var _a;
  const t68 = (_a = e65.basemapTerrain) == null ? void 0 : _a.tilingScheme;
  if (t68)
    return t68.levelAtScale(n77);
  U15.error("#scaleToZoom()", "Cannot compute zoom from scale without a tiling scheme");
}
function ve(e65, n77) {
  var _a;
  const t68 = (_a = e65.basemapTerrain) == null ? void 0 : _a.tilingScheme;
  if (t68)
    return t68.scaleAtLevel(n77);
  U15.error("#zoomToScale()", "Cannot compute scale from zoom without a tiling scheme");
}
function he2(e65, n77) {
  return Hn(n77.center, e65.renderSpatialReference, G14, f3.WGS84), V9(e65, n77.distance, G14[1]);
}
var ge = class {
  constructor(e65) {
    this.signal = e65, this.resolver = C();
  }
};
function ye(e65) {
  return e65 && "resolver" in e65;
}

// node_modules/@arcgis/core/views/3d/support/viewpointUtils.js
var ae3 = 0.66;
function oe3(e65) {
  return 360 - s10.normalize(e65);
}
function ie4(e65) {
  return s10.normalize(360 - e65);
}
function se4(e65) {
  return null != e65 && e65.resolver && e65.resolver.reject(), null;
}
function ce4(e65, t68) {
  return null != e65 && e65.resolver && e65.resolver.resolve(t68), t68;
}
function le3(e65, t68, n77, r62 = null) {
  if (!t68)
    return se4(r62);
  const a67 = e65.spatialReference || f3.WGS84;
  if (null != t68.camera) {
    const e66 = g3(t68.camera.position, a67);
    if (null == e66)
      return se4(r62);
    const n78 = t68.camera.clone();
    return n78.position = e66.clone(), ce4(r62, n78);
  }
  if (null == t68.targetGeometry)
    return se4(r62);
  const o61 = t68.get("targetGeometry.spatialReference");
  if (o61 && !x3(o61, a67))
    return se4(r62);
  const i60 = Y7(e65, e65.state.camera);
  let s69 = q12.ADJUST;
  if (null != t68.rotation && (i60.heading = oe3(t68.rotation), s69 = q12.LOCKED), null != n77 && (i60.tilt = n77), "point" === t68.targetGeometry.type) {
    const n78 = t68.targetGeometry;
    let a68;
    const o62 = t68.targetGeometry.clone();
    return a68 = null != t68.scale ? N11(e65, t68.scale, n78.latitude) : e65.state.camera.distance, B11(e65, o62, a68, i60, s69, r62);
  }
  const c58 = t68.targetGeometry.extent;
  return c58 ? ie3(e65, c58, i60.heading, i60.tilt, s69, r62) : se4(r62);
}
function me2(e65, t68, r62 = null) {
  return null == r62 && (r62 = new l17()), he3(e65, null, t68.clone(), r62);
}
async function ue2(t68, r62, a67) {
  const i60 = ke(t68, r62);
  if (!i60)
    throw new s4("viewpointutils-create:no-target", "Missing target for creating viewpoint");
  const s69 = new d4({ fov: t68.camera.fov }), c58 = new l17({ camera: s69 });
  if (i60.target instanceof l17) {
    return Me(await we(t68, i60.target, i60, a67, c58));
  }
  if (i60.target instanceof d4)
    return Me(ve2(t68, i60.target, c58));
  const l63 = null != i60.scale || null != i60.zoom;
  if (i60.target instanceof M2) {
    const e65 = i60.target.xmin === i60.target.xmax || i60.target.ymin === i60.target.ymax;
    return Me(l63 || e65 ? await je(t68, i60, i60.target.center, s69, a67, c58) : await ze(t68, i60, i60.target, s69, a67, c58));
  }
  const m44 = { boundingBox: P3(), hasZ: false, screenSpaceObjects: [] }, u51 = l63 ? pe2(t68, i60) : void 0;
  if (await xe(t68, i60.target, u51, m44), isFinite(m44.boundingBox[0])) {
    let e65;
    if (E4(m44.boundingBox, Fe), Ie.x = Fe[0], Ie.y = Fe[1], Ie.z = Fe[2], Ie.spatialReference = t68.spatialReference, isFinite(Ie.z) && m44.hasZ ? e65 = w4(m44.boundingBox) : (Ie.z = void 0, e65 = G4(S5(m44.boundingBox, Ze))), l63 || e65)
      return Me(await je(t68, i60, Ie, s69, a67, c58));
    const n77 = Ae(t68, m44.screenSpaceObjects);
    return Me(await Be(t68, i60, Ie, m44.boundingBox, n77, s69, a67, c58));
  }
  return i60.position ? Me(Re(t68, i60, s69, c58)) : Me(await Ge(t68, i60, s69, a67, c58));
}
function fe2(e65, t68) {
  return null == t68.scale && null != t68.zoom ? ve(e65, t68.zoom) : t68.scale;
}
function pe2(e65, t68) {
  const n77 = fe2(e65, t68);
  return n77 ? o23(n77) : void 0;
}
function ge2(e65, t68) {
  let n77 = false;
  return null != t68.heading ? (e65.heading = t68.heading, n77 = true) : null != t68.rotation && (e65.heading = oe3(t68.rotation), n77 = true), null != t68.tilt && (e65.tilt = t68.tilt, n77 = true), null != t68.fov && (e65.fov = t68.fov), n77;
}
function he3(e65, t68, n77, r62) {
  const a67 = e65.spatialReference || f3.WGS84;
  return null == (t68 = null != t68 ? t68 : X7(e65, n77)) || (r62.targetGeometry = Tn(t68.center, e65.renderSpatialReference, a67), r62.scale = he2(e65, t68), r62.rotation = ie4(n77.heading), r62.camera = n77), r62;
}
function ye2(e65, t68, n77) {
  var _a, _b;
  const r62 = () => new s4("viewpointutils:invalid-geometry", "The target is missing a valid geometry");
  if (!t68)
    throw r62();
  if (!x3(t68.spatialReference, e65.spatialReference))
    throw new s4("viewpointutils:incompatible-spatialreference", `Spatial reference (${t68.spatialReference ? t68.spatialReference.wkid : "unknown"}) is incompatible with the view (${(_a = e65.spatialReference) == null ? void 0 : _a.wkid})`, { geometry: t68 });
  const a67 = [];
  if (!t68.hasZ && e65.basemapTerrain) {
    let n78;
    switch (t68.type) {
      case "point":
        n78 = t68;
        break;
      case "multipoint":
      case "polyline":
        n78 = (_b = t68.extent) == null ? void 0 : _b.center;
        break;
      case "mesh":
        n78 = t68.origin;
        break;
      case "extent":
        n78 = t68.center;
        break;
      case "polygon":
        n78 = t68.centroid;
    }
    n78 && null != e65.basemapTerrain.spatialReference && x3(n78, e65.basemapTerrain.spatialReference) && e65.elevationProvider ? Fe[2] = a28(e65.elevationProvider, n78) ?? 0 : Fe[2] = 0;
  }
  (0, Je[t68.type])(t68, (e66) => {
    a67.push(e66[0], e66[1], e66[2]);
  }, Fe);
  const i60 = a67.length / 3;
  if (0 === i60)
    throw r62();
  const s69 = new Array(a67.length);
  if (yn(a67, t68.spatialReference, 0, s69, e65.spatialReference, 0, i60)) {
    t68.hasZ && (n77.hasZ = true);
    for (let e66 = 0; e66 < s69.length; e66 += 3)
      t68.hasZ ? (Fe[0] = s69[e66], Fe[1] = s69[e66 + 1], Fe[2] = s69[e66 + 2]) : (Fe[0] = s69[e66], Fe[1] = s69[e66 + 1]), h4(n77.boundingBox, Fe);
  }
}
async function de2(e65, t68, n77, a67) {
  const o61 = await _2(e65.whenViewForGraphic(t68));
  if (false === o61.ok || null == o61.value || !("whenGraphicBounds" in o61.value))
    return void ye2(e65, t68.geometry, a67);
  const i60 = o61.value, s69 = await _2(i60.whenGraphicBounds(t68, { minDemResolution: n77 }));
  if (false === s69.ok)
    return void ye2(e65, t68.geometry, a67);
  const { screenSpaceObjects: c58, boundingBox: l63 } = s69.value;
  o8(a67.boundingBox, l63), c58 && c58.forEach((e66) => {
    a67.screenSpaceObjects.push(e66);
  }), isFinite(l63[2]) && (a67.hasZ = true);
}
async function xe(e65, n77, r62, a67) {
  var _a;
  if (Array.isArray(n77) && 2 === n77.length) {
    const t68 = n77[0], r63 = n77[1];
    if ("number" == typeof t68 && "number" == typeof r63)
      return Ie.x = t68, Ie.y = r63, Ie.z = void 0, Ie.spatialReference = ((_a = e65.spatialReference) == null ? void 0 : _a.isGeographic) ? e65.spatialReference : f3.WGS84, void ye2(e65, Ie, a67);
  }
  n77 && "map" in n77 && "function" == typeof n77.map ? await j(n77.map((t68) => xe(e65, t68, r62, a67))) : n77 instanceof p3 ? ye2(e65, n77, a67) : n77 instanceof h14 && await de2(e65, n77, r62, a67);
}
async function we(e65, t68, n77, r62, a67) {
  if (null != t68.camera)
    return ve2(e65, t68.camera, a67);
  a67.scale = t68.scale, a67.rotation = t68.rotation, a67.targetGeometry = null != t68.targetGeometry ? t68.targetGeometry.clone() : null, a67.camera = null, null != n77.heading ? a67.rotation = ie4(n77.heading) : null != n77.rotation && (a67.rotation = n77.rotation);
  const o61 = fe2(e65, n77);
  null != o61 && (a67.scale = o61);
  const i60 = new ge(r62);
  return le3(e65, a67, n77.tilt, i60), a67.camera = await i60.resolver.promise, a67;
}
function ve2(e65, t68, n77) {
  const r62 = e65.spatialReference, a67 = g3(t68.position, r62);
  return null == a67 ? null : ((t68 = t68.clone()).fov = e65.camera.fov, t68.position = a67, he3(e65, null, t68, n77));
}
function be(e65, t68, n77, r62, a67, o61) {
  const i60 = e65.renderSpatialReference;
  return In(n77, Oe, i60), In(t68, Ce, i60), o61.targetGeometry = new x4(t68), a67.position = new x4(n77), e7(De, Ce, Oe), Q8(e65, Oe, De, r62.up, a67), o61.scale = V9(e65, x2(Oe, Ce), o61.targetGeometry.latitude), o61.rotation = ie4(a67.heading), o61.camera = a67, o61;
}
async function je(e65, t68, n77, r62, a67, i60) {
  if (null == n77)
    throw new s4("createfromcenter", "invalid point");
  i60.targetGeometry = n77.clone();
  const s69 = f28(e65);
  if (t68.position)
    return be(e65, i60.targetGeometry, t68.position, s69, r62, i60);
  if (t68.zoomFactor) {
    const r63 = s69.distance / t68.zoomFactor, a68 = g2(Fe, s69.viewForward, -r63);
    s69.eye = u2(Fe, s69.center, a68), i60.scale = V9(e65, r63, n77.latitude);
  }
  Y7(e65, s69, r62);
  const c58 = ge2(r62, t68) ? q12.LOCKED : q12.ADJUST;
  if (!t68.zoomFactor) {
    const o61 = fe2(e65, t68);
    null == o61 ? (In(n77, Fe, e65.renderSpatialReference), p9(s69.frustum, Fe) ? i60.scale = V9(e65, x2(s69.eye, Fe), n77.latitude) : i60.scale = he2(e65, s69)) : i60.scale = o61;
    const l63 = new ge(a67);
    Z6(e65, i60.targetGeometry, i60.scale, r62, c58, l63), i60.camera = await l63.resolver.promise;
  }
  return i60;
}
function Re(e65, t68, n77, r62) {
  const a67 = f28(e65);
  return r5(De, a67.viewForward), Q8(e65, a67.eye, De, a67.up, Pe), n77.position = new x4(t68.position), n77.heading = null != t68.heading ? t68.heading : Pe.heading, n77.tilt = null != t68.tilt ? t68.tilt : Pe.tilt, he3(e65, null, n77, r62);
}
async function Ge(e65, t68, n77, r62, a67) {
  const o61 = f28(e65);
  return je(e65, t68, Tn(o61.center, e65.renderSpatialReference, e65.spatialReference), n77, r62, a67);
}
async function ze(e65, t68, n77, r62, a67, o61) {
  o61.targetGeometry = n77.clone();
  const i60 = f28(e65);
  Y7(e65, i60, r62);
  const s69 = ge2(r62, t68) ? q12.LOCKED : q12.ADJUST, c58 = new ge(a67);
  return ie3(e65, n77, r62.heading, r62.tilt, s69, c58), o61.camera = await c58.resolver.promise, o61;
}
function Se(e65, t68, n77, r62, a67) {
  let o61 = 0;
  null != n77.z ? o61 = n77.z : e65.basemapTerrain && e65.elevationProvider && (o61 = a28(e65.elevationProvider, n77)), o2(Fe, n77.x, n77.y, o61), zn(e65.spatialReference, Fe, Te, e65.renderSpatialReference), a13(Ee2, Te), o12(Ee2, Ee2), P3(Ue);
  const i60 = [[0, 1, 2], [3, 1, 2], [0, 4, 2], [3, 4, 2], [0, 1, 5], [3, 1, 5], [0, 4, 5], [3, 4, 5]];
  for (let s69 = 0; s69 < i60.length; s69++) {
    const t69 = i60[s69];
    let n78 = r62[t69[2]];
    isFinite(n78) || (n78 = o61), o2(Fe, r62[t69[0]], r62[t69[1]], n78), Hn(Fe, e65.spatialReference, Fe, e65.renderSpatialReference), h4(Ue, S2(Fe, Fe, Ee2));
  }
  const l63 = s14(Ue), m44 = N(Ue), u51 = I(Ue), f49 = 1 / Math.tan(t68.fovX / 2), p54 = 1 / Math.tan(t68.fovY / 2), g36 = 0.5 * Math.sqrt(l63 * l63 + u51 * u51) * Math.max(p54, f49) + 0.5 * m44, h46 = 0.5 * m44 * p54 + 0.5 * Math.max(l63, u51);
  return Math.max(g36, h46) / a67;
}
async function Be(e65, t68, n77, r62, a67, o61, i60, s69) {
  s69.targetGeometry = n77.clone();
  const c58 = f28(e65), l63 = Se(e65, c58, n77, r62, a67);
  Y7(e65, c58, o61);
  const m44 = ge2(o61, t68) ? q12.LOCKED : q12.ADJUST;
  s69.scale = V9(e65, l63, s69.targetGeometry.latitude);
  const u51 = new ge(i60);
  return Z6(e65, s69.targetGeometry, s69.scale, o61, m44, u51), s69.camera = await u51.resolver.promise, s69;
}
function ke(e65, t68) {
  if (!t68 || !e65.spatialReference)
    return null;
  const n77 = { target: void 0 };
  return "declaredClass" in t68 || Array.isArray(t68) ? n77.target = t68 : (Object.assign(n77, t68), t68.center && !n77.target && (n77.target = t68.center)), n77;
}
function Me(e65) {
  return e65 && null != e65.camera && (e65.rotation = ie4(e65.camera.heading)), e65;
}
function Ae(e65, t68) {
  const n77 = ae3;
  if (!t68.length)
    return n77;
  let r62 = Number.NEGATIVE_INFINITY;
  for (let a67 = 0; a67 < t68.length; a67++) {
    const e66 = t68[a67].screenSpaceBoundingRect;
    r62 = Math.max(r62, Math.abs(e66[0]), Math.abs(e66[1]), Math.abs(e66[2]), Math.abs(e66[3]));
  }
  return n77 - r62 / Math.min(e65.width, e65.height) * 2;
}
var Fe = n7();
var Te = e15();
var Ee2 = e14();
var Ue = i6();
var Ze = i5();
var De = n7();
var Oe = n7();
var Ce = n7();
var Pe = { heading: 0, tilt: 0 };
var Ie = new x4();
var Je = { point(e65, t68, n77) {
  n77[0] = e65.x, n77[1] = e65.y, null != e65.z && (n77[2] = e65.z), t68(n77);
}, polygon(e65, t68, n77) {
  const r62 = e65.hasZ;
  for (let a67 = 0; a67 < e65.rings.length; a67++) {
    const o61 = e65.rings[a67];
    for (let e66 = 0; e66 < o61.length; e66++)
      n77[0] = o61[e66][0], n77[1] = o61[e66][1], r62 && (n77[2] = o61[e66][2]), t68(n77);
  }
}, polyline(e65, t68, n77) {
  const r62 = e65.hasZ;
  for (let a67 = 0; a67 < e65.paths.length; a67++) {
    const o61 = e65.paths[a67];
    for (let e66 = 0; e66 < o61.length; e66++)
      n77[0] = o61[e66][0], n77[1] = o61[e66][1], r62 && (n77[2] = o61[e66][2]), t68(n77);
  }
}, multipoint(e65, t68, n77) {
  const r62 = e65.points, a67 = e65.hasZ;
  for (let o61 = 0; o61 < r62.length; o61++)
    n77[0] = r62[o61][0], n77[1] = r62[o61][1], a67 && (n77[2] = r62[o61][2]), t68(n77);
}, extent(e65, t68, n77) {
  null != e65.zmin && null != e65.zmax ? (t68(o2(n77, e65.xmin, e65.ymin, e65.zmin)), t68(o2(n77, e65.xmax, e65.ymin, e65.zmin)), t68(o2(n77, e65.xmin, e65.ymax, e65.zmin)), t68(o2(n77, e65.xmax, e65.ymax, e65.zmin)), t68(o2(n77, e65.xmin, e65.ymin, e65.zmax)), t68(o2(n77, e65.xmax, e65.ymin, e65.zmax)), t68(o2(n77, e65.xmin, e65.ymax, e65.zmax)), t68(o2(n77, e65.xmax, e65.ymax, e65.zmax))) : (t68(o2(n77, e65.xmin, e65.ymin, n77[2])), t68(o2(n77, e65.xmax, e65.ymin, n77[2])), t68(o2(n77, e65.xmin, e65.ymax, n77[2])), t68(o2(n77, e65.xmax, e65.ymax, n77[2])));
}, mesh(e65, t68, n77) {
  const r62 = e65.vertexAttributes && e65.vertexAttributes.position;
  if (r62)
    for (let a67 = 0; a67 < r62.length; a67 += 3)
      t68(o2(n77, r62[a67], r62[a67 + 1], r62[a67 + 2]));
} };

// node_modules/@arcgis/core/views/3d/state/GoToOperation.js
var f33 = class {
  constructor(t68, i60, e65) {
    this.target = t68, this.options = i60, this.view = e65, this.state = "pending", this._animationController = null, this._promise = new Promise((t69, i61) => {
      this._resolveCallback = t69, this._rejectCallback = i61;
      const e66 = new AbortController();
      null != this.options.signal && w(this.options.signal, () => {
        this.abort();
      }), this._abortController = e66, this.waitForReady();
    });
  }
  then(t68, i60) {
    return this._promise.then(t68, i60);
  }
  catch(t68) {
    return this._promise.catch(t68);
  }
  resolve(t68) {
    if ("finished" !== this.state)
      return this.state = "finished", this._resolveCallback(t68);
  }
  reject(t68) {
    if ("finished" !== this.state)
      return this.state = "finished", this._rejectCallback(t68);
  }
  abort(t68 = false) {
    if (this._abortController.abort(), "wait-for-animation-finish" === this.state)
      !t68 && null != this._animationController && this.view.state.cameraController === this._animationController && this._animationController.active && this._animationController.stopController();
    this.reject(c());
  }
  async waitForReady() {
    if (this.state = "wait-for-ready", !this.view.ready)
      try {
        await j4(() => this.view.ready, this._abortController.signal);
      } catch (t68) {
        return this.reject(t68);
      }
    this.createViewPoint();
  }
  createViewPoint() {
    "finished" !== this.state && (this.state = "wait-for-viewpoint", this._animationController = this.options.animate ? this._getAnimationController() : null, ue2(this.view, this.target, this._abortController.signal).then((t68) => {
      if ("finished" === this.state)
        return;
      const i60 = t68 ? this._getCameraFromViewpoint(t68) : null;
      if (null != i60)
        if (this.options.animate) {
          if (null == this._animationController)
            return;
          this.startAnimation(i60, this._animationController);
        } else
          this.view.stateManager.setStateCamera(i60.camera, { applyConstraints: !i60.isFullySpecified, positionAndOrientationOnly: true, doNotCancelGoToOperation: true }), this.resolve();
    }, (t68) => {
      this.reject(t68);
    }));
  }
  _getCameraFromViewpoint(a67) {
    var _a;
    const n77 = !!(this.target instanceof l17 && this.target.camera || this.target instanceof d4), o61 = a67.camera;
    if (null == o61)
      return null;
    if (!this.view.stateManager.isCompatible(o61)) {
      const t68 = o61.position, i60 = t68 && t68.spatialReference, a68 = i60 ? i60.wkid : "none", n78 = (_a = this.view.spatialReference) == null ? void 0 : _a.wkid;
      return this.reject(new s4("GotoAnimation:incompatible-spatialreference", `Resulting camera has an incompatible spatial reference (camera: ${a68}, view: ${n78})`, { camera: o61 })), null;
    }
    const r62 = X7(this.view, o61);
    return null == r62 ? (this.reject(new s4("GotoAnimation:invalid-camera", "Resulting camera is invalid")), null) : { viewpoint: a67, camera: r62, isFullySpecified: n77 };
  }
  startAnimation(t68, i60) {
    this.state = "wait-for-animation-finish";
    const a67 = i60.viewAnimation;
    if (null == a67)
      return void this.reject(new s4("GotoAnimation:missing-animation", "Unreachable code in view.stateManager"));
    if (a67.update(t68.viewpoint, "running"), !i60.active || null == i60.viewAnimation || i60.viewAnimation.target !== t68.viewpoint || this.view.state.cameraController !== i60)
      return this.abort();
    let n77;
    t68.isFullySpecified ? (n77 = new l37({ view: this.view, desiredCamera: t68.camera }), o41(this.view, t68.camera, i41.EYE_AND_CENTER)) : E21(this.view, t68.camera), i60.begin(t68.camera, this.options);
    const o61 = () => {
      const e65 = this.view.state.cameraController;
      n77 && (e65 && e65.active ? e65 instanceof h31 && null != e65.viewAnimation && e65.viewAnimation.target === t68.viewpoint && (this.view.state.cameraController = n77) : null != i60.viewAnimation && i60.viewAnimation.target === t68.viewpoint && "finished" === i60.state && (this.view.state.cameraController = n77));
    }, w29 = (t69) => {
      if (null != this.view.state)
        switch (i60.state) {
          case s50.Finished:
            switch (this.state) {
              case "pending":
              case "wait-for-ready":
              case "wait-for-viewpoint":
              case "wait-for-animation-finish":
                this.resolve();
            }
            break;
          case s50.Ready:
          case s50.Rejected:
          case s50.Running:
          case s50.Stopped:
            switch (this.state) {
              case "pending":
              case "wait-for-ready":
              case "wait-for-viewpoint":
              case "wait-for-animation-finish":
                this.reject(t69);
            }
        }
    };
    a67.when(o61, (t69) => w29(t69)), i60.asyncResult = { resolve: () => w29(), reject: (t69) => w29(t69) };
  }
  _getAnimationController() {
    let t68 = null, i60 = null;
    const a67 = this.view.state.cameraController;
    return a67 instanceof h31 && (a67.updateStateFromViewAnimation(), a67.active && (t68 = a67, i60 = t68.viewAnimation)), null != t68 || (t68 = new h31({ view: this.view, mode: "animation" }), i60 = t68.viewAnimation, this.view.state.switchCameraController(t68)) ? t68 : (null != i60 && i60.stop(), this.reject(new s4("GotoAnimation:goto-cannot-interrupt", "Cannot start an animation while interacting")), null);
  }
};

// node_modules/@arcgis/core/views/3d/state/ViewStateManager.js
var J9 = class extends m {
  get camera() {
    const e65 = this._get("camera");
    if (!this.ready)
      return e65;
    const t68 = Y7(this.view, this.view.state.camera, Z7);
    return t68 && e65 && t68.equals(e65) ? e65 : t68.clone();
  }
  set camera(e65) {
    var _a, _b;
    this._updatePropertyBeforeReady("camera", e65) || ((_a = this.view.elevationProvider) == null ? void 0 : _a.enableElevationCache(true), this.setStateCamera(X7(this.view, e65), { applyConstraints: false }) || s3.getLogger(this).error("#camera=", "Invalid camera", e65), (_b = this.view.elevationProvider) == null ? void 0 : _b.enableElevationCache(false));
  }
  get contentCamera() {
    const e65 = this._get("contentCamera");
    if (!this.ready)
      return e65;
    const t68 = Y7(this.view, this.view.state.contentCamera, Z7);
    return t68 && e65 && t68.equals(e65) ? e65 : t68.clone();
  }
  set contentCamera(e65) {
    if (this._updatePropertyBeforeReady("contentCamera", e65))
      return;
    const t68 = X7(this.view, e65);
    null != t68 ? (this._updateElevation(t68), this.view.state.contentCamera = t68) : this.view.state.contentCamera = null;
  }
  installContentCameraReset(e65) {
    if (this.removeHandles(ie5), this.test.contentCameraResetState.clear(), !this.view.state.fixedContentCamera)
      return false;
    const t68 = this.zoom, i60 = this.view.state.camera.distance ** 2, a67 = e6(this.view.state.camera.center), r62 = e65.sticky ? this.contentCamera.clone() : null;
    return this.addHandles([l6(() => this.contentCamera, () => {
      e65.sticky || (this.removeHandles(ie5), this.test.contentCameraResetState.clear());
    }), l6(() => this.zoom, (e66) => {
      void 0 !== e66 && void 0 !== t68 && (this.test.contentCameraResetState.set("view.zoom", Math.abs(e66 - t68) / 2), Math.abs(e66 - t68) > 2 ? this.contentCamera = null : this.view.state.fixedContentCamera || (this.contentCamera = r62));
    }), l6(() => this.view.state.camera, (e66) => {
      const t69 = p2(a67, e66.center);
      this.test.contentCameraResetState.set("camera.center", t69 / i60), t69 > i60 ? this.contentCamera = null : this.view.state.fixedContentCamera || (this.contentCamera = r62);
    })], ie5), true;
  }
  get center() {
    return this.ready ? this.view.pointsOfInterest.centerOnContent.location : this._get("center");
  }
  set center(e65) {
    var _a;
    this._updatePropertyBeforeReady("center", e65) || (e65 ? this.isCompatible(e65) ? this.setStateCamera(this._centerToCamera(e65), { applyConstraints: true }) ? this.view.pointsOfInterest.centerOnContent.runTask() : s3.getLogger(this).error("#center=", "Invalid center", e65) : s3.getLogger(this).error("#center=", "Center has an incompatible spatial reference (center: " + (e65.spatialReference ? e65.spatialReference.wkid : "none") + ", view: " + ((_a = this.view.spatialReference) == null ? void 0 : _a.wkid) + ")", e65) : s3.getLogger(this).error("#center=", "Center may not be null or undefined"));
  }
  get extent() {
    if (!this.ready)
      return this._get("extent");
    const e65 = this.view, t68 = oe2(e65, e65.state.camera, e65.pointsOfInterest.centerOnContent.renderLocation);
    return null != t68 ? t68 : this._get("extent");
  }
  set extent(e65) {
    var _a;
    this._updatePropertyBeforeReady("extent", e65) || (e65 ? this.isCompatible(e65) ? this.setStateCamera(this._extentToCamera(e65), { applyConstraints: true }) || s3.getLogger(this).error("#extent=", "Invalid extent", e65) : s3.getLogger(this).error("#extent=", "Extent has an incompatible spatial reference (extent: " + (e65.spatialReference ? e65.spatialReference.wkid : "none") + ", view: " + ((_a = this.view.spatialReference) == null ? void 0 : _a.wkid) + ")", e65) : s3.getLogger(this).error("#extent=", "Extent may not be null or undefined"));
  }
  get frustum() {
    const e65 = this._propertiesPool.get("frustum");
    return e65.renderCoordsHelper = this.view.renderCoordsHelper, e65.update(this.view.state.camera), e65;
  }
  get hasInitialView() {
    return !!this.view.get("map.initialViewProperties.viewpoint");
  }
  get scale() {
    if (this.ready) {
      const e65 = this.view.pointsOfInterest.centerOnContent;
      return V9(this.view, e65.distance, e65.location.latitude);
    }
    return this._get("scale");
  }
  set scale(e65) {
    this._updatePropertyBeforeReady("scale", e65) || this.setStateCamera(this._scaleToCamera(e65), { applyConstraints: true }) || s3.getLogger(this).error("#scale=", "Invalid scale", e65);
  }
  get padding() {
    if (!this.ready)
      return this._get("padding");
    const e65 = this.view.state.camera, t68 = e65.padding, i60 = e65.pixelRatio, a67 = this._get("padding"), r62 = Math.round(t68[ht.TOP] / i60), s69 = Math.round(t68[ht.RIGHT] / i60), n77 = Math.round(t68[ht.BOTTOM] / i60), o61 = Math.round(t68[ht.LEFT] / i60);
    return null != a67 && a67.top === r62 && a67.right === s69 && a67.bottom === n77 && a67.left === o61 ? a67 : { top: r62, right: s69, bottom: n77, left: o61 };
  }
  set padding(e65) {
    this._updatePropertyBeforeReady("padding", e65) || (this._paddingToArray(e65, this.view.state.camera.pixelRatio, ee3), this.view.state.updateCamera((e66) => e66.padding = ee3));
  }
  _paddingToArray(e65, t68, i60) {
    e65 ? r6(i60, e65.top || 0, e65.right || 0, e65.bottom || 0, e65.left || 0) : r6(i60, 0, 0, 0, 0);
    for (let a67 = 0; a67 < 4; a67++)
      i60[a67] = Math.round(i60[a67] * t68);
  }
  get screenCenter() {
    const e65 = this.padding;
    return c4((this.view.width - (e65.left + e65.right)) / 2 + e65.left, (this.view.height - (e65.top + e65.bottom)) / 2 + e65.top);
  }
  get viewpoint() {
    return this.ready ? me2(this.view, this.camera) : this._get("viewpoint");
  }
  set viewpoint(e65) {
    var _a;
    if (!this._updatePropertyBeforeReady("viewpoint", e65))
      if (e65)
        if (this.isCompatible(e65))
          this.setStateCamera(this._viewpointToCamera(e65), { applyConstraints: !e65.camera }) || s3.getLogger(this).error("#viewpoint=", "Invalid viewpoint", e65);
        else {
          const t68 = null != e65.camera ? e65.camera.position : e65.targetGeometry, i60 = null != t68 && t68.spatialReference;
          s3.getLogger(this).error("#viewpoint=", "Viewpoint has an incompatible spatial reference (viewpoint: " + (i60 ? i60.wkid : "none") + ", view: " + ((_a = this.view.spatialReference) == null ? void 0 : _a.wkid) + ")", e65);
        }
      else
        s3.getLogger(this).error("#viewpoint=", "Viewpoint may not be null or undefined");
  }
  get zoom() {
    return this.ready ? de(this.view, this.scale) : this._get("zoom");
  }
  set zoom(e65) {
    this._updatePropertyBeforeReady("zoom", e65) || void 0 === e65 || this.setStateCamera(this._zoomToCamera(e65), { applyConstraints: true }) || s3.getLogger(this).error("#zoom=", "Invalid zoom", e65);
  }
  _computeCanvasSize() {
    if (this._devicePixelRatioOverride)
      return this.view.state.contentPixelRatio = this._devicePixelRatioOverride, this._tmpCanvasSize.width = Math.round(this.view.surface.clientWidth * this._devicePixelRatioOverride), this._tmpCanvasSize.height = Math.round(this.view.surface.clientHeight * this._devicePixelRatioOverride), this._tmpCanvasSize.pixelRatio = this._devicePixelRatioOverride, this._tmpCanvasSize;
    const e65 = Math.min(this._windowDevicePixelRatio, this.view.qualitySettings.maximumPixelRatio), t68 = this._usePhysicalPixelRendering ? this._windowDevicePixelRatio : e65;
    this._tmpCanvasSize.width = Math.round(this.view.surface.clientWidth * t68), this._tmpCanvasSize.height = Math.round(this.view.surface.clientHeight * t68);
    const i60 = this.view._stage.renderView.renderingContext.parameters.maxTextureSize;
    return R7(this._tmpCanvasSize, i60) ? this._tmpCanvasSize.pixelRatio = t68 : this._tmpCanvasSize.pixelRatio = this._tmpCanvasSize.width > 0 ? this._tmpCanvasSize.width / this.view.surface.clientWidth : t68, this.view.state && (this.view.state.contentPixelRatio = Math.min(this._windowDevicePixelRatio, this.view.qualitySettings.maximumPixelRatio)), this._tmpCanvasSize;
  }
  get _rasterPixelRatio() {
    return null != this._devicePixelRatioOverride ? this._devicePixelRatioOverride : this._usePhysicalPixelRenderingAny ? this._windowDevicePixelRatio : Math.min(this._windowDevicePixelRatio, this.view.qualitySettings.maximumPixelRatio);
  }
  get _usePhysicalPixelRendering() {
    var _a, _b;
    return ((_b = (_a = this.view) == null ? void 0 : _a._stage) == null ? void 0 : _b.renderer.isFeatureEnabled(o34.PhysicalPixelRendering)) ?? false;
  }
  get _usePhysicalPixelRenderingAny() {
    var _a, _b;
    const e65 = (_b = (_a = this.view) == null ? void 0 : _a._stage) == null ? void 0 : _b.renderer;
    return e65 && (e65.isFeatureEnabled(o34.PhysicalPixelRendering, I2.IDLE) || e65.isFeatureEnabled(o34.PhysicalPixelRendering, I2.INTERACTING) || e65.isFeatureEnabled(o34.PhysicalPixelRendering, I2.ANIMATING));
  }
  constructor(e65) {
    super(e65), this.constraintsManager = null, this.ready = false, this._windowDevicePixelRatio = 1, this._devicePixelRatioOverride = null, this._updatingIgnoreRenderState = false, this.test = { viewStateManager: this, contentCameraResetState: /* @__PURE__ */ new Map(), setDevicePixelRatio: (e66) => this._devicePixelRatioOverride = e66, renderState: null, get maximumPixelRatio() {
      return this.viewStateManager.view.qualitySettings.maximumPixelRatio;
    }, set updatingIgnoreRenderState(e66) {
      this.viewStateManager._updatingIgnoreRenderState = e66;
    }, get updatingIgnoreRenderState() {
      return this.viewStateManager._updatingIgnoreRenderState || null != this.renderState;
    } }, this._propertiesPool = new o25({ frustum: d20 }, this), this._cameraSetByUser = false, this._gotoOperation = null, this._cameraChangeTime = 0, this._tmpCanvasSize = new K8();
  }
  initialize() {
    this._cameraChangeTime = performance.now(), this.addHandles([a8(() => this.view.state.events, "before-camera-change", (e65) => e65 && this._updateElevation(e65)), l6(() => {
      var _a;
      return (_a = this.view.state) == null ? void 0 : _a.camera;
    }, (e65, t68) => this._cameraChangedHandler(e65, t68), U3)]), f6(() => {
      var _a;
      return (_a = this.view.state) == null ? void 0 : _a.camera;
    }, (e65) => this._updateElevation(e65), { once: true, sync: true }), this.addHandles([A({ prepare: () => this._prepareFrame() }), l6(() => this.view.state.cameraController, () => {
      this._cameraSetByUser = true, this.removeHandles(te3);
    }), a8(() => this.view.state.events, "camera-projection-changed", () => this.notifyChange("scale"))]);
  }
  destroy() {
    this.exit(), this._propertiesPool = l(this._propertiesPool);
  }
  init() {
    this.constraintsManager = new _20({ view: this.view }), this._prepareFrame();
    const e65 = this._getInitialProperties();
    this._cameraSetByUser = false, this._set("ready", true);
    for (const t68 of e65)
      this.set(t68.name, t68.value);
    if (!this._cameraSetByUser) {
      const e66 = this.view.get("map.initialViewProperties.viewpoint") || this.view.initialExtent;
      e66 && this.isCompatible(e66) ? this._setInitialView(e66) : this.view.state.viewingMode === l13.Local && this.addHandles(f6(() => this.view.basemapTerrain.ready, () => {
        this.removeHandles(te3), this._setInitialView(this.view.dataExtent);
      }, { once: true, initial: true }), te3);
    }
  }
  exit() {
    this._cancelGoToOperation(), this.ready && (this._override("padding", this.padding), this._set("ready", false), this._clearOverride("hasInitialView"), this._cameraSetByUser = false, this.removeHandles(te3), this.constraintsManager = l(this.constraintsManager));
  }
  async goTo(e65, t68) {
    const i60 = { animate: true, ...t68 };
    return null != this._gotoOperation && this._gotoOperation.abort(i60.animate), this._gotoOperation = new f33(e65, i60, this.view), this.view.resourceController.scheduler.stopFrame(), this._gotoOperation;
  }
  debugSetCameraOnContent() {
    this.setStateCamera(f28(this.view), { applyConstraints: false });
  }
  step(e65) {
    const t68 = this.view.state, i60 = t68 == null ? void 0 : t68.cameraController;
    i60 && (t68.updateCamera((t69) => i60.stepController(e65, t69)), i60.steppingFinished && i60.finishController());
  }
  _cancelGoToOperation() {
    null != this._gotoOperation && (this._gotoOperation.abort(), this._gotoOperation = null);
  }
  _getInitialProperties() {
    const e65 = /* @__PURE__ */ new Set(), t68 = [];
    for (const { propertyName: i60, overrides: a67 } of X8) {
      const r62 = e65.has(i60), s69 = this._isOverridden(i60);
      !r62 && s69 && t68.push({ name: i60, value: this._get(i60) }), this._clearOverride(i60), (r62 || s69) && a67.forEach((t69) => e65.add(t69));
    }
    return t68;
  }
  _setInitialView(e65) {
    if (null == e65 || this._cameraSetByUser)
      return;
    if (e65 instanceof d4)
      return void this.setStateCamera(X7(this.view, e65), { applyConstraints: false });
    if (e65 instanceof l17) {
      if (e65.targetGeometry instanceof M2) {
        const t69 = ie3(this.view, e65.targetGeometry, 0, 0.5, q12.LOCKED);
        return void (null != t69 && this.setStateCamera(X7(this.view, t69), { applyConstraints: true }));
      }
      const t68 = { applyConstraints: !e65.camera }, i60 = this._viewpointToCamera(e65);
      return void this.setStateCamera(i60, t68);
    }
    const a67 = ie3(this.view, e65, 0, 0.5, q12.LOCKED);
    null != a67 && this.setStateCamera(X7(this.view, a67), { applyConstraints: true });
  }
  _updatePropertyBeforeReady(e65, t68) {
    return !this.ready && (this._override(e65, t68), t68 && Q9.includes(e65) && this._override("hasInitialView", true), true);
  }
  isCompatible(e65) {
    return null != e65 && (e65 instanceof l17 ? e65.camera ? this.isCompatible(e65.camera) : this.isCompatible(e65.targetGeometry) : e65 instanceof d4 ? this.isCompatible(e65.position) : e65.spatialReference && x3(e65.spatialReference, this.view.spatialReference));
  }
  _getPreservingHeadingTilt(e65 = Y8) {
    return this._cameraSetByUser ? (e65.heading = this.camera.heading, e65.tilt = this.camera.tilt) : (e65.heading = 0, e65.tilt = 0.5), e65;
  }
  _centerPointAtDistanceToCamera(e65, t68, i60 = $5) {
    const { heading: a67, tilt: r62 } = this._getPreservingHeadingTilt(), s69 = te2(this.view, a67, r62, e65, t68, q12.ADJUST);
    return null == s69 ? null : (i60.copyFrom(this.view.state.camera), i60.eye = s69.eye, i60.center = s69.center, i60.up = s69.up, i60);
  }
  _centerToCamera(e65) {
    const t68 = this.view.pointsOfInterest.centerOnContent;
    t68.runTask();
    const i60 = t68.distance;
    return this._centerPointAtDistanceToCamera(e65, i60);
  }
  _extentToCamera(e65) {
    const { heading: t68, tilt: i60 } = this._getPreservingHeadingTilt(), a67 = ie3(this.view, e65, t68, i60, q12.ADJUST, Z7);
    return a67 ? X7(this.view, a67) : null;
  }
  _scaleToCamera(e65) {
    if (null == e65)
      return null;
    const t68 = this.view.pointsOfInterest.centerOnContent;
    t68.runTask();
    const i60 = t68.renderLocation, a67 = t68.location.latitude;
    if (null == a67)
      return null;
    const r62 = N11(this.view, e65, a67);
    return this._centerPointAtDistanceToCamera(i60, r62);
  }
  _zoomToCamera(e65) {
    return this._scaleToCamera(ve(this.view, e65));
  }
  _viewpointToCamera(e65) {
    return X7(this.view, le3(this.view, e65));
  }
  setStateCamera(e65, t68) {
    return !(null == e65 || !this.view.state.stopActiveCameraController()) && (this._cameraSetByUser = true, t68.doNotCancelGoToOperation || this._cancelGoToOperation(), this.view.state.updateCamera((i60) => {
      t68.positionAndOrientationOnly ? (i60.eye = e65.eye, i60.center = e65.center, i60.up = e65.up) : i60.copyFrom(e65), t68.applyConstraints && E21(this.view, i60);
    }), t68.applyConstraints || (this.view.state.cameraController = new l37({ view: this.view, desiredCamera: e65 })), true);
  }
  _prepareFrame() {
    const { surface: e65, canvas: t68 } = this.view;
    if (!e65 || !t68)
      return;
    this._windowDevicePixelRatio = window.devicePixelRatio;
    const i60 = this._computeCanvasSize();
    if (0 !== i60.width && 0 !== i60.height && (t68.width === i60.width && t68.height === i60.height || (t68.width = i60.width, t68.height = i60.height), this.view.state)) {
      const e66 = this.view.state.camera;
      e66.fullWidth === i60.width && e66.fullHeight === i60.height && e66.pixelRatio === i60.pixelRatio || ($5.copyFrom(e66), $5.pixelRatio !== i60.pixelRatio && (this._paddingToArray(this.padding, i60.pixelRatio, ee3), $5.padding = ee3), $5.fullWidth = i60.width, $5.fullHeight = i60.height, $5.pixelRatio = i60.pixelRatio, this.view.state.camera = $5), this._updateViewState();
    }
  }
  _updateElevation(e65) {
    var _a;
    const t68 = this.view.basemapTerrain && this.view.basemapTerrain.spatialReference, i60 = ((_a = this.view.renderCoordsHelper) == null ? void 0 : _a.getAltitude(e65.eye)) ?? 0, a67 = t68 ? g16(this.view, e65.eye) : 0;
    e65.relativeElevation = i60 - a67;
  }
  _updateViewState() {
    null != this.test.renderState ? this.view.state.mode = this.test.renderState : this.view.animation ? this.view.state.mode = I2.ANIMATING : this.view.interacting ? this.view.state.mode = I2.INTERACTING : (this.view.state.mode === I2.ANIMATING && (this._cameraChangeTime = 0), performance.now() - this._cameraChangeTime <= ae4 ? this.view.state.mode = I2.INTERACTING : this.view.state.mode = I2.IDLE), this.view.state.rasterPixelRatio = this._rasterPixelRatio;
  }
  _cameraChangedHandler(e65, t68) {
    e65 && t68 && e65.almostEquals(t68) || (this._cameraChangeTime = performance.now(), this._updateViewState());
  }
};
e([y2({ type: d4, dependsOn: ["view.state.camera", "ready"] })], J9.prototype, "camera", null), e([y2({ type: d4, dependsOn: ["view.state.contentCamera", "ready"] })], J9.prototype, "contentCamera", null), e([y2({ type: x4 })], J9.prototype, "center", null), e([y2({ type: M2 })], J9.prototype, "extent", null), e([y2({ readOnly: true })], J9.prototype, "frustum", null), e([y2({ readOnly: true })], J9.prototype, "hasInitialView", null), e([y2({ readOnly: true, type: Boolean })], J9.prototype, "ready", void 0), e([y2({ type: Number })], J9.prototype, "scale", null), e([y2()], J9.prototype, "padding", null), e([y2({ readOnly: true })], J9.prototype, "screenCenter", null), e([y2({ constructOnly: true })], J9.prototype, "view", void 0), e([y2({ type: l17 })], J9.prototype, "viewpoint", null), e([y2({ type: Number })], J9.prototype, "zoom", null), e([y2({ readOnly: true })], J9.prototype, "_rasterPixelRatio", null), e([y2({ readOnly: true })], J9.prototype, "_usePhysicalPixelRendering", null), e([y2({ readOnly: true })], J9.prototype, "_usePhysicalPixelRenderingAny", null), e([y2()], J9.prototype, "_windowDevicePixelRatio", void 0), e([y2()], J9.prototype, "_devicePixelRatioOverride", void 0), J9 = e([a4("esri.views.3d.state.ViewStateManager")], J9);
var K8 = class {
  constructor() {
    this.width = 0, this.height = 0, this.pixelRatio = 1;
  }
};
var Q9 = ["camera", "viewpoint", "extent", "scale", "center", "zoom"];
var X8 = [{ propertyName: "camera", overrides: ["viewpoint"] }, { propertyName: "viewpoint", overrides: ["extent"] }, { propertyName: "extent", overrides: ["center", "scale"] }, { propertyName: "center", overrides: [] }, { propertyName: "scale", overrides: ["zoom"] }, { propertyName: "zoom", overrides: [] }, { propertyName: "padding", overrides: [] }];
var Y8 = { heading: 0, tilt: 0 };
var Z7 = new d4();
var $5 = new $();
var ee3 = n14();
var te3 = "pending-initial-view";
var ie5 = "content-camera-reset";
var ae4 = 300;
var re4 = 100;

// node_modules/@arcgis/core/views/3d/state/controllers/InteractiveController.js
var n50 = class extends i46 {
  constructor() {
    super(...arguments), this.startCamera = new $(), this.currentCamera = new $(), this._lastInteraction = 0;
  }
  get isInteractive() {
    return performance.now() - this._lastInteraction < re4;
  }
  stepController(r62, t68) {
    t68.copyViewFrom(this.currentCamera), this.currentCamera.copyFrom(t68);
  }
  onControllerStart(r62) {
    this.state = s50.Running, this.startCamera.copyFrom(r62), this.currentCamera.copyFrom(r62);
  }
  onControllerEnd(r62) {
    r62.copyViewFrom(this.currentCamera);
  }
  commitCamera() {
    this._lastInteraction = performance.now(), setTimeout(() => this.notifyChange("isInteractive"), re4), this.view.state.updateCamera((r62) => this.stepController(0, r62)), this.steppingFinished && this.finishController();
  }
};
e([y2({ readOnly: true })], n50.prototype, "isInteractive", null), e([y2()], n50.prototype, "_lastInteraction", void 0), n50 = e([a4("esri.views.3d.state.controllers.InteractiveController")], n50);

// node_modules/@arcgis/core/views/3d/state/controllers/RotateController.js
var b16;
!function(t68) {
  t68[t68.CENTER = 0] = "CENTER", t68[t68.EYE = 1] = "EYE";
}(b16 || (b16 = {}));
var L16 = class extends n50 {
  get _intersectionHelper() {
    return this.view.sceneIntersectionHelper;
  }
  constructor(t68) {
    super(t68), this.pivot = b16.CENTER, this._rotScale = 0, this._lastPoint = n15(), this._tmpWorldUp = n7(), this._tmpViewDir = n7(), this._tmpRotCurPoint = n15(), this._tmpTransf = e15(), this._tmpAxis = n7(), this._tmpPivotPoint = n7(), this._pivotPos = n7(), this._constraintOptions = { selection: L12.ALL, interactionType: O13.TUMBLE, interactionFactor: 0, interactionStartCamera: null, interactionDirection: null, tiltMode: O14.TUMBLE };
  }
  initialize() {
    this._rotScale = this.pivot === b16.CENTER ? 3 : 1.5;
  }
  begin(t68) {
    if (this.active) {
      switch (this.pivot) {
        case b16.EYE:
          r5(this._pivotPos, this.startCamera.eye), this._constraintOptions.interactionType = O13.LOOK_AROUND, this._constraintOptions.tiltMode = O14.LOOK_AROUND, this._constraintOptions.selection = L12.NONE;
          break;
        case b16.CENTER: {
          const i60 = this._intersectionHelper.intersectRayFreePointFallback(this.startCamera.ray, this._pivotPos, 0 === this.view.map.ground.opacity ? at2 : {});
          i60 || r5(this._pivotPos, this.startCamera.center), this._constrainPivotPoint(t68, i60), this.startCamera.center = this._pivotPos, this._constraintOptions.interactionType = O13.TUMBLE, this._constraintOptions.tiltMode = O14.TUMBLE, this._constraintOptions.selection = L12.ALL & ~L12.DISTANCE;
          break;
        }
      }
      this._constraintOptions.interactionStartCamera = this.startCamera, it2(this.startCamera, t68, this._lastPoint);
    }
  }
  _constrainPivotPoint(t68, i60) {
    const s69 = this.startCamera, o61 = n7();
    e7(o61, this._pivotPos, s69.eye);
    const e65 = s7(o61), a67 = Math.abs(this.view.camera.position.z);
    this.view.renderCoordsHelper.worldUpAtPosition(s69.eye, V10);
    let n77 = Math.max(Math.min(nt2, 1 / Math.abs(P(V10, s69.viewForward))) * a67, ot);
    i60 && (n77 = Math.min(e65, n77));
    const h46 = A3(this.view.spatialReference), p54 = i8(s69.width / s69.pixelRatio * 0.5, s69.height / s69.pixelRatio * 0.5), m44 = zt(this.startCamera, p54, h46);
    let P26 = this.view._stage.renderView.getMinimalDepthForArea(this.view.voxelWasm, s69.fullWidth / s69.pixelRatio * 0.5, s69.fullHeight / s69.pixelRatio * 0.5, s69, 2.5 * rt2, rt2), E39 = this.view._stage.renderView.getMinimalDepthForArea(this.view.voxelWasm, t68[0], t68[1], s69, rt2);
    null == P26 && null == E39 || (P26 = P26 ?? E39 ?? 0, E39 = null == E39 || m44 === gt.Horizontal ? P26 : E39, n77 = P26 > E39 ? E39 : P26, n77 = i60 ? Math.min(n77, e65) : n77), z2(o61, o61), r5(this._pivotPos, u2(this._tmpPivotPoint, s69.eye, g2(this._tmpPivotPoint, o61, n77)));
  }
  update(t68) {
    if (this.active) {
      switch (this.pivot) {
        case b16.EYE:
          this.currentCamera.center = this._applyRotation(this.currentCamera, t68, this.currentCamera.center, this._pivotPos);
          break;
        case b16.CENTER:
          this.currentCamera.center = this._pivotPos, this.currentCamera.eye = this._applyRotation(this.currentCamera, t68, this.currentCamera.eye, this._pivotPos);
      }
      E21(this.view, this.currentCamera, this._constraintOptions), this.commitCamera();
    }
  }
  end() {
    this.active && this.finishController();
  }
  _applyRotation(t68, r62, o61, e65) {
    this.view.renderCoordsHelper.worldUpAtPosition(e65, this._tmpWorldUp), it2(t68, r62, this._tmpRotCurPoint);
    let h46 = (this._lastPoint[1] - this._tmpRotCurPoint[1]) * this._rotScale, m44 = (this._tmpRotCurPoint[0] - this._lastPoint[0]) * this._rotScale;
    e7(this._tmpViewDir, o61, e65);
    const c58 = s7(this._tmpViewDir), u51 = l4(P(this._tmpViewDir, this._tmpWorldUp) / c58);
    if (this.pivot === b16.EYE) {
      h46 *= -0.5;
      const t69 = 0.5 * Math.PI - u51, i60 = 0.5 * Math.PI * 0.99;
      h46 = t69 - Math.max(-i60, Math.min(i60, t69 + h46));
    }
    return h46 = i3(h46 + u51, d27.min, d27.max) - u51, _(this._tmpAxis, t68.up, this._tmpViewDir), this.pivot === b16.CENTER && (m44 = -m44), g4(this._tmpTransf, m44, this._tmpWorldUp), b2(this._tmpTransf, this._tmpTransf, h46, this._tmpAxis), O(this._tmpViewDir, this._tmpViewDir, this._tmpTransf), t68.up = O(S16, t68.up, this._tmpTransf), u2(S16, e65, this._tmpViewDir), a12(this._lastPoint, this._tmpRotCurPoint), S16;
  }
};
e([y2()], L16.prototype, "pivot", void 0), L16 = e([a4("esri.views.3d.state.controllers.RotateController")], L16);
var S16 = n7();
var V10 = n7();

// node_modules/@arcgis/core/views/3d/input/handlers/DragRotate.js
var a44 = class extends i18 {
  constructor(t68, r62, e65, o61) {
    super(true), this._view = t68, this.pointerAction = r62, this._pivot = e65, this.registerIncoming("drag", o61, (t69) => this._handleDrag(t69));
  }
  _handleDrag(e65) {
    const a67 = e65.data;
    if (a67.pointers.size > 1)
      return;
    if (!r36(e65.data, this.pointerAction))
      return;
    const i60 = i8(a67.center.x, a67.center.y);
    switch (a67.action) {
      case "start":
        this._cameraController && (this._cameraController.end(), this._cameraController = null), this._cameraController = new L16({ view: this._view, pivot: this._pivot }), this._view.state.switchCameraController(this._cameraController), this._cameraController.begin(i60);
        break;
      case "update":
        this._cameraController && this._cameraController.update(i60);
        break;
      case "end":
        this._cameraController && (this._cameraController.end(), this._cameraController = null);
    }
    e65.stopPropagation();
  }
};

// node_modules/@arcgis/core/views/3d/state/controllers/global/ZoomController.js
var L17 = class extends n50 {
  constructor() {
    super(...arguments), this._pickPoint = n7(), this._tmpP0 = n15(), this._panAxisAngle = i47(), this._tmpRayDir = n7(), this._tmpRayDirPick = n7(), this._targetOnSphere = n7(), this._navMode = gt.Horizontal, this._tmpRay = { origin: n7(), direction: n7() }, this.dragBeginPoint = i8(), this._normalizedAnchorPoint = n15(), this._constraintOptions = { selection: L12.ALL_EXCEPT_COLLISION, interactionType: O13.ZOOM, interactionFactor: 0, interactionStartCamera: null, interactionDirection: null, tiltMode: O14.TUMBLE }, this._sphere = _4(), this._hasPickPoint = false;
  }
  get _intersectionHelper() {
    return this.view.sceneIntersectionHelper;
  }
  begin(t68) {
    if (!this.active)
      return;
    a12(this.dragBeginPoint, t68), it2(this.startCamera, t68, this._normalizedAnchorPoint);
    const r62 = A3(this.view.spatialReference), e65 = jt(this._intersectionHelper, this.startCamera, t68, r62, N10.Ellipsoid, 0 === this.view.map.ground.opacity ? at2 : {});
    if (this._navMode = zt(this.startCamera, t68, r62), this._navMode === gt.Horizontal)
      this._hasPickPoint = !!e65.scenePickPoint, this._pickPoint = e65.scenePickPoint ?? this._pickPoint, this._sphere = e65.sphere;
    else {
      let r63;
      u12(this.startCamera, t68, this._tmpRay), z2(this._tmpRay.direction, this._tmpRay.direction), null != e65.scenePickPoint && (e7(this._tmpRayDirPick, this.startCamera.eye, e65.scenePickPoint), r63 = s7(this._tmpRayDirPick));
      const s69 = Math.abs(this.view.camera.position.z);
      this.view.renderCoordsHelper.worldUpAtPosition(this.startCamera.eye, E27);
      let a67 = i3(Math.min(Q7, 1 / Math.abs(P(E27, this._tmpRay.direction))) * s69, X6[0], X6[1]);
      const n77 = this.view._stage.renderView.getMinimalDepthForArea(null, t68[0], t68[1], this.view.state.camera, Y6);
      a67 = null != n77 ? n77 : a67, a67 = null != r63 ? Math.min(a67, r63) : a67, this._hasPickPoint = true, g2(this._tmpRay.direction, this._tmpRay.direction, a67), u2(this._pickPoint, this._tmpRay.origin, this._tmpRay.direction);
    }
    this._constraintOptions.interactionStartCamera = this.startCamera;
  }
  update(t68) {
    if (this.active) {
      if (this.currentCamera.eye = this.startCamera.eye, this.currentCamera.center = this.startCamera.center, this.currentCamera.up = this.startCamera.up, this._navMode === gt.Horizontal) {
        e7(this._tmpRayDir, this.currentCamera.center, this.currentCamera.eye);
        const i60 = s7(this._tmpRayDir);
        it2(this.currentCamera, t68, this._tmpP0);
        const r62 = 12 * (this._normalizedAnchorPoint[1] - this._tmpP0[1]);
        let e65 = i60 * 2 ** r62;
        const s69 = this.view.state.constraints.minimumPoiDistance;
        if (r62 < 0 && e65 < s69 && (e65 = s69), Math.abs(i60 - e65) < 1e-6)
          return;
        if (this._hasPickPoint && e65 < i60) {
          const t69 = 1 - (1 - e65 / i60) * (1 - this._sphere[3] / s7(this.currentCamera.center));
          this.currentCamera.center = g2(B12, this.currentCamera.center, t69);
        }
        g2(this._tmpRayDir, this._tmpRayDir, -e65 / i60), this.currentCamera.eye = u2(B12, this.currentCamera.center, this._tmpRayDir), this._constraintOptions.interactionFactor = T15(m5(this.dragBeginPoint, t68)), E21(this.view, this.currentCamera, this._constraintOptions), this._hasPickPoint && (It(this._sphere, this.currentCamera, this.dragBeginPoint, this._targetOnSphere), k14(this._pickPoint, this._targetOnSphere, this._panAxisAngle), ct2(this.currentCamera, this._sphere, this._panAxisAngle));
      } else {
        const i60 = s7(this._tmpRay.direction);
        it2(this.currentCamera, t68, this._tmpP0);
        const r62 = 12 * (this._normalizedAnchorPoint[1] - this._tmpP0[1]);
        let e65 = i60 * 2 ** r62;
        const s69 = this.view.state.constraints.minimumPoiDistance;
        if (r62 < 0 && e65 < s69 && (e65 = s69), Math.abs(i60 - e65) < 1e-6)
          return;
        g2(this._tmpRayDir, this._tmpRay.direction, 1 - e65 / i60), this.currentCamera.eye = u2(B12, this.currentCamera.eye, this._tmpRayDir), this.currentCamera.center = u2(B12, this.currentCamera.center, this._tmpRayDir);
      }
      o41(this.view, this.currentCamera), this.commitCamera();
    }
  }
  end() {
    this.active && this.finishController();
  }
};
L17 = e([a4("esri.views.3d.state.controllers.global.ZoomController")], L17);
var B12 = n7();
var E27 = n7();

// node_modules/@arcgis/core/views/3d/state/controllers/local/ZoomController.js
var A25 = class extends n50 {
  constructor() {
    super(...arguments), this._tmpP = n7(), this._tmpDir = n7(), this._tmpN = n7(), this._tmpP0 = n15(), this._tmpPoi = n7(), this._tmpRayDir = n7(), this.dragBeginPoint = i8(), this._normalizedAnchorPoint = n15(), this._constraintOptions = { selection: L12.ALL, interactionType: O13.ZOOM, interactionFactor: 0, interactionStartCamera: null, interactionDirection: n7(), tiltMode: O14.TUMBLE }, this._plane = h9();
  }
  get _intersectionHelper() {
    return this.view.sceneIntersectionHelper;
  }
  begin(t68) {
    if (!this.active)
      return;
    a12(this.dragBeginPoint, t68), it2(this.startCamera, t68, this._normalizedAnchorPoint);
    const s69 = this._intersectionHelper.intersectScreenFreePointFallback(t68, this._tmpP, 0 === this.view.map.ground.opacity ? at2 : {});
    e7(this._tmpDir, this._tmpP, this.startCamera.eye);
    const r62 = s7(this._tmpDir);
    z2(this._tmpDir, this._tmpDir);
    const a67 = Math.abs(this.view.camera.position.z);
    let n77 = i3(Math.min(Q7, 1 / Math.abs(P(z16, this._tmpDir))) * a67, X6[0], X6[1]);
    const u51 = this.view._stage.renderView.getMinimalDepthForArea(this.view.voxelWasm, t68[0], t68[1], this.view.state.camera, Y6);
    n77 = null != u51 ? u51 : n77, n77 = s69 ? Math.min(n77, r62) : n77, g2(this._tmpDir, this._tmpDir, n77), u2(this._tmpP, this.startCamera.eye, this._tmpDir), e7(this._tmpN, this.startCamera.eye, this.startCamera.center), z2(this._tmpN, this._tmpN), this._tmpN[1] < 0 && j2(this._tmpN, this._tmpN), T6(this._tmpP, this._tmpN, this._plane), this._constraintOptions.interactionStartCamera = this.startCamera;
  }
  update(t68) {
    if (!this.active)
      return;
    lt2(this._plane, this.currentCamera, this.dragBeginPoint, this._tmpPoi) || r5(this._tmpPoi, this.currentCamera.center), it2(this.currentCamera, t68, this._tmpP0);
    let i60 = 4 * (this._tmpP0[1] - this._normalizedAnchorPoint[1]);
    a12(this._normalizedAnchorPoint, this._tmpP0), e7(this._tmpRayDir, this._tmpPoi, this.currentCamera.eye);
    const s69 = s7(this._tmpRayDir);
    let r62 = s69 * (1 - i60);
    this._constraintOptions.interactionDirection && (r5(this._constraintOptions.interactionDirection, this._tmpRayDir), g2(this._constraintOptions.interactionDirection, this._constraintOptions.interactionDirection, Math.sign(i60) / s69));
    const n77 = this.view.state.constraints.minimumPoiDistance;
    i60 >= 0 && r62 < n77 && (r62 = n77, i60 = -(r62 - s69) / s69), Math.abs(s69 - r62) < 1e-6 || (g2(this._tmpRayDir, this._tmpRayDir, i60), this.currentCamera.eye = u2(T20, this.currentCamera.eye, this._tmpRayDir), A2(T20, this.currentCamera.center, this._tmpPoi, i60), this._tmpPoi[2] > this.startCamera.center[2] ? T20[2] = Math.max(this.startCamera.center[2], T20[2]) : T20[2] = Math.min(this.startCamera.center[2], T20[2]), this.currentCamera.center = T20, this._constraintOptions.interactionFactor = T15(m5(this.dragBeginPoint, t68)), E21(this.view, this.currentCamera, this._constraintOptions), this.commitCamera());
  }
  end() {
    this.active && this.finishController();
  }
};
A25 = e([a4("esri.views.3d.state.controllers.local.ZoomController")], A25);
var T20 = n7();
var z16 = r4(0, 0, 1);

// node_modules/@arcgis/core/views/3d/input/handlers/DragZoom.js
var s53 = class extends i18 {
  constructor(r62, t68, e65) {
    super(true), this._view = r62, this.pointerAction = t68, this.registerIncoming("drag", e65, (r63) => this._handleDrag(r63));
  }
  _handleDrag(o61) {
    const s69 = o61.data;
    if (s69.pointers.size > 1)
      return;
    if (!r36(o61.data, this.pointerAction))
      return;
    const i60 = i8(s69.center.x, s69.center.y);
    switch (s69.action) {
      case "start":
        this._cameraController && (this._cameraController.end(), this._cameraController = null), this._view.state.isGlobal ? this._cameraController = new L17({ view: this._view }) : this._cameraController = new A25({ view: this._view }), this._view.state.switchCameraController(this._cameraController), this._cameraController.begin(i60);
        break;
      case "update":
        this._cameraController && this._cameraController.update(i60);
        break;
      case "end":
        this._cameraController && (this._cameraController.end(), this._cameraController = null);
    }
    o61.stopPropagation();
  }
};

// node_modules/@arcgis/core/views/3d/state/controllers/GamepadKeyboardController.js
var q13 = class extends n50 {
  constructor(t68) {
    super(t68), this._filteredSurfaceElevation = 0, this._transformation = { translation: [0, 0, 0], heading: 0, tilt: 0, zoom: 0 }, this._keysButtonState = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], this._tmpCamera = new $(), this._headingStart = 0, this._constraintOptions = { selection: L12.ALL, interactionType: O13.NONE, interactionStartCamera: new $(), interactionFactor: 0, interactionDirection: null, tiltMode: O14.LOOK_AROUND };
  }
  handleEventGamepad(t68) {
    const e65 = i27(t68, this.view.navigation.gamepad, this._transformation);
    ("end" === t68.action || s34(e65)) && this.finishController();
  }
  activateDirection(t68) {
    this._keysButtonState[t68] = 1, o35(this._keysButtonState, this._transformation);
  }
  deactivateDirection(t68) {
    this._keysButtonState[t68] = 0;
    const e65 = o35(this._keysButtonState, this._transformation);
    s34(e65) && this.finishController();
  }
  onControllerStart(t68) {
    this._filteredSurfaceElevation = this.view.pointsOfInterest.cameraOnSurface.location.z, this._headingStart = this.view.camera.heading, super.onControllerStart(t68);
  }
  _updateFilteredSurfaceElevation(t68) {
    const e65 = this.view.pointsOfInterest.cameraOnSurface.location.z, i60 = 1;
    this._filteredSurfaceElevation += i60 * (e65 - this._filteredSurfaceElevation) * t68;
  }
  stepController(t68, e65) {
    var _a;
    this._updateStartHeading(), this._updateFilteredSurfaceElevation(t68), this.currentCamera.copyViewFrom(e65), this._updateCameraCenter(), (_a = this._constraintOptions.interactionStartCamera) == null ? void 0 : _a.copyFrom(this.currentCamera), this._calculateControlTransformation(t68, this.currentCamera, it3), this._applyDisabledMovementTypes(it3), this._applyPan(it3.pan), this._applyRotate(it3.rotate), this._applyZoom(it3.zoom), this._applyAscend(it3.ascend), this._constraintOptions.interactionType = O13.NONE, this._constraintOptions.selection = L12.COLLISION, E21(this.view, this.currentCamera, this._constraintOptions), super.stepController(t68, e65);
  }
  _updateStartHeading() {
    0 !== this._transformation.heading && (this._headingStart = this.view.camera.heading);
  }
  _applyRotate(t68) {
    if (!t68.enabled)
      return;
    const e65 = this.currentCamera;
    e7(at3, e65.center, e65.eye), O(at3, at3, t68.matrix), e65.center = u2(at3, at3, e65.eye), e65.up = O(at3, e65.up, t68.matrix), this._constraintOptions.interactionType = O13.LOOK_AROUND, this._constraintOptions.selection = L12.ALL_EXCEPT_COLLISION, E21(this.view, e65, this._constraintOptions);
  }
  _applyPan(t68, e65 = this.currentCamera) {
    if (!t68.enabled)
      return;
    e65.eye = O(at3, e65.eye, t68.matrix), e65.center = O(at3, e65.center, t68.matrix);
    this.view.state.isGlobal && (e65.up = O(at3, e65.up, t68.matrix)), this._constraintOptions.interactionType = O13.PAN, this._constraintOptions.selection = L12.ALL, E21(this.view, e65, this._constraintOptions);
  }
  _applyZoom(t68) {
    if (!t68)
      return;
    const e65 = this.currentCamera.viewForward;
    this.currentCamera.eye = u2(at3, this.currentCamera.eye, g2(c7.get(), e65, t68)), r5(rt3, e65), j2(rt3, rt3), this._constraintOptions.interactionDirection = rt3, this._constraintOptions.interactionType = O13.ZOOM, this._constraintOptions.selection = L12.ALL_EXCEPT_COLLISION, E21(this.view, this.currentCamera, this._constraintOptions), this._constraintOptions.interactionDirection = null;
  }
  _applyAscend(t68) {
    if (!t68)
      return;
    const e65 = this.view.renderCoordsHelper.worldUpAtPosition(this.currentCamera.eye, c7.get());
    this._constraintOptions.interactionDirection = r5(rt3, e65);
    if (this.view.state.isGlobal) {
      const e66 = s7(this.currentCamera.eye), i60 = (e66 + t68) / e66;
      this.currentCamera.eye = g2(at3, this.currentCamera.eye, i60), this.currentCamera.center = g2(at3, this.currentCamera.center, i60);
    } else {
      const i60 = g2(c7.get(), e65, t68);
      this.currentCamera.eye = u2(at3, this.currentCamera.eye, i60), this.currentCamera.center = u2(at3, this.currentCamera.center, i60);
    }
    this._updateCameraCenter(), this._constraintOptions.interactionType = O13.ASCEND, this._constraintOptions.selection = L12.COLLISION, E21(this.view, this.currentCamera, this._constraintOptions) && this._updateCameraCenter(), this._constraintOptions.selection = L12.ALL_EXCEPT_COLLISION, E21(this.view, this.currentCamera, this._constraintOptions), this._constraintOptions.interactionDirection = null;
  }
  _calculateControlTransformation(t68, e65, i60) {
    st4(i60);
    const a67 = this._computeVelocities(t68);
    this.view.state.isLocal ? this._calculateControlTransformationLocal(a67, e65, i60) : this._calculateControlTransformationGlobal(a67, e65, i60);
  }
  _updateCameraCenter() {
    const t68 = this.view.pointsOfInterest.centerOnSurfaceFrequent.estimatedSurfaceAltitude, e65 = this.view.renderCoordsHelper, i60 = this.currentCamera.ray;
    this.currentCamera.center = e65.intersectManifoldClosestSilhouette(i60, t68, at3);
  }
  _calculateControlTransformationLocal(t68, a67, r62) {
    const { viewRight: o61, viewForward: s69 } = a67, m44 = this._transformation, l63 = this.view.navigation.gamepad, p54 = o2(c7.get(), s69[0], s69[1], 0);
    z2(p54, p54);
    const h46 = m44.translation[0] * t68.pan;
    if (0 !== h46) {
      const t69 = g2(c7.get(), o61, h46);
      i7(r62.pan.matrix, r62.pan.matrix, t69), r62.pan.enabled = true;
    }
    switch (l63.mode) {
      case "pan": {
        const e65 = -m44.translation[1] * t68.pan;
        if (0 !== e65) {
          const t69 = g2(c7.get(), p54, e65);
          i7(r62.pan.matrix, r62.pan.matrix, t69), r62.pan.enabled = true;
        }
        r62.zoom = m44.zoom * t68.zoom;
        break;
      }
      case "zoom":
        r62.zoom = (-m44.translation[1] + m44.zoom) * t68.zoom;
        break;
      default:
        n13(l63.mode);
    }
    const d52 = m44.translation[2] * t68.ascend;
    r62.ascend = d52;
    const _33 = -m44.heading * t68.rotate;
    0 !== _33 && (b2(r62.rotate.matrix, r62.rotate.matrix, _33, this.view.renderCoordsHelper.worldUpAtPosition(a67.eye, c7.get())), r62.rotate.enabled = true);
    const f49 = m44.tilt * t68.rotate, v37 = n46(this.view.renderCoordsHelper, a67.center, a67.eye), y32 = i3(v37 + f49, d27.min, d27.max) - v37;
    y32 && (b2(r62.rotate.matrix, r62.rotate.matrix, y32, o61), r62.rotate.enabled = true);
  }
  _calculateControlTransformationGlobal(t68, e65, i60) {
    const { eye: a67, viewRight: r62 } = e65, o61 = this._transformation, s69 = this.view.navigation.gamepad, n77 = _(c7.get(), r62, a67);
    z2(n77, n77), j2(n77, n77), Bt(this.startCamera, e65, o61, t68, this.view.camera.heading, this._headingStart, this.view.camera.tilt, i60, s69), this._tmpCamera.copyFrom(this.currentCamera), this._applyPan(it3.pan, this._tmpCamera);
    const m44 = this.view.pointsOfInterest.centerOnSurfaceFrequent.estimatedSurfaceAltitude, l63 = o61.translation[2] * t68.ascend;
    i60.ascend = l63;
    const p54 = -o61.heading * t68.rotate;
    0 !== p54 && (b2(i60.rotate.matrix, i60.rotate.matrix, p54, this._tmpCamera.eye), i60.rotate.enabled = true);
    const h46 = o61.tilt * t68.rotate, d52 = this._clampTiltDeltaGlobalToValidRange(h46, e65.ray, m44);
    0 !== d52 && (b2(i60.rotate.matrix, i60.rotate.matrix, d52, this._tmpCamera.viewRight), i60.rotate.enabled = true), i60.zoom += o61.zoom * t68.zoom;
  }
  _clampTiltDeltaGlobalToValidRange(t68, e65, a67) {
    const r62 = A3(this.view.spatialReference), o61 = Mt(d27.min, e65.origin, a67, r62);
    let s69 = 0, n77 = 0;
    const c58 = c7.get();
    if (this.view.renderCoordsHelper.intersectManifold(e65, a67, c58)) {
      const t69 = n46(this.view.renderCoordsHelper, c58, e65.origin);
      s69 = Mt(t69, e65.origin, a67, r62), n77 = Mt(d27.max, e65.origin, a67, r62);
    } else {
      Y2(T5(tt, a67 + r62.radius), e65, c58);
      const t69 = Math.PI + a15(e65.direction, c58);
      s69 = yt(t69, e65.origin, a67, r62), n77 = yt(d27.max, e65.origin, a67, r62);
    }
    return i3(s69 + t68, o61, n77) - s69;
  }
  _getPointAbsoluteSurfaceElevation(t68, e65, i60) {
    const { renderCoordsHelper: a67 } = this.view, r62 = a67.getAltitude(t68), o61 = e65 + Math.abs(r62 - e65);
    return a67.setAltitude(i60, o61, t68), o61;
  }
  _clampedDistanceToSurface(t68, e65) {
    const { renderCoordsHelper: i60 } = this.view, { camera: a67 } = this.view.state, { direction: r62 } = W9(this.view, e65, 0, Q10, ot2), o61 = i60.intersectManifoldClosestSilhouette(p8(e65, r62), t68, c7.get()), s69 = x2(e65, o61), n77 = i60.intersectManifoldClosestSilhouette(p8(e65, H(c7.get(), e65, a67.center)), t68, c7.get()), c58 = x2(e65, n77);
    return Math.min(s69, c58);
  }
  _computeHeadingRotateRadius(t68) {
    const { renderCoordsHelper: e65, state: i60 } = this.view, { camera: r62, isGlobal: o61 } = i60, s69 = e65.intersectManifoldClosestSilhouette(r62.ray, this._filteredSurfaceElevation, c7.get());
    if (o61) {
      const e66 = e7(c7.get(), t68, s69), i61 = s7(e66);
      g2(e66, e66, 1 / i61);
      const r63 = z2(c7.get(), t68), o62 = l4(P(r63, e66));
      return i61 * Math.sin(Math.min(W10, o62));
    }
    {
      const i61 = r5(c7.get(), t68);
      return e65.setAltitude(i61, this._filteredSurfaceElevation), x2(s69, i61);
    }
  }
  _minimumAscendVelocity() {
    return this.view.state.constraints.collision.enabled ? 0 : $6;
  }
  _computeVelocities(t68) {
    const e65 = this._filteredSurfaceElevation, a67 = e65 + A3(this.view.spatialReference).radius, { camera: r62, isGlobal: o61 } = this.view.state, s69 = c7.get(), n77 = this._getPointAbsoluteSurfaceElevation(r62.eye, e65, s69), c58 = this._clampedDistanceToSurface(e65, s69), m44 = r62.width / 2, l63 = Y9 * r62.width, p54 = Y9 * r62.width, h46 = c58 * Math.tan(0.5 * r62.fovX) / m44, d52 = h46 / a67, u51 = h46 / this._computeHeadingRotateRadius(s69), _33 = n77 - e65;
    return { pan: (o61 ? d52 : h46) * l63 * t68, ascend: Math.max(this._minimumAscendVelocity() * t68, 2 ** (l63 * t68 / m44) * _33 - _33), zoom: 2 ** (l63 * t68 / m44) * c58 - c58, rotate: i3(u51 * p54, tt4, et3) * t68 };
  }
  _applyDisabledMovementTypes(t68) {
    null == this.disableMovements || void 0 !== this.disableMovements.mode && this.view.state.viewingMode !== this.disableMovements.mode || (t68.zoom = this.disableMovements.zoom ? 0 : t68.zoom, t68.ascend = this.disableMovements.ascend ? 0 : t68.ascend, t68.pan.enabled = !this.disableMovements.pan, this.disableMovements.pan && r9(t68.pan.matrix), t68.rotate.enabled = !this.disableMovements.rotate, this.disableMovements.rotate && r9(t68.rotate.matrix));
  }
  static activatesFor(t68, e65) {
    const i60 = i27(e65, t68.navigation.gamepad, J10);
    return !("end" === e65.action || s34(i60));
  }
};
e([y2({ constructOnly: true })], q13.prototype, "gamepadDevice", void 0), e([y2({ constructOnly: true })], q13.prototype, "disableMovements", void 0), q13 = e([a4("esri.views.3d.state.controllers.GamepadKeyboardController")], q13);
var J10 = { translation: [0, 0, 0], heading: 0, tilt: 0, zoom: 0 };
var Q10 = 80;
var W10 = M(Q10);
var Y9 = 0.75;
var $6 = 5;
var tt4 = M(30);
var et3 = M(80);
var it3 = { zoom: 0, ascend: 0, pan: { enabled: false, matrix: e15() }, rotate: { enabled: false, matrix: e15() } };
var at3 = n7();
var rt3 = n7();
var ot2 = h32();
function st4(t68) {
  t68.zoom = 0, t68.ascend = 0, t68.pan.enabled = false, r9(t68.pan.matrix), t68.rotate.enabled = false, r9(t68.rotate.matrix);
}

// node_modules/@arcgis/core/views/3d/input/handlers/GamepadNavigation.js
var l39 = class extends i18 {
  constructor(e65) {
    super(true), this._view = e65, this._watchHandles = new t3(), this._handle = this.registerIncoming("gamepad", (a67) => this._handleEventGamepad(a67)), this._handle.pause();
  }
  onInstall(a67) {
    super.onInstall(a67), this._watchHandles.add([l6(() => this._view.navigation.gamepad.enabled, (a68) => {
      a68 ? this._handle.resume() : (this._handle.pause(), this._cameraControllerGamepad && (this._cameraControllerGamepad.finishController(), this._cameraControllerGamepad = null));
    }, h3), l6(() => this._view.navigation.gamepad.device, (a68) => {
      this._cameraControllerGamepad && a68 && this._cameraControllerGamepad.gamepadDevice !== a68 && (this._cameraControllerGamepad.finishController(), this._cameraControllerGamepad = null);
    })]);
  }
  onUninstall() {
    this._watchHandles.removeAll(), super.onUninstall();
  }
  _handleEventGamepad(a67) {
    const e65 = this._view.navigation.gamepad.device;
    if (e65 && a67.data.device !== e65)
      return;
    const t68 = this._cameraControllerGamepad && this._cameraControllerGamepad.active;
    if (t68 || q13.activatesFor(this._view, a67.data)) {
      if (!t68) {
        const e66 = new q13({ view: this._view, gamepadDevice: a67.data.device });
        this._view.state.switchCameraController(e66) && (this._cameraControllerGamepad = e66);
      }
      this._cameraControllerGamepad && this._cameraControllerGamepad.active && this._cameraControllerGamepad.gamepadDevice === a67.data.device && this._cameraControllerGamepad.handleEventGamepad(a67.data);
    }
  }
};

// node_modules/@arcgis/core/views/3d/input/handlers/KeyboardNavigation.js
var a45;
!function(e65) {
  e65[e65.LEFT = 0] = "LEFT", e65[e65.RIGHT = 1] = "RIGHT", e65[e65.FORWARD = 2] = "FORWARD", e65[e65.BACKWARD = 3] = "BACKWARD", e65[e65.UP = 4] = "UP", e65[e65.DOWN = 5] = "DOWN", e65[e65.HEADINGLEFT = 6] = "HEADINGLEFT", e65[e65.HEADINGRIGHT = 7] = "HEADINGRIGHT", e65[e65.TILTUP = 8] = "TILTUP", e65[e65.TILTDOWN = 9] = "TILTDOWN", e65[e65.ZOOMIN = 10] = "ZOOMIN", e65[e65.ZOOMOUT = 11] = "ZOOMOUT";
}(a45 || (a45 = {}));
var o45 = class extends i18 {
  constructor(t68, r62) {
    super(true), this._view = t68, this._disableMovements = { pan: true, zoom: false, ascend: true, rotate: false, mode: l13.Local }, this._keyToNumber = { [r62.left]: a45.LEFT, [r62.right]: a45.RIGHT, [r62.forward]: a45.FORWARD, [r62.backward]: a45.BACKWARD, [r62.up]: a45.UP, [r62.down]: a45.DOWN, [r62.headingLeft]: a45.HEADINGLEFT, [r62.headingRight]: a45.HEADINGRIGHT, [r62.tiltUp]: a45.TILTUP, [r62.tiltDown]: a45.TILTDOWN, [r62.zoomIn]: a45.ZOOMIN, [r62.zoomOut]: a45.ZOOMOUT }, this.registerIncoming("key-down", null, (e65) => this._handleKeyDown(e65)), this.registerIncoming("key-up", null, (e65) => this._handleKeyUp(e65)), this.registerIncoming("blur", null, () => this._handleBlur());
  }
  _handleKeyDown(e65) {
    if (e65.data.native.ctrlKey || e65.data.native.metaKey)
      return;
    const r62 = this._keyToNumber[e65.data.key];
    null != r62 && (this._cameraControllerKeyboard && this._cameraControllerKeyboard.active || (this._cameraControllerKeyboard = new q13({ view: this._view, disableMovements: this._disableMovements }), this._view.state.switchCameraController(this._cameraControllerKeyboard)), this._cameraControllerKeyboard.active && (this._cameraControllerKeyboard.activateDirection(r62), e65.stopPropagation()));
  }
  _handleBlur() {
    this._cameraControllerKeyboard && this._cameraControllerKeyboard.active && (this._cameraControllerKeyboard.finishController(), this._cameraControllerKeyboard = null);
  }
  _handleKeyUp(e65) {
    if (e65.data.native.ctrlKey || e65.data.native.metaKey)
      return;
    const t68 = this._keyToNumber[e65.data.key];
    null != t68 && this._cameraControllerKeyboard && this._cameraControllerKeyboard.active && (this._cameraControllerKeyboard.deactivateDirection(t68), e65.stopPropagation());
  }
};

// node_modules/@arcgis/core/views/3d/input/handlers/MouseWheelZoom.js
var i48 = class extends i18 {
  constructor(e65, t68) {
    super(true), this._view = e65, this.registerIncoming("mouse-wheel", t68, (e66) => this._handleMouseWheel(e66));
  }
  _handleMouseWheel(r62) {
    if (!this._view.navigation.mouseWheelZoomEnabled)
      return;
    const i60 = r62.data;
    this._cameraController && this._cameraController.active || (this._cameraController = this._view.state.isGlobal ? new A22({ view: this._view, mode: "interaction" }) : new S14({ view: this._view, mode: "interaction" }), this._view.state.switchCameraController(this._cameraController)), this._cameraController.zoomStep(-1 / 60 * i60.deltaY, i8(i60.x, i60.y)), r62.preventDefault(), r62.stopPropagation();
  }
};

// node_modules/@arcgis/core/views/3d/input/util.js
var t49 = class {
  constructor(t68) {
    this._gain = t68;
  }
  reset(t68) {
    this._value = t68;
  }
  set gain(t68) {
    this._gain = t68;
  }
  get value() {
    return void 0 === this._value ? 0 : this._value;
  }
  update(t68) {
    void 0 === this._value ? this._value = t68 : this._value = this._gain * t68 + (1 - this._gain) * this._value;
  }
};

// node_modules/@arcgis/core/views/3d/state/controllers/momentum/MomentumController.js
var c40 = class extends a43 {
  constructor() {
    super(...arguments), this._beginCamera = new $(), this._elapsedTimeSec = 0, this.constraintOptions = { selection: L12.ALL, interactionType: O13.PAN, interactionFactor: 0, interactionStartCamera: new $(), interactionDirection: null, tiltMode: O14.TUMBLE };
  }
  initialize() {
    this.constraintOptions.interactionType = this.interactionType, this.viewAnimation = new a25();
  }
  get steppingFinished() {
    return this.momentum.isFinished(this._elapsedTimeSec);
  }
  onControllerStart(t68) {
    this._beginCamera.copyFrom(t68), this.constraintOptions.interactionStartCamera = this._beginCamera, super.onControllerStart(t68);
  }
  stepController(t68, i60) {
    i60.copyViewFrom(this._beginCamera), this._elapsedTimeSec += t68, this.momentumStep(this._elapsedTimeSec, i60), E21(this.view, i60, this.constraintOptions);
  }
};
c40 = e([a4("esri.views.3d.state.controllers.momentum.MomentumController")], c40);

// node_modules/@arcgis/core/views/3d/state/controllers/momentum/PanPlanarMomentumController.js
var i49 = class extends c40 {
  constructor(t68) {
    super(t68), this.interactionType = O13.PAN, this._tmpPan = n7();
  }
  momentumStep(t68, o61) {
    const r62 = this.momentum.value(t68);
    g2(this._tmpPan, this.momentum.direction, r62), o61.eye = e7(p33, o61.eye, this._tmpPan), o61.center = e7(p33, o61.center, this._tmpPan), this.constraintOptions.interactionDirection = this._tmpPan;
  }
};
e([y2({ constructOnly: true })], i49.prototype, "momentum", void 0), i49 = e([a4("esri.views.3d.state.controllers.momentum.PanPlanarMomentumController")], i49);
var p33 = n7();

// node_modules/@arcgis/core/views/3d/state/controllers/momentum/PanSphericalMomentumController.js
var p34 = n7();
var u33 = n7();
var l40 = class extends c40 {
  constructor(o61) {
    super(o61), this.interactionType = O13.PAN;
  }
  momentumStep(o61, t68) {
    const s69 = this.momentum.value1(o61), i60 = this.momentum.value2(o61);
    r5(u33, t68.eye), z2(u33, u33), _(this.momentum.axis2, u33, this.momentum.axis1), Ct(t68, p34, this.momentum.axis1, s69, this.momentum.axis2, i60);
  }
};
e([y2({ constructOnly: true })], l40.prototype, "momentum", void 0), l40 = e([a4("esri.views.3d.state.controllers.momentum.PanSphericalMomentumController")], l40);

// node_modules/@arcgis/core/views/3d/state/controllers/momentum/RotationMomentumController.js
var n51 = class extends c40 {
  set center(t68) {
    this._set("center", t5(t68));
  }
  set axis(t68) {
    this._set("axis", t5(t68));
  }
  constructor(t68) {
    super(t68), this.interactionType = O13.TUMBLE;
  }
  momentumStep(t68, o61) {
    const r62 = this.momentum.value(t68);
    ct2(o61, this.center, m27(this.axis, r62));
  }
};
e([y2({ constructOnly: true })], n51.prototype, "momentum", void 0), e([y2({ constructOnly: true })], n51.prototype, "center", null), e([y2({ constructOnly: true })], n51.prototype, "axis", null), n51 = e([a4("esri.views.3d.state.controllers.momentum.MomentumController")], n51);

// node_modules/@arcgis/core/views/3d/state/controllers/momentum/ZoomPlanarMomentumController.js
var p35 = class extends c40 {
  set zoomCenter(t68) {
    this._set("zoomCenter", t5(t68));
  }
  constructor(t68) {
    super(t68), this.interactionType = O13.ZOOM, this.constraintOptions.interactionDirection = n7();
  }
  momentumStep(t68, o61) {
    const { interactionDirection: r62 } = this.constraintOptions;
    if (!r62)
      return;
    r5(r62, o61.eye);
    const n77 = this.momentum.valueDelta(0, t68);
    ut2(o61, this.zoomCenter, n77, this.view.state.constraints.minimumPoiDistance), H(r62, o61.eye, r62);
  }
};
e([y2({ constructOnly: true })], p35.prototype, "momentum", void 0), e([y2({ constructOnly: true })], p35.prototype, "zoomCenter", null), p35 = e([a4("esri.views.3d.state.controllers.momentum.ZoomPlanarMomentumController")], p35);

// node_modules/@arcgis/core/views/3d/state/controllers/momentum/ZoomSphericalMomentumController.js
var j16 = class extends c40 {
  set screenCenter(t68) {
    this._set("screenCenter", i8(t68[0], t68[1]));
  }
  set sceneCenter(t68) {
    this._set("sceneCenter", t5(t68));
  }
  constructor(t68) {
    super(t68), this.interactionType = O13.ZOOM, this.radius = 0, this._tmpSceneCenter = n7(), this._tmpZoomAxisAngle = i47(), this._sphere = _4();
  }
  initialize() {
    this._sphere[3] = this.radius;
  }
  momentumStep(t68, e65) {
    const s69 = this.momentum.valueDelta(0, t68);
    pt(this._sphere, e65, s69), this.constraintOptions.interactionType = O13.ZOOM, E21(this.view, e65, this.constraintOptions), It(this._sphere, e65, this.screenCenter, this._tmpSceneCenter), k14(this.sceneCenter, this._tmpSceneCenter, this._tmpZoomAxisAngle), ct2(e65, this._sphere, this._tmpZoomAxisAngle), this.constraintOptions.interactionType = O13.PAN;
  }
};
e([y2({ constructOnly: true })], j16.prototype, "momentum", void 0), e([y2({ constructOnly: true })], j16.prototype, "screenCenter", null), e([y2({ constructOnly: true })], j16.prototype, "sceneCenter", null), e([y2({ constructOnly: true })], j16.prototype, "radius", void 0), j16 = e([a4("esri.views.3d.state.controllers.momentum.ZoomSphericalMomentumController")], j16);

// node_modules/@arcgis/core/views/navigation/FilteredValue.js
var e39 = class {
  constructor(e65) {
    this._gain = e65;
  }
  update(e65) {
    void 0 !== this.filteredValue ? this.filteredValue = (1 - this._gain) * this.filteredValue + this._gain * e65 : this.filteredValue = e65;
  }
  reset() {
    this.filteredValue = void 0;
  }
  get hasFilteredValue() {
    return void 0 !== this.filteredValue;
  }
};

// node_modules/@arcgis/core/views/navigation/PanSphericalMomentumEstimator.js
var u34 = 1e-5;
var m30 = class extends t37 {
  constructor(t68, e65, i60, s69, a67, l63 = 0, n77) {
    super(t68, e65, i60), this._angularVelocity1 = s69, this.axis1 = a67, this.angularVelocity2 = l63, this.axis2 = n77;
  }
  value1(t68) {
    return super.valueFromInitialVelocity(this._angularVelocity1, t68);
  }
  value2(t68) {
    return super.valueFromInitialVelocity(this.angularVelocity2, t68);
  }
};
var c41 = class {
  constructor(e65 = 300, i60 = 12, s69 = 0.84) {
    this._minimumInitialVelocity = e65, this._stopVelocity = i60, this._friction = s69, this.enabled = true, this._tmpAxis1 = n7(), this._tmpAxis2 = n7(), this._tmpAngles = n15(), this._time = new t36(0.3), this._screen = [new t36(0.4), new t36(0.4)], this._angle1 = new e39(0.6), this._angle2 = new e39(0.6), this._axis1 = n7(), this._axis2 = n7(), this._lastScene = n7();
  }
  addMomentumDirectRotation(t68, a67, n77, h46, r62, _33) {
    if (this.enabled) {
      if (this._time.hasLastValue()) {
        if (this._time.computeDelta(n77) < 0.01)
          return;
        let t69 = Et(this._lastScene, a67, this._tmpAxis2, h46, r62, _33);
        this._angle2.update(0), v3(this._tmpAxis2) < u34 ? t69 = 0 : z2(this._axis1, this._tmpAxis2), this._angle1.update(t69), r5(this._lastScene, a67);
      }
      this._screen[0].update(t68[0]), this._screen[1].update(t68[1]), this._time.update(n77);
    }
  }
  addMomentumPreserveHeading(t68, a67, l63, h46, r62, _33, m44) {
    if (this.enabled) {
      if (this._time.hasLastValue()) {
        if (this._time.computeDelta(l63) < 0.01)
          return;
        Gt(this._lastScene, a67, this._tmpAxis2, this._tmpAxis1, this._tmpAngles, h46, r62, _33, m44, false), v3(this._tmpAxis2) < u34 ? (this._angle1.update(0), this._angle2.update(0)) : (this._angle1.update(this._tmpAngles[1]), this._angle2.update(this._tmpAngles[0]), z2(this._axis1, this._tmpAxis1), z2(this._axis2, this._tmpAxis2)), r5(this._lastScene, a67);
      }
      this._screen[0].update(t68[0]), this._screen[1].update(t68[1]), this._time.update(l63);
    }
  }
  reset() {
    this._screen[0].reset(), this._screen[1].reset(), this._angle1.reset(), this._angle2.reset(), this._time.reset();
  }
  evaluateMomentum() {
    if (!this.enabled || !this._screen[0].hasFilteredDelta())
      return null;
    const t68 = this._screen[0].filteredDelta, e65 = this._screen[1].filteredDelta, i60 = null == t68 || null == e65 ? null : Math.sqrt(t68 * t68 + e65 * e65), s69 = this._time.filteredDelta, a67 = null == i60 || null == s69 ? 0 : i60 / s69;
    return Math.abs(a67) < this._minimumInitialVelocity ? null : this.createMomentum(a67, this._stopVelocity, this._friction);
  }
  createMomentum(t68, e65, i60) {
    const s69 = this._time.filteredDelta, a67 = this._angle1.filteredValue, l63 = this._angle2.filteredValue, n77 = null == s69 || null == l63 ? 0 : l63 / s69;
    return new m30(t68, e65, i60, null == s69 || null == a67 ? 0 : a67 / s69, this._axis1, n77, this._axis2);
  }
};

// node_modules/@arcgis/core/views/3d/state/controllers/global/PinchAndPanController.js
var ot3 = class extends n50 {
  constructor() {
    super(...arguments), this._smoothRotation = new t49(0.05), this._rotationAxis = n7(), this._beginAngle = 0, this._beginHeading = 0, this._panningPlane = h9(), this._beginRadius = 0, this._smoothScaling = new t49(0.05), this._zoomCenterScreen = i8(), this._zoomMomentumEstimator = new s35(), this._rotationMomentumEstimator = new a31(), this._panSphericalMomentumEstimator = new c41(), this._panPlanarMomentumEstimator = new l21(), this._adjustedSphere = _4(), this._tmp3d = n7(), this._tmpScreenPointArray = i8(), this._beginScreenPoint = i8(), this._beginScenePoint = n7(), this._screenPickPoint = i8(), this._scenePickPoint = n7(), this._mode = gt.Horizontal, this._sphere = _4(), this._pointerCount = 0, this._tmpInteractionDirection = n7(), this._constraintOptions = { selection: L12.ALL, interactionType: O13.NONE, interactionFactor: 0, interactionStartCamera: new $(), interactionDirection: null, tiltMode: O14.TUMBLE };
  }
  get _intersectionHelper() {
    return this.view.sceneIntersectionHelper;
  }
  begin(t68) {
    var _a;
    if (!this.active)
      return;
    const n77 = this.view.navigation.momentumEnabled;
    this._zoomMomentumEstimator.enabled = n77, this._rotationMomentumEstimator.enabled = n77, this._panPlanarMomentumEstimator.enabled = n77, this._panSphericalMomentumEstimator.enabled = n77, this._beginHeading = -r7.normalize(M(this.view.camera.heading)), this._beginRadius = t68.radius, this._pointerCount = t68.pointers.size, this._beginAngle = t68.angle, this._smoothRotation.reset(), d6(t68.center, this._screenPickPoint), a12(this._beginScreenPoint, this._screenPickPoint);
    const o61 = A3(this.view.spatialReference), r62 = jt(this._intersectionHelper, this.startCamera, this._screenPickPoint, o61, N10.Silhouette, 0 === this.view.map.ground.opacity ? at2 : {});
    null != r62.scenePickPoint && (this._scenePickPoint = r62.scenePickPoint, this._sphere = r62.sphere, r5(this._beginScenePoint, this._scenePickPoint), this._mode = zt(this.startCamera, this._screenPickPoint, o61), this._mode === gt.Vertical && this._preparePlanarPanMode(t68, r62.hasGeometryIntersection), (_a = this._constraintOptions.interactionStartCamera) == null ? void 0 : _a.copyFrom(this.startCamera));
  }
  update(t68) {
    if (!this.active)
      return;
    this.currentCamera.copyFrom(this.startCamera);
    const i60 = t68.pointers.size > 1;
    this._mode === gt.Horizontal ? (i60 && this._zoomSpherical(t68), this._panningSpherical(t68), i60 && this._rotateSpherical(t68)) : (i60 && this._zoomPlanar(t68), this._panningPlanar(t68), i60 && this._rotatePlanar(t68)), this.commitCamera();
  }
  end(t68) {
    t68.pointers.size === this._pointerCount && this.update(t68), this.finishController();
    const i60 = this._zoomMomentumEstimator.evaluateMomentum();
    if (i60)
      return this._mode === gt.Horizontal ? new j16({ view: this.view, momentum: i60, screenCenter: this._zoomCenterScreen, sceneCenter: this._beginScenePoint, radius: this._sphere[3] }) : new p35({ view: this.view, momentum: i60, zoomCenter: this._beginScenePoint });
    const e65 = this._rotationMomentumEstimator.evaluateMomentum();
    if (e65)
      return new n51({ view: this.view, momentum: e65, center: this._sphere, axis: this._rotationAxis });
    if (this._mode === gt.Horizontal) {
      const t69 = this._panSphericalMomentumEstimator.evaluateMomentum();
      if (t69)
        return new l40({ view: this.view, momentum: t69 });
    } else {
      const t69 = this._panPlanarMomentumEstimator.evaluateMomentum();
      if (t69)
        return new i49({ view: this.view, momentum: t69 });
    }
    return null;
  }
  _preparePlanarPanMode(t68, i60) {
    const e65 = j2(this._tmp3d, this.startCamera.viewForward);
    T6(this._scenePickPoint, e65, this._panningPlane);
    const r62 = i8(this._screenPickPoint[0], 0), a67 = n7(), m44 = s7(this.startCamera.eye);
    this._adjustedSphere[3] = m44 < this._sphere[3] ? m44 - 100 : this._sphere[3], It(this._adjustedSphere, this.startCamera, r62, a67);
    const v37 = x7();
    this.startCamera.projectToRenderScreen(a67, v37);
    const C26 = n7(), M22 = n7(), b26 = n7();
    e7(C26, this._scenePickPoint, this.currentCamera.eye);
    const f49 = s7(C26);
    z2(C26, C26);
    const j25 = tt3 * Math.max(Math.abs(this.view.camera.position.z), et2), E39 = this.view._stage.renderView.getMinimalDepthForArea(null, this._screenPickPoint[0], this._screenPickPoint[1], this.view.state.camera, Y6);
    let y32 = null != E39 ? E39 : j25;
    y32 = i60 ? Math.min(y32, f49) : y32, r5(b26, u2(M22, this.currentCamera.eye, g2(M22, C26, y32))), this._panningPlane[3] = -P(W(this._panningPlane), b26), this.startCamera.center = u2(M22, this.startCamera.eye, g2(M22, this.startCamera.viewForward, y32));
    const O26 = d6(t68.center, this._tmpScreenPointArray);
    mt(this._panningPlane, this.startCamera, O26, this._beginScenePoint);
  }
  _zoomSpherical(t68) {
    const i60 = this._beginRadius / t68.radius, e65 = 1875e-6 * Math.min(Math.max(t68.radius, 40), 120);
    this._smoothScaling.gain = e65, this._smoothScaling.update(i60), pt(this._sphere, this.currentCamera, this._smoothScaling.value), d6(t68.center, this._zoomCenterScreen), this._zoomMomentumEstimator.add(this._smoothScaling.value, 1e-3 * t68.timestamp), this._constraintOptions.interactionType = O13.ZOOM, this._constraintOptions.interactionFactor = T15(t68.radius - this._beginRadius), E21(this.view, this.currentCamera, this._constraintOptions);
  }
  _panningSpherical(t68) {
    const i60 = d6(t68.center, this._tmpScreenPointArray);
    It(this._sphere, this.currentCamera, i60, this._tmp3d), Ft(this._beginScenePoint, P(this.currentCamera.up, this._beginScenePoint), this._sphere[3], this._beginHeading, this.view.camera.tilt, this.startCamera) ? (Vt(this._sphere, this.currentCamera, this._beginScenePoint, this._tmp3d, this._beginHeading, this.view.camera.tilt, false), this._panSphericalMomentumEstimator.addMomentumPreserveHeading(i60, this._tmp3d, 1e-3 * t68.timestamp, this.startCamera, this._sphere, this._beginHeading, this.view.camera.tilt)) : (Rt(this._sphere, this.currentCamera, this._beginScenePoint, this._tmp3d, this.view.camera.tilt, false), this._panSphericalMomentumEstimator.addMomentumDirectRotation(i60, this._tmp3d, 1e-3 * t68.timestamp, this.startCamera, this._sphere[3], this.view.camera.tilt)), this._constraintOptions.interactionType = O13.PAN, this._constraintOptions.interactionFactor = T15(m5(this._screenPickPoint, i60)), E21(this.view, this.currentCamera, this._constraintOptions);
  }
  _rotateSpherical(t68) {
    z2(this._rotationAxis, this._scenePickPoint), this.currentCamera.aboveGround || j2(this._rotationAxis, this._rotationAxis);
    const i60 = this._smoothRotation.value, e65 = i60 + st3(t68.angle - i60), n77 = 125e-5 * Math.min(Math.max(t68.radius, 40), 120);
    this._smoothRotation.gain = n77, this._smoothRotation.update(e65);
    const s69 = this._smoothRotation.value - this._beginAngle;
    this._rotationMomentumEstimator.add(s69, 1e-3 * t68.timestamp), ct2(this.currentCamera, this._sphere, m27(this._rotationAxis, s69)), this._constraintOptions.interactionType = O13.TUMBLE, this._constraintOptions.interactionFactor = T15(t68.radius * e65), E21(this.view, this.currentCamera, this._constraintOptions);
  }
  _panningPlanar(t68) {
    const i60 = d6(t68.center, this._tmpScreenPointArray);
    mt(this._panningPlane, this.currentCamera, i60, this._tmp3d) && (xt(this.currentCamera, this._beginScenePoint, this._tmp3d), this._panPlanarMomentumEstimator.add(i60, this._tmp3d, 1e-3 * t68.timestamp), this._constraintOptions.interactionType = O13.PAN, this._constraintOptions.interactionFactor = T15(m5(this._beginScreenPoint, i60)), this._constraintOptions.interactionDirection = this.view.renderCoordsHelper.worldUpAtPosition(this.currentCamera.eye, this._tmpInteractionDirection), E21(this.view, this.currentCamera, this._constraintOptions), this._constraintOptions.interactionDirection = null);
  }
  _zoomPlanar(t68) {
    const i60 = this._beginRadius / t68.radius, e65 = 1875e-6 * Math.min(Math.max(t68.radius, 40), 120);
    this._smoothScaling.gain = e65, this._smoothScaling.update(i60), this._zoomMomentumEstimator.add(this._smoothScaling.value, 1e-3 * t68.timestamp), ut2(this.currentCamera, this._beginScenePoint, this._smoothScaling.value, this.view.state.constraints.minimumPoiDistance), this._constraintOptions.interactionType = O13.ZOOM, this._constraintOptions.interactionFactor = T15(t68.radius - this._beginRadius), E21(this.view, this.currentCamera, this._constraintOptions);
  }
  _rotatePlanar(t68) {
    r5(this._rotationAxis, this._beginScenePoint), this.currentCamera.aboveGround || j2(this._rotationAxis, this._rotationAxis);
    const i60 = this._smoothRotation.value;
    let e65 = t68.angle - i60;
    e65 = st3(e65);
    const n77 = i60 + e65, s69 = 125e-5 * Math.min(Math.max(t68.radius, 40), 120);
    this._smoothRotation.gain = s69, this._smoothRotation.update(n77);
    const o61 = this._smoothRotation.value - this._beginAngle;
    this._rotationMomentumEstimator.add(o61, 1e-3 * t68.timestamp), ct2(this.currentCamera, this._sphere, m27(this._rotationAxis, o61)), this._constraintOptions.interactionType = O13.TUMBLE, this._constraintOptions.interactionFactor = T15(t68.radius * o61), E21(this.view, this.currentCamera, this._constraintOptions);
  }
};
ot3 = e([a4("esri.views.3d.state.controllers.global.PinchAndPanController")], ot3);

// node_modules/@arcgis/core/views/3d/state/controllers/local/PinchAndPanController.js
var q14 = r4(0, 0, 1);
var J11 = { ELEVATION_THRESHOLD: 3e4, ANGLE_THRESHOLD: 16 / 180 * Math.PI };
var K9 = class extends n50 {
  constructor() {
    super(...arguments), this._rotationValueSmooth = new t49(0.05), this._scalingValueSmooth = new t49(0.05), this._planeHorizontal = h9(), this._planeVertical = h9(), this._rotationMomentumEstimator = new a31(), this._panMomentumEstimator = new l21(300, 12, 0.9), this._zoomMomentumEstimator = new s35(), this._beginRadius = 0, this._beginCenter = n7(), this._beginAngle = 0, this._tmpPoints = [], this._panMode = gt.Horizontal, this._beginCenterScreen = i8(), this._tmpCentroid3d = n7(), this._tmpCentroid2d = i8(), this._tmp2d = i8(), this._pointerCount = 0, this._constraintOptions = { selection: L12.ALL, interactionType: O13.NONE, interactionFactor: 0, interactionStartCamera: new $(), interactionDirection: null, tiltMode: O14.TUMBLE };
  }
  begin(t68) {
    var _a;
    if (!this.active)
      return;
    const e65 = this.view.navigation.momentumEnabled;
    this._zoomMomentumEstimator.enabled = e65, this._rotationMomentumEstimator.enabled = e65, this._panMomentumEstimator.enabled = e65, this._beginRadius = t68.radius, this._pointerCount = t68.pointers.size, this._beginAngle = t68.angle, this._rotationValueSmooth.reset(), this._scalingValueSmooth.reset(), d6(t68.center, this._beginCenterScreen), F8(q14, 0, this._planeHorizontal);
    const o61 = n7(), s69 = this._intersectionHelper.intersectScreenFreePointFallback(this._beginCenterScreen, o61, 0 === this.view.map.ground.opacity ? at2 : {}), d52 = n7();
    j2(d52, this.startCamera.viewForward);
    const C26 = n7();
    r5(C26, q14);
    const g36 = P(d52, C26), w29 = F3(g36 < 0 ? -g36 : g36);
    this._panMode = w29 >= J11.ANGLE_THRESHOLD ? gt.Horizontal : gt.Vertical;
    const j25 = Math.min(tt3, 1 / Math.abs(P(C26, this.startCamera.viewForward))) * Math.max(Math.abs(this.view.camera.position.z), et2);
    C6(this._planeHorizontal, this._planeHorizontal, o61), this.startCamera.aboveGround || L2(this._planeHorizontal, this._planeHorizontal);
    const E39 = n7(), P26 = n7(), S25 = n7();
    e7(E39, o61, this.currentCamera.eye);
    const V15 = s7(E39);
    if (z2(E39, E39), this._panMode === gt.Vertical) {
      g2(C26, C26, g36), e7(this._planeVertical, d52, C26), z2(this._planeVertical, this._planeVertical), C6(this._planeVertical, this._planeVertical, o61);
      const i60 = this.view._stage.renderView.getMinimalDepthForArea(this.view.voxelWasm, this._beginCenterScreen[0], this._beginCenterScreen[1], this.view.state.camera, Y6);
      let e66 = null != i60 ? i60 : j25;
      e66 = s69 ? Math.min(e66, V15) : e66, r5(S25, u2(P26, this.currentCamera.eye, g2(P26, E39, e66))), this._planeVertical[3] = -P(this._planeVertical, S25), this._computePlanePoints(t68.pointers, this._planeVertical, this.startCamera, this._tmpPoints), ht2(this._tmpPoints, this._beginCenter);
    } else {
      const i60 = s69 ? V15 : j25;
      r5(S25, u2(P26, this.currentCamera.eye, g2(P26, E39, i60))), this._planeHorizontal[3] = -P(W(this._planeHorizontal), S25), this._computePlanePoints(t68.pointers, this._planeHorizontal, this.startCamera, this._tmpPoints), ht2(this._tmpPoints, this._beginCenter);
    }
    (_a = this._constraintOptions.interactionStartCamera) == null ? void 0 : _a.copyFrom(this.startCamera);
  }
  update(t68) {
    if (!this.active)
      return;
    this.currentCamera.copyFrom(this.startCamera);
    const i60 = t68.pointers.size > 1, e65 = this._panMode === gt.Horizontal ? this._planeHorizontal : this._planeVertical, o61 = this._beginCenter;
    if (i60) {
      const i61 = this._beginRadius / t68.radius, e66 = 1875e-6 * Math.min(Math.max(t68.radius, 40), 120);
      this._scalingValueSmooth.gain = e66, this._scalingValueSmooth.update(i61), ut2(this.currentCamera, o61, this._scalingValueSmooth.value, this.view.state.constraints.minimumPoiDistance), this._zoomMomentumEstimator.add(this._scalingValueSmooth.value, 1e-3 * t68.timestamp), this._constraintOptions.interactionType = O13.ZOOM, this._constraintOptions.interactionFactor = T15(Math.abs(t68.radius - this._beginRadius)), E21(this.view, this.currentCamera, this._constraintOptions);
    }
    if (this._computePlanePoints(t68.pointers, e65, this.currentCamera, this._tmpPoints), ht2(this._tmpPoints, this._tmpCentroid3d), d6(t68.center, this._tmpCentroid2d), xt(this.currentCamera, o61, this._tmpCentroid3d), this._panMomentumEstimator.add(this._tmpCentroid2d, this._tmpCentroid3d, 1e-3 * t68.timestamp), this._constraintOptions.interactionType = O13.PAN, this._constraintOptions.interactionFactor = T15(m5(this._beginCenterScreen, this._tmpCentroid2d)), E21(this.view, this.currentCamera, this._constraintOptions), i60) {
      const i61 = this._planeHorizontal, e66 = o61, n77 = this._rotationValueSmooth.value, s69 = n77 + st3(t68.angle - n77), r62 = 125e-5 * Math.min(Math.max(t68.radius, 40), 120);
      this._rotationValueSmooth.gain = r62, this._rotationValueSmooth.update(s69);
      const a67 = this._rotationValueSmooth.value - this._beginAngle;
      this._rotationMomentumEstimator.add(a67, 1e-3 * t68.timestamp), ct2(this.currentCamera, e66, m27(i61, a67)), this._constraintOptions.interactionType = O13.TUMBLE, this._constraintOptions.interactionFactor = T15(Math.abs(t68.radius * a67)), E21(this.view, this.currentCamera, this._constraintOptions);
    }
    this.commitCamera();
  }
  end(t68) {
    t68.pointers.size === this._pointerCount && this.update(t68), this.finishController();
    const i60 = this._zoomMomentumEstimator.evaluateMomentum();
    if (i60)
      return new p35({ view: this.view, momentum: i60, zoomCenter: this._beginCenter });
    const e65 = this._rotationMomentumEstimator.evaluateMomentum();
    if (e65)
      return new n51({ view: this.view, momentum: e65, center: this._beginCenter, axis: W(this._planeHorizontal) });
    const n77 = this._panMomentumEstimator.evaluateMomentum();
    return n77 ? new i49({ view: this.view, momentum: n77 }) : null;
  }
  _computePlanePoints(t68, i60, e65, n77) {
    n77.length = t68.size;
    const o61 = this._tmp2d;
    let s69 = 0;
    return t68.forEach((t69) => {
      o61[0] = t69.x, o61[1] = t69.y, void 0 === n77[s69] && (n77[s69] = n7()), mt(i60, e65, o61, n77[s69]), s69 += 1;
    }), n77;
  }
  get _intersectionHelper() {
    return this.view.sceneIntersectionHelper;
  }
};
K9 = e([a4("esri.views.3d.state.controllers.local.PinchAndPanController")], K9);

// node_modules/@arcgis/core/views/3d/input/handlers/PinchAndPanNavigation.js
var i50 = class extends i18 {
  constructor(t68, e65, s69) {
    super(true), this._view = t68, this.pointerAction = e65, this._lastEndTimestamp = 0, this._lastTimestamp = 0, this.registerIncoming("drag", s69, (t69) => this._handleDrag(t69));
  }
  _handleDrag(t68) {
    if ("mouse" === t68.data.pointerType && !r36(t68.data, this.pointerAction))
      return;
    const e65 = t68.timestamp - this._lastEndTimestamp, s69 = 40, i60 = this._momentum && this._momentum.active && e65 < s69;
    switch (t68.data.action) {
      case "start":
      case "update":
        if (i60)
          break;
        this._controller && this._controller.active ? t68.data.timestamp - this._lastTimestamp > 2 && (this._controller.update(t68.data), this._lastTimestamp = t68.timestamp) : this._startController(t68);
        break;
      case "end":
      case "removed":
        this._endController(t68, true);
        break;
      case "added":
        this._endController(t68, false), this._startController(t68);
    }
    t68.stopPropagation();
  }
  _endController(t68, e65) {
    if (this._controller && this._controller.active) {
      this._lastEndTimestamp = t68.timestamp;
      const s69 = this._controller.end(t68.data);
      e65 && s69 && (this._momentum = s69, this._view.state.switchCameraController(this._momentum));
    }
    this._controller = null;
  }
  _startController(t68) {
    this._controller = this._createController(), this._view.state.switchCameraController(this._controller), this._controller.begin(t68.data), this._lastTimestamp = t68.timestamp;
  }
  _createController() {
    return this._view.state.isGlobal ? new ot3({ view: this._view }) : new K9({ view: this._view });
  }
};

// node_modules/@arcgis/core/views/3d/input/handlers/PointerDownCancelAnimation.js
var e40 = class extends i18 {
  constructor(t68, e65) {
    super(true), this.view = t68, this.registerIncoming("pointer-down", e65, () => this.view.state.stopActiveCameraController());
  }
};

// node_modules/@arcgis/core/views/3d/input/handlers/SingleKey.js
var e41 = class extends i18 {
  constructor(t68, e65) {
    super(true), this.key = t68, this.registerIncoming("key-down", e65, (t69) => this._handleKeyDown(t69));
  }
  _handleKeyDown(t68) {
    t68.data.key === this.key && (this.activate(), t68.stopPropagation());
  }
};

// node_modules/@arcgis/core/views/3d/input/handlers/SingleKeyResetHeading.js
var t50 = class extends e41 {
  constructor(e65, t68, i60) {
    super(t68, i60), this.view = e65;
  }
  activate() {
    this.view.goTo({ heading: 0 }).catch(() => {
    });
  }
};

// node_modules/@arcgis/core/views/3d/input/handlers/SingleKeyResetTilt.js
var e42 = class extends e41 {
  constructor(t68, e65, i60) {
    super(e65, i60), this.view = t68;
  }
  activate() {
    this.view.goTo({ tilt: 0 }).catch(() => {
    });
  }
};

// node_modules/@arcgis/core/views/3d/input/handlers/TwoFingerTilt.js
var o46 = class extends i18 {
  constructor(e65, t68 = false) {
    super(true), this._view = e65, this._invert = t68, this.registerIncoming("vertical-two-finger-drag", (e66) => this._handleTwoFinger(e66));
  }
  _handleTwoFinger(a67) {
    var _a, _b, _c;
    const o61 = this._invert ? -1 : 1, i60 = i8(0, a67.data.delta * o61);
    switch (a67.data.action) {
      case "begin":
        (_a = this._cameraController) == null ? void 0 : _a.end(), this._cameraController = new L16({ view: this._view, pivot: b16.CENTER }), this._view.state.switchCameraController(this._cameraController), this._cameraController.begin(i60);
        break;
      case "update":
        (_b = this._cameraController) == null ? void 0 : _b.update(i60);
        break;
      case "end":
        (_c = this._cameraController) == null ? void 0 : _c.end(), this._cameraController = null;
    }
  }
};

// node_modules/@arcgis/core/views/input/recognizers/VerticalTwoFingerDrag.js
var a46 = class extends i18 {
  constructor(e65 = 20, a67 = 40) {
    super(false), this._threshold = e65, this._maxDelta = a67, this._state = "ready", this._emittedArtificalEnd2 = false, this._vertical = this.registerOutgoing("vertical-two-finger-drag"), this._artificalDrag = this.registerOutgoing("drag"), this._dragEventSeparator = new t38({ start: (t68, e66) => this._observeStart(t68, e66), update: (t68, e66, a68) => this._observeUpdate(t68, e66, a68), end: (t68, e66) => this._observeEnd(e66) }), this.registerIncoming("drag", (t68) => this._dragEventSeparator.handle(t68));
  }
  get failed() {
    return "failed" === this._state;
  }
  _observeStart(t68, e65) {
    1 === t68 && this._emittedArtificalEnd2 && (this._emittedArtificalEnd2 = false, this._artificalDrag.emit({ action: "start", button: e65.data.button, buttons: e65.data.buttons, pointerType: e65.data.pointerType, timestamp: e65.data.timestamp, pointers: e65.data.pointers, pointer: e65.data.pointer, angle: e65.data.angle, radius: e65.data.radius, center: e65.data.center }), e65.stopPropagation()), this._state = 2 === t68 ? "ready" : "failed";
  }
  _observeUpdate(t68, e65, a67) {
    if ("failed" !== this._state && 2 === t68)
      return "active" === this._state ? (this._vertical.emit({ delta: e65.data.center.y - this._thresholdReachedCenter.y, action: "update" }), void e65.stopPropagation()) : void (this._checkMovementWithinLimits(e65.data, a67.data) ? this._checkVerticalThresholdReached(e65.data, a67.data) && (this._state = "active", this._emittedArtificalEnd2 = true, this._thresholdReachedCenter = e65.data.center, this._artificalDrag.emit({ action: "end", button: e65.data.button, buttons: e65.data.buttons, pointerType: e65.data.pointerType, timestamp: e65.data.timestamp, pointers: e65.data.pointers, pointer: e65.data.pointer, angle: e65.data.angle, radius: e65.data.radius, center: e65.data.center }), this._vertical.emit({ delta: e65.data.center.y - this._thresholdReachedCenter.y, action: "begin" }), e65.stopPropagation()) : this._state = "failed");
  }
  _observeEnd(t68) {
    "active" === this._state && (this._vertical.emit({ delta: t68.data.center.y - this._thresholdReachedCenter.y, action: "end" }), this._state = "ready", t68.stopPropagation());
  }
  _checkMovementWithinLimits(t68, e65) {
    let a67 = -1 / 0, i60 = 1 / 0, r62 = -1 / 0, s69 = 1 / 0;
    for (const { x: m44, y: g36 } of e65.pointers.values())
      a67 = Math.max(a67, m44), i60 = Math.min(i60, m44), r62 = Math.max(r62, g36), s69 = Math.min(s69, g36);
    let n77 = -1 / 0, h46 = 1 / 0, d52 = -1 / 0, o61 = 1 / 0;
    for (const { x: m44, y: g36 } of t68.pointers.values())
      n77 = Math.max(n77, m44), h46 = Math.min(h46, m44), d52 = Math.max(d52, g36), o61 = Math.min(o61, g36);
    const c58 = a67 - i60, l63 = r62 - s69, p54 = n77 - h46, _33 = d52 - o61;
    return Math.abs(t68.center.x - e65.center.x) < this._threshold && Math.abs(p54 - c58) <= this._maxDelta && Math.abs(_33 - l63) <= this._maxDelta;
  }
  _checkVerticalThresholdReached(t68, e65) {
    let a67 = Math.abs(t68.center.y - e65.center.y);
    return t68.pointers.forEach((t69, i60) => {
      const r62 = e65.pointers.get(i60);
      a67 = Math.min(a67, Math.abs(t69.y - r62.y));
    }), a67 >= this._threshold;
  }
};

// node_modules/@arcgis/core/views/3d/input/SceneInputManager.js
var z17 = class extends m {
  constructor() {
    super(...arguments), this._handles = new t3();
  }
  destroy() {
    this._handles = l(this._handles), this.disconnect();
  }
  get primaryDragAction() {
    return this._get("primaryDragAction");
  }
  set primaryDragAction(t68) {
    "pan" !== t68 && "rotate" !== t68 || t68 === this._get("primaryDragAction") || (this._set("primaryDragAction", t68), this._updateMode());
  }
  get mode() {
    return this._get("mode");
  }
  set mode(t68) {
    "default" !== t68 && "pro" !== t68 || t68 === this._get("mode") || (this._set("mode", t68), this._updateMode());
  }
  get updating() {
    var _a;
    return !!((_a = this._inputManager) == null ? void 0 : _a.updating);
  }
  get latestPointerType() {
    var _a;
    return (_a = this._inputManager) == null ? void 0 : _a.latestPointerType;
  }
  get latestPointerLocation() {
    var _a;
    return (_a = this._inputManager) == null ? void 0 : _a.latestPointerLocation;
  }
  get multiTouchActive() {
    var _a;
    return ((_a = this._inputManager) == null ? void 0 : _a.multiTouchActive) ?? false;
  }
  disconnect() {
    this.view.viewEvents.disconnect(), this._inputManager = l(this._inputManager);
  }
  connect() {
    const t68 = this.view;
    this._source = new c20(this.view.surface, t68.input);
    const e65 = [new m13(), new r37(), new m12(), new s36(this.view.navigation), new a46()], r62 = new d14({ eventSource: this._source, recognizers: e65 });
    this._inputManager = r62, r62.installHandlers("prevent-context-menu", [new e30()], _8.INTERNAL), this._modeDragPan = new i50(t68, "primary"), this._modeDragRotate = new a44(t68, "secondary", b16.CENTER), this._modeDragZoom = new s53(t68, "tertiary");
    const o61 = { lookAround: "b", pan: { left: "ArrowLeft", right: "ArrowRight", forward: "ArrowUp", backward: "ArrowDown", up: "u", down: "j", headingLeft: "a", headingRight: "d", tiltUp: "w", tiltDown: "s", zoomIn: "+", zoomOut: "-" }, resetHeading: "n", resetTilt: "p" };
    r62.installHandlers("navigation", [new e40(t68), new s52(t68), new l39(t68), new o45(t68, o61.pan), new i48(t68), new e42(t68, o61.resetTilt), new t50(t68, o61.resetHeading), new a44(t68, "primary", b16.EYE, [o61.lookAround]), new a44(t68, "secondary", b16.CENTER, [o61.lookAround]), new i50(t68, "tertiary", [o61.lookAround]), this._modeDragRotate, this._modeDragZoom, this._modeDragPan, new o46(t68)], _8.INTERNAL), this.view.viewEvents.connect(r62), this._updateMode(), this._handles.add(l6(() => {
      var _a;
      return (_a = this.view.navigation) == null ? void 0 : _a.browserTouchPanEnabled;
    }, (t69) => {
      this._source.browserTouchPanningEnabled = !t69;
    }, h3));
  }
  _updateMode() {
    var _a;
    const t68 = this.mode, e65 = this.primaryDragAction, r62 = (_a = E28.get(t68)) == null ? void 0 : _a.get(e65);
    r62 && (this._modeDragPan && (this._modeDragPan.pointerAction = r62.pan), this._modeDragRotate && (this._modeDragRotate.pointerAction = r62.rotate), this._modeDragZoom && (this._modeDragZoom.pointerAction = r62.zoom));
  }
  get test() {
    return { inputManager: this._inputManager, modeDragPan: this._modeDragPan, modeDragRotate: this._modeDragRotate, modeDragZoom: this._modeDragZoom };
  }
};
e([y2()], z17.prototype, "view", void 0), e([y2({ value: "pan" })], z17.prototype, "primaryDragAction", null), e([y2({ value: "default" })], z17.prototype, "mode", null), e([y2({ readOnly: true })], z17.prototype, "updating", null), e([y2()], z17.prototype, "latestPointerType", null), e([y2()], z17.prototype, "latestPointerLocation", null), e([y2()], z17.prototype, "multiTouchActive", null), e([y2()], z17.prototype, "_inputManager", void 0), z17 = e([a4("esri.views.3d.input.SceneInputManager")], z17);
var E28 = /* @__PURE__ */ new Map();
var k18 = /* @__PURE__ */ new Map();
var C16 = /* @__PURE__ */ new Map();
k18.set("pan", { pan: "primary", rotate: "secondary", zoom: "tertiary" }), k18.set("rotate", { pan: "secondary", rotate: "primary", zoom: "tertiary" }), C16.set("pan", { pan: "primary", rotate: "tertiary", zoom: "secondary" }), C16.set("rotate", { pan: "tertiary", rotate: "primary", zoom: "secondary" }), E28.set("default", k18), E28.set("pro", C16);
var N12 = z17;

// node_modules/@arcgis/core/views/3d/layers/graphics/deconflictorDebug.js
var e43;
var n52;
var i51 = false;
var l41 = false;
var o47 = false;
var s54 = false;
var a47 = null;
function c42(t68, e65) {
  if (!l41 || !n52)
    return;
  u35();
  const i60 = n52;
  let o61 = 0;
  for (let n77 = 0; n77 < t68.accBinsNumX; n77++)
    for (let e66 = 0; e66 < t68.accBinsNumY; e66++) {
      const l63 = t68.accBins[n77][t68.accBinsNumY - 1 - e66];
      o61 += l63.length;
      const s69 = n77 * t68.accBinsSizeX, a67 = (n77 + 1) * t68.accBinsSizeX, c58 = e66 * t68.accBinsSizeY, r62 = (e66 + 1) * t68.accBinsSizeY;
      i60.fillText(l63.length.toFixed(), s69 + 5, c58 + 15), h34(s69, a67, c58, r62, "blue");
    }
  i60.fillText("total totalShownLabels: " + o61, 70, 40), i60.fillText("total visible labels: " + e65.size, 70, 50), i60.fillText("total numTests: " + t68.accNumTests, 70, 30);
}
function r47(n77) {
  o47 = t19.DECONFLICTOR_SHOW_VISIBLE, s54 = t19.DECONFLICTOR_SHOW_INVISIBLE, i51 = o47 || s54, l41 = t19.DECONFLICTOR_SHOW_GRID, a47 = null, i51 || l41 ? a47 = () => p36(n77) : e43 && (e43.parentElement.removeChild(e43), e43 = null);
}
function u35() {
  a47 && (a47(), a47 = null);
}
function p36(t68) {
  null == e43 && (e43 = document.createElement("canvas"), e43.setAttribute("id", "debugCanvas2d"), t68.surface.parentElement.style.position = "relative", t68.surface.parentElement.appendChild(e43));
  const { state: i60 } = t68, { camera: l63, pixelRatio: o61 } = i60, { width: s69, height: a67 } = l63, c58 = s69 * o61, r62 = a67 * o61;
  e43.setAttribute("width", `${c58}px`), e43.setAttribute("height", `${r62}px`), e43.setAttribute("style", `position:absolute;left:0px;top:0px;display:block;pointer-events:none;width:${s69}px;height:${a67}px`), n52 = e43.getContext("2d"), n52.clearRect(0, 0, s69, a67), n52.font = "12px Arial";
}
function h34(t68, i60, l63, o61, s69) {
  u35();
  const a67 = e43.height, c58 = n52;
  c58.beginPath(), c58.lineWidth = 1, c58.strokeStyle = s69, c58.moveTo(t68, a67 - l63), c58.lineTo(i60, a67 - l63), c58.stroke(), c58.lineTo(i60, a67 - o61), c58.stroke(), c58.lineTo(i60, a67 - l63), c58.stroke(), c58.lineTo(t68, a67 - l63), c58.stroke(), c58.lineTo(t68, a67 - l63), c58.stroke(), c58.closePath();
}
function f34(t68, e65) {
  i51 && (e65 && o47 || !e65 && s54) && h34(t68.aabr[0], t68.aabr[2], t68.aabr[1], t68.aabr[3], e65 ? "green" : "red");
}

// node_modules/@arcgis/core/views/3d/layers/graphics/Deconflictor.js
var U16 = n7();
var W11 = n14();
var H17 = n14();
var Z8 = n7();
var q15 = e15();
var J12 = _4();
var K10 = d10();
var Q11 = n7();
var $7 = i5();
var ii = class {
  constructor() {
    this.aabr = i5(), this.distance = 0, this.culled = false, this.visible = false;
  }
};
var ti = class {
  constructor(i60, t68) {
    this.graphics3DGraphic = i60, this.slicePlaneEnabled = t68, this.info = {};
  }
};
var si;
!function(i60) {
  i60[i60.Idle = 0] = "Idle", i60[i60.Process = 1] = "Process", i60[i60.Sort = 2] = "Sort", i60[i60.Deconflict = 3] = "Deconflict", i60[i60.NumStates = 4] = "NumStates";
}(si || (si = {}));
var ei = class {
  constructor() {
    this.camera = new $(), this.slicePlane = W5(), this.slicePlaneEnabled = false;
  }
  copyFrom(i60) {
    this.camera.copyFrom(i60.camera), Z2(i60.slicePlane, this.slicePlane), this.slicePlaneEnabled = i60.slicePlaneEnabled;
  }
};
var ri = class extends m {
  get dirty() {
    return this._dirty;
  }
  get state() {
    return this._state;
  }
  constructor(i60) {
    super(i60), this._dirty = false, this._runningViewState = new ei(), this._state = si.Idle, this._active = /* @__PURE__ */ new Map(), this._visible = /* @__PURE__ */ new Map(), this._iterators = new li(), this._accBinsNumX = 15, this._accBinsNumY = 20, this._accBinsSizeX = 0, this._accBinsSizeY = 0, this._accBins = null, this.accNumTests = 0;
  }
  destroy() {
    this._active.clear(), this._visible.clear(), this._iterators = null;
  }
  setDirty() {
    !this._dirty && this._active.size > 0 && (this._dirty = true, this.notifyChange("updating"));
  }
  get updating() {
    return this._state !== si.Idle || this._dirty;
  }
  get updatingProgress() {
    if (!this.updating)
      return 1;
    const i60 = this._state / si.NumStates;
    return this._dirty ? 0.5 * i60 : i60;
  }
  get running() {
    return this.view.ready && null != this.view.state && this.updating;
  }
  runTask(i60) {
    switch (this._state) {
      case si.Idle:
        this._startUpdate(), i60.madeProgress();
      case si.Process:
        if (this._state = si.Process, !this._processActiveGraphics(i60))
          return;
      case si.Sort:
        if (this._state = si.Sort, !this._sortVisibleGraphics(i60))
          return;
      case si.Deconflict:
        if (this._state = si.Deconflict, !this._deconflictVisibleGraphics(i60))
          return;
      default:
        c42(this, this._visible), this._state = si.Idle, this.notifyChange("updating");
    }
  }
  modifyGraphics(i60, t68) {
    t68 ? i60.forEach((i61) => this.addToActiveGraphics(i61)) : i60.forEach((i61) => this.removeFromActiveGraphics(i61)), this.setDirty();
  }
  layerSupportsDeconfliction(i60) {
    if (null == i60 || "object3d" !== i60.type)
      return false;
    const t68 = i60.stageObject;
    if (1 !== (t68 ? t68.geometries.length : 0))
      return false;
    const s69 = t68 == null ? void 0 : t68.geometries[0], e65 = s69 == null ? void 0 : s69.material;
    return e65 instanceof K3;
  }
  _startUpdate() {
    r47(this.view), this._dirty = false, this._runningViewState.copyFrom(this.viewState);
    const { fullWidth: i60, fullHeight: t68 } = this._runningViewState.camera;
    this._initBins(i60, t68), this._resetIterators();
  }
  addToActiveGraphics(i60) {
    i60.info[this.visibilityGroup] = new ii(), this._active.set(i60.graphics3DGraphic.graphic.uid, i60), this.setDirty();
  }
  removeFromActiveGraphics(i60) {
    this._visible.delete(i60.graphics3DGraphic.graphic.uid), oi(i60, this.visibilityGroup), delete i60.info[this.visibilityGroup], this._active.delete(i60.graphics3DGraphic.graphic.uid), this.setDirty();
  }
  _processActiveGraphics(i60) {
    const t68 = this._ensureActiveGraphicsIterator(), s69 = e11(q15, this._runningViewState.camera.projectionMatrix), e65 = "global" === this.view.viewingMode && 1 === this.view.map.ground.opacity && this._runningViewState.camera.relativeElevation > 0 ? J12 : null;
    let r62 = 0;
    for (null != e65 && (O(e65, f2, this._runningViewState.camera.viewMatrix), e65[3] = A3(this.view.spatialReference).radius, r62 = F7(e65, f2)); !i60.done; ) {
      i60.madeProgress();
      const o61 = t68.next();
      if (true === o61.done)
        return this._resetActiveGraphicsIterator(), true;
      const a67 = o61.value, c58 = a67 && a67.info[this.visibilityGroup];
      c58 && (this._collectGraphics3DGraphics(a67, s69, e65, r62), c58.culled ? this._visible.delete(a67.graphics3DGraphic.graphic.uid) : this._visible.set(a67.graphics3DGraphic.graphic.uid, a67));
    }
    return false;
  }
  _sortVisibleGraphics(i60) {
    const t68 = this._ensureSortGraphicsIterator();
    for (; !i60.done; ) {
      const s69 = t68.next();
      if (i60.madeProgress(), true === s69.done)
        return this._resetSortGraphicsIterator(), true;
    }
    return false;
  }
  _deconflictVisibleGraphics(i60) {
    const t68 = this._ensureVisibleGraphicsIterator(), s69 = this.visibilityGroup === A13.LABEL;
    for (; !i60.done; ) {
      i60.madeProgress();
      const e65 = t68.next();
      if (true === e65.done)
        return this._resetVisibleGraphicsIterator(), true;
      const r62 = e65.value, o61 = r62.info[this.visibilityGroup];
      if (!o61 || o61.culled)
        continue;
      const a67 = r62.graphics3DGraphic, c58 = !s69 || a67.isVisible();
      o61.visible = c58 && !this._isConflicted(r62), o61.visible && this._addToBins(r62), this._setGraphicVisibility(r62, o61.visible), f34(o61, o61.visible);
    }
    return false;
  }
  _resetIterators() {
    this._iterators.active = null, this._iterators.visible = null, this._iterators.sort = null;
  }
  _ensureActiveGraphicsIterator() {
    return this._iterators.active || (this._iterators.active = ai(this._active)), this._iterators.active;
  }
  _resetActiveGraphicsIterator() {
    this._iterators.active = null;
  }
  _ensureVisibleGraphicsIterator() {
    return this._iterators.visible || (this._iterators.visible = ai(this._visible)), this._iterators.visible;
  }
  _resetVisibleGraphicsIterator() {
    this._iterators.visible = null;
  }
  _ensureSortGraphicsIterator() {
    return this._iterators.sort || (this._iterators.sort = ci(this._visible, this._iterators.sortArray, this.visibilityGroup)), this._iterators.sort;
  }
  _resetSortGraphicsIterator() {
    this._iterators.sort = null;
  }
  _collectGraphics3DGraphics(i60, t68, s69, e65) {
    const r62 = i60.graphics3DGraphic;
    if (r62.destroyed)
      return;
    const o61 = i60.info[this.visibilityGroup];
    if (!r62.isVisible(A13.GRAPHIC, L6.DECONFLICTION))
      return void (o61.culled = true);
    const a67 = this.getGraphicsLayers(r62);
    C2(o61.aabr);
    let c58 = null;
    for (const n77 of a67) {
      if (!this.layerSupportsDeconfliction(n77))
        continue;
      const r63 = n77.stageObject.geometries[0].material;
      if (null == c58 && (c58 = ui, this._getProjectionInfo(n77, t68, c58), c58.isOutsideScreen || this._isCulledBySlice(i60, U16) || null != s69 && this._isCulledByHorizon(c58, s69, e65)))
        return void (o61.culled = true);
      this._expandBoundingRect(o61, n77, r63, c58);
    }
    null == c58 ? o61.culled = true : (o61.distance = c58.distance, o61.culled = false);
  }
  _getProjectionInfo(i60, t68, s69) {
    const e65 = this._runningViewState.camera, r62 = i60.stageObject, o61 = r62.geometries[0], a67 = o61.material, c58 = z5(r62.boundingVolumeWorldSpace.bounds);
    O(U16, c58, e65.viewMatrix);
    const n77 = o61.vertexAttributes, u51 = n77.get(O3.NORMAL).data, d52 = n77.get(O3.AUXPOS1).data;
    a67.applyShaderOffsetsView(U16, u51, r62.transformation, d52, e65, s69.scaleInfo, U16), r6(W11, U16[0], U16[1], U16[2], 1), w2(H17, W11, e65.projectionMatrix), g2(s69.positionNDC, H17, 1 / H17[3]), a67.applyShaderOffsetsNDC(s69.positionNDC, d52, e65, s69.positionNDC, Z8), s69.distanceWithoutPolygonOffset = e65.depthNDCToWorld(Z8[2]), s69.distance = Z8[2] === s69.positionNDC[2] ? s69.distanceWithoutPolygonOffset : e65.depthNDCToWorld(s69.positionNDC[2]), r6(H17, s69.positionNDC[0], s69.positionNDC[1], s69.positionNDC[2], 1), w2(W11, H17, t68), l3(W11, W11, 1 / W11[3]), o2(s69.positionView, U16[0], U16[1], U16[2]);
  }
  _isCulledByHorizon(i60, t68, s69) {
    return r5(K10.direction, i60.positionView), o2(K10.origin, 0, 0, 0), !!Z(t68, K10, Q11) && i60.distanceWithoutPolygonOffset > s69;
  }
  _isCulledBySlice(i60, t68) {
    return i60.slicePlaneEnabled && this._runningViewState.slicePlaneEnabled && us(this._runningViewState.slicePlane, t68);
  }
  _expandBoundingRect(i60, t68, e65, { positionNDC: r62, scaleInfo: o61 }) {
    const a67 = this._runningViewState.camera, c58 = t68.getScreenSize(hi);
    f12(c58, o61.factor, c58), c58[0] *= a67.pixelRatio, c58[1] *= a67.pixelRatio;
    const n77 = v4(e65.calculateRelativeScreenBounds(c58, o61.factorAlignment.scale, $7), s9(0, a67.fullWidth, 0.5 + 0.5 * r62[0]), s9(0, a67.fullHeight, 0.5 + 0.5 * r62[1])), l63 = this.iconMarginFactor;
    if (0 !== l63) {
      const i61 = l63 * Math.min(M3(n77), s13(n77));
      n77[0] -= i61, n77[1] -= i61, n77[2] += i61, n77[3] += i61;
    }
    m3(i60.aabr, n77, i60.aabr);
  }
  _isConflicted(i60) {
    const t68 = i60.graphics3DGraphic.graphic.uid, s69 = i60.info[this.visibilityGroup];
    for (let e65 = Math.floor(s69.aabr[0] / this._accBinsSizeX); e65 <= Math.floor(s69.aabr[2] / this._accBinsSizeX); e65++)
      if (!(e65 < 0 || e65 >= this._accBinsNumX))
        for (let i61 = Math.floor(s69.aabr[1] / this._accBinsSizeY); i61 <= Math.floor(s69.aabr[3] / this._accBinsSizeY); i61++) {
          if (i61 < 0 || i61 >= this._accBinsNumY)
            continue;
          const r62 = this._accBins[e65][i61];
          for (let i62 = 0; i62 < r62.length; i62++) {
            const e66 = r62.data[i62], o61 = e66.info[this.visibilityGroup];
            if (o61 && o61.visible && e66.graphics3DGraphic.graphic.uid !== t68 && (this.accNumTests++, q(o61.aabr, s69.aabr)))
              return true;
          }
        }
    return false;
  }
  _initBins(i60, t68) {
    if (null == this._accBins) {
      this._accBins = [];
      for (let i61 = 0; i61 < this._accBinsNumX; i61++) {
        this._accBins.push([]);
        const i62 = this._accBins[this._accBins.length - 1];
        for (let t69 = 0; t69 < this._accBinsNumY; t69++)
          i62.push(new l2());
      }
    } else
      for (let s69 = 0; s69 < this._accBinsNumX; s69++)
        for (let i61 = 0; i61 < this._accBinsNumY; i61++)
          this._accBins[s69][i61].clear();
    this._accBinsSizeX = i60 / this._accBinsNumX, this._accBinsSizeY = t68 / this._accBinsNumY, this.accNumTests = 0;
  }
  _addToBins(i60) {
    const t68 = i60.info[this.visibilityGroup], s69 = Math.floor(t68.aabr[0] / this._accBinsSizeX), e65 = Math.floor(t68.aabr[2] / this._accBinsSizeX), r62 = Math.floor(t68.aabr[1] / this._accBinsSizeY), o61 = Math.floor(t68.aabr[3] / this._accBinsSizeY);
    for (let a67 = s69; a67 <= e65; a67++)
      if (!(a67 < 0 || a67 >= this._accBinsNumX))
        for (let t69 = r62; t69 <= o61; t69++)
          t69 < 0 || t69 >= this._accBinsNumY || this._accBins[a67][t69].push(i60);
  }
  _setGraphicVisibility(i60, t68) {
    const s69 = i60.graphics3DGraphic;
    s69.destroyed || (s69.setVisibilityFlag(this.visibilityGroup, L6.DECONFLICTION, t68), this.visibilityGroup === A13.LABEL && this.view.labeler.setLabelGraphicVisibility(s69, t68));
  }
};
function oi(i60, t68) {
  const s69 = i60.graphics3DGraphic;
  s69.destroyed || s69.setVisibilityFlag(t68, L6.DECONFLICTION, true);
}
function* ai(i60) {
  if (Map.prototype.entries) {
    const t68 = i60.entries();
    for (let i61 = t68.next(); !i61.done; i61 = t68.next())
      yield i61.value[1];
  } else
    yield* i60.values();
}
function* ci(i60, t68, s69) {
  t68.clear(), i60.forEach((i61, e66) => {
    const r62 = t68.pushNew();
    r62.id = e66, r62.visible = i61.graphics3DGraphic.getVisibilityFlag(s69, L6.DECONFLICTION);
    const o61 = i61.info && i61.info[s69];
    r62.prio = i61.graphics3DGraphic.deconflictionPriority, r62.distance = o61 ? o61.distance : Number.MAX_VALUE;
  }), yield;
  const e65 = t68.iterableSort((i61, t69) => i61.prio !== t69.prio ? t69.prio - i61.prio : i61.distance !== t69.distance ? i61.distance - t69.distance : i61.visible !== t69.visible ? i61.visible ? -1 : 1 : i61.id - t69.id);
  for (let r62 = e65.next(); !r62.done; r62 = e65.next())
    yield;
  t68.forAll((t69) => {
    const s70 = i60.get(t69.id);
    s70 && (i60.delete(t69.id), i60.set(t69.id, s70));
  }), t68.clear();
}
e([y2({ constructOnly: true })], ri.prototype, "view", void 0), e([y2({ type: Boolean, readOnly: true })], ri.prototype, "updating", null), ri = e([a4("esri.views.3d.layers.graphics.Deconflictor")], ri);
var ni = class {
  constructor() {
    this.id = 0, this.visible = false, this.prio = 0, this.distance = 0;
  }
};
var li = class {
  constructor(i60 = null, t68 = null, s69 = null) {
    this.active = i60, this.visible = t68, this.sort = s69, this.sortArray = new l2({ allocator: (i61) => i61 || new ni() });
  }
};
var hi = n15();
var pi = class {
  constructor() {
    this.positionView = n7(), this.positionNDC = n7(), this.distance = 0, this.distanceWithoutPolygonOffset = 0, this.scaleInfo = new t26();
  }
  get isOutsideScreen() {
    const i60 = this.positionNDC;
    return i60[0] < -1 || i60[1] < -1 || i60[2] < -1 || i60[0] >= 1 || i60[1] >= 1;
  }
};
var ui = new pi();

// node_modules/@arcgis/core/views/3d/layers/graphics/LabelDeconflictor.js
var n53 = 2e3;
var p37 = class extends ri {
  constructor(r62) {
    super(r62), this.visibilityGroup = A13.LABEL, this.iconMarginFactor = 0, this._lastDeconfliction = 0;
  }
  get viewState() {
    return this.parent.viewState;
  }
  runTask(r62) {
    if (this.parent.running)
      return g5.YIELD;
    const t68 = performance.now();
    if (r62.state !== I2.IDLE && t68 - this._lastDeconfliction < n53)
      return g5.YIELD;
    super.runTask(r62), this.state === si.Idle && (this._lastDeconfliction = t68);
  }
  enabledChanged(r62, t68) {
    this.modifyGraphics(t68, r62.labelsEnabled);
  }
  getGraphicsLayers(r62) {
    return r62.labelLayers;
  }
};
e([y2({ constructOnly: true })], p37.prototype, "parent", void 0), p37 = e([a4("esri.views.3d.layers.graphics.LabelDeconflictor")], p37);

// node_modules/@arcgis/core/views/3d/layers/graphics/GraphicsDeconflictor.js
var _24 = class extends ri {
  constructor() {
    super(...arguments), this._handles = new t3(), this._contexts = /* @__PURE__ */ new Map(), this._viewState = new ei(), this.visibilityGroup = A13.GRAPHIC, this._iconMarginFactor = -0.1;
  }
  get labels() {
    return this._labels;
  }
  get viewState() {
    return this._viewState;
  }
  initialize() {
    this._handles.add([l6(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.state) == null ? void 0 : _b.camera;
    }, () => {
      this._updateViewState(), this.setDirty();
    }), l6(() => {
      var _a, _b, _c;
      return (_c = (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.ground) == null ? void 0 : _c.opacity;
    }, (e65, t68) => {
      1 !== e65 && 1 !== t68 || this.setDirty();
    }), l6(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.slicePlane;
    }, () => {
      this._updateSlicePlane(), this._slicePlaneChanged();
    }, h3)]), this._frameTask = this.view.resourceController.scheduler.registerTask(I3.GRAPHICS_DECONFLICTOR, this), this._labels = new p37({ view: this.view, parent: this });
  }
  destroy() {
    this._labels.destroy(), this._labels = null, this._handles.destroy(), this._handles = null, this._frameTask && (this._frameTask.remove(), this._frameTask = null);
  }
  get iconMarginFactor() {
    return this._iconMarginFactor;
  }
  set iconMarginFactor(e65) {
    this._iconMarginFactor = e65, this.setDirty();
  }
  setDirty() {
    this._contexts.size > 0 && (super.setDirty(), this._labels.setDirty());
  }
  runTask(e65) {
    super.runTask(e65), this.running || this._labels.setDirty();
  }
  setInitialIconVisibilityFlag(e65, t68) {
    const i60 = !(this._graphicSupportsDeconfliction(t68) && m31(e65));
    t68.setVisibilityFlag(A13.GRAPHIC, L6.DECONFLICTION, i60);
  }
  _updateViewState() {
    this.view && this.view.state && (this._viewState.camera.copyFrom(this.view.state.camera), this._updateSlicePlane());
  }
  _updateSlicePlane() {
    const e65 = this.view ? this.view.slicePlane : null;
    null != e65 && ls(e65, this._viewState.camera.viewMatrix, this._viewState.slicePlane), this._viewState.slicePlaneEnabled = null != e65;
  }
  _slicePlaneChanged() {
    n6(this._contexts, (e65, t68) => t68.symbolCreationContext.slicePlaneEnabled) && this.setDirty();
  }
  addGraphicsOwner(e65) {
    const t68 = this._getGraphicsContext(e65);
    return { addGraphic: (i60) => this._addGraphic(e65, t68, i60), removeGraphic: (e66) => this._removeGraphic(t68, e66), labelingInfoChange: () => this._labels.enabledChanged(e65, t68), featureReductionChange: () => this.enabledChanged(e65, t68), slicePlaneEnabledChange: () => this._slicePlaneEnabledChanged(e65, t68), clear: () => t68.forEach((e66) => this._removeGraphic(t68, e66.graphics3DGraphic)) };
  }
  removeGraphicsOwner(e65) {
    const t68 = this._contexts.get(e65);
    t68 && (t68.forEach((e66) => this._removeGraphic(t68, e66.graphics3DGraphic)), this._contexts.delete(e65), this.setDirty());
  }
  _addGraphic(e65, t68, i60) {
    const s69 = i60.graphic.uid, r62 = new ti(i60, e65.symbolCreationContext.slicePlaneEnabled);
    t68.set(s69, r62), m31(e65) && this.addToActiveGraphics(r62), e65.labelsEnabled && this._labels.addToActiveGraphics(r62);
  }
  _removeGraphic(e65, t68) {
    const i60 = t68.graphic.uid, s69 = e65.get(i60);
    s69 && (this.removeFromActiveGraphics(s69), this._labels.removeFromActiveGraphics(s69), e65.delete(i60), this.setDirty());
  }
  enabledChanged(e65, t68) {
    const i60 = m31(e65);
    i60 || g21(e65), this.modifyGraphics(t68, i60);
  }
  _slicePlaneEnabledChanged(e65, t68) {
    const i60 = e65.symbolCreationContext.slicePlaneEnabled;
    t68.forEach((e66) => e66.slicePlaneEnabled = i60), this.setDirty();
  }
  getGraphicsLayers(e65) {
    return e65.layers;
  }
  _graphicSupportsDeconfliction(e65) {
    if (e65.isDraped)
      return false;
    const t68 = e65.layers;
    if (!t68 || !t68.length)
      return false;
    for (const i60 of t68)
      if (this.layerSupportsDeconfliction(i60))
        return true;
    return false;
  }
  _getGraphicsContext(e65) {
    const t68 = this._contexts.get(e65);
    if (t68)
      return t68;
    const i60 = /* @__PURE__ */ new Map();
    return this._contexts.set(e65, i60), this.setDirty(), i60;
  }
};
function m31(e65) {
  const t68 = e65.layer;
  return !(!t68 || !t68.featureReduction || "selection" !== t68.featureReduction.type);
}
function g21(e65) {
  const t68 = e65.graphics3DGraphics;
  t68 && t68.forEach((e66) => e66.setVisibilityFlag(A13.GRAPHIC, L6.DECONFLICTION, true));
}
_24 = e([a4("esri.views.3d.layers.graphics.GraphicsDeconflictor")], _24);

// node_modules/@arcgis/core/views/3d/layers/support/FeatureTileVisibility3D.js
var A26 = class {
  constructor(e65) {
    this._renderCoordsHelper = e65, this._surfaceElevation = 0, this._cache = /* @__PURE__ */ new Map(), this._frustum = new d20(e65), this._extendedFrustum = new d20(e65), this._intersector = new N5({ renderCoordsHelper: e65 }), this._renderCoordsHelper = e65;
  }
  begin(e65, t68) {
    this._surfaceElevation = t68, this._aboveGround = this._renderCoordsHelper.getAltitude(e65.eye) > t68, this._frustum.update(e65), this._shortenFrustumFarPlane(this._frustum), this._updateExtendedFrustum(e65);
  }
  end() {
    this._cache.clear();
  }
  calculate(e65) {
    if (this._allTilesInvisible)
      return s30.INVISIBLE;
    const t68 = this._renderCoordsHelper.viewingMode === l13.Global && e65.lij[0] >= R13 && e65.lij[0] < O17, i60 = this._getOrCalculateSingleTileVisibility(e65, !t68);
    return i60 !== s30.INVISIBLE && t68 ? this._calculateAggregatedChildrenVisibility(e65) : i60;
  }
  _shortenFrustumFarPlane(e65) {
    const t68 = d20.nearFarLineIndices, n77 = e65.mutablePoints;
    for (const o61 of t68) {
      const [e66, t69] = o61, a67 = n77[e66], u51 = n77[t69];
      e7(S17, u51, a67), g2(S17, S17, b17), u2(n77[t69], a67, S17);
    }
    e65.updatePoints(n77);
  }
  _calculateAggregatedChildrenVisibility(e65) {
    let t68 = s30.INVISIBLE;
    const i60 = this._cache.get(e65.id);
    if (null != i60)
      return i60;
    const s69 = H18.acquire();
    e65.getChildren(s69);
    for (const r62 of s69) {
      const e66 = this.calculate(r62);
      if (e66 !== s30.INVISIBLE && (t68 = e66, e66 === s30.VISIBLE_ON_SURFACE))
        break;
    }
    return H18.release(s69), this._cache.set(e65.id, t68), t68;
  }
  _getOrCalculateSingleTileVisibility(e65, t68) {
    const i60 = this._cache.get(e65.id);
    if (null != i60)
      return i60;
    const s69 = this._calculateSingleTileVisibility(e65);
    return t68 && this._cache.set(e65.id, s69), s69;
  }
  _calculateSingleTileVisibility(e65) {
    if (!this._aboveGround && this._renderCoordsHelper.viewingMode === l13.Global && e65.lij[0] < g22) {
      return this._calculateSingleTileVisibilitySided(e65, false) === s30.INVISIBLE ? this._calculateSingleTileVisibilitySided(e65, true) : void 0;
    }
    return this._calculateSingleTileVisibilitySided(e65, this._aboveGround);
  }
  _calculateSingleTileVisibilitySided(e65, t68) {
    this._intersector.update(e65.extent, e65.tilingScheme.spatialReference, this._surfaceElevation, t68);
    const i60 = A3(e65.tilingScheme.spatialReference).radius;
    return this._intersector.isVisibleInFrustum(this._extendedFrustum, i60) ? this._intersector.isVisibleInFrustum(this._frustum, i60, true) ? s30.VISIBLE_ON_SURFACE : s30.VISIBLE_WHEN_EXTENDED : s30.INVISIBLE;
  }
  _updateExtendedFrustum(t68) {
    this._extendedFrustum.update(t68), this._shortenFrustumFarPlane(this._extendedFrustum);
    const i60 = this._renderCoordsHelper.worldUpAtPosition(t68.eye, S17);
    this._aboveGround || j2(i60, i60);
    const r62 = l4(-P(i60, t68.viewForward));
    if (this._allTilesInvisible = r62 > (Math.PI + t68.fovY) / 2, this._allTilesInvisible)
      return;
    if (this._hasExtendedFrustum = r62 > t68.fovY / 2, !this._hasExtendedFrustum)
      return;
    const a67 = this._extendedFrustumParameters(), u51 = this._extendedFrustum.mutablePoints;
    for (let e65 = 0; e65 < 4; e65++) {
      const t69 = a67.pointIndices[e65], i61 = u51[t69], r63 = this._renderCoordsHelper.getAltitude(i61);
      if (a67.needsAltitudeAdjustment(r63)) {
        switch (this._renderCoordsHelper.worldUpAtPosition(i61, S17), t69) {
          case k7.FAR_BOTTOM_LEFT:
          case k7.FAR_TOP_LEFT:
          case k7.NEAR_BOTTOM_LEFT:
          case k7.NEAR_TOP_LEFT:
            K(this._extendedFrustum.planes[l11.LEFT], S17, S17);
            break;
          case k7.FAR_BOTTOM_RIGHT:
          case k7.FAR_TOP_RIGHT:
          case k7.NEAR_BOTTOM_RIGHT:
          case k7.NEAR_TOP_RIGHT:
            K(this._extendedFrustum.planes[l11.RIGHT], S17, S17);
        }
        g2(S17, S17, a67.direction), this._renderCoordsHelper.intersectInfiniteManifold(p8(i61, S17), a67.zWithMargin, i61);
      }
    }
    if (this._extendedFrustum.updatePoints(u51), _5(u51[k7.NEAR_BOTTOM_LEFT], u51[k7.NEAR_BOTTOM_RIGHT], u51[k7.NEAR_TOP_RIGHT], N13), _5(u51[k7.NEAR_BOTTOM_RIGHT], u51[k7.NEAR_TOP_RIGHT], u51[k7.NEAR_TOP_LEFT], v26), P(W(N13), W(v26)) < 0) {
      const e65 = this._extendedFrustum.mutablePoints;
      this._aboveGround ? [e65[k7.NEAR_BOTTOM_LEFT], e65[k7.NEAR_BOTTOM_RIGHT]] = [e65[k7.NEAR_BOTTOM_RIGHT], e65[k7.NEAR_BOTTOM_LEFT]] : [e65[k7.NEAR_TOP_LEFT], e65[k7.NEAR_TOP_RIGHT]] = [e65[k7.NEAR_TOP_RIGHT], e65[k7.NEAR_TOP_LEFT]], this._extendedFrustum.updatePoints(e65);
    }
  }
  _extendedFrustumParameters() {
    return this._aboveGround ? this._extendedFrustumParametersAboveSurface() : this._extendedFrustumParametersBelowSurface();
  }
  _extendedFrustumParametersAboveSurface() {
    const e65 = this._surfaceElevation - P18;
    return { zWithMargin: e65, pointIndices: d20.planePointIndices.bottom, direction: -1, needsAltitudeAdjustment: (t68) => t68 > e65 };
  }
  _extendedFrustumParametersBelowSurface() {
    const e65 = this._surfaceElevation + P18;
    return { zWithMargin: e65, pointIndices: d20.planePointIndices.top, direction: 1, needsAltitudeAdjustment: (t68) => t68 < e65 };
  }
};
var R13 = 2;
var O17 = 6;
var g22 = 12;
var b17 = 0.95;
var P18 = 1;
var S17 = n7();
var N13 = h9();
var v26 = h9();
var H18 = new e4(Array, (e65) => {
  4 !== e65.length && (e65[0] = new t28(), e65[1] = new t28(), e65[2] = new t28(), e65[3] = new t28());
}, (e65) => {
  e65[0].release(), e65[1].release(), e65[2].release(), e65[3].release();
});

// node_modules/@arcgis/core/views/3d/layers/support/FeatureTileMeasurements3D.js
var j17 = class {
  constructor(e65) {
    this._camera = new $(), this._focusOnMap = [0, 0], this._screenRect = i5(), this._tileSize = e65.tileSize, this._renderCoordsHelper = e65.renderCoordsHelper, this._tilingScheme = e65.tilingScheme, this._visibility = new A26(e65.renderCoordsHelper);
  }
  begin(e65, t68, i60) {
    this._camera.copyFrom(e65), this._surfaceElevation = i60, this._focusOnMap[0] = t68.x, this._focusOnMap[1] = t68.y, a7(0, 0, e65.fullWidth, e65.fullHeight, this._screenRect), this._visibility.begin(this._camera, i60);
  }
  end() {
    this._visibility.end();
  }
  updateTile(e65) {
    e65.measures.visibility = this._visibility.calculate(e65), e65.measures.distance = U2(e65.extent, this._focusOnMap), e65.measures.visibility !== s30.INVISIBLE && this._updateScreenMeasure(e65);
  }
  _updateScreenMeasure(e65) {
    const t68 = T21, i60 = 1 << t68, r62 = e65.measures.screenRect;
    C2(r62);
    let s69 = 0;
    const o61 = e65.lij[0] + t68, n77 = e65.lij[1] << t68, a67 = e65.lij[2] << t68, l63 = this._tileSizeWithBias(e65), h46 = l63 * l63;
    for (let c58 = 0; c58 < i60; c58++)
      for (let t69 = 0; t69 < i60; t69++)
        if (s69 += this._computeScreenArea(e65, o61, n77 + c58, a67 + t69, r62), s69 > h46)
          return void (e65.measures.shouldSplit = true);
    e65.measures.shouldSplit = false;
  }
  _tileSizeWithBias(e65) {
    return e65.measures.visibility === s30.VISIBLE_WHEN_EXTENDED ? this._tileSize * y23 : this._tileSize;
  }
  _computeScreenArea(e65, t68, i60, r62, s69) {
    const o61 = e65.measures.visibility === s30.VISIBLE_WHEN_EXTENDED;
    this._projectToScreen(t68, i60, r62, o61, E29), C2(g23);
    for (let n77 = 0; n77 < 4; n77++)
      f5(g23, E29[n77]);
    return m3(s69, g23, s69), S7(E29[0], E29[1], E29[2]) + S7(E29[0], E29[2], E29[3]);
  }
  _projectToScreen(e65, t68, i60, r62, s69) {
    this._tilingScheme.ensureMaxLod(e65), this._tilingScheme.getExtent(e65, t68, i60, b18), this._toRenderCoords(b18, 0, 3, R14[0]), this._toRenderCoords(b18, 2, 3, R14[1]), this._toRenderCoords(b18, 2, 1, R14[2]), this._toRenderCoords(b18, 0, 1, R14[3]), r62 && (this._projectToPlane(R14, this._camera.frustum[l11.NEAR]), this._projectToPlane(R14, this._camera.frustum[l11.TOP]), this._projectToPlane(R14, this._camera.frustum[l11.BOTTOM]));
    for (let o61 = 0; o61 < 4; o61++)
      this._camera.projectToRenderScreen(R14[o61], M13), this._camera.renderToScreen(M13, s69[o61]);
  }
  _projectToPlane(e65, t68) {
    for (let i60 = 0; i60 < 4; i60++)
      C17[i60] = R5(t68, e65[i60]);
    const s69 = Math.max(C17[0], C17[1], C17[2], C17[3]);
    if (s69 > 0) {
      const o61 = g2(v27, W(t68), -s69);
      for (let t69 = 0; t69 < 4; t69++)
        u2(e65[t69], e65[t69], o61);
    }
  }
  _toRenderCoords(e65, t68, i60, r62) {
    return v27[0] = e65[t68], v27[1] = e65[i60], v27[2] = this._surfaceElevation, this._renderCoordsHelper.toRenderCoords(v27, this._tilingScheme.spatialReference, r62), r62;
  }
};
var g23 = i5();
var T21 = 2;
var y23 = 5;
var E29 = [i8(), i8(), i8(), i8()];
var b18 = i5();
var v27 = n7();
var R14 = [n7(), n7(), n7(), n7()];
var C17 = [0, 0, 0, 0];
var M13 = x7();

// node_modules/@arcgis/core/views/3d/layers/support/FeatureTileTree3D.js
var x26 = class extends m {
  get tilingScheme() {
    const e65 = this.tilingSchemeOwner.tilingScheme;
    if (!e65)
      return null;
    return e65.clone();
  }
  set filterExtent(e65) {
    if (null != e65 && !e65.spatialReference.equals(this.viewState.spatialReference))
      return void s3.getLogger(this).error("#extent", "extent spatial reference needs to be in the same spatial reference as the view");
    const t68 = this._get("filterExtent");
    if (t68 === e65 || null != t68 && e65 && t68.equals(e65))
      return;
    const i60 = null != e65 ? e65.clone() : null;
    this._set("filterExtent", i60), this._setDirty();
  }
  get _filterExtentRect() {
    if (null == this.filterExtent)
      return null;
    const e65 = i5();
    return u10(this.filterExtent, e65, this.tilingScheme.spatialReference), e65;
  }
  get _rootTileIds() {
    const { tilingScheme: e65 } = this;
    return this._filterExtentRect && e65 ? e65.rootTilesInExtent(this._filterExtentRect) : [[0, 0, 0]];
  }
  set suspended(e65) {
    e65 !== this._get("suspended") && (this._set("suspended", e65), this._setDirty());
  }
  get updating() {
    return this._dirty || !!this._pendingTiles;
  }
  constructor(e65) {
    super(e65), this.tiles = new V2(), this.tileSize = 512, this._idToTile = /* @__PURE__ */ new Map(), this._handles = new t3(), this._clients = /* @__PURE__ */ new Set(), this._dirty = false, this._pendingTiles = null, this._newTiles = new l2();
  }
  initialize() {
    this._handles.add([l6(() => [this.tilingScheme, this.tileSize], () => this._reset(), U3), l6(() => {
      var _a, _b, _c;
      return [this.tileSize, (_a = this.cameraOnSurface) == null ? void 0 : _a.location, this.tilingScheme, (_b = this.viewState) == null ? void 0 : _b.contentCamera, (_c = this.focus) == null ? void 0 : _c.location];
    }, () => this._setDirty(), w3)]), this.scheduler && (this._frameWorker = this.scheduler.registerTask(I3.FEATURE_TILE_TREE, this));
  }
  destroy() {
    this._frameWorker = o(this._frameWorker), this._handles = l(this._handles);
  }
  addClient() {
    const e65 = C18();
    return this._clients.add(e65), 1 === this._clients.size && this._setDirty(), e3(() => this._removeClient(e65));
  }
  _removeClient(e65) {
    this._clients.delete(e65), this._hasClients || this._clear();
  }
  get _hasClients() {
    return this._clients.size > 0;
  }
  _setDirty() {
    !this._hasClients || this.suspended || this._dirty || (this._frameWorker ? (this._dirty = true, this.notifyChange("updating")) : this.runTask(C4));
  }
  _clear() {
    this.tiles.removeAll(), this._idToTile.clear(), this._reset(), this._dirty = false, this.notifyChange("updating");
  }
  get running() {
    return this.updating;
  }
  runTask(e65) {
    this._dirty = false, this._pendingTiles || (this._startUpdate(), null != this._frameWorker && (this._frameWorker.priority = I3.FEATURE_TILE_TREE_ACTIVE)), this._subdivideTilesForView(e65), this._pendingTiles || null == this._frameWorker || (this._frameWorker.priority = I3.FEATURE_TILE_TREE), this.notifyChange("updating");
  }
  _startUpdate() {
    if (this.suspended)
      return;
    if (!this.tilingScheme)
      return void this._clear();
    this._tileMeasurements || (this._tileMeasurements = new j17({ renderCoordsHelper: this.renderCoordsHelper, tilingScheme: this.tilingScheme, tileSize: this.tileSize }));
    const e65 = this.viewState.contentCamera;
    this._tileMeasurements.begin(e65, this.focus.location, this.cameraOnSurface.location.z ?? 0), this._pendingTiles = this._getRootTiles();
  }
  _reset() {
    this._newTiles.clear(), this._tileMeasurements = null, this._pendingTiles = null, this._setDirty();
  }
  _getRootTiles() {
    const { tilingScheme: e65 } = this;
    return this._rootTileIds.map((t68) => new t28(t68[0], t68[1], t68[2], e65));
  }
  _purgeHorizonTiles(e65) {
    e65.sort((e66, t68) => {
      const i60 = e66.measures.screenRect, s69 = t68.measures.screenRect;
      return i60[1] + i60[3] - (s69[1] + s69[3]);
    }), C2(O18);
    for (let t68 = 0; t68 < e65.length; t68++)
      if (m3(O18, e65.data[t68].measures.screenRect, O18), s13(O18) > I19)
        return e65.data.slice(t68, e65.length);
    return [];
  }
  _subdivideTilesForView(e65) {
    if (!this._pendingTiles)
      return;
    const { tilingScheme: t68 } = this;
    for (; this._pendingTiles.length > 0 && !e65.done; ) {
      const i60 = this._pendingTiles.pop();
      e65.madeProgress(), this._filterExtentRect && !q(this._filterExtentRect, i60.extent) || (this._tileMeasurements.updateTile(i60), i60.measures.visibility !== s30.INVISIBLE && (i60.measures.shouldSplit ? (t68.ensureMaxLod(i60.lij[0] + 1), this._pendingTiles.push(...i60.getChildren())) : this._newTiles.push(i60)));
    }
    0 === this._pendingTiles.length && (this._updateTiles(this._purgeHorizonTiles(this._newTiles)), this._newTiles.clear(), this._tileMeasurements.end(), this._pendingTiles = null);
  }
  _updateTiles(e65) {
    for (const s69 of this.tiles.items)
      s69.used = false;
    const t68 = e65.filter((e66) => {
      const t69 = this._idToTile.get(e66.id);
      return t69 ? (t69.copyMeasurementsFrom(e66), t69.used = true) : this._idToTile.set(e66.id, e66), !t69;
    }), i60 = this.tiles.items.filter((e66) => !e66.used && (this._idToTile.delete(e66.id), true));
    this.tiles.removeMany(i60), this.tiles.addMany(t68), this._sortTiles();
  }
  _sortTiles() {
    this.viewState.fixedContentCamera || this.tiles.sort((e65, t68) => e65.measures.visibility !== t68.measures.visibility ? e65.measures.visibility === s30.VISIBLE_ON_SURFACE ? -1 : 1 : e65.measures.distance - t68.measures.distance), this.tiles.forEach((e65, t68) => e65.loadPriority = t68);
  }
};
e([y2({ constructOnly: true })], x26.prototype, "scheduler", void 0), e([y2({ constructOnly: true })], x26.prototype, "renderCoordsHelper", void 0), e([y2({ constructOnly: true })], x26.prototype, "tilingSchemeOwner", void 0), e([y2({ constructOnly: true })], x26.prototype, "cameraOnSurface", void 0), e([y2({ constructOnly: true })], x26.prototype, "focus", void 0), e([y2({ constructOnly: true })], x26.prototype, "viewState", void 0), e([y2({ constructOnly: true })], x26.prototype, "terrain", void 0), e([y2()], x26.prototype, "tiles", void 0), e([y2()], x26.prototype, "tileSize", void 0), e([y2({ readOnly: true })], x26.prototype, "tilingScheme", null), e([y2()], x26.prototype, "filterExtent", null), e([y2({ readOnly: true })], x26.prototype, "_filterExtentRect", null), e([y2({ readOnly: true })], x26.prototype, "_rootTileIds", null), e([y2({ value: false })], x26.prototype, "suspended", null), e([y2({ readOnly: true })], x26.prototype, "updating", null), x26 = e([a4("esri.views.3d.layers.support.FeatureTileTree3D")], x26);
var j18 = 0;
function C18() {
  return j18++;
}
var O18 = i5();
var I19 = 10;

// node_modules/@arcgis/core/views/3d/state/ViewState.js
var _25 = class extends m {
  constructor() {
    super(...arguments), this._propertiesPool = new o25({ camera: $ }, this), this._lastSeenCameraProjectionValues = new $(), this.mode = I2.ANIMATING, this._cssCamera = new $(), this._camera = new $(), this.rasterPixelRatio = 1, this.contentPixelRatio = 1, this.events = new n8(), this.viewingMode = l13.Global, this._cameraChanged = false, this._updateQueue = new Array(), this._processingUpdates = false;
  }
  init(e65, t68) {
    this._set("viewingMode", e65), this._set("spatialReference", t68), this._set("constraints", new c22({ mode: this.viewingMode }));
  }
  exit() {
    var _a;
    (_a = this.cameraController) == null ? void 0 : _a.destroy(), this.cameraController = null, this._propertiesPool.destroy(), this._propertiesPool = new o25({ camera: $ }, this);
  }
  destroy() {
    var _a, _b;
    (_a = this.cameraController) == null ? void 0 : _a.destroy(), this.cameraController = null, (_b = this._propertiesPool) == null ? void 0 : _b.destroy(), this._propertiesPool = null;
  }
  createInitialCamera() {
    if (this.viewingMode === l13.Global) {
      const e65 = A3(this.spatialReference).radius;
      this.camera = new $({ eye: r4(4 * e65, 0, 0), center: r4(e65, 0, 0), up: r4(0, 0, 1) });
    } else
      this.camera = new $({ eye: r4(0, 0, 100), center: r4(0, 0, 0), up: r4(0, 1, 0) });
  }
  get animation() {
    return this.cameraController instanceof a43 && null != this.cameraController.viewAnimation ? this.cameraController.viewAnimation : null;
  }
  get camera() {
    return this._camera;
  }
  get cssCamera() {
    const e65 = this._cssCamera.copyFrom(this.camera), { height: t68, width: r62, pixelRatio: o61 } = this.camera;
    return e65.pixelRatio = 1, e65.height = Math.round(t68 / o61), e65.width = Math.round(r62 / o61), e65;
  }
  set camera(e65) {
    e65 !== v28 && v28.copyFrom(e65), v28.computeUp(this.viewingMode), this.events.emit("before-camera-change", v28);
    const t68 = this._camera;
    if (this._cameraProjectionChanged(this._lastSeenCameraProjectionValues, v28) && (this._lastSeenCameraProjectionValues.copyFrom(v28), this.events.emit("camera-projection-changed", this._lastSeenCameraProjectionValues)), !t68.equals(v28) && (this._camera = this._propertiesPool.get("camera").copyFrom(v28), this._cameraChanged = !t68.almostEquals(v28), this._cameraChanged)) {
      const e66 = y(() => {
        this._cameraChanged = false, e66.remove();
      });
    }
  }
  get pixelRatio() {
    return this.camera.pixelRatio;
  }
  get alignPixelEnabled() {
    return this.pixelRatio === this.rasterPixelRatio && this.mode === I2.IDLE;
  }
  get updating() {
    return !this.alignPixelEnabled;
  }
  get contentCamera() {
    return this._contentCamera ?? this.camera;
  }
  set contentCamera(e65) {
    this._contentCamera = null != e65 ? e65.clone() : null;
  }
  get fixedContentCamera() {
    return null != this._contentCamera;
  }
  get isGlobal() {
    return this.viewingMode === l13.Global;
  }
  get isLocal() {
    return this.viewingMode === l13.Local;
  }
  get navigating() {
    return !(!this.cameraController || !this.cameraController.isInteractive);
  }
  get stationary() {
    return !this._cameraChanged && !this.navigating;
  }
  get cameraController() {
    return this._get("cameraController");
  }
  set cameraController(e65) {
    var _a;
    this.stopActiveCameraController() ? ((_a = this.cameraController) == null ? void 0 : _a.destroy(), e65 && (this.removeHandles(w23), this.addHandles(f6(() => e65.state === s50.Finished || e65.state === s50.Stopped, () => {
      this._set("cameraController", null), this.updateCamera((t68) => e65.onControllerEnd(t68));
    }, { sync: true, once: true }), w23), e65.onControllerStart(this.camera)), this._set("cameraController", e65)) : e65 && (e65.state = s50.Rejected);
  }
  switchCameraController(e65) {
    return this.cameraController = e65, e65.state !== s50.Rejected;
  }
  stopActiveCameraController() {
    return !(this.cameraController && !this.cameraController.stopController());
  }
  updateCamera(e65) {
    this._updateQueue.push(e65), this._processUpdateQueue();
  }
  _processUpdateQueue() {
    if (0 === this._updateQueue.length || this._processingUpdates)
      return;
    this._processingUpdates = true;
    const e65 = this._updateQueue.shift();
    v28.copyFrom(this._get("camera")), e65(v28), this.camera = v28, this._processingUpdates = false, this._processUpdateQueue();
  }
  _cameraProjectionChanged(e65, t68) {
    return e65.fov !== t68.fov || (e65.fullViewport[0] !== t68.fullViewport[0] || e65.fullViewport[1] !== t68.fullViewport[1] || e65.fullViewport[2] !== t68.fullViewport[2] || e65.fullViewport[3] !== t68.fullViewport[3] || (e65.padding[ht.TOP] !== t68.padding[ht.TOP] || e65.padding[ht.RIGHT] !== t68.padding[ht.RIGHT] || e65.padding[ht.BOTTOM] !== t68.padding[ht.BOTTOM] || e65.padding[ht.LEFT] !== t68.padding[ht.LEFT]));
  }
};
e([y2()], _25.prototype, "mode", void 0), e([y2({ readOnly: true, type: a25 })], _25.prototype, "animation", null), e([y2({ type: $ })], _25.prototype, "camera", null), e([y2({ type: $ })], _25.prototype, "cssCamera", null), e([y2()], _25.prototype, "_cssCamera", void 0), e([y2()], _25.prototype, "_camera", void 0), e([y2({ readOnly: true })], _25.prototype, "pixelRatio", null), e([y2()], _25.prototype, "rasterPixelRatio", void 0), e([y2()], _25.prototype, "contentPixelRatio", void 0), e([y2({ readOnly: true })], _25.prototype, "alignPixelEnabled", null), e([y2({ readOnly: true })], _25.prototype, "updating", null), e([y2({})], _25.prototype, "_contentCamera", void 0), e([y2({ type: $ })], _25.prototype, "contentCamera", null), e([y2({ readOnly: true })], _25.prototype, "fixedContentCamera", null), e([y2({ readOnly: true })], _25.prototype, "constraints", void 0), e([y2({ readOnly: true })], _25.prototype, "events", void 0), e([y2({ readOnly: true })], _25.prototype, "isGlobal", null), e([y2({ readOnly: true })], _25.prototype, "isLocal", null), e([y2({ readOnly: true })], _25.prototype, "viewingMode", void 0), e([y2({ readOnly: true })], _25.prototype, "spatialReference", void 0), e([y2()], _25.prototype, "navigating", null), e([y2()], _25.prototype, "stationary", null), e([y2()], _25.prototype, "_cameraChanged", void 0), e([y2()], _25.prototype, "cameraController", null), _25 = e([a4("esri.views.3d.state.ViewState")], _25);
var f35 = _25;
var v28 = new $();
var w23 = "ViewStateHandles";

// node_modules/@arcgis/core/views/3d/state/helpers/SceneIntersectionHelper.js
var b19 = class {
  constructor(t68, r62, n77) {
    this.viewingMode = t68, this._forEachLayer = r62, this._view = n77, this._externalIntersectionHandlers = new l2(), this._tolerance = w14, this._tmpRay = d10(), this._tmpRegion = i5(), this._validateHUDIntersector = A14(this.viewingMode), this._validateHUDIntersector.options.hud = false;
  }
  intersectScreen(e65, t68, r62) {
    return this.intersectRay(this._getPickRay(e65, this._tmpRay), U17(this.viewingMode), t68, r62);
  }
  intersectScreenFreePointFallback(e65, t68, r62) {
    return this.intersectRayFreePointFallback(this._getPickRay(e65, this._tmpRay), t68, r62);
  }
  intersectRayFreePointFallback(e65, t68, r62) {
    return this.intersectRay(e65, U17(this.viewingMode), t68, r62) || this._intersectRayFreePointLocal(e65, t68);
  }
  intersectRay(e65, t68, r62, n77) {
    return t68.options.selectionMode = false, t68.options.store = t25.MIN, this.computeIntersection(e65, t68, n77), !!t68.results.min && t68.results.min.getIntersectionPoint(r62);
  }
  getCenterRayWithSubpixelOffset(e65, t68, r62 = 0.5, n77 = 0.5) {
    return e65.getRenderCenter(T22, r62, n77), T22[0] += 0.0466, T22[1] -= 0.0123, g10(e65, T22, t68);
  }
  intersectIntersectorScreen(e65, t68, r62) {
    this.computeIntersection(this._getPickRay(e65, this._tmpRay), t68, r62);
  }
  intersectToolIntersectorScreen(e65, t68, r62) {
    const n77 = this._getPickRay(e65, this._tmpRay);
    this.intersectToolIntersectorRay(n77, t68, r62);
  }
  intersectToolIntersectorRay(e65, t68, r62) {
    t68.options.selectionMode = true, this.computeIntersection(e65, t68, r62);
    const n77 = t68.results.min;
    !!this._view.basemapTerrain && this._view.basemapTerrain.opaque || o28(n77) && n77.intersector !== i20.TERRAIN || (t68.options.selectionMode = false, this.computeIntersection(e65, t68, r62));
  }
  setTolerance(e65 = w14) {
    this._tolerance = e65;
  }
  addIntersectionHandler(e65) {
    this._externalIntersectionHandlers.push(e65), this._externalIntersectionHandlers.sort((e66, t68) => e66.type === i20.TERRAIN ? 1 : t68.type === i20.TERRAIN ? -1 : 0);
  }
  removeIntersectionHandler(e65) {
    null != this._externalIntersectionHandlers.removeUnordered(e65) && this._externalIntersectionHandlers.sort((e66, t68) => e66.type === i20.TERRAIN ? 1 : t68.type === i20.TERRAIN ? -1 : 0);
  }
  _getPickRay(e65, t68) {
    const r62 = this._view.state.camera;
    return i22(r62, e65, t68);
  }
  _intersectRayFreePointLocal(e65, t68) {
    return this.viewingMode !== l13.Local || null == e65 || u2(t68, e65.origin, z2(c7.get(), e65.direction)), false;
  }
  intersectElevationFromScreen(e65, t68, r62 = 0, n77 = null) {
    return this._intersectElevation(this._getPickRay(e65, this._tmpRay), t68, r62, n77);
  }
  _intersectElevation(e65, r62, i60 = 0, s69 = null) {
    if (null == e65)
      return null;
    const o61 = null != r62 ? r62.mode : "absolute-height", l63 = (r62 == null ? void 0 : r62.offset) ?? 0, c58 = "on-the-ground" !== o61 ? l63 + i60 : 0, a67 = c58 / this._view.renderCoordsHelper.unitInMeters;
    if ("absolute-height" === o61) {
      if (this._view.renderCoordsHelper.intersectInfiniteManifold(e65, c58, L18)) {
        const e66 = this._view.computeMapPointFromVec3d(L18);
        return e66.z ?? (e66.z = 0), e66.z -= l63, e66;
      }
      return null;
    }
    const u51 = this._view.state.camera, h46 = p5(c7.get());
    u51.projectToRenderScreen(e65.origin, h46);
    const d52 = new H19(null, this._forEachLayer), m44 = this._view.slicePlane, y32 = null != m44 ? c18(m44) : null, g36 = A14(this.viewingMode);
    g36.options.store = t25.MIN, g36.options.verticalOffset = a67;
    const f49 = e65.origin, I28 = u2(c7.get(), f49, e65.direction);
    g36.reset(f49, I28, u51), g36.point = h46;
    const b26 = s69 ? "type" in s69 && "graphics" === s69.type ? (e66) => e66.layerUid !== s69.uid : (e66) => e66.graphicUid !== s69.uid : null;
    switch (o61) {
      case "relative-to-scene": {
        const e66 = (e67) => (!b26 || b26(e67)) && !!e67.lastValidElevationBB;
        g36.intersect(d52.layers, h46, this._tolerance, null, e66), this._externalIntersectionHandlers.forAll((e67) => {
          if (e67.type === i20.I3S || e67.type === i20.TERRAIN) {
            const t68 = e67.slicePlaneEnabled ? y32 : null;
            e67.intersect(g36, t68, g36.rayBegin, g36.rayEnd, h46);
          }
        });
        break;
      }
      case "on-the-ground":
      case "relative-to-ground":
        this._externalIntersectionHandlers.forAll((e66) => {
          if (e66.isGround) {
            const t68 = e66.slicePlaneEnabled ? y32 : null;
            e66.intersect(g36, t68, g36.rayBegin, g36.rayEnd, h46);
          }
        });
    }
    if (g36.results.min.getIntersectionPoint(L18)) {
      const e66 = this._view.computeMapPointFromVec3d(L18);
      return e66.z = i60, e66;
    }
    return null;
  }
  computeIntersection(e65, r62, i60) {
    var _a;
    if (null == e65)
      return;
    const s69 = this._view.state.camera, o61 = p5(c7.get());
    s69.projectToRenderScreen(e65.origin, o61);
    const l63 = new H19(i60, this._forEachLayer);
    r62.options.selectOpaqueTerrainOnly = !i60 || !("include" in i60 || "exclude" in i60);
    const c58 = e65.origin, a67 = u2(c7.get(), e65.origin, e65.direction);
    r62.reset(c58, a67, s69), r62.intersect(l63.layers, o61, this._tolerance);
    const u51 = this._view.slicePlane, h46 = null != u51 ? c18(u51) : null;
    r62.intersect(l63.sliceableLayers, o61, this._tolerance, h46);
    const d52 = i60 && (i60.requiresGroundFeedback || i60.enableDraped);
    this._externalIntersectionHandlers.forAll((e66) => {
      const t68 = e66.layerUid, n77 = Array.isArray(t68), i61 = n77 ? t68 : [t68];
      n77 && (r62.options.filteredLayerUids = []);
      let s70 = false;
      for (const o62 of i61) {
        !l63.filterLayerUid(o62) ? n77 && r62.options.filteredLayerUids.push(o62) : s70 = true;
      }
      if (r62.options.isFiltered = !s70, e66.isGround && d52 || !r62.options.isFiltered) {
        const t69 = e66.slicePlaneEnabled ? h46 : null;
        e66.intersect(r62, t69, c58, a67, o61);
      }
    });
    const m44 = c7.get(), y32 = this._view.basemapTerrain;
    if (i60 && i60.enableDraped && null != y32.spatialReference && r62.results.ground.getIntersectionPoint(m44)) {
      const e66 = y32.overlayManager.renderer, t68 = this._view.renderCoordsHelper.spatialReference, n77 = c7.get();
      this._view.renderCoordsHelper.fromRenderCoords(m44, n77, y32.spatialReference), n77[2] = ((_a = this._view.elevationProvider) == null ? void 0 : _a.getElevation(m44[0], m44[1], m44[2], t68, "ground")) ?? 0, e66.intersect(r62, n77, r62.results.ground, (e67) => l63.filterRenderGeometry(e67));
    }
    r62.sortResults(), this._processHUDResults(r62);
  }
  _processHUDResults(e65) {
    const t68 = e65.results.hud;
    e9(this._tmpRegion, J2);
    const r62 = this._view.state.camera, n77 = [], i60 = this._tmpRegion, s69 = (e66) => {
      const t69 = new j19(e66);
      r62.projectToRenderScreen(e66.target.center, t69.screenPoint), t69.screenPoint[0] = Math.floor(t69.screenPoint[0]), t69.screenPoint[1] = Math.floor(t69.screenPoint[1]), n77.push(t69), f5(i60, t69.screenPoint);
    };
    e65.sortResults(t68.all), null != t68.min.dist && s69(t68.min);
    for (const l63 of t68.all)
      t68.min.target.object !== l63.target.object && t68.max.target.object !== l63.target.object && s69(l63);
    if (null != t68.max.dist && t68.max.target.object !== t68.min.target.object && s69(t68.max), !n77.length)
      return;
    i60[0] === i60[2] && (i60[2] += 1), i60[1] === i60[3] && (i60[3] += 1);
    const o61 = r62.fullWidth, d52 = r62.fullHeight, p54 = Math.max(0, i60[0] - P19), m44 = Math.max(0, i60[1] - P19), y32 = Math.min(M3(i60) + 2 * P19, o61 - p54), g36 = Math.min(s13(i60) + 2 * P19, d52 - m44), f49 = new Uint8Array(y32 * g36 * 4);
    this._view._stage.renderer.readHUDVisibility(p54, m44, y32, g36, f49);
    let _33 = true;
    const v37 = null == e65.results.max.dist;
    let I28 = 0;
    for (const l63 of n77)
      for (const t69 of M14) {
        if (f49[4 * (Math.min(l63.screenPoint[0] + t69[0], o61) - i60[0] + (Math.min(l63.screenPoint[1] + t69[1], d52) - i60[1]) * y32)]) {
          _33 && (e65.results.min.copy(l63.result), _33 = false), v37 && e65.results.max.copy(l63.result), e65.options.store === t25.ALL && e65.results.all.splice(I28++, 0, l63.result);
          break;
        }
      }
  }
};
var P19 = 1;
var M14 = (() => {
  const e65 = [], t68 = P19;
  for (let r62 = -t68; r62 <= t68; r62++)
    for (let n77 = -t68; n77 <= t68; n77++)
      e65.push([n77 + t68, r62 + t68]);
  return e65;
})();
var j19 = class {
  constructor(e65) {
    this.result = e65, this.screenPoint = x7();
  }
};
var x27;
function U17(e65) {
  return x27 && x27.viewingMode === e65 || (x27 = A14(e65)), x27;
}
var H19 = class {
  constructor(e65, t68) {
    this.layers = new Array(), this.sliceableLayers = new Array(), this.include = e65 == null ? void 0 : e65.include, this.exclude = e65 == null ? void 0 : e65.exclude, t68((e66) => {
      e66.pickable && this.filterLayerUid(e66.apiLayerUid) && (e66.sliceable ? this.sliceableLayers : this.layers).push(e66);
    });
  }
  filterLayerUid(e65) {
    const { include: t68, exclude: r62 } = this;
    return null == e65 ? null == t68 && null == r62 : (null == t68 || t68.has(e65)) && (null == r62 || !r62.has(e65));
  }
  filterRenderGeometry(e65) {
    return this.filterLayerUid(e65.layerUid);
  }
};
function E30(e65) {
  return "object" == typeof e65 && "intersect" in e65;
}
var L18 = n7();
var T22 = x7();

// node_modules/@arcgis/core/views/3d/support/CombinedElevationProvider.js
var c43 = class extends n8.EventedMixin(m) {
  get spatialReference() {
    var _a, _b;
    return (_b = (_a = this.view) == null ? void 0 : _a.basemapTerrain) == null ? void 0 : _b.spatialReference;
  }
  constructor(e65) {
    super(e65), this._im = new Array(), this._ground = new Array(), this._scene = new Array(), this._handles = /* @__PURE__ */ new Map(), this.lastElevationQuery = null, this.elevationCacheEnabled = false;
  }
  destroy() {
    this._elevationQueryCached = l(this._elevationQueryCached);
  }
  get _elevationQuery() {
    return null == this._elevationQueryCached && (this._elevationQueryCached = new l19(this.view.resourceController.scheduler, this.view.spatialReference, () => this.view.map && this.view.map.ground, { maximumAutoTileRequests: 4 })), this._elevationQueryCached;
  }
  enableElevationCache(e65) {
    e65 || (this.lastElevationQuery = null), this.elevationCacheEnabled = e65;
  }
  getElevation(e65, t68, r62, s69, i60) {
    if (this.elevationCacheEnabled && null != this.lastElevationQuery) {
      const o62 = this.lastElevationQuery;
      if (e65 === o62.x && t68 === o62.y && r62 === o62.z && S4(s69, o62.spatialReference) && i60 === o62.queryContext)
        return o62.result;
    }
    let o61 = null;
    return o61 = u36(o61, this._im, e65, t68, r62, s69, i60), null == o61 && (o61 = u36(o61, this._ground, e65, t68, r62, s69, i60)), "scene" === i60 && (o61 = u36(o61, this._scene, e65, t68, r62, s69, i60)), this.elevationCacheEnabled && (this.lastElevationQuery = { x: e65, y: t68, z: r62, spatialReference: s69, queryContext: i60, result: o61 }), o61;
  }
  getSphereElevationBounds(e65, t68) {
    let r62 = 1 / 0, s69 = -1 / 0;
    for (const i60 of [this._im, this._ground, this._scene])
      i60.forEach((i61) => {
        if (i61.getSphereElevationBounds) {
          const o61 = i61.getSphereElevationBounds(e65, t68);
          null != o61 && (r62 = Math.min(r62, o61.min), s69 = Math.max(s69, o61.max));
        }
      });
    return { min: r62, max: s69 };
  }
  queryElevation(e65, t68, r62, s69, n77, a67 = null, l63 = 0) {
    const h46 = C();
    return this._elevationQuery.queryElevation(e65, t68, a67, l63).then((i60) => {
      "scene" === n77 && (i60 = u36(i60, this._scene, e65, t68, r62, s69, n77)), h46.resolve(i60);
    }).catch((i60) => {
      d(i60) ? h46.reject(i60) : h46.resolve(this.getElevation(e65, t68, r62, s69, n77));
    }), h46.promise;
  }
  register(e65, t68) {
    this._handles.set(t68, t68.on("elevation-change", (e66) => this.emit("elevation-change", e66))), this._providersFromContext(e65).push(t68);
  }
  unregister(e65) {
    var _a;
    this._handles.has(e65) && ((_a = this._handles.get(e65)) == null ? void 0 : _a.remove(), this._handles.delete(e65));
    for (const t68 of [this._im, this._ground, this._scene]) {
      const r62 = t68.indexOf(e65);
      r62 > -1 && t68.splice(r62, 1);
    }
  }
  _providersFromContext(e65) {
    switch (e65) {
      case "ground":
        return this._ground;
      case "im":
        return this._im;
      case "scene":
        return this._scene;
    }
  }
};
function u36(e65, t68, r62, s69, i60, o61, n77) {
  for (const a67 of t68) {
    const t69 = a67.getElevation(r62, s69, i60, o61, n77);
    null != t69 && (e65 = null != e65 ? Math.max(t69, e65) : t69);
  }
  return e65;
}
e([y2({ constructOnly: true })], c43.prototype, "view", void 0), e([y2()], c43.prototype, "spatialReference", null), c43 = e([a4("esri.views.3d.support.CombinedElevationProvider")], c43);

// node_modules/@arcgis/core/views/3d/support/DisplayQualityProfile.js
var a48 = class _a {
  static isValidProfile(e65) {
    return e65 in _a.profiles;
  }
  static getDefaultProfile() {
    return has("esri-iPhone") ? "low" : "medium";
  }
  static apply(e65, i60) {
    const o61 = _a.profiles[e65];
    i60.graphics3D.maxTotalNumberOfFeatures = o61.graphics3D.maxTotalNumberOfFeatures, i60.graphics3D.maxTotalNumberOfPrimitives = o61.graphics3D.maxTotalNumberOfPrimitives, i60.graphics3D.polygonLodFactor = o61.graphics3D.polygonLodFactor, i60.graphics3D.polylineLodFactor = o61.graphics3D.polylineLodFactor, i60.graphics3D.snapshotAvailable = o61.graphics3D.snapshotAvailable, i60.graphics3D.skipHighSymbolLods = o61.graphics3D.skipHighSymbolLods;
    const t68 = i60.sceneService.object, r62 = o61.sceneService.object;
    t68.lodFactor = r62.lodFactor, t68.lodCrossfadeinDuration = r62.lodCrossfadeinDuration, t68.lodCrossfadeoutDuration = r62.lodCrossfadeoutDuration, t68.lodCrossfadeUncoveredDuration = r62.lodCrossfadeUncoveredDuration, i60.sceneService.point.lodFactor = o61.sceneService.point.lodFactor, i60.sceneService.integratedMesh.lodFactor = o61.sceneService.integratedMesh.lodFactor, i60.sceneService.pointCloud.lodFactor = o61.sceneService.pointCloud.lodFactor, i60.sceneService.uncompressedTextureDownsamplingEnabled = o61.sceneService.uncompressedTextureDownsamplingEnabled, i60.tiledSurface.lodBias = o61.tiledSurface.lodBias, i60.tiledSurface.angledSplitBias = o61.tiledSurface.angledSplitBias, i60.tiledSurface.reduceTileLevelDifferences = o61.tiledSurface.reduceTileLevelDifferences, i60.tiledSurface.textureFadeDuration = o61.tiledSurface.textureFadeDuration, i60.heatmap.pixelRatio = o61.heatmap.pixelRatio, i60.heatmap.maxTotalNumberOfFeatures = o61.heatmap.maxTotalNumberOfFeatures, i60.fadeDuration = o61.fadeDuration, i60.antialiasingEnabled = o61.antialiasingEnabled, i60.physicallyBasedRenderingEnabled = o61.physicalBasedRenderingEnabled, i60.highQualityTransparency = o61.highQualityTransparency, i60.highResolutionAtmosphere = o61.highResolutionAtmosphere, i60.reflections = o61.reflections, i60.ambientOcclusion = o61.ambientOcclusion, i60.memoryLimit = o61.memoryLimit, i60.additionalCacheMemory = o61.additionalCacheMemory, i60.frameRate = o61.frameRate, i60.maximumPixelRatio = o61.maximumPixelRatio;
  }
};
function i52() {
  const a67 = !!has("esri-mobile"), i60 = !!has("ios"), o61 = n4(400);
  return { low: { graphics3D: { maxTotalNumberOfFeatures: 25e3, maxTotalNumberOfPrimitives: 85e4, polygonLodFactor: 0.5, polylineLodFactor: 1, snapshotAvailable: false, skipHighSymbolLods: true }, heatmap: { pixelRatio: 0.125, maxTotalNumberOfFeatures: 25e3 }, sceneService: { object: { lodFactor: 0.2, lodCrossfadeinDuration: n4(0), lodCrossfadeoutDuration: n4(0), lodCrossfadeUncoveredDuration: n4(0) }, point: { lodFactor: 1 }, integratedMesh: { lodFactor: 0.6 }, pointCloud: { lodFactor: 0.5 }, uncompressedTextureDownsamplingEnabled: true }, tiledSurface: { lodBias: -1, angledSplitBias: 0.5, reduceTileLevelDifferences: false, textureFadeDuration: n4(0) }, fadeDuration: n4(0), antialiasingEnabled: false, physicalBasedRenderingEnabled: false, highQualityTransparency: false, highResolutionAtmosphere: false, reflections: false, ambientOcclusion: false, memoryLimit: 200, additionalCacheMemory: 0, frameRate: 0, maximumPixelRatio: 1 }, medium: { graphics3D: { maxTotalNumberOfFeatures: 5e4, maxTotalNumberOfPrimitives: 17e5, polygonLodFactor: a67 ? 0.8 : 1, polylineLodFactor: a67 ? 1.2 : 1.5, snapshotAvailable: !i60, skipHighSymbolLods: false }, heatmap: { pixelRatio: 0.25, maxTotalNumberOfFeatures: 5e4 }, sceneService: { object: { lodFactor: 1, lodCrossfadeinDuration: n4(0), lodCrossfadeoutDuration: n4(0), lodCrossfadeUncoveredDuration: o61 }, point: { lodFactor: 1 }, integratedMesh: { lodFactor: 1 }, pointCloud: { lodFactor: 1 }, uncompressedTextureDownsamplingEnabled: a67 }, tiledSurface: { lodBias: 0, angledSplitBias: 1, reduceTileLevelDifferences: !has("disable-feature:reduce-map-tile-levels"), textureFadeDuration: o61 }, fadeDuration: o61, antialiasingEnabled: true, physicalBasedRenderingEnabled: true, highQualityTransparency: true, highResolutionAtmosphere: false, reflections: false, ambientOcclusion: false, memoryLimit: a67 ? 600 : 750, additionalCacheMemory: a67 ? -100 : 150, frameRate: 0, maximumPixelRatio: 1 }, high: { graphics3D: { maxTotalNumberOfFeatures: 5e4, maxTotalNumberOfPrimitives: 17e5, polygonLodFactor: a67 ? 1.2 : 2, polylineLodFactor: a67 ? 1.2 : 2, snapshotAvailable: !i60, skipHighSymbolLods: false }, heatmap: { pixelRatio: 0.5, maxTotalNumberOfFeatures: 5e4 }, sceneService: { object: { lodFactor: 1, lodCrossfadeinDuration: n4(0), lodCrossfadeoutDuration: n4(0), lodCrossfadeUncoveredDuration: o61 }, point: { lodFactor: 1 }, integratedMesh: { lodFactor: 1 }, pointCloud: { lodFactor: 1 }, uncompressedTextureDownsamplingEnabled: false }, tiledSurface: { lodBias: 0, angledSplitBias: 1, reduceTileLevelDifferences: !has("disable-feature:reduce-map-tile-levels"), textureFadeDuration: o61 }, fadeDuration: o61, antialiasingEnabled: true, physicalBasedRenderingEnabled: true, highQualityTransparency: true, highResolutionAtmosphere: true, reflections: true, ambientOcclusion: true, memoryLimit: a67 ? 900 : 1500, additionalCacheMemory: a67 ? -150 : 0, frameRate: 0, maximumPixelRatio: a67 ? 1 : 1 / 0 } };
}
a48.test = { reset() {
  const e65 = i52();
  for (const i60 of Object.keys(e65))
    a48.profiles[i60] = e65[i60];
} }, function(e65) {
  e65.profiles = i52();
}(a48 || (a48 = {}));
var o48 = a48;

// node_modules/@arcgis/core/views/3d/support/HighlightOptions.js
var e44 = new h6([0, 255, 255]);
var a49 = new h6([0, 0, 0]);
var l42 = 1;
var h35 = 0.25;
var d41 = 0.4;
var y24 = 0.2;
var n54 = class extends m {
  constructor() {
    super(...arguments), this.color = e44.clone(), this.haloColor = null, this.haloOpacity = l42, this.fillOpacity = h35, this.shadowOpacity = d41, this.shadowColor = a49.clone(), this.shadowDifference = y24;
  }
  static toEngineOptions(o61) {
    const r62 = h6.toUnitRGBA(o61.color ?? e44), s69 = null != o61.haloColor ? h6.toUnitRGBA(o61.haloColor) : r62, i60 = h6.toUnitRGBA(o61.shadowColor ?? a49), n77 = o61.haloOpacity ?? l42, f49 = o61.fillOpacity ?? h35, O26 = o61.shadowOpacity ?? d41, u51 = o61.shadowDifference ?? y24;
    return { color: r34(r62[0], r62[1], r62[2], r62[3]), haloColor: r34(s69[0], s69[1], s69[2], s69[3]), haloOpacity: n77, haloOpacityOccluded: 0.25 * n77, fillOpacity: f49, fillOpacityOccluded: 0.25 * f49, shadowOpacity: O26, shadowColor: r11(i60[0], i60[1], i60[2], i60[3]), occludedShadowOpacity: O26 * (1 - u51) };
  }
};
e([y2({ type: h6 })], n54.prototype, "color", void 0), e([y2({ type: h6 })], n54.prototype, "haloColor", void 0), e([y2()], n54.prototype, "haloOpacity", void 0), e([y2()], n54.prototype, "fillOpacity", void 0), e([y2()], n54.prototype, "shadowOpacity", void 0), e([y2({ type: h6 })], n54.prototype, "shadowColor", void 0), e([y2()], n54.prototype, "shadowDifference", void 0), n54 = e([a4("esri.views.3d.support.HighlightOptions")], n54);
var f36 = n54;

// node_modules/@arcgis/core/views/3d/support/MapCoordsHelper.js
var a50 = class {
  constructor(i60, s69) {
    this.spatialReference = s69, this.unitInMeters = H2(this.spatialReference, A3(this.spatialReference).metersPerDegree), this._geometryServiceURLPromise = n27(i60 && i60.get("portalItem")).catch(() => {
      throw new s4("mapcoordshelper:missing-geometry-service", "Must specify geometryService in esri/config");
    });
  }
  async toGeographic(e65) {
    const r62 = await this._geometryServiceURLPromise;
    let t68, o61 = true;
    Array.isArray(e65[0]) && "number" != typeof e65[0] ? t68 = e65 : (t68 = [e65], o61 = false);
    const a67 = t68.map((e66) => e66 instanceof x4 ? e66 : new x4(e66, this.spatialReference)), c58 = new a24({ geometries: a67, outSpatialReference: f3.WGS84 }), n77 = (await n26(r62, c58)).map((e66) => "point" === e66.type ? [e66.x, e66.y] : void 0).filter((e66) => !!e66);
    return o61 ? n77 : n77[0];
  }
};

// node_modules/@arcgis/core/views/3d/support/QualitySettings.js
var r48 = class extends m {
  constructor() {
    super(...arguments), this.minTotalNumberOfFeatures = 2e3, this.maxTotalNumberOfFeatures = 5e4, this.maxTotalNumberOfPrimitives = 17e5, this.snapshotAvailable = true, this.polygonLodFactor = 1, this.polylineLodFactor = 1, this.skipHighSymbolLods = false;
  }
};
e([y2()], r48.prototype, "minTotalNumberOfFeatures", void 0), e([y2()], r48.prototype, "maxTotalNumberOfFeatures", void 0), e([y2()], r48.prototype, "maxTotalNumberOfPrimitives", void 0), e([y2()], r48.prototype, "snapshotAvailable", void 0), e([y2()], r48.prototype, "polygonLodFactor", void 0), e([y2()], r48.prototype, "polylineLodFactor", void 0), e([y2()], r48.prototype, "skipHighSymbolLods", void 0), r48 = e([a4("esri.views.3d.support.QualitySettings.Graphics3DSettings")], r48);
var p38 = class extends m {
  constructor() {
    super(...arguments), this.lodFactor = 1;
  }
};
e([y2()], p38.prototype, "lodFactor", void 0), p38 = e([a4("esri.views.3d.support.QualitySettings.LoDFactorSettings")], p38);
var a51 = class extends p38 {
  constructor() {
    super(...arguments), this.lodCrossfadeinDuration = n4(0), this.lodCrossfadeoutDuration = n4(0), this.lodCrossfadeUncoveredDuration = n4(0);
  }
};
a51 = e([a4("esri.views.3d.support.QualitySettings.LoDFactor3DObjectSettings")], a51);
var n55 = class extends m {
  constructor() {
    super(...arguments), this.object = new a51(), this.point = new p38(), this.integratedMesh = new p38(), this.pointCloud = new p38(), this.uncompressedTextureDownsamplingEnabled = false;
  }
};
e([y2({ type: a51 })], n55.prototype, "object", void 0), e([y2({ type: p38 })], n55.prototype, "point", void 0), e([y2({ type: p38 })], n55.prototype, "integratedMesh", void 0), e([y2({ type: p38 })], n55.prototype, "pointCloud", void 0), e([y2()], n55.prototype, "uncompressedTextureDownsamplingEnabled", void 0), n55 = e([a4("esri.views.3d.support.QualitySettings.SceneServiceSettings")], n55);
var d42 = class extends m {
  constructor() {
    super(...arguments), this.lodBias = 0, this.angledSplitBias = 1, this.reduceTileLevelDifferences = true, this.textureFadeDuration = n4(400);
  }
};
e([y2()], d42.prototype, "lodBias", void 0), e([y2()], d42.prototype, "angledSplitBias", void 0), e([y2()], d42.prototype, "reduceTileLevelDifferences", void 0), e([y2()], d42.prototype, "textureFadeDuration", void 0), d42 = e([a4("esri.views.3d.support.QualitySettings.TiledSurfaceSettings")], d42);
var l43 = class extends m {
  constructor() {
    super(...arguments), this.pixelRatio = 1, this.maxTotalNumberOfFeatures = 5e4;
  }
};
e([y2()], l43.prototype, "pixelRatio", void 0), e([y2()], l43.prototype, "maxTotalNumberOfFeatures", void 0), l43 = e([a4("esri.views.3d.support.QualitySettings.HeatmapSettings")], l43);
var c44 = class extends m {
  constructor() {
    super(...arguments), this.graphics3D = new r48(), this.sceneService = new n55(), this.tiledSurface = new d42(), this.heatmap = new l43(), this.fadeDuration = n4(400), this.antialiasingEnabled = true, this.physicallyBasedRenderingEnabled = false, this.highQualityTransparency = true, this.highResolutionAtmosphere = false, this.reflections = false, this.ambientOcclusion = false, this.memoryLimit = 750, this.additionalCacheMemory = 0, this.frameRate = void 0, this.maximumPixelRatio = 1 / 0;
  }
};
e([y2({ type: r48 })], c44.prototype, "graphics3D", void 0), e([y2({ type: n55 })], c44.prototype, "sceneService", void 0), e([y2({ type: d42 })], c44.prototype, "tiledSurface", void 0), e([y2({ type: l43 })], c44.prototype, "heatmap", void 0), e([y2()], c44.prototype, "fadeDuration", void 0), e([y2()], c44.prototype, "antialiasingEnabled", void 0), e([y2()], c44.prototype, "physicallyBasedRenderingEnabled", void 0), e([y2()], c44.prototype, "highQualityTransparency", void 0), e([y2()], c44.prototype, "highResolutionAtmosphere", void 0), e([y2()], c44.prototype, "reflections", void 0), e([y2()], c44.prototype, "ambientOcclusion", void 0), e([y2()], c44.prototype, "memoryLimit", void 0), e([y2()], c44.prototype, "additionalCacheMemory", void 0), e([y2()], c44.prototype, "frameRate", void 0), e([y2()], c44.prototype, "maximumPixelRatio", void 0), c44 = e([a4("esri.views.3d.support.QualitySettings.QualitySettings")], c44);
var u37 = c44;

// node_modules/@arcgis/core/views/3d/support/MemoryManagedView.js
function e45(e65) {
  return "usedMemory" in e65 && "unloadedMemory" in e65 && "ignoresMemoryFactor" in e65;
}

// node_modules/@arcgis/core/views/3d/support/MemoryController.js
function y25(t68) {
  return new _26({ view: t68 });
}
var u38 = 1;
var l44 = 1;
var m32 = 0.75;
var n56 = 0.6;
var d43 = 1.3;
var _26 = class extends m {
  constructor(t68) {
    super(t68), this._quality = 1, this._usedMemory = 0, this._updating = false, this.minQuality = 0.1, this._stableQuality = 0, this._downscaleMemoryUsed = 0, this._canFastRecover = false, this._memoryPredicted = 0, this._cacheStorage = new r10(), this._warnMemoryUsage = null, this._numQualityChanges = 0, this._maxMemory = 750, this._additionalCacheMemory = 0;
  }
  destroy() {
    this._cacheStorage.destroy();
  }
  set maxMemory(t68) {
    null == t68 || t68 <= 0 || (this._stableQuality = 0, this._canFastRecover = false, this._maxMemory < t68 && this._updateQuality(u38), this._maxMemory = t68);
  }
  get maxMemory() {
    return this._maxMemory;
  }
  set additionalCacheMemory(t68) {
    null != t68 && (this._additionalCacheMemory = t68);
  }
  get additionalCacheMemory() {
    return this._additionalCacheMemory;
  }
  get memoryFactor() {
    return this._quality;
  }
  get updating() {
    return this._updating;
  }
  get usedMemory() {
    return this._usedMemory;
  }
  newCache(t68, e65) {
    return new s17(t68, this._cacheStorage, e65);
  }
  resetStableQuality() {
    this._stableQuality = 0;
  }
  disableMemCache() {
    this.additionalCacheMemory = -4096;
  }
  update() {
    if (this._updateMemory(), this._memoryPredicted <= 0 && !this._updating)
      return;
    let t68 = this._layersUpdating();
    if (this._memoryPredicted < n56 && this._canFastRecover)
      this._downscaleMemoryUsed = 0, this._stableQuality = 0, this._canFastRecover = false, this._updateQuality(u38);
    else if (t68)
      (this._memoryPredicted > 1.1 * l44 || this._usedMemory > l44) && (this._stableQuality > 0 ? (this._downscaleMemoryUsed = 0, this._updateQuality(this._stableQuality)) : this._quality > this.minQuality && this._downscaleMemoryUsed < this._usedMemory && (this._updateQuality(this._quality / d43), this._downscaleMemoryUsed = this._usedMemory, this._canFastRecover = false));
    else if (this._downscaleMemoryUsed = 0, this._usedMemory > l44)
      this._stableQuality = 0, this._canFastRecover = false, t68 = this._updateQuality(this._quality / d43), this._downscaleMemoryUsed = this._memoryPredicted;
    else if (this._stableQuality !== this._quality)
      if (this._usedMemory < m32 && this._quality < u38) {
        this._stableQuality = this._quality;
        const e65 = 0.05;
        t68 = this._updateQuality(this._quality + e65);
      } else
        this._quality < 1 && (this._canFastRecover = true);
    this._updating = t68;
  }
  _updateQuality(t68) {
    return (t68 = Math.min(Math.max(t68, this.minQuality), u38)) !== this._quality && (this._quality = t68, ++this._numQualityChanges, true);
  }
  _layersUpdating() {
    return this.view.allLayerViews.some((t68) => !!t68.updating);
  }
  _updateMemory() {
    var _a, _b;
    if (!this.view)
      return;
    let t68 = 0;
    this.view.basemapTerrain && (t68 += this.view.basemapTerrain.usedMemory);
    const e65 = ((_a = this.view) == null ? void 0 : _a._stage) && this.view._stage.renderView && ((_b = this.view._stage.renderer) == null ? void 0 : _b.edgeView);
    null != e65 && (t68 += e65.usedMemory);
    let s69 = 0;
    this.view.allLayerViews && this.view.allLayerViews.forEach((e66) => {
      if (e45(e66)) {
        const i60 = e66.ignoresMemoryFactor ? this._quality : 1;
        t68 += e66.usedMemory * i60, s69 += e66.unloadedMemory * i60;
      }
    });
    const a67 = null == this._warnMemoryUsage || Math.round(10 * t68) !== Math.round(10 * this._warnMemoryUsage), r62 = 1048576 * this.maxMemory;
    if (t68 > r62 && a67) {
      this._warnMemoryUsage = t68;
      const e66 = (t69) => (t69 / 1048576).toLocaleString(void 0, { maximumFractionDigits: 1 }) + " MB", a68 = Math.round(100 * this._quality);
      s3.getLogger(this).warn(`Memory Limit exceeded! Limit: ${e66(r62)} Current: ${e66(t68)} Projected: ${e66(t68 + s69)} Quality: ${a68}%`);
    }
    this._usedMemory = t68 / r62, this._memoryPredicted = (t68 + s69) / r62;
    const o61 = r62 - t68;
    this._cacheStorage.maxSize = Math.max(0, o61 + 1048576 * this.additionalCacheMemory);
  }
  get test() {
    const t68 = this;
    return { cacheStorage: this._cacheStorage, resetQualityChanges: () => {
      const e65 = t68._numQualityChanges;
      return t68._numQualityChanges = 0, e65;
    } };
  }
};
e([y2({ constructOnly: true })], _26.prototype, "view", void 0), e([y2()], _26.prototype, "maxMemory", null), e([y2()], _26.prototype, "additionalCacheMemory", null), e([y2()], _26.prototype, "memoryFactor", null), e([y2()], _26.prototype, "updating", null), e([y2()], _26.prototype, "usedMemory", null), e([y2()], _26.prototype, "_quality", void 0), e([y2()], _26.prototype, "_usedMemory", void 0), e([y2()], _26.prototype, "_updating", void 0), e([y2()], _26.prototype, "_stableQuality", void 0), e([y2()], _26.prototype, "_maxMemory", void 0), e([y2()], _26.prototype, "_additionalCacheMemory", void 0), _26 = e([a4("esri.views.3d.support.MemoryController")], _26);

// node_modules/@arcgis/core/views/3d/support/ResourceController.js
var f37 = class extends m {
  constructor() {
    super(...arguments), this.updating = false;
  }
};
function T23(e65) {
  return new j20({ view: e65 });
}
e([y2({ readOnly: true })], f37.prototype, "updating", void 0), f37 = e([a4("esri.views.3d.support.ResourceControllerMain")], f37);
var j20 = class extends f37 {
  constructor() {
    super(...arguments), this._immediateTask = F5, this._normalTask = F5, this._updatingObjects = r12([]), this._frameTask = null;
  }
  get immediate() {
    return this._immediateTask;
  }
  get normal() {
    return this._normalTask;
  }
  initialize() {
    this._scheduler = c6(), this._memoryController = y25(this.view), this._streamDataLoader = new D5(), this._streamDataLoader.setup(I8, E12, this._scheduler), this.addHandles([l6(() => {
      var _a;
      return (_a = this.view.state) == null ? void 0 : _a.mode;
    }, (e65) => {
      null != e65 && (this._scheduler.state = e65);
    }, U3), l6(() => this.view.stationary, () => this._stationaryChangedHandler())]), this._frameTask = A({ update: (e65) => this._frame(e65) }), this._immediateTask = this._scheduler.registerTask(I3.RESOURCE_CONTROLLER_IMMEDIATE), this._normalTask = this._scheduler.registerTask(I3.RESOURCE_CONTROLLER);
  }
  destroy() {
    this._immediateTask.remove(), this._normalTask.remove(), this._frameTask = o(this._frameTask), this._streamDataLoader = l(this._streamDataLoader), this._memoryController = l(this._memoryController), this._scheduler = l(this._scheduler), this.view = null;
  }
  get updating() {
    var _a, _b, _c, _d;
    return !!(((_a = this._memoryController) == null ? void 0 : _a.updating) || ((_b = this._streamDataLoader) == null ? void 0 : _b.updating) || ((_c = this._immediateTask) == null ? void 0 : _c.updating)) || ((_d = this._updatingObjects) == null ? void 0 : _d.value.some((e65) => e65.updating));
  }
  get scheduler() {
    return this._scheduler;
  }
  get memoryController() {
    return this._memoryController;
  }
  createStreamDataRequester(e65) {
    const t68 = this._streamDataLoader;
    return { request: (r62, s69, o61) => t68.request(r62, s69, e65, o61), get busy() {
      return !t68.hasDownloadSlots(e65);
    } };
  }
  addUpdatingObject(e65) {
    const t68 = this._updatingObjects;
    return t68.value = [...t68.value, e65], e3(() => {
      t68.value = t68.value.filter((t69) => t69 !== e65);
    });
  }
  _frame(e65) {
    this.view.suspended || this.view.stateManager && (this.view.stateManager.step(u(e65.deltaTime)), !this._scheduler) || (this._scheduler.updateBudget(e65) ? (this._memoryController.update(), this._scheduler.frame()) : this._memoryController.updating && this._memoryController.update());
  }
  _stationaryChangedHandler() {
    this.memoryController.resetStableQuality();
  }
  get test() {
    return { getQueueStats: (e65) => this._streamDataLoader.test.loadQueue.getStatsForType(e65) };
  }
};
e([y2()], j20.prototype, "view", void 0), e([y2()], j20.prototype, "_scheduler", void 0), e([y2()], j20.prototype, "_memoryController", void 0), e([y2()], j20.prototype, "_streamDataLoader", void 0), e([y2()], j20.prototype, "_immediateTask", void 0), e([y2()], j20.prototype, "_normalTask", void 0), e([y2()], j20.prototype, "_updatingObjects", void 0), e([y2({ readOnly: true })], j20.prototype, "updating", null), j20 = e([a4("esri.views.3d.support.ResourceControllerImpl")], j20);

// node_modules/@arcgis/core/views/3d/layers/support/MemoryManagedLayerView.js
function o49(o61) {
  return e45(o61);
}

// node_modules/@arcgis/core/views/3d/layers/support/PerformanceInfoLayerView.js
function n57(n77) {
  return "performanceInfo" in n77;
}

// node_modules/@arcgis/core/views/3d/support/LayerPerformanceInfo.js
var t51 = class {
  constructor(t68, s69) {
    if (this.layer = null, this.memory = 0, this.displayedNumberOfFeatures = 0, this.maximumNumberOfFeatures = null, this.totalNumberOfFeatures = null, this.layer = t68.layer, this.memory = N3(t68) ? s69.basemapTerrain.getUsedMemoryForLayerView(t68) : t68.usedMemory, n57(t68)) {
      const e65 = t68.performanceInfo;
      this.displayedNumberOfFeatures = e65.displayedNumberOfFeatures, this.maximumNumberOfFeatures = e65.maximumNumberOfFeatures, this.totalNumberOfFeatures = e65.totalNumberOfFeatures;
    }
  }
};

// node_modules/@arcgis/core/views/3d/support/SceneViewPerformanceInfo.js
var s55 = class {
  constructor(s69) {
    var _a;
    if (this.totalMemory = 0, this.usedMemory = 0, this.quality = 1, this.load = 0, this.terrainMemory = 0, this.edgesMemory = 0, this.layerPerformanceInfos = new Array(), null != s69.resourceController) {
      const r62 = s69.resourceController.memoryController;
      this.totalMemory = (r62.maxMemory ?? 0) * E6.MEGABYTES, this.usedMemory = Math.round(r62.usedMemory * this.totalMemory), this.quality = r62.memoryFactor, this.load = s69.resourceController.scheduler.load;
    }
    this.terrainMemory = ((_a = s69.basemapTerrain) == null ? void 0 : _a.usedMemory) ?? 0;
    const a67 = s69._stage && s69._stage.renderView && s69._stage.renderer.edgeView;
    this.edgesMemory = null != a67 ? a67.usedMemory : 0, s69.allLayerViews.items.forEach((e65) => {
      (o49(e65) || N3(e65)) && this.layerPerformanceInfos.push(new t51(e65, s69));
    }), this.layerPerformanceInfos.sort((e65, r62) => r62.memory - e65.memory);
  }
};

// node_modules/@arcgis/core/views/3d/layers/graphics/ObjectResourceCache.js
var l45 = class {
  constructor(o61) {
    this._gltfLoading = /* @__PURE__ */ new Map(), this._wosrLoading = /* @__PURE__ */ new Map(), this._gltfMemCache = o61("gltf-resources", () => {
    }), this._wosrMemCache = o61("wosr-resources", () => {
    });
  }
  destroy() {
    this._gltfLoading.forEach((o61) => o61.abortController.abort()), this._wosrLoading.forEach((o61) => o61.abortController.abort()), this._gltfMemCache.destroy(), this._wosrMemCache.destroy();
  }
  loadGLTF(o61, t68, e65) {
    const a67 = e65 ? `gltfPBR:${o61}` : `gltf:${o61}`, l63 = this._gltfMemCache.get(a67);
    return null != l63 ? Promise.resolve(l63) : this._loadOnce(this._gltfLoading, this._gltfMemCache, a67, (t69) => l12(new n17(t69.streamDataRequester), o61, t69, e65), t68);
  }
  loadWOSR(o61, t68) {
    const e65 = `wosr:${o61}:${t68.disableTextures}`, r62 = this._wosrMemCache.get(e65);
    return null != r62 ? Promise.resolve(r62) : this._loadOnce(this._wosrLoading, this._wosrMemCache, e65, (t69) => v9(o61, t69), t68);
  }
  async _loadOnce(r62, s69, a67, l63, i60) {
    s6(i60);
    const n77 = w(i60, () => this._abortLoad(r62, a67));
    let c58 = r62.get(a67);
    if (c58)
      c58.refCount++;
    else {
      const o61 = new AbortController();
      c58 = { refCount: 1, abortController: o61, promise: l63({ ...i60, signal: o61.signal }) }, r62.set(a67, c58);
    }
    try {
      const o61 = await c58.promise;
      return s69.put(a67, o61, o61.size), r62.delete(a67), s6(i60), o61;
    } finally {
      o(n77);
    }
  }
  _abortLoad(o61, t68) {
    const e65 = o61.get(t68);
    if (null != e65) {
      if (--e65.refCount > 0)
        return;
    }
    o61.delete(t68), null != e65 && e65.abortController.abort();
  }
};

// node_modules/@arcgis/core/views/3d/support/StreamTextureCollection.js
var n58 = class extends a23 {
  constructor(t68, e65, r62) {
    super(e65, r62), this._streamDataRequester = t68;
  }
  async fromUrl(r62, s69, l63) {
    s6(l63);
    const o61 = null != l63 ? l63.signal : null, n77 = this.makeUid(r62, s69);
    let h46 = this._textureRequests.get(n77);
    if (!h46) {
      const t68 = new AbortController(), e65 = this._streamDataRequester.request(r62, "image", { uid: n77, signal: t68.signal });
      h46 = new i19(), h46.abortController = t68;
      const l64 = h46;
      this._textureRequests.set(n77, h46), h46.textureAsync = e65.then(async (t69) => {
        const e66 = this._createTexture(r62, t69, s69);
        return l64.texture = e66, l64.abortController = null, this._stage.add(e66), await this._stage.load(e66), { uid: n77, texture: e66, release: () => this._release(n77) };
      }, (t69) => {
        throw l64.abortController = null, t69;
      });
    }
    h46.referenceCount++;
    try {
      return await p(h46.textureAsync, o61);
    } catch (a67) {
      throw this._release(n77), a67;
    }
  }
  _createTexture(t68, e65, s69) {
    var _a;
    const i60 = { width: e65.width, height: e65.height, wrap: { s: D2.CLAMP_TO_EDGE, t: D2.CLAMP_TO_EDGE }, preMultiplyAlpha: true };
    if (vt(t68)) {
      if (s69 || 0 === e65.width && 0 === e65.height) {
        const t69 = e65.width ? e65.height / e65.width : 1;
        s69 = s69 || 64, t69 > 1 ? (e65.width = Math.round(s69 / t69), e65.height = s69) : (e65.width = s69, e65.height = Math.round(s69 * t69));
      }
      ((_a = this._stage.renderView) == null ? void 0 : _a.renderingContext.driverTest.svgPremultipliesAlpha.result) && (i60.preMultiplyAlpha = false);
    }
    return new w8(e65, i60);
  }
};

// node_modules/@arcgis/core/views/3d/support/SharedSymbolResources.js
var S18 = class {
  constructor(e65) {
    this.streamDataRequester = null, this._graphicsOwners = [], this._screenSizePerspectiveHandles = null, this.cimSymbolRasterizer = null, this._viewState = e65.viewState, this._view = e65.view, this._pointsOfInterest = e65.pointsOfInterest, this.streamDataRequester = e65.resourceController.createStreamDataRequester(A12.SYMBOLOGY), this.objectResourceCache = new l45((t69, s69) => e65.resourceController.memoryController.newCache(t69, s69)), this.textures = new n58(this.streamDataRequester, e65.view._stage, e65.resourceController.scheduler);
    const t68 = A3(this._view.spatialReference).radius;
    this.screenSizePerspectiveSettings = r22(e65.viewingMode, t68), this.screenSizePerspectiveSettingsLabels = n22(e65.viewingMode, t68);
  }
  destroy() {
    this.textures.destroy(), this.streamDataRequester = null;
  }
  addGraphicsOwner(t68) {
    if (!t68)
      return e3();
    this._graphicsOwners.push(t68);
    const r62 = l6(() => {
      var _a;
      return (_a = t68.layer) == null ? void 0 : _a.screenSizePerspectiveEnabled;
    }, () => this._updateScreenSizePerspectiveEnabled());
    return this._updateScreenSizePerspectiveEnabled(), e3(() => {
      r62.remove(), z(this._graphicsOwners, t68), this._updateScreenSizePerspectiveEnabled();
    });
  }
  _updateScreenSizePerspectiveEnabled() {
    const e65 = this._graphicsOwners.some((e66) => {
      var _a;
      return true === ((_a = e66.layer) == null ? void 0 : _a.screenSizePerspectiveEnabled);
    });
    if (e65 && !this._screenSizePerspectiveHandles) {
      this._screenSizePerspectiveHandles = new t3();
      const e66 = () => this._updateScreenSizePerspectiveSettings();
      this._screenSizePerspectiveHandles.add([l6(() => this._pointsOfInterest.centerOnSurfaceInfrequent.distance, e66, U3), this._viewState.events.on("camera-projection-changed", e66)]), this._updateScreenSizePerspectiveSettings();
    } else
      e65 || (this._screenSizePerspectiveHandles = l(this._screenSizePerspectiveHandles));
  }
  _updateScreenSizePerspectiveSettings() {
    const e65 = this._pointsOfInterest;
    d44.distance = e65.centerOnSurfaceInfrequent.distance, d44.fovY = this._viewState.camera.fovY, this.screenSizePerspectiveSettings.update(d44), this.screenSizePerspectiveSettingsLabels.update(d44), this._view._stage.renderView.requestRender();
  }
  get test() {
    return { screenSizePerspectiveHandles: this._screenSizePerspectiveHandles };
  }
};
var d44 = { distance: 0, fovY: 0 };

// node_modules/@arcgis/core/views/3d/support/debugUtils.js
var t52 = class {
  constructor(o61, e65, t68 = "") {
    this.graphics = o61, this._symbol = new h7({ symbolLayers: [new w5({ material: { color: e65 }, outline: { color: [255, 255, 255], size: 1 }, resource: { primitive: "circle" } }), new z4({ text: t68, halo: { color: "white", size: 1 / 0.75 }, material: { color: e65 }, size: 12 })] });
  }
  show(i60, r62) {
    if (null == r62)
      return;
    this.hide();
    const s69 = new x4({ x: i60[0], y: i60[1], z: i60[2], spatialReference: r62 });
    this._graphic = new h14({ geometry: s69, symbol: this._symbol }), this.graphics.add(this._graphic);
  }
  hide() {
    null != this._graphic && (this.graphics.remove(this._graphic), this._graphic = null);
  }
};

// node_modules/@arcgis/core/views/3d/support/pointsOfInterest/PointOfInterest.js
var c45 = class extends m {
  constructor(r62) {
    super(r62), this.handles = new t3();
  }
  destroy() {
    this.handles.destroy();
  }
};
e([y2({ constructOnly: true })], c45.prototype, "renderCoordsHelper", void 0), e([y2({ constructOnly: true })], c45.prototype, "surface", void 0), e([y2({ constructOnly: true })], c45.prototype, "state", void 0), c45 = e([a4("esri.views.3d.support.PointOfInterest")], c45);

// node_modules/@arcgis/core/views/3d/support/pointsOfInterest/CameraOnSurface.js
var _27 = Array;
var g24 = class extends c45 {
  constructor(t68) {
    super(t68), this._dirty = false, this._propertiesPool = new o25({ location: x4, renderLocation: _27 }, this), this._estimatedSurfaceAltitude = 0, this._pendingElevationQueryController = null, this.renderLocation = n7(), this._tmpPoint = new x4();
  }
  initialize() {
    if (this.scheduler && this.handles.add(this.scheduler.registerTask(this.task, this)), this.runTask(), this.map) {
      const t68 = () => this._setDirty();
      this.handles.add(a8(() => {
        var _a, _b;
        return (_b = (_a = this.map) == null ? void 0 : _a.ground) == null ? void 0 : _b.layers;
      }, "change", t68, { onListenerAdd: t68, onListenerRemove: t68 }));
    }
    this._updateRenderLocation();
  }
  destroy() {
    this._cancelPendingRequest(), this._propertiesPool = l(this._propertiesPool);
  }
  get _camera() {
    return this.state.contentCamera;
  }
  get location() {
    const t68 = this._propertiesPool.get("location");
    return this.renderCoordsHelper.fromRenderCoords(this.renderLocation, t68, this.state.spatialReference), t68;
  }
  get scale() {
    const t68 = this._camera, e65 = x2(t68.eye, this.renderLocation), r62 = { renderCoordsHelper: this.renderCoordsHelper, state: { camera: t68 } };
    return V9(r62, e65, 0);
  }
  get updating() {
    return this._dirty || null != this._pendingElevationQueryController;
  }
  updateRenderLocation() {
    this._setDirty(), this._updateRenderLocation();
  }
  _setDirty() {
    this._dirty || (this._dirty = true, this.notifyChange("updating"));
  }
  _cancelPendingRequest() {
    const t68 = this._pendingElevationQueryController;
    t68 && (this._pendingElevationQueryController = null, t68.abort(), this.notifyChange("updating"));
  }
  get running() {
    return !this._pendingElevationQueryController && this._dirty;
  }
  runTask() {
    if (this._cancelPendingRequest(), this._dirty = false, this.notifyChange("updating"), !this.map || !this.map.ground)
      return this._updateSurfaceAltitude(0), g5.YIELD;
    const t68 = this.state.spatialReference;
    this.renderCoordsHelper.fromRenderCoords(this._camera.eye, this._tmpPoint, t68);
    const e65 = (this._tmpPoint.z ?? 0) > C19 && this.renderCoordsHelper.viewingMode === l13.Global && (t68.isWGS84 || t68.isWebMercator);
    let o61 = new AbortController();
    return this.map.ground.queryElevation(this._tmpPoint, { signal: o61.signal, cache: this.cache, minDemResolution: e65 ? v29 : 0 }).then((t69) => this._updateSurfaceAltitude(t69.geometry.z ?? 0)).catch((t69) => {
      d(t69) || this._updateSurfaceAltitude(0);
    }).catch(() => {
    }).then(() => {
      this._pendingElevationQueryController === o61 && (this._pendingElevationQueryController = null, this.notifyChange("updating")), o61 = null;
    }), this._pendingElevationQueryController = o61, g5.YIELD;
  }
  _updateSurfaceAltitude(t68) {
    this._estimatedSurfaceAltitude !== t68 && (this._estimatedSurfaceAltitude = t68, this._updateRenderLocation());
  }
  _updateRenderLocation() {
    this.renderCoordsHelper.setAltitude(f38, this._estimatedSurfaceAltitude, this._camera.eye), F2(this._get("renderLocation"), f38) || (this._set("renderLocation", r5(this._propertiesPool.get("renderLocation"), f38)), this.notifyChange("renderLocation"));
  }
};
e([y2({ constructOnly: true })], g24.prototype, "scheduler", void 0), e([y2({ constructOnly: true })], g24.prototype, "cache", void 0), e([y2({ constructOnly: true })], g24.prototype, "task", void 0), e([y2({ readOnly: true })], g24.prototype, "location", null), e([y2({ constructOnly: true })], g24.prototype, "map", void 0), e([y2({ readOnly: true })], g24.prototype, "renderLocation", void 0), e([y2({ readOnly: true })], g24.prototype, "scale", null), e([y2({ readOnly: true })], g24.prototype, "updating", null), g24 = e([a4("esri.views.3d.support.CameraOnSurface")], g24);
var f38 = n7();
var C19 = 1e5;
var v29 = 1e6;

// node_modules/@arcgis/core/views/3d/support/pointsOfInterest/CenterOnSurface.js
var j21 = Array;
var L19 = class extends c45 {
  constructor(t68) {
    super(t68), this._propertiesPool = new o25({ location: x4, renderLocation: j21 }, this), this._currentSurfaceAltitude = 0, this._latestSurfaceAltitude = 0, this.distance = 0, this.renderLocation = n7(), this.updating = false;
  }
  initialize() {
    this._frameWorker = this.scheduler.registerTask(this.task, this), this.runTask();
  }
  destroy() {
    this._frameWorker = o(this._frameWorker), this._propertiesPool = l(this._propertiesPool);
  }
  get _camera() {
    return this.state.contentCamera;
  }
  get location() {
    const t68 = this._propertiesPool.get("location");
    return this.renderCoordsHelper.fromRenderCoords(this.renderLocation, t68, this.state.spatialReference), t68;
  }
  updateRenderLocation() {
    this.updating = true, this._updateRenderLocation();
  }
  get estimatedSurfaceAltitude() {
    return this._latestSurfaceAltitude;
  }
  get running() {
    return this.updating;
  }
  runTask() {
    return this._latestSurfaceAltitude = this.estimateSurfaceAltitudeAtCenter(), this._updateRenderLocation(), this.updating = false, g5.YIELD;
  }
  _updateRenderLocation() {
    const t68 = v30;
    let e65 = this._calculateSurfaceIntersection(this._currentSurfaceAltitude, t68);
    const r62 = this._currentSurfaceAltitude !== this._latestSurfaceAltitude;
    !e65 && r62 && (e65 = this._calculateSurfaceIntersection(this._latestSurfaceAltitude, t68), e65 && (this._currentSurfaceAltitude = this._latestSurfaceAltitude));
    const s69 = C20;
    e65 && this._latestSurfaceAltitudeChangesDistanceSignificantly(t68, s69) && (r5(t68, s69), this._currentSurfaceAltitude = this._latestSurfaceAltitude), e65 ? this.distance = x2(this._camera.eye, t68) : (g2(t68, this._camera.viewForward, this._get("distance")), u2(t68, t68, this._camera.eye)), F2(this._get("renderLocation"), t68) || this._set("renderLocation", r5(this._propertiesPool.get("renderLocation"), t68));
  }
  _calculateSurfaceIntersection(t68, r62) {
    var _a, _b;
    const s69 = this._camera;
    if (!this.renderCoordsHelper.intersectManifold(s69.ray, t68, r62))
      return false;
    if (this.state.isGlobal) {
      const e65 = A3(this.renderCoordsHelper.spatialReference).radius, i60 = e65 + t68, o61 = v3(s69.eye), a67 = o61 < i60 * i60, l63 = x2(s69.eye, r62);
      if (a67 && l63 > e65 / 4) {
        const t69 = i60 - Math.sqrt(o61);
        return g2(r62, s69.viewForward, t69), u2(r62, r62, s69.eye), true;
      }
    } else {
      const t69 = ((_a = this.surface) == null ? void 0 : _a.ready) ? this.surface.extent : null;
      null != t69 && kn(t69, (_b = this.surface) == null ? void 0 : _b.spatialReference, I20, this.renderCoordsHelper.spatialReference) && (r62[0] = i3(r62[0], I20[0], I20[2]), r62[1] = i3(r62[1], I20[1], I20[3]));
    }
    return true;
  }
  _latestSurfaceAltitudeChangesDistanceSignificantly(t68, e65) {
    if (this._latestSurfaceAltitude === this._currentSurfaceAltitude || null == t68)
      return false;
    if (this._calculateSurfaceIntersection(this._latestSurfaceAltitude, e65)) {
      if (t19.TESTS_DISABLE_OPTIMIZATIONS)
        return true;
      const r62 = this._camera.eye, s69 = x2(r62, t68), i60 = x2(r62, e65);
      if (Math.abs(i60 - s69) / s69 > k19)
        return true;
    }
    return false;
  }
};
e([y2({ constructOnly: true })], L19.prototype, "scheduler", void 0), e([y2({ constructOnly: true })], L19.prototype, "task", void 0), e([y2()], L19.prototype, "distance", void 0), e([y2({ constructOnly: true })], L19.prototype, "estimateSurfaceAltitudeAtCenter", void 0), e([y2({ readOnly: true })], L19.prototype, "location", null), e([y2({ readOnly: true })], L19.prototype, "renderLocation", void 0), e([y2()], L19.prototype, "updating", void 0), L19 = e([a4("esri.views.3d.support.CenterOnSurface")], L19);
var k19 = 0.05;
var v30 = n7();
var C20 = n7();
var I20 = i5();

// node_modules/@arcgis/core/views/3d/support/pointsOfInterest/ContentGeometryUpdates.js
var n59 = class {
  constructor(s69) {
    this._handles = new t3(), this.events = new n8(), this._contentLayerViews = s69.contentLayerViews, this._handles.add(this._contentLayerViews.on("change", (e65) => this._layerViewsChanged(e65))), this._layerViewsChanged({ added: this._contentLayerViews.toArray(), removed: [], moved: [], target: this._contentLayerViews });
  }
  destroy() {
    this._handles = l(this._handles), this._contentLayerViews.destroy();
  }
  _layerViewsChanged(e65) {
    e65.added.forEach((e66) => {
      "esri.views.3d.layers.SceneLayerView3D" === e66.declaredClass && this._handles.add(e66.on("visible-geometry-changed", () => this._contentChanged()), e66.uid);
    }), e65.removed.forEach((e66) => this._handles.remove(e66.uid));
  }
  _contentChanged() {
    this.events.emit("request-update", a52);
  }
};
var a52 = {};

// node_modules/@arcgis/core/views/3d/support/pointsOfInterest/Focus.js
var L20 = Array;
var P20 = class extends c45 {
  constructor(e65) {
    super(e65), this._propertiesPool = new o25({ location: x4, renderLocation: L20 }, this), this._dirty = true, this.renderLocation = this._propertiesPool.get("renderLocation");
  }
  initialize() {
    this.handles.add([l6(() => this.centerOnSurface.renderLocation, () => this.updateRenderLocation()), l6(() => this.state.contentCamera, () => this.updateRenderLocation())]), this.scheduler && this.handles.add(this.scheduler.registerTask(I3.POINT_OF_INTEREST_FREQUENT, this));
  }
  destroy() {
    this._propertiesPool = l(this._propertiesPool);
  }
  get updating() {
    return this._dirty || this.centerOnSurface.updating;
  }
  get location() {
    const e65 = this._propertiesPool.get("location");
    return this.renderCoordsHelper.fromRenderCoords(this.renderLocation, e65, this.state.spatialReference), e65;
  }
  get running() {
    return this._dirty;
  }
  runTask() {
    const e65 = this._get("renderLocation"), r62 = this.centerOnSurface.renderLocation, o61 = this.renderCoordsHelper, s69 = this.state.contentCamera;
    this._dirty = false, o61.worldUpAtPosition(r62, S19);
    const i60 = Math.max(0, (Math.acos(P(S19, s69.viewForward)) - 0.5 * Math.PI) * (s69.aboveGround ? 1 : -1));
    if (Number.isNaN(i60)) {
      if (!e65 || !G(e65, r62)) {
        const e66 = this._propertiesPool.get("renderLocation");
        r5(e66, r62), this._set("renderLocation", e66);
      }
      return g5.YIELD;
    }
    const n77 = 1 - i3(i60 / (0.5 * Math.PI), 0, 1), h46 = n77 * n77 * n77;
    this._calculateScreenHorizontalEdgeOnSurface(C21);
    const l63 = this._propertiesPool.get("renderLocation");
    return A2(l63, r62, C21, h46), e65 && G(e65, l63) || this._set("renderLocation", l63), g5.YIELD;
  }
  _calculateScreenHorizontalEdgeOnSurface(e65) {
    const t68 = this.state.contentCamera, r62 = t68.getRenderCenter(x7());
    if (r62[1] = t68.aboveGround ? t68.padding[ht.BOTTOM] : t68.fullHeight - t68.padding[ht.TOP], this.estimateSurfaceIntersectionAtRenderPoint(r62, e65))
      return e65;
    const o61 = this.renderCoordsHelper.getAltitude(this.centerOnSurface.renderLocation);
    if (t68.unprojectFromRenderScreen(r62, v31)) {
      e7(v31, v31, t68.eye);
      const r63 = z2(v31, v31);
      if (this.renderCoordsHelper.intersectManifold(p8(t68.eye, r63), o61, e65))
        return e65;
    }
    return this.renderCoordsHelper.setAltitude(e65, o61, t68.eye);
  }
  updateRenderLocation() {
    this._dirty = true;
  }
};
e([y2()], P20.prototype, "_dirty", void 0), e([y2({ constructOnly: true })], P20.prototype, "scheduler", void 0), e([y2({ constructOnly: true })], P20.prototype, "centerOnSurface", void 0), e([y2({ constructOnly: true })], P20.prototype, "estimateSurfaceIntersectionAtRenderPoint", void 0), e([y2({ readOnly: true })], P20.prototype, "updating", null), e([y2({ readOnly: true })], P20.prototype, "location", null), e([y2({ readOnly: true })], P20.prototype, "renderLocation", void 0), P20 = e([a4("esri.views.3d.support.pointsOfInterest.Focus")], P20);
var S19 = n7();
var v31 = n7();
var C21 = n7();

// node_modules/@arcgis/core/views/3d/support/pointsOfInterest/StableSurfaceCenter.js
var p39 = class extends m {
  get surface() {
    var _a;
    return (_a = this.view.map) == null ? void 0 : _a.ground;
  }
  get surfaceView() {
    return this.view.basemapTerrain;
  }
  get renderLocation() {
    if (!this.location)
      return null;
    const e65 = n7();
    return this.view.renderCoordsHelper.toRenderCoords(this.location, e65), e65;
  }
  constructor(e65) {
    super(e65), this.location = null, this._updateController = null, this._handles = new t3();
  }
  initialize() {
    this.view.state.isLocal && (this._handles.add([l6(() => {
      var _a, _b;
      return [(_a = this.surfaceView) == null ? void 0 : _a.spatialReference, (_b = this.surfaceView) == null ? void 0 : _b.extent];
    }, () => this._update()), a8(() => {
      var _a;
      return (_a = this.surface) == null ? void 0 : _a.layers;
    }, "change", () => this._update())]), this._update());
  }
  destroy() {
    this._handles.destroy();
  }
  _update() {
    if (this._updateController && (this._updateController.abort(), this._updateController = null), !this.surfaceView || null == this.surfaceView.extent || null == this.surfaceView.spatialReference)
      return void this._set("location", null);
    const e65 = y3(this.surfaceView.extent), t68 = new x4({ x: e65[0], y: e65[1], z: 0, spatialReference: this.surfaceView.spatialReference });
    this.surface && this.surface.layers.length > 0 ? (this._set("location", null), this._updateController = new AbortController(), this.surface.queryElevation(t68, { noDataValue: 0, signal: this._updateController.signal, cache: this.cache }).then((e66) => {
      this._updateController = null, this._set("location", e66.geometry);
    }).catch((e66) => {
      d(e66) || e66 && "elevation-query:invalid-layer" === e66.name || console.error("StableSurfaceCenter failed to update: ", e66);
    })) : this._set("location", t68);
  }
};
e([y2({ constructOnly: true })], p39.prototype, "view", void 0), e([y2({ constructOnly: true })], p39.prototype, "cache", void 0), e([y2()], p39.prototype, "surface", null), e([y2()], p39.prototype, "surfaceView", null), e([y2({ readOnly: true })], p39.prototype, "location", void 0), e([y2({ readOnly: true })], p39.prototype, "renderLocation", null), p39 = e([a4("esri.views.3d.terrain.StableSurfaceCenter")], p39);

// node_modules/@arcgis/core/views/3d/support/pointsOfInterest/SurfaceGeometryUpdates.js
var u39 = class extends m {
  constructor(e65) {
    super(e65), this._tileGeometryUpdateExtent = C2(), this._tileGeometryUpdateSpatialReference = null, this.events = new n8(), this.updating = false;
  }
  initialize() {
    this.addHandles([this.surface.on("elevation-change", (e65) => this._tileGeometryChanged(e65)), this.scheduler.registerTask(I3.SURFACE_GEOMETRY_UPDATES, this)]);
  }
  get running() {
    return this.updating;
  }
  runTask() {
    return this.updating ? (this._tileGeometryUpdateSpatialReference && this._centerIntersectsExtent(this._tileGeometryUpdateExtent, this._tileGeometryUpdateSpatialReference) && this.events.emit("request-update", h36), C2(this._tileGeometryUpdateExtent), this._set("updating", false), g5.YIELD) : g5.YIELD;
  }
  _tileGeometryChanged(e65) {
    this._tileGeometryUpdateSpatialReference = e65.spatialReference, m3(this._tileGeometryUpdateExtent, e65.extent, this._tileGeometryUpdateExtent), this._set("updating", true);
  }
  _furthestCenterOnSurface() {
    let e65 = this.centerOnSurfaces[0];
    for (let t68 = 1; t68 < this.centerOnSurfaces.length; t68++) {
      const r62 = this.centerOnSurfaces[t68];
      r62.distance > e65.distance && (e65 = r62);
    }
    return e65;
  }
  _centerIntersectsExtent(e65, t68) {
    const r62 = this.state.contentCamera.eye, s69 = y26, o61 = this._furthestCenterOnSurface();
    return this.renderCoordsHelper.fromRenderCoords(r62, l46, t68), this.renderCoordsHelper.fromRenderCoords(o61.renderLocation, m33, t68), l46[0] < m33[0] ? (s69[0] = l46[0], s69[2] = m33[0]) : (s69[0] = m33[0], s69[2] = l46[0]), l46[1] < m33[1] ? (s69[1] = l46[1], s69[3] = m33[1]) : (s69[1] = m33[1], s69[3] = l46[1]), q(s69, e65);
  }
};
e([y2({ constructOnly: true })], u39.prototype, "state", void 0), e([y2({ constructOnly: true })], u39.prototype, "centerOnSurfaces", void 0), e([y2({ constructOnly: true })], u39.prototype, "renderCoordsHelper", void 0), e([y2({ constructOnly: true })], u39.prototype, "scheduler", void 0), e([y2({ constructOnly: true })], u39.prototype, "surface", void 0), e([y2({ readOnly: true })], u39.prototype, "updating", void 0), u39 = e([a4("esri.views.3d.support.SurfaceGeometryUpdates")], u39);
var h36 = {};
var l46 = n7();
var m33 = n7();
var y26 = C2();

// node_modules/@arcgis/core/views/3d/support/pointsOfInterest/PointsOfInterest.js
var P21 = class extends m {
  constructor(e65) {
    super(e65), this._handles = new t3(), this._tmpRay = d10(), this._centerRayDirty = true, this._surfaceAltitudeAtCenter = 0, this._surfaceAltitudeAtCenterDirty = true, this._contentAltitudeAtCenter = 0, this._contentAltitudeAtCenterDirty = true, this._propertiesPool = new o25({ renderPointOfView: j22 }, this), this.renderPointOfView = n7(), this._pois = new Array(), this._debugCenters = /* @__PURE__ */ new Map();
  }
  initialize() {
    var _a;
    const { state: e65, basemapTerrain: t68, renderCoordsHelper: r62, map: c58 } = this.view;
    this._surfaceIntersector = A14(e65.viewingMode), e65.isGlobal ? this._surfaceIntersector.options.backfacesTerrain = false : this._surfaceIntersector.options.backfacesTerrain = true, this._surfaceIntersector.options.invisibleTerrain = false, this._surfaceIntersector.options.store = t25.MIN, this._contentIntersector = A14(e65.viewingMode);
    const u51 = () => this._estimateSurfaceAltitudeAtCenter(), h46 = this.view.resourceController.scheduler, d52 = (_a = this.view.basemapTerrain) == null ? void 0 : _a.elevationQueryCache, p54 = { state: e65, scheduler: h46, surface: t68, renderCoordsHelper: r62 };
    this._set("centerOnSurfaceInfrequent", new L19({ ...p54, task: I3.POINT_OF_INTEREST_INFREQUENT, estimateSurfaceAltitudeAtCenter: u51 })), this._set("centerOnSurfaceFrequent", new L19({ ...p54, task: I3.POINT_OF_INTEREST_FREQUENT, estimateSurfaceAltitudeAtCenter: u51 })), this._set("centerOnContent", new L19({ ...p54, task: I3.POINT_OF_INTEREST_FREQUENT, estimateSurfaceAltitudeAtCenter: () => this._estimateContentAltitudeAtCenter() })), this._set("cameraOnSurface", new g24({ ...p54, cache: d52, task: I3.POINT_OF_INTEREST_INFREQUENT, map: c58 })), this._set("surfaceGeometryUpdates", new u39({ ...p54, centerOnSurfaces: [this.centerOnSurfaceFrequent, this.centerOnContent, this.centerOnSurfaceInfrequent] })), this._set("contentGeometryUpdates", new n59({ contentLayerViews: this.view.allLayerViews, renderCoordsHelper: r62 })), this._set("surfaceOrigin", new p39({ cache: d52, view: this.view })), this._set("focus", new P20({ state: e65, scheduler: h46, surface: t68, renderCoordsHelper: r62, centerOnSurface: this.centerOnSurfaceFrequent, estimateSurfaceIntersectionAtRenderPoint: (e66, t69) => this._estimateSurfaceIntersectionAtRenderPoint(e66, this.view.state.contentCamera, t69) })), this._pois.push(this.centerOnContent, this.centerOnSurfaceFrequent, this.centerOnSurfaceInfrequent, this.cameraOnSurface, this.focus);
    const f49 = this.view.graphics;
    this._debugCenters.set(this.centerOnContent, new t52(f49, "red", "CenterOnContent")), this._debugCenters.set(this.centerOnSurfaceFrequent, new t52(f49, "red", "CenterOnSurface")), this._debugCenters.set(this.centerOnSurfaceInfrequent, new t52(f49, "red", "CenterOnSurface")), this._debugCenters.set(this.cameraOnSurface, new t52(f49, "blue", "CameraOnSurface")), this._debugCenters.set(this.focus, new t52(f49, "green", "Focus")), this._handles.add([l6(() => e65.contentCamera, (e66) => this._cameraChanged(e66), U3), l6(() => t68.extent, () => this._updateCenterPointsOfInterest()), f6(() => !t68.updating, () => this._updateCenterPointsOfInterest(), U3), a8(() => this.surfaceGeometryUpdates.events, "request-update", () => this._updateCenterPointsOfInterest()), a8(() => this.contentGeometryUpdates.events, "request-update", () => this._updateCenterOnContent()), f6(() => t19.SHOW_POI, (e66) => this._setDebug(e66), h3)]), this._cameraChanged(this.view.state.contentCamera);
    for (const s69 of this._pois)
      s69.runTask();
  }
  destroy() {
    this._setDebug(false), this._handles.destroy(), this._propertiesPool.destroy();
    for (const e65 of this._pois)
      e65.destroy();
    this.surfaceOrigin.destroy();
  }
  get updating() {
    var _a;
    return !(!((_a = this.surfaceGeometryUpdates) == null ? void 0 : _a.updating) && !this._pois.some((e65) => e65.updating));
  }
  get _centerRay() {
    return this._centerRayDirty && (this._centerRayCached = this.view.sceneIntersectionHelper.getCenterRayWithSubpixelOffset(this.view.state.contentCamera, this._tmpRay), this._centerRayDirty = false), this._centerRayCached;
  }
  _estimateContentAltitudeAtCenter() {
    if (!this._contentAltitudeAtCenterDirty)
      return this._contentAltitudeAtCenter;
    this._contentAltitudeAtCenterDirty = false;
    const e65 = this._centerRay;
    return null == e65 || (this.view.sceneIntersectionHelper.intersectRay(e65, this._contentIntersector, U18, F21) ? this._contentAltitudeAtCenter = this.view.renderCoordsHelper.getAltitude(U18) : this._contentAltitudeAtCenter = this._estimateSurfaceAltitudeAtCenter()), this._contentAltitudeAtCenter;
  }
  _estimateSurfaceAltitudeAtCenter() {
    if (!this.view.basemapTerrain)
      return 0;
    if (!this._surfaceAltitudeAtCenterDirty)
      return this._surfaceAltitudeAtCenter;
    this._surfaceAltitudeAtCenterDirty = false;
    const e65 = this._centerRay;
    if (null == e65)
      return this._surfaceAltitudeAtCenter;
    const t68 = e65.origin, r62 = u2(U18, e65.origin, e65.direction);
    return this._surfaceIntersector.resetWithRay(e65, this.view.state.contentCamera), this.view.basemapTerrain.intersect(this._surfaceIntersector, null, t68, r62), this._surfaceIntersector.results.min.getIntersectionPoint(U18) && (this._surfaceAltitudeAtCenter = this.view.renderCoordsHelper.getAltitude(U18)), this._surfaceAltitudeAtCenter;
  }
  _estimateSurfaceIntersectionAtRenderPoint(e65, t68, r62) {
    const s69 = g10(t68, e65, E31);
    if (null == s69)
      return null;
    const n77 = s69.origin, i60 = u2(U18, s69.origin, s69.direction);
    return this._surfaceIntersector.resetWithRay(s69, t68), this.view.basemapTerrain.intersect(this._surfaceIntersector, null, n77, i60), this._surfaceIntersector.results.min.getIntersectionPoint(r62) ? r62 : null;
  }
  _cameraChanged(e65) {
    this._updateCenterPointsOfInterest();
    const t68 = e65.eye;
    F2(this.renderPointOfView, t68) || this._set("renderPointOfView", r5(this._propertiesPool.get("renderPointOfView"), t68));
  }
  _updateCenterPointsOfInterest() {
    this._centerRayDirty = true, this._surfaceAltitudeAtCenterDirty = true, this._contentAltitudeAtCenterDirty = true;
    for (const e65 of this._pois)
      e65.updateRenderLocation();
  }
  _updateCenterOnContent() {
    this._contentAltitudeAtCenterDirty = true, this.centerOnContent.updateRenderLocation();
  }
  _setDebug(e65) {
    if (!e65)
      return this._debugCenters.forEach((e66) => e66.hide()), void this._handles.remove("debug");
    for (const t68 of this._pois)
      this._handles.add(l6(() => t68.renderLocation, (e66) => {
        var _a;
        return (_a = this._debugCenters.get(t68)) == null ? void 0 : _a.show(e66, t68.renderCoordsHelper.spatialReference);
      }, h3), "debug");
  }
  get test() {
    return { update: () => {
      this.surfaceGeometryUpdates.runTask();
      for (const e65 of this._pois)
        e65.runTask();
    }, surfaceGeometryUpdates: this.surfaceGeometryUpdates };
  }
};
e([y2({ readOnly: true })], P21.prototype, "centerOnContent", void 0), e([y2({ readOnly: true })], P21.prototype, "centerOnSurfaceFrequent", void 0), e([y2({ readOnly: true })], P21.prototype, "centerOnSurfaceInfrequent", void 0), e([y2({ readOnly: true })], P21.prototype, "cameraOnSurface", void 0), e([y2({ readOnly: true })], P21.prototype, "focus", void 0), e([y2({ readOnly: true })], P21.prototype, "renderPointOfView", void 0), e([y2({ readOnly: true })], P21.prototype, "surfaceOrigin", void 0), e([y2({ readOnly: true })], P21.prototype, "contentGeometryUpdates", void 0), e([y2({ readOnly: true })], P21.prototype, "surfaceGeometryUpdates", void 0), e([y2({ constructOnly: true })], P21.prototype, "view", void 0), e([y2({ readOnly: true })], P21.prototype, "updating", null), P21 = e([a4("esri.views.3d.support.PointsOfInterest")], P21);
var j22 = Array;
var U18 = n7();
var E31 = d10();
var F21 = { exclude: /* @__PURE__ */ new Set([L4]) };

// node_modules/@arcgis/core/layers/support/ElevationQueryTileCache.js
var t53 = class {
  constructor(t68) {
    this._store = t68;
  }
  destroy() {
    this._store.destroy();
  }
  get(t68) {
    return this._store.get(t68);
  }
  put(t68, s69) {
    this._store.put(t68, s69, s69.values.byteLength + 256);
  }
};

// node_modules/@arcgis/core/views/3d/terrain/ElevationBounds.js
var s56 = class {
  constructor(s69 = 0, a67 = 0) {
    this.min = s69, this.max = a67, this.level = 0, this.hasNoDataValues = false;
  }
  copyFrom(s69) {
    this.min = s69.min, this.max = s69.max, this.level = s69.level, this.hasNoDataValues = s69.hasNoDataValues;
  }
};

// node_modules/@arcgis/core/views/3d/terrain/ElevationData.js
var r49 = class {
  constructor(t68, o61, s69) {
    this.type = "elevation", this.level = t68[0], this.i = t68[1], this.j = t68[2], this.extent = o61, this.samplerData = new t13(s69, o61);
  }
  computeMinMaxValue(t68, a67, r62, i60) {
    i60.min = 1 / 0, i60.max = -1 / 0, i60.hasNoDataValues = false;
    const e65 = t68 - this.level;
    if (e65 <= 0)
      return i60;
    const l63 = 2 ** e65;
    if (!(Math.floor(a67 / l63) === this.i && Math.floor(r62 / l63) === this.j))
      return i60;
    let n77 = 1 / 0, h46 = -1 / 0;
    const f49 = this.samplerData.data.width, m44 = this.samplerData.data.values, u51 = 0.5 * l18;
    let c58 = (f49 - 1) / l63, p54 = (r62 - this.j * l63) * c58, M22 = (a67 - this.i * l63) * c58;
    if (c58 < 1) {
      const t69 = Math.floor(p54), a68 = Math.floor(M22), s69 = t69 + a68 * f49, r63 = m44[s69], e66 = m44[s69 + 1], l64 = m44[s69 + f49], n78 = m44[s69 + f49 + 1];
      if (r63 + e66 + l64 + n78 < u51) {
        const s70 = p54 - t69, h47 = M22 - a68, f50 = g6(r63, e66, l64, n78, s70, h47), m45 = g6(r63, e66, l64, n78, s70 + c58, h47), u52 = g6(r63, e66, l64, n78, s70, h47 + c58), x34 = g6(r63, e66, l64, n78, s70 + c58, h47 + c58);
        return i60.min = Math.min(f50, m45, u52, x34), i60.max = Math.max(f50, m45, u52, x34), i60;
      }
      p54 = t69, M22 = a68, c58 = 1;
    } else
      p54 = Math.floor(p54), M22 = Math.floor(M22), c58 = Math.ceil(c58);
    for (let o61 = p54; o61 <= p54 + c58; o61++)
      for (let t69 = M22; t69 <= M22 + c58; t69++) {
        const a68 = m44[o61 + t69 * f49];
        a68 < u51 ? (n77 = Math.min(n77, a68), h46 = Math.max(h46, a68)) : i60.hasNoDataValues = true;
      }
    return i60.min = n77, i60.max = h46, i60;
  }
};
var i53 = 0.5 * l18;
function e46(a67, o61, s69) {
  if (null == s69)
    return null;
  for (const r62 of s69) {
    if (!r62)
      continue;
    const s70 = r62.safeWidth;
    let e65 = i3(r62.dy * (r62.y1 - o61), 0, s70), l63 = i3(r62.dx * (a67 - r62.x0), 0, s70);
    const n77 = Math.floor(e65), h46 = Math.floor(l63), f49 = r62.data.width, m44 = n77 * f49 + h46, u51 = r62.data.values, c58 = u51[m44], p54 = u51[m44 + 1], M22 = m44 + f49, x34 = u51[M22], d52 = u51[M22 + 1];
    if (c58 + x34 + p54 + d52 < i53) {
      e65 -= n77, l63 -= h46;
      const t68 = c58 + (p54 - c58) * l63;
      return t68 + (x34 + (d52 - x34) * l63 - t68) * e65;
    }
  }
  return null;
}

// node_modules/@arcgis/core/views/3d/terrain/ExtentHelper.js
var m34 = class extends m {
  constructor(e65) {
    super(e65);
  }
  initialize() {
    this.addHandles([this.layerViews.on("change", () => this.notifyChange("stencilEnabledExtents"))]);
  }
  destroy() {
  }
  get layerViewsExtent() {
    return this._computeLayerViewsExtent();
  }
  get tiledLayersExtent() {
    return this._computeTiledLayersExtent();
  }
  get stencilEnabledExtents() {
    return this._computeStencilEnabledExtents();
  }
  _computeStencilEnabledExtents() {
    const e65 = [];
    return this.layerViews.forEach((t68) => {
      const r62 = t68.layer;
      if ("IntegratedMeshLayer" === r62.operationalLayerType && null != this.viewSpatialReference) {
        const t69 = g25(r62.fullExtent, this.viewSpatialReference);
        null != t69 && e65.push(o6(t69));
      }
    }), e65;
  }
};
function x28(e65, t68) {
  return e65 === l13.Global ? new h37(t68) : new w24(t68);
}
e([y2({ readOnly: true })], m34.prototype, "layerViewsExtent", null), e([y2({ readOnly: true })], m34.prototype, "tiledLayersExtent", null), e([y2({ readOnly: true })], m34.prototype, "stencilEnabledExtents", null), e([y2()], m34.prototype, "viewSpatialReference", void 0), e([y2()], m34.prototype, "tilingScheme", void 0), e([y2()], m34.prototype, "defaultTiledLayersExtent", void 0), e([y2({ constructOnly: true })], m34.prototype, "layers", void 0), e([y2({ constructOnly: true })], m34.prototype, "layerViews", void 0), m34 = e([a4("esri.views.3d.terrain.ExtentHelper")], m34);
var h37 = class extends m34 {
  _computeLayerViewsExtent() {
    return this._globalExtent;
  }
  _computeTiledLayersExtent() {
    return this._globalExtent;
  }
  get _globalExtent() {
    return this.viewSpatialReference.isWebMercator ? m7 : u9;
  }
};
h37 = e([a4("esri.views.3d.terrain.ExtentHelperGlobal")], h37);
var w24 = class extends m34 {
  _computeLayerViewsExtent() {
    const e65 = C2(), t68 = this.viewSpatialReference;
    this.layerViews.forEach((r63) => {
      const n78 = r63.layer;
      if (r63.isResolved() && ("graphics" !== n78.type || !n78.internal)) {
        const n79 = g25("fullExtentInLocalViewSpatialReference" in r63 && r63.fullExtentInLocalViewSpatialReference || r63.layer.fullExtent, t68);
        m3(e65, n79, e65);
      }
    });
    const r62 = x5(e65) ? e65 : null, n77 = this._get("layerViewsExtent");
    return H3(r62, n77) ? n77 : r62;
  }
  _computeTiledLayersExtent() {
    const e65 = this.tilingScheme;
    if (!e65)
      return null;
    const t68 = this.viewSpatialReference, r62 = C2();
    this.layers.forEach((n78) => {
      if (n78.loaded && s15(n78)) {
        const s70 = b3(n78, t68, l13.Local);
        if (null == s70)
          return;
        const { tileInfo: i60, fullExtent: l63 } = s70;
        null != i60 && null != l63 && (H5(n78) || e65.compatibleWith(i60) && l63.spatialReference.equals(e65.spatialReference)) && m3(r62, l63, r62);
      }
    }), m3(r62, this.defaultTiledLayersExtent, r62);
    const n77 = x5(r62) ? r62 : null, s69 = this._get("tiledLayersExtent");
    return H3(n77, s69) ? s69 : n77;
  }
};
function g25(e65, t68) {
  return null == e65 || e65.spatialReference.equals(t68) ? e65 : An(e65, e65.spatialReference, t68);
}
w24 = e([a4("esri.views.3d.terrain.ExtentHelperLocal")], w24);

// node_modules/@arcgis/core/views/3d/terrain/LayerClass.js
var A27;
!function(A33) {
  A33[A33.ELEVATION = 0] = "ELEVATION", A33[A33.MAP = 1] = "MAP";
}(A27 || (A27 = {}));
var E32 = [A27.ELEVATION, A27.MAP];

// node_modules/@arcgis/core/views/3d/webgl-engine/parts/requireUtils.js
function e47() {
  var _a;
  const e65 = (_a = globalThis.require) == null ? void 0 : _a.modules;
  if (e65) {
    const o61 = Object.keys(e65);
    for (const s69 of o61)
      -1 !== s69.search(".glsl") && delete e65[s69];
  }
}

// node_modules/@arcgis/core/views/3d/terrain/OverlayManager.js
var ne4 = [[-0.1, -2, 3.9, 2], [-0.1, -3.9, 3.9, 0.1], [-2, -3.9, 2, 0.1], [-3.9, -3.9, 0.1, 0.1], [-3.9, -2, 0.1, 2], [-3.9, -0.1, 0.1, 3.9], [-2, -0.1, 2, 3.9], [-0.1, -0.1, 3.9, 3.9]];
var oe4;
var le4 = class extends m {
  get running() {
    return this._placementDirty && (this._drapeSources.size > 0 || this.view.graphics.length > 0 || t19.OVERLAY_DRAW_DEBUG_TEXTURE) && !!this._spatialReference && !this.suspended && this.surface.ready;
  }
  get _isSpherical() {
    return this.view.state.isGlobal;
  }
  get _worldToPCSRatio() {
    return null != this._spatialReference && this._spatialReference.isGeographic && !this.view.state.isLocal ? A3(this._spatialReference).metersPerDegree : 1;
  }
  get suspended() {
    return this.surface.suspended;
  }
  get updating() {
    return this.running || this.renderer.updating || this._contentUpdated;
  }
  get hasHighlights() {
    return this.renderer.hasHighlights;
  }
  get rendersOccluded() {
    return this.renderer.rendersOccluded;
  }
  constructor(e65) {
    super(e65), this._handles = new t3(), this._spatialReference = null, this._renderSR = null, this._overlaySREqualsRenderSR = true, this._drapeSources = /* @__PURE__ */ new Set(), this._drapeTargets = /* @__PURE__ */ new Set(), this._placementDirty = false, this._contentUpdated = false, this._drawTexturesDirty = false, this._drawTexturesAnimateDirty = false, this._hasUnusedRenderTargets = false, this._longitudeCyclical = null, this._latestOriginId = 0, this._maxResolution = has("esri-mobile") ? 2048 : 4096, this._animationTimeLast = 0, this._removeRenderOverlayCallback = () => {
    };
  }
  initialize() {
    var _a;
    const e65 = this.view;
    this.renderer = new ie({ view: e65, worldToPCSRatio: this._worldToPCSRatio, spatialReference: this._spatialReference });
    const t68 = () => this.setDrawTexturesDirty();
    this._groundIntersector = A14(this.view.state.viewingMode), this._groundIntersector.options.backfacesTerrain = true, this._groundIntersector.options.invisibleTerrain = true, this._groundIntersector.options.hud = false, this._handles.add([this.renderer.events.on("has-highlights", () => {
      t68(), this.notifyChange("hasHighlights");
    }), this.renderer.events.on("has-water", (t69) => {
      var _a2;
      return (_a2 = e65._stage) == null ? void 0 : _a2.renderer.setParameters({ hasOverlayWater: t69 });
    }), this.renderer.events.on("renders-occluded", () => {
      t68(), this.notifyChange("rendersOccluded");
    }), this.renderer.events.on("content-changed", t68), l6(() => e65.state.camera.pixelRatio, t68), l6(() => e65.state.alignPixelEnabled, t68), this.renderer.events.on("textures-disposed", () => this.updateOverlayResult()), l6(() => {
      var _a2, _b, _c;
      return [(_a2 = e65.pointsOfInterest) == null ? void 0 : _a2.renderPointOfView, (_c = (_b = e65.pointsOfInterest) == null ? void 0 : _b.centerOnSurfaceFrequent) == null ? void 0 : _c.location];
    }, () => this.setPlacementDirty()), l6(() => {
      var _a2, _b;
      return [(_a2 = e65.state) == null ? void 0 : _a2.pixelRatio, (_b = e65.state) == null ? void 0 : _b.contentPixelRatio];
    }, () => this.setPlacementDirty(), U3), this.surface.on("elevation-change", () => this.setPlacementDirty()), e65.on("resize", () => this.setPlacementDirty()), e65.resourceController.scheduler.registerTask(I3.OVERLAY, this), e65._stage.renderView.events.on("force-camera-for-screenshot", (e66) => {
      this._updateOverlays(C4, e66.camera, O4.BACKGROUND), this.renderer.hasOverlays && this._drawOverlayTextures(this.renderer.overlays, O4.BACKGROUND, e66);
    })]);
    let r62 = (e66) => this._renderOverlayCallback(e66);
    this._removeRenderOverlayCallback = () => {
      r62 = () => {
      };
    }, (_a = e65._stage) == null ? void 0 : _a.renderer.setParameters({ renderOverlay: (e66) => r62(e66) });
  }
  _renderOverlayCallback(e65) {
    this._contentUpdated = false;
    const t68 = this.renderer;
    t68.processSyncDrapeSources(), t68.hasOverlays && (this._dispatchAnimationUpdate(e65), this._drawOverlayTextures(t68.overlays, O4.UPDATE, this.view.state)), this._hasUnusedRenderTargets && this._collectUnusedRenderTargetMemory();
  }
  destroy() {
    var _a, _b;
    this._handles = l(this._handles), this._removeRenderOverlayCallback(), (_b = (_a = this.view) == null ? void 0 : _a._stage) == null ? void 0 : _b.renderer.setParameters({ renderOverlay: () => {
    } }), null != oe4 && (oe4.hide(), oe4 = null);
  }
  get hasOverlays() {
    return this.renderer.hasOverlays;
  }
  setSpatialReference(e65) {
    this._spatialReference = e65, this.renderer.spatialReference = e65, this._longitudeCyclical = null;
    const t68 = this.view.renderSpatialReference;
    null != e65 && null != t68 ? (this._renderSR = t68, this._overlaySREqualsRenderSR = e65.equals(this._renderSR), this._isSpherical && (this._longitudeCyclical = e65.isWebMercator ? new i4(-20037508342787e-6, 20037508342787e-6) : new i4(-180, 180), this.renderer.longitudeCyclical = this._longitudeCyclical), this.renderer && (this.renderer.worldToPCSRatio = this._worldToPCSRatio)) : this.renderer.disposeOverlays();
  }
  get gpuMemoryUsage() {
    return this.renderer.gpuMemoryUsage;
  }
  registerDrapeSource(e65, t68, r62) {
    this._drapeSources.add(e65), this.renderer.ensureOverlays(this._drapeTargets, this._drapeSources);
    const s69 = this.renderer.createDrapeSourceRenderer(e65, t68, r62);
    return this._updateDrapeSourceExtent(e65), this._setContentDirty(), this.notifyChange("running"), s69;
  }
  registerGeometryDrapeSource(e65) {
    return this.registerDrapeSource(e65, _10);
  }
  _updateDrapeSourceExtent(e65) {
    2 === this.renderer.overlays.length && null != e65.setDrapingExtent && null != this._spatialReference && e65.setDrapingExtent(this.renderer.overlays, this._spatialReference);
  }
  unregisterDrapeSource(e65) {
    this._drapeSources.has(e65) && (this._drapeSources.delete(e65), this.renderer.removeDrapeSourceRenderer(e65), this.renderer.ensureDrapeSources(this._drapeSources), this._setContentDirty(), this.notifyChange("running"));
  }
  registerDrapeTarget(e65) {
    this._drapeTargets.add(e65), this.renderer.ensureOverlays(this._drapeTargets, this._drapeSources);
  }
  updateOverlayResult() {
    var _a;
    (_a = this.view._stage) == null ? void 0 : _a.renderer.setParameters({ overlays: this.renderer.overlays });
  }
  unregisterDrapeTarget(e65) {
    this._drapeTargets.delete(e65), this.renderer.ensureDrapeTargets(this._drapeTargets);
  }
  _setContentDirty() {
    this.setPlacementDirty(), this.setDrawTexturesDirty();
  }
  setPlacementDirty() {
    this._placementDirty = true;
  }
  runTask(e65) {
    return this._updateOverlays(e65, this.view.state.contentCamera, O4.UPDATE);
  }
  _updateOverlays(e65, t68, r62) {
    if (!this._spatialReference)
      return g5.YIELD;
    const s69 = this._computeOverlayResolution(t68);
    this._computeOverlayExtents(t68, s69, ue3);
    const i60 = M3(ue3.inner) / M3(ue3.outer);
    this.renderer.ensureOverlays(this._drapeTargets, this._drapeSources);
    const a67 = this._updateOverlay(O6.INNER, ue3.inner, s69, 1 * ue3.pixelRatioAdjustment, ue3.mapUnitsPerPixel), n77 = this._updateOverlay(O6.OUTER, ue3.outer, s69, i60 * ue3.pixelRatioAdjustment, ue3.mapUnitsPerPixel);
    a67 !== ye3.EXTENT && n77 !== ye3.EXTENT || (this._drapeSources.forEach((e66) => this._updateDrapeSourceExtent(e66)), this.surface.updateTileOverlayParams(r62)), a67 === ye3.NONE && n77 === ye3.NONE || this.setDrawTexturesDirty(), this._placementDirty = false, e65.madeProgress();
  }
  _computeOverlayResolution(e65) {
    const t68 = this.view.state.contentPixelRatio, r62 = e65.fullWidth / e65.pixelRatio * t68, s69 = e65.fullHeight / e65.pixelRatio * t68, i60 = Math.ceil(1.5 * Math.max(r62, s69));
    return Math.min(n32(i60), this._maxResolution);
  }
  _updateOverlay(e65, t68, r62, s69, i60) {
    if (0 === this.renderer.overlays.length)
      return ye3.NONE;
    const a67 = this.renderer.overlays[e65], n77 = a67.mapUnitsPerPixel;
    if (a67.mapUnitsPerPixel = i60, a67.pixelRatio = s69, he4(t68, a67.extent) && r62 === a67.resolution)
      return n77 === i60 ? ye3.NONE : ye3.RERENDER_ONLY;
    e9(a67.extent, t68), a67.resolution = r62;
    const o61 = y3(a67.extent);
    return a67.renderLocalOrigin = c11(o61[0], o61[1], 0, "OV_" + this._latestOriginId++), ye3.EXTENT;
  }
  setTileParameters(e65) {
    const t68 = e65.renderData.overlay;
    if (this.renderer.overlays.length > 0) {
      const r62 = this.renderer.overlays[O6.INNER], s69 = this.renderer.overlays[O6.OUTER], i60 = e65.extent;
      this._rectInsideRect(r62.extent, i60) || this._rectanglesOverlap(i60, r62.extent) || this._rectanglesOverlap(i60, s69.extent) ? (this._setTileOverlayData(i60, O6.INNER, t68), this._setTileOverlayData(i60, O6.OUTER, t68)) : (this._clearTileOverlayData(O6.INNER, t68), this._clearTileOverlayData(O6.OUTER, t68));
    } else
      this._clearTileOverlayData(O6.INNER, t68), this._clearTileOverlayData(O6.OUTER, t68);
  }
  overlayPixelSizeInMapUnits(e65) {
    if (0 === this.renderer.overlays.length)
      return 0;
    const t68 = this.renderer.overlays[O6.INNER], r62 = this.renderer.overlays[O6.OUTER], s69 = this._pointIsInExtent(e65, t68.extent) ? t68 : r62;
    return (s69.extent[2] - s69.extent[0]) / s69.resolution;
  }
  _setTileOverlayData(e65, t68, r62) {
    if (0 === this.renderer.overlays.length)
      return;
    const s69 = this.renderer.overlays[t68].extent, i60 = M3(s69), a67 = s13(s69);
    let n77 = e65[0];
    if (this._longitudeCyclical) {
      n77 = this._longitudeCyclical.minimalMonotonic(s69[0], n77);
      const t69 = this._longitudeCyclical.minimalMonotonic(s69[0], e65[2]);
      n77 > t69 && (n77 = t69 - (e65[2] - e65[0]));
    }
    r62.setScale(t68, M3(e65) / i60, s13(e65) / a67), r62.setOffset(t68, (n77 - s69[0]) / i60, (e65[1] - s69[1]) / a67);
  }
  _clearTileOverlayData(e65, t68) {
    t68.setScale(e65, -1, -1), t68.setOffset(e65, -1, -1);
  }
  async reloadShaders() {
    e47(), await this.renderer.reloadShaders(), this.setDrawTexturesDirty(), this.runTask(C4);
  }
  _dispatchAnimationUpdate(e65) {
    const t68 = n4(e65 - this._animationTimeLast);
    if (t68 >= this.surface.view._stage.renderer.animationTimestep || null != this.view.state.forcedAnimationTime || this._drawTexturesDirty || this._drawTexturesAnimateDirty) {
      const r62 = n4(t68 / this.surface.view._stage.renderer.animationTimeDilation), s69 = new h11(this.view.state.camera, r62, this.view.state.forcedAnimationTime);
      this.renderer.updateAnimation(s69) && (this._drawTexturesAnimateDirty = true), this._animationTimeLast = e65;
    }
  }
  setDrawTexturesDirty() {
    this.renderer.hasOverlays ? (this._contentUpdated = true, this._drawTexturesDirty = true, this.view._stage.renderView.requestRender()) : this.setPlacementDirty();
  }
  _intersectGroundFromView(e65, t68, r62, s69) {
    const i60 = this.view.sceneIntersectionHelper.getCenterRayWithSubpixelOffset(e65, me3, t68, r62);
    if (null == i60)
      return false;
    const a67 = i60.origin, n77 = u2(de3, i60.origin, i60.direction);
    return this._groundIntersector.reset(a67, n77, e65), this._groundIntersector.intersect([]), this.view.basemapTerrain.intersect(this._groundIntersector, null, a67, n77), this._groundIntersector.results.min.getIntersectionPoint(s69);
  }
  _findHorizonBasedPointOfInterest(e65, t68) {
    let r62 = 0.5;
    const i60 = 0.55, n77 = this.view.renderCoordsHelper.getAltitude(e65.eye), o61 = this.view.pointsOfInterest.centerOnSurfaceFrequent, l63 = 1e-5, h46 = i3(o61.estimatedSurfaceAltitude, e65.aboveGround ? -1 / 0 : n77 + l63, e65.aboveGround ? n77 - l63 : 1 / 0), c58 = e65.aboveGround;
    if ("global" === this.view.viewingMode) {
      const t69 = de3;
      Y2(T5(tt, A3(this.view.spatialReference).radius + h46), p8(e65.eye, e65.viewForward), t69), e7(t69, t69, e65.eye);
      const a67 = r7.normalize(i10(e65.viewForward, t69, e65.viewRight)) / e65.fovY + 0.5, n78 = a67 <= 0 || a67 >= 1 ? 0.5 : i60;
      r62 = c58 ? n78 * a67 : a67 + n78 * (1 - a67);
    } else {
      const t69 = 0.5 * Math.PI - Math.acos(-e65.viewForward[2]), s69 = Math.tan(t69), n78 = r11(0, s69, 1, 0), o62 = w2(n78, n78, e65.projectionMatrix)[1], l64 = i3(0.5 + 0.5 * o62, 0, 1);
      r62 = 1 === l64 || 0 === l64 ? 0.5 : c58 ? l64 * i60 : 1 - (1 - l64) * i60;
    }
    return !!this._intersectGroundFromView(e65, 0.5, r62, t68) && X(t68, e65.eye) < o61.distance * o61.distance;
  }
  _computeOverlayExtents(e65, t68, r62) {
    const s69 = this.view.pointsOfInterest.centerOnSurfaceFrequent.renderLocation, i60 = n7();
    this._findHorizonBasedPointOfInterest(e65, i60) || r5(i60, s69), t19.OVERLAY_SHOW_CENTER ? (null == oe4 && (oe4 = new t52(this.view.graphics, "red")), oe4.show(i60, this._renderSR)) : null != oe4 && oe4.hide();
    const a67 = Math.max(0.1, x2(e65.eye, i60)), o61 = n46(this.view.renderCoordsHelper, s69, e65.eye);
    this._overlaySREqualsRenderSR || Hn(i60, this._renderSR, i60, this._spatialReference);
    const l63 = this.surface.extent, h46 = !this._isSpherical && null != this._spatialReference && this._spatialReference.isGeographic, c58 = h46 && null != this._spatialReference ? 1 / A3(this._spatialReference).metersPerDegree : 1, d52 = this.view.state.contentPixelRatio, u51 = e65.perScreenPixelRatio / d52 * a67 * c58;
    r62.mapUnitsPerPixel = u51 / this._worldToPCSRatio;
    let _33 = t68 * u51 / 2 * h13, m44 = false, y32 = h46 ? 90 : 1 / 0;
    this._isSpherical && null != l63 && null != this._spatialReference && (this._spatialReference.isWebMercator ? (_33 /= Math.cos(f4(i60[1])), y32 = l63[3]) : (m44 = true, _33 /= A3(this._spatialReference).metersPerDegree, y32 = 90), _33 >= y32 && (_33 = y32, i60[1] = 0, this._spatialReference.isWebMercator && (i60[0] = 0)));
    let R21 = 1;
    m44 && (R21 = 1 / Math.max(0.2, Math.cos(Math.abs(M(i60[1])))), _33 * R21 > 180 && (R21 = 180 / _33), r62.mapUnitsPerPixel *= R21);
    const w29 = Math.log(2) / 12;
    _33 = Math.exp(Math.round(Math.log(_33) / w29) * w29);
    const x34 = _33 * R21, E39 = 32, U23 = 0.5 * t68 / (E39 * x34), C26 = 0.5 * t68 / (E39 * _33);
    i60[0] = Math.round(i60[0] * U23) / U23, i60[1] = Math.round(i60[1] * C26) / C26;
    const j25 = r62.inner;
    j25[0] = i60[0] - x34, j25[1] = i60[1] - _33, j25[2] = i60[0] + x34, j25[3] = i60[1] + _33, this._isSpherical && this._shiftExtentToFitBounds(j25, 1 / 0, y32);
    const N19 = r62.outer;
    if (6 * x34 > M3(l63))
      e9(N19, l63);
    else {
      if (Math.PI / 2 - Math.abs(o61 - Math.PI / 2) <= 0.25 * Math.PI)
        N19[0] = j25[0] - x34, N19[1] = j25[1] - _33, N19[2] = j25[2] + x34, N19[3] = j25[3] + _33;
      else {
        Hn(e65.eye, this._renderSR, de3, this._spatialReference), o9(ce5, i60, de3);
        let t69 = -Math.atan2(ce5[1], ce5[0]) + 0.125 * Math.PI;
        t69 < 0 && (t69 += 2 * Math.PI);
        const r63 = Math.floor(t69 / (0.25 * Math.PI));
        l3(ce5, ne4[r63], 2 * _33), ce5[0] *= R21, ce5[2] *= R21, s8(N19, j25, ce5);
      }
    }
    if (this._isSpherical)
      N19[0] = this._longitudeCyclical.clamp(N19[0]), N19[2] = this._longitudeCyclical.clamp(N19[2]), N19[1] = Math.max(N19[1], -y32), N19[3] = Math.min(N19[3], y32);
    else {
      const e66 = R2(j25, l63, pe3), t69 = R2(N19, l63, _e);
      E2(e66, t69) && (N19[2] = N19[0], N19[3] = N19[1]);
    }
    const A33 = Math.abs(j25[2] - j25[0]) / t68;
    r62.mapUnitsPerPixel = Math.max(r62.mapUnitsPerPixel, A33), r62.pixelRatioAdjustment = r62.mapUnitsPerPixel / A33;
  }
  _drawOverlayTextures(e65, t68, r62) {
    if (0 === e65.length || !this._drawTexturesDirty && !this._drawTexturesAnimateDirty)
      return;
    const s69 = this._drawTexturesDirty;
    this._drawTexturesDirty = false, this._drawTexturesAnimateDirty = false;
    const i60 = this._drawOverlay(e65[O6.INNER], r62), a67 = this._drawOverlay(e65[O6.OUTER], r62);
    i60 !== D3.CHANGED && a67 !== D3.CHANGED || this.surface.updateTileOverlayParams(O4.UPDATE), this._collectUnusedRenderTargetMemory(), this.updateOverlayResult(), s69 ? (this.surface.requestRender(t68), t68 === O4.UPDATE && this.surface.requestUpdate()) : this.surface.requestRender(O4.BACKGROUND);
  }
  _drawOverlay(e65, t68) {
    return this._longitudeCyclical ? e65.setupGeometryViewsCyclical(this._longitudeCyclical) : e65.setupGeometryViewsDirect(), e65.draw(this.renderer, t68);
  }
  _collectUnusedRenderTargetMemory() {
    this._hasUnusedRenderTargets = false, this.renderer.hasOverlays && (this._hasUnusedRenderTargets = this.renderer.collectUnusedRenderTargetMemory());
  }
  _rectanglesOverlap(e65, t68) {
    return null != e65 && (this._longitudeCyclical ? (this._longitudeCyclical.contains(t68[0], t68[2], e65[0]) || this._longitudeCyclical.contains(t68[0], t68[2], e65[2]) || this._longitudeCyclical.contains(e65[0], e65[2], t68[0])) && !(e65[1] > t68[3] || e65[3] < t68[1]) : q(e65, t68));
  }
  _rectInsideRect(e65, t68) {
    return null != t68 && (this._longitudeCyclical ? this._longitudeCyclical.contains(e65[0], e65[2], t68[0]) && this._longitudeCyclical.contains(e65[0], e65[2], t68[2]) && t68[1] > e65[1] && t68[3] < e65[3] : E2(e65, t68));
  }
  _pointIsInExtent(e65, t68) {
    if (this._longitudeCyclical)
      return this._longitudeCyclical.contains(t68[0], t68[2], e65.x) && e65.y >= t68[1] && e65.y <= t68[3];
    const r62 = e65.x, s69 = e65.y;
    return r62 > t68[0] && r62 < t68[2] && s69 > t68[1] && s69 < t68[3];
  }
  _shiftExtentToFitBounds(e65, t68, r62) {
    let s69 = 0, i60 = 0;
    e65[0] < -t68 ? s69 = e65[0] + t68 : e65[2] > t68 && (s69 = t68 - e65[2]), e65[1] < -r62 ? i60 = e65[1] + r62 : e65[3] > r62 && (i60 = r62 - e65[3]), v4(e65, s69, i60);
  }
  get test() {
    return { renderer: this.renderer, update: () => this.runTask(C4) };
  }
};
function he4(e65, t68) {
  const r62 = 1e-5, s69 = t19.TESTS_DISABLE_OPTIMIZATIONS ? 0 : r62 * Math.max(e65[2] - e65[0], e65[3] - e65[1], t68[2] - t68[0], t68[3] - t68[1]);
  return Math.abs(t68[0] - e65[0]) <= s69 && Math.abs(t68[1] - e65[1]) <= s69 && Math.abs(t68[2] - e65[2]) <= s69 && Math.abs(t68[3] - e65[3]) <= s69;
}
e([y2()], le4.prototype, "_spatialReference", void 0), e([y2({ readOnly: true })], le4.prototype, "running", null), e([y2()], le4.prototype, "_placementDirty", void 0), e([y2()], le4.prototype, "_contentUpdated", void 0), e([y2()], le4.prototype, "_isSpherical", null), e([y2()], le4.prototype, "_worldToPCSRatio", null), e([y2({ autoDestroy: true })], le4.prototype, "renderer", void 0), e([y2({ constructOnly: true })], le4.prototype, "view", void 0), e([y2({ constructOnly: true })], le4.prototype, "surface", void 0), e([y2()], le4.prototype, "suspended", null), e([y2()], le4.prototype, "updating", null), e([y2({ type: Boolean })], le4.prototype, "hasHighlights", null), e([y2({ type: Boolean })], le4.prototype, "rendersOccluded", null), le4 = e([a4("esri.views.3d.terrain.OverlayManager")], le4);
var ce5 = n14();
var de3 = n7();
var ue3 = { inner: i5(), outer: i5(), mapUnitsPerPixel: 0, pixelRatioAdjustment: 1 };
var pe3 = i5();
var _e = i5();
var me3 = d10();
var ye3;
!function(e65) {
  e65[e65.NONE = 0] = "NONE", e65[e65.EXTENT = 1] = "EXTENT", e65[e65.RERENDER_ONLY = 2] = "RERENDER_ONLY";
}(ye3 || (ye3 = {}));

// node_modules/@arcgis/core/geometry/support/buffer/BufferPool.js
var t54 = class _t3 {
  constructor(e65, t68) {
    this._factoryCallback = e65, this._lengthCallback = t68, this._pool = /* @__PURE__ */ new Map();
  }
  acquire(e65) {
    if (!_t3.test.disabled) {
      const t68 = this._pool.get(e65);
      if (t68 && 0 !== t68.length)
        return t68.pop();
    }
    try {
      return this._factoryCallback(e65);
    } catch (o61) {
      const t68 = window.performance && window.performance.memory;
      let i60 = "";
      throw t68 && (i60 = `
  totalJSHeapSize: ${t68.totalJSHeapSize}, usedJSHeapSize: ${t68.usedJSHeapSize}, jsHeapSizeLimit: ${t68.jsHeapSizeLimit}`), console.log("Array allocation of size " + e65 + " failed: " + o61 + i60), o61;
    }
  }
  release(o61) {
    if (_t3.test.disabled)
      return;
    const i60 = this._lengthCallback(o61);
    let s69 = this._pool.get(i60);
    s69 || (s69 = new l2({ shrink: true }), this._pool.set(i60, s69)), s69.push(o61);
  }
  clear() {
    this._pool.clear();
  }
  get test() {
    return { size: this._pool.size };
  }
};
t54.test = { disabled: false };

// node_modules/@arcgis/core/views/3d/terrain/PatchGeometry.js
var l47 = class {
  constructor() {
    this.indices = null, this.vertexAttributes = null, this.boundingBox = P3(), this.indexCount = 0, this.numVerticesPerSide = 0, this.uvRange = [0, 0, 1, 1], this.outerEdges = [null, null, null, null], this.innerEdges = [null, null, null, null];
  }
};
var a53 = class {
  constructor(t68, e65, s69, i60, r62) {
    this.attributes = t68, this.localOrigin = e65, this.index0 = s69, this.stride = i60, this.count = r62;
  }
  getVertexIndex(t68) {
    return this.getAttributeIndex(t68);
  }
  getAttributeIndex(t68) {
    return p12(0 <= t68 && t68 < this.count), this.index0 + this.stride * t68;
  }
  _getVertexRaw(t68, e65) {
    this.attributes.position.getVec(t68, e65);
  }
  getVertexPos(e65, s69) {
    this._getVertexRaw(this.getAttributeIndex(s69), e65), u2(e65, e65, this.localOrigin);
  }
  getNormal(t68, e65) {
    const { typedBuffer: s69, typedBufferStride: i60 } = this.attributes.normalCompressed;
    o29(t68, s69, this.getAttributeIndex(e65), i60);
  }
  _setNormal(t68, e65, s69, i60) {
    const { typedBuffer: r62, typedBufferStride: n77 } = this.attributes.normalCompressed;
    n33(r62, t68, e65, s69, i60, n77);
  }
  _setUV(t68, e65, s69) {
    b20(this.attributes.uv0, t68, e65, s69);
  }
  setNormalFromValues(t68, e65, s69, i60) {
    this._setNormal(this.getAttributeIndex(t68), e65, s69, i60);
  }
  setVertexFromValuesRawPositionUV(t68, e65, s69, i60, r62, n77) {
    const o61 = this.getAttributeIndex(t68);
    this.attributes.position.setValues(o61, e65, s69, i60), this._setUV(o61, r62, n77);
  }
  setVertexFromValuesRawPositionUVNormal(t68, e65, s69, i60, r62, n77, o61, u51, l63) {
    const a67 = this.getAttributeIndex(t68);
    this.attributes.position.setValues(a67, e65, s69, i60), this._setUV(a67, r62, n77), this._setNormal(a67, o61, u51, l63);
  }
};
var h38 = H4().vec3f(O3.POSITION).vec2i16(O3.UV0).vec2i16(O3.NORMALCOMPRESSED, { glNormalized: true });
var c46 = new t54((t68) => h38.createBuffer(t68), (t68) => t68.count);
function m35() {
  c46.clear();
}
function d45(t68) {
  return c46.acquire(t68);
}
function f39(t68) {
  c46.release(t68.vertexAttributes), t68.vertexAttributes = null, t68.indices = null;
}
var g26 = 16384;
function b20(t68, e65, s69, i60) {
  t68.setValues(e65, s69 * g26, i60 * g26);
}
function x29(t68, e65, s69, i60) {
  t68 < i60[0] ? i60[0] = t68 : t68 > i60[3] && (i60[3] = t68), e65 < i60[1] ? i60[1] = e65 : e65 > i60[4] && (i60[4] = e65), s69 < i60[2] ? i60[2] = s69 : s69 > i60[5] && (i60[5] = s69);
}

// node_modules/@arcgis/core/views/3d/terrain/PatchGeometryLUT.js
var t55 = class {
  constructor() {
    this.sinLonLUT = new Array(i17 + 1), this.cosLonLUT = new Array(i17 + 1), this.sinLatLUT = new Array(i17 + 1), this.cosLatLUT = new Array(i17 + 1);
  }
  update(s69, t68, n77) {
    const o61 = t68[0], i60 = t68[2];
    for (let r62 = 0; r62 <= s69; r62++) {
      const t69 = r62 / s69, L25 = o61 * (1 - t69) + i60 * t69;
      this.sinLonLUT[r62] = Math.sin(L25), this.cosLonLUT[r62] = Math.cos(L25);
      const a67 = n77(t69);
      this.sinLatLUT[r62] = Math.sin(a67), this.cosLatLUT[r62] = Math.cos(a67);
    }
  }
};

// node_modules/@arcgis/core/views/3d/terrain/GeometryState.js
var e48 = class {
  constructor() {
    this.cornerTiles = [null, null, null, null], this.cornerTileSamplerVersions = [-1, -1, -1, -1];
  }
};
var l48 = class {
  constructor() {
    this.cornerNeighborData = [new e48(), new e48(), new e48(), new e48()], this.edgeResolutions = [-1, -1, -1, -1], this.edgePeerNeighbors = [null, null, null, null], this.edgePeerNeighborSamplerVersions = [-1, -1, -1, -1], this.cornerPeerNeighbors = [null, null, null, null];
  }
};
var r50 = class {
  constructor() {
    this.numVerticesPerSide = 0, this.samplerData = null, this.clippingArea = null, this.wireframe = false, this.samplerDataVersion = 0, this.neighborData = new l48();
  }
};

// node_modules/@arcgis/core/views/3d/terrain/TextureFader.js
var i54 = class _i {
  constructor(t68) {
    this._getFadeDuration = t68, this._fadeStart = 0, this._delayedTime = 0;
  }
  clear() {
    this._current = l(this._current), this._next = l(this._next), this._waiting = l(this._waiting), this._delayed = l(this._delayed);
  }
  get current() {
    if (null == this._current)
      return null;
    if (!this._isFadingEnabled) {
      const t68 = this._delayed || this._waiting || this._next || this._current;
      t68 !== this._current && (this._current = null, this.clear(), this._current = t68);
    }
    let r62 = _i.test.fadeMoment;
    if (null != this._delayed && (r62 = r62 || performance.now(), r62 >= this._delayedTime && (this._push(this._delayed, n60.Immediate), this._delayed = null)), null != this._next) {
      r62 = r62 || performance.now();
      const i60 = this._fadeDuration, n77 = null != this._current && this._next.texture === this._current.texture, s69 = this._next.type !== r24.FADING, a67 = r62 - this._fadeStart >= i60;
      (n77 || s69 || a67) && (l(this._current), this._current = this._next, this._next = this._waiting, this._waiting = null, this._fadeStart = this._alignFadeStart(r62));
    }
    return this._current;
  }
  get next() {
    return this._next;
  }
  get fadeFactor() {
    if (null == this._next)
      return 1;
    const t68 = _i.test.fadeMoment || performance.now(), e65 = Math.max(0, t68 - this._fadeStart), n77 = this._fadeDuration;
    return e65 > n77 ? 0 : 1 - e65 / n77;
  }
  get isFading() {
    return null != this._next || null != this._delayed;
  }
  push(e65, i60 = n60.Immediate) {
    this._delayed = l(this._delayed), this._push(e65, i60);
  }
  _push(e65, r62) {
    if (this._isFadingEnabled || this.clear(), null == this._current)
      return void (this._current = e65);
    const s69 = _i.test.fadeMoment || performance.now();
    return r62 !== n60.Immediate ? (this._delayed = e65, void (this._delayedTime = s69 + r62)) : null == this._next ? (this._next = e65, void (this._fadeStart = this._alignFadeStart(s69))) : void (null != e65 && (l(this._waiting), this._waiting = e65));
  }
  get _fadeDuration() {
    return null == this._waiting ? this._getFadeDuration() : 0.5 * this._getFadeDuration();
  }
  _alignFadeStart(t68) {
    const e65 = this._getFadeDuration();
    return t68 + e65 - t68 % e65;
  }
  get _isFadingEnabled() {
    return this._getFadeDuration() > 0;
  }
};
var n60;
i54.test = { fadeMoment: 0 }, function(t68) {
  t68[t68.Immediate = 0] = "Immediate", t68[t68.Delayed = 5e3] = "Delayed";
}(n60 || (n60 = {}));

// node_modules/@arcgis/core/views/3d/terrain/TileAgent.js
var l49 = class {
  get updating() {
    return !!this._tileRequested;
  }
  init(e65, t68, s69, i60) {
    this.tile = e65, this._layerIdx = t68, this._layerClass = s69, this._suspended = i60, this._tileLayerInfo = e65.getLayerInfo(t68, s69), this._tileRequested = null;
    const l63 = this._findAncestorWithData();
    this._setUpsampleTile(l63);
  }
  startLoading() {
    return this._requestNext();
  }
  dispose() {
    this._tileRequested && (this._tileRequested.unrequestLayerData(this._layerIdx, this._layerClass, this), this._tileRequested = null), this.tile = null, this._tileLayerInfo = null;
  }
  setSuspension(e65) {
    e65 !== this._suspended && (this._suspended = e65, e65 ? this._tileRequested && (this._tileRequested.unrequestLayerData(this._layerIdx, this._layerClass, this), this._tileRequested = null) : this._tileLayerInfo.data || this.update());
  }
  update() {
    const e65 = this._findAncestorWithData();
    return this._setUpsampleTile(e65), this._requestNext();
  }
  dataArrived(t68, s69) {
    this._setUpsampleTile(t68, s69), this._tileRequested = null, t68 === this.tile ? this.tile.updateRenderData(this._layerClass, r24.FADING, s69) : this._requestNext();
  }
  dataMissing() {
    this._tileRequested = null, this._tileLayerInfo.data = null, this._requestNext();
  }
  _agentDone() {
    this.tile.agentDone(this._layerIdx, this._layerClass), this.dispose();
  }
  _requestNext() {
    if (this._suspended)
      return true;
    const e65 = this._findNextDownload();
    if (this._tileRequested) {
      if (e65 === this._tileRequested)
        return true;
      this._tileRequested.unrequestLayerData(this._layerIdx, this._layerClass, this), this._tileRequested = null;
    }
    return null != e65 ? e65.requestLayerData(this._layerIdx, this._layerClass, this) && (this._tileRequested = e65) : this._agentDone(), !!this._tileRequested;
  }
  _findNextDownload() {
    const e65 = this._layerIdx, l63 = this._layerClass, a67 = this.tile.surface.layerViewByIndex(e65, l63), n77 = m8(a67), { minLevel: r62, maxLevel: h46 } = a67.dataLevelRange, d52 = this._desiredMinLevelDelta, o61 = this._progressiveLevelModulo + d52, u51 = this._scaleRangeEnabled ? o30 : () => true;
    let _33 = this.tile;
    const p54 = _33.level;
    let f49;
    const y32 = this._tileLayerInfo.upsampleInfo, v37 = null != y32 ? y32.tile.level : -1, I28 = null != y32 && v37 - p54 >= d52, c58 = n77 == null ? void 0 : n77.tilemapCache, q19 = "vector-tile-3d" === a67.type ? a67.schemaHelper : null;
    for (; _33 && u51(_33, n77, false) && _33.level >= r62; ) {
      const s69 = _33.level, i60 = p54 - s69, a68 = _33.layerInfo[l63][e65];
      if (a68.data && i60 >= d52) {
        (!I28 || s69 > v37) && this._setUpsampleTile(_33), a68.dataInvalidated && (f49 = _33);
        break;
      }
      const n78 = (q19 == null ? void 0 : q19.getLevelRowColumn(_33.lij)) ?? _33.lij;
      if ("unavailable" !== (c58 == null ? void 0 : c58.getAvailability(n78[0], n78[1], _33.lij[2])) && s69 <= h46 && !a68.data && !a68.dataMissing && ((!f49 || _33.level === r62 || s69 % c16 == 0 || p54 - f49.level < d52) && (f49 = _33), i60 >= o61))
        break;
      _33 = _33.parent;
    }
    if (null != f49 && p54 - f49.level < d52)
      if (y32)
        f49 = null;
      else {
        const t68 = this._findAncestorWithData();
        if (null != t68) {
          this._setUpsampleTile(t68);
          f49 = t68.layerInfo[l63][e65].dataInvalidated ? t68 : null;
        }
      }
    return f49;
  }
  _findAncestorWithData() {
    const e65 = this.tile.elevationLevel, t68 = this._desiredMinLevelDelta;
    let s69;
    for (let i60 = this.tile; i60; i60 = i60.parent)
      if (i60.hasLayerData(this._layerIdx, this._layerClass)) {
        if (e65 - i60.level >= t68)
          return i60;
        s69 = i60;
      }
    return s69;
  }
  _setUpsampleTile(t68, s69) {
    this._tileLayerInfo.setUpsampleInfo(this.tile, t68), this.tile.updateRenderData(this._layerClass, r24.FADING, s69);
  }
  get test() {
    return { findNextDownload: () => this._findNextDownload(), tileLayerInfo: this._tileLayerInfo };
  }
};
var a54 = class extends l49 {
  get _desiredMinLevelDelta() {
    throw n61;
  }
  get _progressiveLevelModulo() {
    throw n61;
  }
  dispose() {
  }
};
var n61 = new Error("Abstract method called on TileAgent");
var r51 = new a54();

// node_modules/@arcgis/core/views/3d/terrain/ElevationTileAgent.js
var l50 = class extends l49 {
  constructor() {
    super(...arguments), this._scaleRangeEnabled = false;
  }
  get _desiredMinLevelDelta() {
    return d13(this.tile.level) - (this.tile.elevationLevel - this.tile.level);
  }
  get _progressiveLevelModulo() {
    return 0;
  }
};

// node_modules/@arcgis/core/views/3d/terrain/MapTileAgent.js
var t56 = class extends l49 {
  constructor() {
    super(), this._scaleRangeEnabled = true;
  }
  get _desiredMinLevelDelta() {
    return 0;
  }
  get _progressiveLevelModulo() {
    return c16;
  }
};

// node_modules/@arcgis/core/views/3d/terrain/TilePerLayerInfo.js
var l51 = class {
  constructor() {
    this.waitingAgents = new l2(), this._upsampleInfo = null, this.loadingAgent = null, this.requestPromise = null, this.requestAbort = null, this.pendingUpdates = 0;
  }
  static acquire(t68) {
    const s69 = o50.acquire();
    return s69._init(t68), s69;
  }
  release() {
    this.dispose(), p40.delete(this), o50.release(this);
  }
  dispose() {
    this.loadingAgent = t2(this.loadingAgent), this.abortRequest(), this._unsetUpsampleInfo(), this.pendingUpdates = 0, this._data = w13(this._data);
  }
  static prune() {
    o50.prune(0);
  }
  _init(t68) {
    this.waitingAgents.clear(), this._data = w13(this._data), this.dataMissing = false, this.dataInvalidated = false, this._unsetUpsampleInfo(), this.abortRequest(), this.loadingAgent = null, this.pendingUpdates = 0, this._pool = t68, this.elevationBounds = null;
  }
  invalidateSourceData() {
    this.dataInvalidated = true, this.dataMissing = false, this._unsetUpsampleInfo();
  }
  abortRequest() {
    this.requestAbort = e2(this.requestAbort), this.requestPromise = null;
  }
  get upsampleInfo() {
    return this._upsampleInfo;
  }
  _unsetUpsampleInfo() {
    null != this._upsampleInfo && (this._upsampleInfo.tile.unrefMapData(), this._pool.release(this._upsampleInfo), this._upsampleInfo = null);
  }
  setUpsampleInfo(t68, s69) {
    if (t68 !== s69 && null != s69) {
      if (null == this._upsampleInfo)
        this._upsampleInfo = this._pool.acquire();
      else {
        if (this._upsampleInfo.tile === s69)
          return;
        this._upsampleInfo.tile.unrefMapData();
      }
      s69.refMapData(), m10(t68, s69, this._upsampleInfo);
    } else
      this._unsetUpsampleInfo();
  }
  get data() {
    return this._data;
  }
  set data(t68) {
    w13(this._data), this._data = t68;
  }
};
var o50 = new e4(l51, null, () => {
});
var p40 = /* @__PURE__ */ new Map();
function r52() {
  p40.size > 0 && (console.log(`${p40.size} live TilePerLayerInfo allocations:`), p40.forEach((t68) => console.log(t68, "\n")));
}

// node_modules/@arcgis/core/views/3d/terrain/TileTexture.js
var t57 = class {
  constructor(t68) {
    this._texture = t68, this.type = "tile-texture", this._refCount = 1;
  }
  retain() {
    ++this._refCount;
  }
  release() {
    --this._refCount, 0 === this._refCount && this._texture.dispose();
  }
  get texture() {
    return this._texture;
  }
  generateMipmap() {
    this._texture.generateMipmap();
  }
  get descriptor() {
    return this._texture.descriptor;
  }
  get gpuMemoryUsage() {
    return this._texture.gpuMemoryUsage;
  }
};

// node_modules/@arcgis/core/views/3d/terrain/TileUpdate.js
var E33;
!function(E39) {
  E39[E39.NONE = 0] = "NONE", E39[E39.SPLIT = 1] = "SPLIT", E39[E39.ELEVATION = 2] = "ELEVATION", E39[E39.MERGE = 4] = "MERGE", E39[E39.RENDERDATA = 8] = "RENDERDATA", E39[E39.GEOMETRY = 16] = "GEOMETRY", E39[E39.TEXTURE_NOFADING = 32] = "TEXTURE_NOFADING", E39[E39.TEXTURE_FADING = 64] = "TEXTURE_FADING";
}(E33 || (E33 = {}));

// node_modules/@arcgis/core/views/3d/terrain/Tile.js
var ie6 = 0.1;
var se5 = class {
  constructor() {
    this.lij = [0, 0, 0], this._children = [null, null, null, null], this._pendingUpdates = 0, this.renderData = null, this._dirty = true, this._previouslyRendered = false, this.extent = i5(), this._elevationBounds = n15(), this.layerInfo = [[], []], this.extentInRadians = i5(), this.centerAtSeaLevel = n7(), this._center = [n7(), _4(), n7()], this.up = i2(), this._isWithinClippingArea = true, this._intersectsClippingArea = true, this._maxTesselation = 0, this._usedMemory = null, this._mapTileMemoryInternal = 0, this._mapDataRefCount = 0, this.screenDepth = 0, this.renderOrder = 0, this._edgeLen = 0, this._edgeLen2 = 0, this._curvatureHeight = 0, this.extentMidX = 0, this.extentMidY = 0, this.distanceToPOI = -1, this._lastPOI = n7();
  }
  static prune() {
    ae5.prune(0), oe5.prune(0), l51.prune();
  }
  get _isCached() {
    return !this.shouldLoad && this._mapDataRefCount <= 0;
  }
  get maxTesselation() {
    return this._maxTesselation;
  }
  get isWithinClippingArea() {
    return this._isWithinClippingArea;
  }
  get intersectsClippingArea() {
    return this._intersectsClippingArea;
  }
  get clippingArea() {
    return this._clippingArea;
  }
  get parent() {
    return this._parent;
  }
  get children() {
    return this._children;
  }
  get surface() {
    return this._surface;
  }
  get elevationBounds() {
    return this._elevationBounds;
  }
  get level() {
    return this.lij[0];
  }
  get key() {
    return `${this.lij[0]}/${this.lij[1]}/${this.lij[2]}`;
  }
  get edgeLen() {
    return this._edgeLen;
  }
  get radius() {
    return this._center[he5.MIDDLE][3];
  }
  get visible() {
    return this._dirty && this.computeVisibility(), this._visible;
  }
  get frustumVisibility() {
    return this._dirty && this.computeVisibility(), this._frustumVisibility;
  }
  computeVisibility() {
    this._dirty = false;
    const e65 = this.parent, t68 = (e65 == null ? void 0 : e65.frustumVisibility) ?? T10.INTERSECTS;
    this._frustumVisibility = t68 === T10.INSIDE ? T10.INSIDE : t68 === T10.OUTSIDE ? T10.OUTSIDE : this._calculateFrustumVisibilityStatus(this.surface.frustum);
    const i60 = this._frustumVisibility !== T10.OUTSIDE && this._intersectsClippingArea;
    i60 !== this._visible && (this._visible = i60, this._surface.emit("tiles-visibility-changed"), this._surface.renderer.setDirty(), this.updateAgentSuspension());
  }
  get loadable() {
    return this.visible || this._surface.view.state.fixedContentCamera;
  }
  get rendered() {
    const e65 = !!this.renderData;
    return e65 !== this._previouslyRendered && (this._surface.emit("tiles-visibility-changed"), this._previouslyRendered = e65, this._surface.renderer.setDirty()), e65;
  }
  get shouldLoad() {
    return this.isLeaf;
  }
  init(e65, t68, i60) {
    this.lij[0] = e65[0], this.lij[1] = e65[1], this.lij[2] = e65[2], this.ellipsoid = A3(i60.tilingScheme.spatialReference), i60.tilingScheme.getExtent(e65[0], e65[1], e65[2], this.extent), i60.tilingScheme.convertExtentToRadians(this.extent, this.extentInRadians), this.extentMidX = 0.5 * (this.extent[0] + this.extent[2]), this.extentMidY = 0.5 * (this.extent[1] + this.extent[3]), this._isWithinClippingArea = true, this._intersectsClippingArea = true, this._clippingArea = null, this._mapDataRefCount = 0, i60.upsampleMapCache.pop(this.key), this._edgeLen = 0, this._edgeLen2 = 0, this._center[he5.MIDDLE][3] = 0, this.elevationLevel = e65 ? e65[0] : 0, t68 && t68.elevationBounds ? a12(this._elevationBounds, t68.elevationBounds) : r13(this._elevationBounds, 0, 0), this._pendingUpdates = 0, this.renderData = null, this.screenDepth = 0, this._visible = false, this._previouslyRendered = false, this._parent = t68, this.unsetChildren(), this._surface = i60, this.updateVisibility();
    for (const s69 of E32) {
      const e66 = i60.numLayers(s69), t69 = this.layerInfo[s69];
      for (const i61 of t69)
        i61.release();
      t69.length = e66;
      for (let i61 = 0; i61 < e66; i61++)
        t69[i61] = l51.acquire(this._surface.upsampleInfoPool), s69 === A27.ELEVATION && this.findElevationBoundsForLayer(i61, -1);
    }
    this.computeElevationBounds(), this._maxTesselation = Math.min(i60.tilingScheme.pixelSize, i17);
  }
  release() {
    a26(!this.renderData, "tile.renderData was not unloaded"), this._surface.upsampleMapCache.pop(this.key);
    for (const e65 of E32) {
      for (const t68 of this.layerInfo[e65])
        t68.release();
      this.layerInfo[e65].length = 0;
    }
    this._parent = null;
    for (let e65 = 0; e65 < 4; ++e65)
      this._children[e65] = null;
    this._surface = null, this.setMemoryDirty();
  }
  refMapData() {
    ++this._mapDataRefCount, this._isCached || this._surface.upsampleMapCache.pop(this.key);
  }
  unrefMapData() {
    if (--this._mapDataRefCount, this._isCached) {
      this.setMemoryDirty();
      const e65 = this._cachedMemory;
      e65 > 0 && this._surface.upsampleMapCache.put(this.key, this, e65);
    }
  }
  setMemoryDirty() {
    this._usedMemory = null;
  }
  get usedMemory() {
    return this._ensureUsedMemory() + (this._isCached ? 0 : this._mapTileMemoryInternal);
  }
  get _cachedMemory() {
    return this._isCached ? this._mapTileMemory : 0;
  }
  get _mapTileMemory() {
    return this._ensureUsedMemory(), this.layerInfo[A27.MAP].reduce((e65, t68) => e65 + (t68 instanceof d19 ? t68.memoryUsed / t68.referenced : 0), this._mapTileMemoryInternal);
  }
  get _cpuImageMemorySize() {
    const e65 = 4, t68 = this._surface.tilingScheme.pixelSize;
    return t68 * t68 * e65;
  }
  _ensureUsedMemory() {
    var _a;
    if (null != this._usedMemory)
      return this._usedMemory;
    this._usedMemory = 0, this._mapTileMemoryInternal = 0;
    let e65 = 0;
    for (const { data: i60 } of this.layerInfo[A27.MAP])
      i60 instanceof d19 ? e65 += this._getTerrainDataMemory(i60) : this._mapTileMemoryInternal += this._getTerrainDataMemory(i60);
    const t68 = this._cpuImageMemorySize;
    for (const i60 of this.layerInfo[A27.ELEVATION])
      this._usedMemory += i60.data ? t68 : 0;
    return this.renderData && (this._usedMemory += this.renderData.estimatedGeometryMemoryUsage, this._mapTileMemoryInternal += ((_a = this.renderData.texture) == null ? void 0 : _a.gpuMemoryUsage) ?? 0), this._isCached && this._surface.upsampleMapCache.updateSize(this.key, this, this._mapTileMemoryInternal + e65), this._usedMemory;
  }
  getUsedMemoryForLayer(e65, t68) {
    const i60 = this.layerInfo[e65][t68];
    return (i60 == null ? void 0 : i60.data) ? e65 === A27.MAP ? this._isCached ? 0 : this._getTerrainDataMemory(i60.data) : e65 === A27.ELEVATION ? this._cpuImageMemorySize : 0 : 0;
  }
  _getTerrainDataMemory(e65) {
    return e65 instanceof t57 ? e65.texture.gpuMemoryUsage : e65 instanceof HTMLImageElement || e65 instanceof A10 ? this._cpuImageMemorySize : e65 instanceof m11 ? e65.memoryUsage : e65 instanceof d19 ? e65.memoryUsed / e65.referenced : 0;
  }
  updateScreenDepth(e65) {
    const t68 = this._center[he5.MIDDLE], i60 = e65, s69 = t68[0], n77 = t68[1], r62 = t68[2], a67 = i60[2] * s69 + i60[6] * n77 + i60[10] * r62 + i60[14];
    this.screenDepth = a67 < 0 ? 0 : a67 / (i60[3] * s69 + i60[7] * n77 + i60[11] * r62 + i60[15]);
  }
  shouldSplit(e65, t68, i60) {
    if (!this.visible)
      return E33.NONE;
    if (null != e65.frustum && (!this._intersectsClippingArea || this._calculateFrustumVisibilityStatus(e65.frustum) === T10.OUTSIDE))
      return E33.NONE;
    const s69 = this.level;
    e7(me4, this._center[he5.MIDDLE], t68);
    let n77 = v3(me4), r62 = me4, c58 = he5.MIDDLE;
    e7(_e2, this._center[he5.TOP], t68);
    const g36 = v3(_e2);
    g36 < n77 && (n77 = g36, r62 = _e2, c58 = he5.TOP), e7(ye4, this._center[he5.BOTTOM], t68);
    const p54 = v3(ye4);
    if (p54 < n77 && (n77 = p54, r62 = ye4, c58 = he5.BOTTOM), this._edgeLen2 > n77 && s69 < e65.maxLod)
      return E33.SPLIT;
    const f49 = null != i60 ? i60 - s69 : 1 / 0, m44 = Math.sqrt(n77), _33 = e65.fovX * m44 * 2, y32 = this._edgeLen / _33, A33 = () => {
      if (s69 < e65.maxLod)
        return this.elevationLevel = s69, E33.NONE;
      const t69 = s69 + Math.ceil(-Math.log2(e65.relativeWidthLimit / y32));
      return t69 !== this.elevationLevel ? (this.elevationLevel = t69, E33.ELEVATION) : E33.NONE;
    };
    if (f49 <= 0.5)
      return A33();
    const T29 = P(this.up, me4), E39 = this._elevationBounds[1] - this._elevationBounds[0], v37 = E39 / this.edgeLen;
    if (e65.aboveGround && T29 > 0 && v37 < 1e-3) {
      if (T29 / m44 - Math.sin(this._curvatureHeight / (this.edgeLen * Math.SQRT1_2) * Math.PI) - v37 > 0)
        return E33.NONE;
    }
    const I28 = null != i60 ? 3 - Math.min(f49, 2) : 1;
    if (y32 * I28 < e65.relativeWidthLimit || s69 >= e65.maxLod)
      return A33();
    if (s69 < 7)
      return E33.SPLIT;
    g2(Ae2, this.up, T29), e7(Ae2, Ae2, r62);
    const M22 = v3(Ae2);
    if (M22 <= this.radius * this.radius)
      return E33.SPLIT;
    g2(Ae2, Ae2, this.radius / Math.sqrt(M22)), u2(Ae2, Ae2, this._center[c58]), e7(Ae2, t68, Ae2);
    const D19 = Math.min(1, (Math.abs(P(Ae2, this.up)) + 0.5 * E39 + this._curvatureHeight) / s7(Ae2)), x34 = ie6 / e65.angledSplitBias, S25 = e65.fovY * m44 * 2;
    return D19 * (this._edgeLen / S25 * I28) < x34 * e65.relativeHeightLimit ? E33.NONE : E33.SPLIT;
  }
  setChildren(e65, t68, i60, s69) {
    a26(!!(e65 && t68 && i60 && s69), "Null child passed"), this._children[0] = e65, this._children[1] = t68, this._children[2] = i60, this._children[3] = s69;
  }
  unsetChildren() {
    this._children[0] = null, this._children[1] = null, this._children[2] = null, this._children[3] = null;
  }
  get isLoaded() {
    var _a;
    return ((_a = this.renderData) == null ? void 0 : _a.hasGeometry) ?? false;
  }
  load() {
    this.refMapData();
    for (const e65 of E32)
      this._createOrUpdateAgents(0, e65);
    this.surface.renderer.loadTile(this);
  }
  unload(e65) {
    e65.unloadTile(this);
    for (const t68 of E32) {
      const e66 = this.layerInfo[t68];
      for (const t69 of e66)
        t69.loadingAgent && t69.loadingAgent !== r51 && (re5(t69.loadingAgent), t69.loadingAgent = null), t69.pendingUpdates = 0;
    }
    this.resetPendingUpdate(E33.GEOMETRY), this.resetPendingUpdate(E33.TEXTURE_NOFADING), this.resetPendingUpdate(E33.TEXTURE_FADING), this.unrefMapData();
  }
  unloadMapData() {
    const e65 = this.layerInfo[A27.MAP];
    for (const t68 of e65)
      t68.loadingAgent && t68.loadingAgent !== r51 && (re5(t68.loadingAgent), t68.loadingAgent = null), t68.pendingUpdates = 0;
    this.renderData && this.renderData.releaseTexture(), this.setMemoryDirty();
  }
  updateClippingStatus(e65) {
    if (H3(e65, this._clippingArea))
      return false;
    const t68 = this._intersectsClippingArea, i60 = this._isWithinClippingArea;
    null != e65 ? (this._intersectsClippingArea = this.intersectsExtent(e65), this._isWithinClippingArea = this._isWithinExtent(e65)) : (this._intersectsClippingArea = true, this._isWithinClippingArea = true), this._clippingArea = e65, this.updateVisibility();
    const s69 = i60 && this._isWithinClippingArea, n77 = !(i60 || t68 || this._isWithinClippingArea || this._intersectsClippingArea);
    return !this.renderData || s69 || n77 || this.setPendingUpdate(E33.GEOMETRY), true;
  }
  updateVisibility() {
    this._dirty = true, this._surface.setTileTreeDirty();
  }
  getLayerInfo(e65, t68) {
    return this.layerInfo[t68][e65];
  }
  hasLayerData(e65, t68) {
    const i60 = this.layerInfo[t68][e65];
    return !(!i60 || !i60.data || i60.dataInvalidated);
  }
  get updating() {
    if (this.hasPendingUpdates)
      return true;
    for (const e65 of E32) {
      const t68 = this.layerInfo[e65];
      for (const e66 of t68)
        if (e66.loadingAgent && e66.loadingAgent !== r51 && e66.loadingAgent.updating)
          return true;
    }
    return false;
  }
  _isSuspended(e65) {
    return !!this.hasPendingUpdate(E33.SPLIT) || e65 !== A27.ELEVATION && !this.loadable;
  }
  get hasPendingUpdates() {
    return 0 !== this._pendingUpdates;
  }
  hasPendingUpdate(e65) {
    return (this._pendingUpdates & e65) === e65;
  }
  setPendingUpdate(e65) {
    this._pendingUpdates |= e65, e65 === E33.SPLIT || e65 === E33.MERGE ? this._surface.setTileTreeDirty() : this._surface.requestUpdate();
  }
  resetPendingUpdate(e65) {
    return !!this.hasPendingUpdate(e65) && (this._pendingUpdates &= ~e65, true);
  }
  requestLayerData(e65, i60, s69) {
    const n77 = this.layerInfo[i60][e65];
    if (n77.waitingAgents.has(s69))
      return console.warn("agent already requested this piece of map data (tile %s, agent tile %s, layer: %d/%d)", this.lij.toString(), s69.tile.lij.toString(), i60, e65), true;
    if (n77.waitingAgents.push(s69), n77.data && !n77.dataInvalidated) {
      console.warn("agent requested existing data (tile %s, agent tile %s, layer: %d/%d)", this.lij.toString(), s69.tile.lij.toString(), i60, e65);
      const t68 = n77.data && "type" in n77.data && "vector-tile" === n77.data.type;
      return s69.dataArrived(this, t68), true;
    }
    if (n77.requestPromise)
      return true;
    e2(n77.requestAbort), n77.requestAbort = new AbortController();
    const r62 = this._surface.requestTileData(this, e65, i60, n77.requestAbort);
    if (!r62)
      return n77.requestAbort = null, false;
    const a67 = () => {
      n77.requestPromise === r62 && (n77.requestPromise = null, n77.requestAbort = null);
    };
    return n77.requestPromise = r62, r62.then(a67, a67), true;
  }
  get isLeaf() {
    return null == this._children[0];
  }
  hasLij(e65) {
    return this.lij[0] === e65[0] && this.lij[1] === e65[1] && this.lij[2] === e65[2];
  }
  findByLij(e65) {
    if (this.hasLij(e65))
      return this;
    const t68 = this._children;
    if (!t68[0])
      return null;
    return t68[0].findByLij(e65) || t68[1].findByLij(e65) || t68[2].findByLij(e65) || t68[3].findByLij(e65);
  }
  distanceToSquared(e65) {
    return v3(e7(Ae2, this._center[he5.MIDDLE], e65));
  }
  containsPoint(e65) {
    const t68 = this.extent;
    return e65[0] >= t68[0] && e65[1] >= t68[1] && e65[0] <= t68[2] && e65[1] <= t68[3];
  }
  containsPointXY(e65, t68) {
    const i60 = this.extent;
    return e65 >= i60[0] && t68 >= i60[1] && e65 <= i60[2] && t68 <= i60[3];
  }
  unrequestLayerData(e65, t68, i60) {
    const s69 = this.layerInfo[t68][e65], n77 = s69.waitingAgents, r62 = null != n77.removeUnordered(i60);
    a26(r62, "agent has not requested this piece of map data"), n77.length < 1 && (s69.abortRequest(), this.setMemoryDirty());
  }
  dataArrived(e65, t68, i60) {
    const s69 = null != i60 && "type" in i60 && "vector-tile" === i60.type, n77 = this.layerInfo[t68][e65];
    n77.data = i60, n77.dataInvalidated = false, n77.waitingAgents.forAll((e66) => e66.dataArrived(this, s69)), n77.waitingAgents.clear(), this.setMemoryDirty();
  }
  dataMissing(e65, t68, i60) {
    i60.notInTilemap || console.error(`Tile ${this.lij.toString()} layer ${t68}/${e65} error ${i60}`);
    const s69 = this.layerInfo[t68][e65];
    s69.dataMissing = true, s69.waitingAgents.forAll((e66) => e66.dataMissing()), s69.waitingAgents.clear(), this.setMemoryDirty();
  }
  updateRenderData(e65, t68, i60) {
    switch (i60 && this.forEachLoadedNeighbor((i61) => i61.updateRenderData(e65, t68)), e65) {
      case A27.MAP:
        return this._updateTexture(t68);
      case A27.ELEVATION:
        return this._updateGeometry();
    }
  }
  _updateTexture(e65) {
    this.renderData && (this.resetPendingUpdate(e65 === r24.FADING ? E33.TEXTURE_NOFADING : E33.TEXTURE_FADING), this.setPendingUpdate(e65 === r24.FADING ? E33.TEXTURE_FADING : E33.TEXTURE_NOFADING));
  }
  _updateGeometry() {
    this.setPendingUpdate(E33.GEOMETRY);
    for (const e65 of this.layerInfo[A27.ELEVATION])
      e65.pendingUpdates |= E33.GEOMETRY;
  }
  invalidateLayerData(e65, t68) {
    this.layerInfo[t68][e65].invalidateSourceData(), this.restartAgents(t68);
  }
  computeElevationBounds() {
    const e65 = this._elevationBounds, t68 = e65[0], i60 = e65[1];
    r13(e65, 1 / 0, -1 / 0);
    const s69 = this.layerInfo[A27.ELEVATION];
    let r62 = true;
    for (const n77 of s69)
      null != n77.elevationBounds && (e65[0] = Math.min(e65[0], n77.elevationBounds.min), e65[1] = Math.max(e65[1], n77.elevationBounds.max), n77.elevationBounds.hasNoDataValues || (r62 = false));
    r62 && (e65[0] = Math.min(e65[0], 0), e65[1] = Math.max(e65[1], 0)), t68 === e65[0] && i60 === e65[1] || (this.updateRadiusAndCenter(), this._surface.setTileTreeDirty());
  }
  _updateCenter() {
    const e65 = this._elevationBounds, t68 = 0.5 * (e65[0] + e65[1]), i60 = this._center;
    g2(Ae2, this.up, t68), u2(i60[he5.MIDDLE], this.centerAtSeaLevel, Ae2), g2(Ae2, this.up, e65[0]), u2(i60[he5.TOP], this.centerAtSeaLevel, Ae2), g2(Ae2, this.up, e65[1]), u2(i60[he5.BOTTOM], this.centerAtSeaLevel, Ae2);
  }
  findElevationBoundsForLayer(e65, t68) {
    const i60 = this.layerInfo[A27.ELEVATION][e65], s69 = d13(this.level), n77 = Math.max(this.elevationLevel - s69, 0), r62 = i60.elevationBounds;
    if (null != r62 && r62.level >= t68 && r62.level <= n77)
      return;
    const a67 = this._surface.layerViewByIndex(e65, A27.ELEVATION), o61 = m8(a67);
    if (!o30(this, o61, false))
      return;
    const l63 = le5;
    let h46 = false;
    const u51 = i60.data;
    if (u51 && u51.level <= n77) {
      const e66 = i60.data;
      l63.min = e66.samplerData.data.minValue, l63.max = e66.samplerData.data.maxValue, l63.hasNoDataValues = e66.samplerData.data.hasNoDataValues, l63.level = this.level, h46 = true;
    } else {
      let t69, i61, r63 = 0;
      for (let a68 = this._parent; a68 && (!i61 || r63 < s69) && (r63 = this.elevationLevel - a68.level, t69 = i61 || t69, i61 = a68.layerInfo[A27.ELEVATION][e65].data, !(!i61 && t69 && a68.level <= n77)); a68 = a68.parent)
        ;
      i61 = i61 || t69, i61 && (i61.computeMinMaxValue(this.lij[0], this.lij[1], this.lij[2], l63), l63.min !== 1 / 0 && (l63.level = i61.level, h46 = true));
    }
    h46 && (null == i60.elevationBounds && (i60.elevationBounds = new s56()), i60.elevationBounds.copyFrom(l63));
  }
  modifyLayers(e65, t68, i60) {
    const s69 = this.layerInfo[i60];
    for (const a67 of s69)
      a67.loadingAgent && a67.loadingAgent !== r51 && (re5(a67.loadingAgent), a67.loadingAgent = null), a67.waitingAgents.clear();
    for (let a67 = 0; a67 < s69.length; ++a67)
      void 0 === e65[a67] && s69[a67].release();
    const n77 = new Array(...s69), r62 = t68.length;
    s69.length = r62;
    for (let a67 = 0; a67 < r62; a67++) {
      const e66 = t68[a67];
      s69[a67] = e66 > -1 ? n77[e66] : l51.acquire(this._surface.upsampleInfoPool);
    }
    this.setMemoryDirty();
  }
  restartAgents(e65) {
    this.renderData && (this._createOrUpdateAgents(0, e65), this.updateRenderData(e65, r24.FADING));
  }
  updateAgents(e65) {
    if (this.renderData) {
      const t68 = this.layerInfo[e65];
      for (const e66 of t68)
        e66.loadingAgent === r51 && (e66.loadingAgent = null);
      this._createOrUpdateAgents(0, e65);
    }
  }
  updateAgentSuspension() {
    for (const e65 of E32) {
      const t68 = this._isSuspended(e65);
      for (const i60 of this.layerInfo[e65])
        i60.loadingAgent && i60.loadingAgent !== r51 && (i60.loadingAgent.setSuspension(t68), i60.loadingAgent === r51 && this.updateRenderData(e65, r24.FADING));
    }
  }
  removeLayerAgent(e65, t68) {
    const i60 = this.layerInfo[t68][e65];
    i60.loadingAgent && i60.loadingAgent !== r51 && i60.loadingAgent.dispose(), i60.loadingAgent = null;
  }
  agentDone(e65, t68) {
    const i60 = this.layerInfo[t68][e65];
    i60.loadingAgent = r51, i60.data || null != i60.upsampleInfo || this._createOrUpdateAgents(e65 + 1, t68);
  }
  _hasBlendableAncestor(e65) {
    return "normal" !== e65.blendMode || a11(e65.parent) && this._hasBlendableAncestor(e65.parent);
  }
  _hasBlendModes(e65, t68, i60) {
    var _a, _b, _c;
    for (let s69 = e65; s69 < t68; ++s69) {
      const e66 = this._surface.layerViewByIndex(s69, i60);
      if (U6(e66) && "normal" !== ((_a = e66 == null ? void 0 : e66.layer) == null ? void 0 : _a.blendMode) || a11((_b = e66 == null ? void 0 : e66.layer) == null ? void 0 : _b.parent) && this._hasBlendableAncestor((_c = e66 == null ? void 0 : e66.layer) == null ? void 0 : _c.parent))
        return true;
    }
    return false;
  }
  _createOrUpdateAgents(e65, t68) {
    const i60 = this.layerInfo[t68];
    if (0 === i60.length)
      return;
    const s69 = this._isSuspended(t68);
    for (let n77 = e65; n77 < i60.length; ++n77) {
      const r62 = i60[n77];
      let a67 = false;
      const o61 = this._surface.layerViewByIndex(n77, t68), l63 = m8(o61);
      if (r62.loadingAgent ? o30(this, l63, false) ? (r62.loadingAgent !== r51 && r62.loadingAgent.setSuspension(s69), r62.loadingAgent !== r51 && (a67 = r62.loadingAgent.update())) : r62.dispose() : o30(this, l63, false) && (r62.loadingAgent = ne5(this, n77, t68, s69), a67 = r62.loadingAgent.startLoading(), a67 ? r62.loadingAgent === r51 && this.setPendingUpdate(E33.GEOMETRY) : (re5(r62.loadingAgent), r62.loadingAgent = r51)), r62.loadingAgent === r51 && this.updateRenderData(t68, r24.FADING), !this._hasBlendModes(e65, i60.length, t68) && a67 && o61.isOpaque)
        return;
    }
  }
  _isWithinExtent(e65) {
    const t68 = this.extent;
    return t68[0] >= e65[0] && e65[2] >= t68[2] && t68[1] >= e65[1] && e65[3] >= t68[3];
  }
  intersectsExtent(e65) {
    const t68 = this.extent;
    return t68[2] >= e65[0] && e65[2] >= t68[0] && t68[3] >= e65[1] && e65[3] >= t68[1];
  }
  getElevationVerticesPerSide(t68) {
    const i60 = this.elevationLevel - this.level, s69 = Math.max(this.level - t68, d13(this.level) - i60), n77 = i3(1 + (this.maxTesselation >> s69), 2, this.maxTesselation + 1), r62 = this.getDefaultVerticesPerSide();
    return Math.max(n77, r62);
  }
  get test() {
    return { cachedMemory: this._cachedMemory };
  }
  _findLIJ(e65, t68) {
    if (!e65)
      return null;
    const i60 = this.surface.rootTiles;
    if (null != i60) {
      for (const s69 of i60)
        if (ue4(s69, e65)) {
          let i61 = s69, n77 = e65[0] - i61.level - 1;
          for (; n77 >= 0 && !i61.isLeaf && !t68(i61); ) {
            const t69 = e65[1] >> n77 & 1, s70 = e65[2] >> n77 & 1;
            i61 = i61.children[2 * t69 + s70], n77--;
          }
          return t68(i61) ? i61 : null;
        }
    }
    return null;
  }
  findNeighborTile(e65, t68) {
    const i60 = this.lij, s69 = this.getNeighborLIJ(i60, e65);
    return s69 ? de4(i60, s69) ? t68(this) ? this : null : this._findLIJ(s69, t68) : null;
  }
  findCorner(e65, t68) {
    const i60 = e65 === S8.NORTH_EAST ? 1 : e65 === S8.NORTH_WEST ? 0 : e65 === S8.SOUTH_WEST ? 2 : 3;
    let s69 = this;
    for (; s69.children[0] && (!t68 || !t68(s69)); )
      s69 = s69.children[i60];
    return s69;
  }
  findNeighborCornerTileExact(e65, t68) {
    var _a;
    return ((_a = this.findNeighborTile(e65, (e66) => t68(e66) || e66.level === this.level)) == null ? void 0 : _a.findCorner(D6(e65), t68)) || null;
  }
  forAllSubtreeOnSide(e65, t68) {
    const i60 = e65 === S8.NORTH ? [0, 1] : e65 === S8.NORTH_EAST ? [1] : e65 === S8.EAST ? [1, 3] : e65 === S8.SOUTH_EAST ? [3] : e65 === S8.SOUTH ? [2, 3] : e65 === S8.SOUTH_WEST ? [2] : e65 === S8.WEST ? [0, 2] : [0], s69 = (e66) => {
      const n77 = e66.children;
      !t68(e66) && n77[0] && i60.forEach((e67) => s69(n77[e67]));
    };
    s69(this);
  }
  forallNeighbors(e65) {
    Y3.forEach((t68) => this.findNeighborCornerTileExact(t68, e65)), X2.forEach((t68) => {
      var _a;
      return (_a = this.findNeighborTile(t68, (t69) => t69.level === this.level || e65(t69))) == null ? void 0 : _a.forAllSubtreeOnSide(P7(t68), e65);
    });
  }
  getNeighborEdgeStartVertexIndex(e65, t68) {
    if (!t68)
      return 0;
    const i60 = this.level - t68.level;
    if (p12(!T11 || i60 >= 0), 0 === i60)
      return 0;
    const s69 = 2 ** i60, n77 = 1 == (1 & e65), r62 = n77 ? 0 : 1, a67 = t68.lij[r62 + 1] * s69, o61 = this.lij[r62 + 1], l63 = o61 - a67, h46 = n77 ? s69 - 1 - l63 : l63;
    return T11 && (p12(a67 <= o61 && o61 < a67 + s69), p12(0 <= h46 && h46 < s69)), h46;
  }
  forEachLoadedNeighbor(e65) {
    const t68 = this.level, i60 = (e66) => e66.level === t68 || e66.isLoaded;
    X2.forEach((t69) => {
      const s69 = this.findNeighborTile(t69, i60);
      null != s69 && s69 !== this && s69.forAllSubtreeOnSide(P7(t69), (i61) => !!i61.isLoaded && (e65(i61, t69), true));
    }), Y3.forEach((t69) => {
      var _a;
      const s69 = (_a = this.findNeighborTile(t69, i60)) == null ? void 0 : _a.findCorner(D6(t69), (e66) => e66.isLoaded);
      p12(!s69 || ge3(this, s69, t69)), (s69 == null ? void 0 : s69.isLoaded) && e65(s69, t69);
    });
  }
  getNeighborLIJ(e65, t68) {
    const i60 = Q(t68) ? -1 : K2(t68) ? 1 : 0, s69 = B4(t68) ? -1 : J3(t68) ? 1 : 0, n77 = [e65[0], e65[1] + i60, e65[2] + s69];
    return n77[1] < 0 ? null : this.surface.isGlobal ? this.wrapLIJ(n77) : n77[2] < 0 ? null : n77;
  }
  wrapLIJ(e65) {
    return !e65 || e65[1] < 0 || e65[1] >= 2 ** e65[0] ? null : this.surface.wrapEastWest(e65);
  }
  get westNeighborWestExtent() {
    return this.extent[0] * (this.isWestEnd ? -1 : 1);
  }
  get eastNeighborEastExtent() {
    return this.extent[2] * (this.isEastEnd ? -1 : 1);
  }
  get isEastEnd() {
    return this.lij[2] === this.surface.lijEastEnd(this.level) - 1;
  }
  get isWestEnd() {
    return 0 === this.lij[2];
  }
  get isNorthEnd() {
    return 0 === this.lij[1];
  }
  get isSouthEnd() {
    const e65 = this.surface.extent, t68 = (e65 == null ? void 0 : e65[1]) ?? null;
    return null != t68 && this.extent[1] + a5() >= t68;
  }
  checkGeometryWaterproofness() {
    var _a;
    s27 && (p12(this.isLoaded), (_a = this.renderData) == null ? void 0 : _a.checkGeometryWaterproofness());
  }
  shouldHaveNeighbor(e65) {
    const t68 = this.extent, i60 = this.surface.rootTilesExtent, s69 = 0.25 * (t68[2] - t68[0]);
    if (Q(e65) && t68[3] + s69 >= i60[3])
      return false;
    if (K2(e65) && t68[1] - s69 <= i60[1])
      return false;
    const n77 = this.surface.isGlobal;
    return !(!n77 && B4(e65) && t68[0] - s69 <= i60[0]) && !(!n77 && J3(e65) && t68[2] + s69 >= i60[2]);
  }
  updateDistanceToPOI(e65) {
    const t68 = this._lastPOI;
    if (this.distanceToPOI >= 0 && t68[0] === e65[0] && t68[1] === e65[1] && t68[2] === e65[2])
      return;
    r5(this._lastPOI, e65);
    const i60 = this._center[he5.MIDDLE], s69 = e65[0] - i60[0], n77 = e65[1] - i60[1], r62 = e65[2] - i60[2];
    this.distanceToPOI = s69 * s69 + n77 * n77 + r62 * r62;
  }
};
function ne5(e65, t68, i60, s69) {
  const n77 = i60 === A27.ELEVATION ? oe5.acquire() : ae5.acquire();
  return n77.init(e65, t68, i60, s69), n77;
}
function re5(e65) {
  e65.dispose(), e65 instanceof l50 ? oe5.release(e65) : e65 instanceof t56 && ae5.release(e65);
}
var ae5 = new e4(t56);
var oe5 = new e4(l50);
var le5 = new s56();
var he5;
function ue4(e65, t68) {
  const i60 = e65.level, s69 = t68[0];
  if (i60 > s69)
    return false;
  const n77 = s69 - i60, r62 = Math.floor(t68[1] / 2 ** n77), a67 = Math.floor(t68[2] / 2 ** n77);
  return r62 === e65.lij[1] && a67 === e65.lij[2];
}
function de4(e65, t68) {
  return e65[0] === t68[0] && e65[1] === t68[1] && e65[2] === t68[2];
}
function ce6(e65, t68, i60) {
  if (null == e65 || null == t68)
    return false;
  if (0 === e65.level && 0 === t68.level) {
    if (e65.isEastEnd && t68.isWestEnd && i60 === S8.EAST)
      return true;
    if (e65.isWestEnd && t68.isEastEnd && i60 === S8.WEST)
      return true;
  }
  const s69 = Math.max(1e-6 * (e65.extent[2] - e65.extent[0]), 1);
  switch (i60) {
    case S8.NORTH:
      return G7(e65.extent[3], t68.extent[1], s69);
    case S8.SOUTH:
      return G7(e65.extent[1], t68.extent[3], s69);
    case S8.EAST:
      return G7(e65.extent[2], t68.extent[0], s69) || G7(e65.extent[2], -t68.extent[0], s69);
    case S8.WEST:
      return G7(e65.extent[0], t68.extent[2], s69) || G7(e65.extent[0], -t68.extent[2], s69);
  }
}
function ge3(e65, t68, i60) {
  return null != e65 && null != t68 && t68 !== e65 && (e65.level >= t68.level ? pe4(e65, t68, i60) : pe4(t68, e65, D6(i60)));
}
function pe4(e65, t68, i60) {
  p12(e65.level >= t68.level);
  const s69 = q3(i60), n77 = z7(i60), r62 = e65.extent, a67 = t68.extent, o61 = [s69 ? r62[0] : r62[2], n77 ? r62[3] : r62[1]], l63 = [s69 ? a67[2] : a67[0], n77 ? a67[1] : a67[3]], h46 = 1e-5 * (r62[2] - r62[0]), u51 = G7(o61[0], l63[0], h46) || e65.surface.isGlobal && G7(o61[0], -l63[0], h46), d52 = G7(o61[1], l63[1], h46);
  if (u51 && d52)
    return true;
  if (e65.level === t68.level)
    return p12(false), false;
  if (!u51 && !d52)
    return p12(false), false;
  const c58 = u51 ? fe3(a67[1], a67[3], r62[1], r62[3], h46) : fe3(a67[0], a67[2], r62[0], r62[2], h46);
  return p12(c58), c58;
}
function fe3(e65, t68, i60, s69, n77) {
  return e65 - n77 <= i60 && i60 <= s69 && s69 <= t68 + n77;
}
!function(e65) {
  e65[e65.TOP = 0] = "TOP", e65[e65.MIDDLE = 1] = "MIDDLE", e65[e65.BOTTOM = 2] = "BOTTOM";
}(he5 || (he5 = {}));
var me4 = n7();
var _e2 = n7();
var ye4 = n7();
var Ae2 = n7();

// node_modules/@arcgis/core/views/3d/terrain/TileOverlayData.js
var t58 = class {
  constructor() {
    this._scales = r11(-1, -1, -1, -1), this._offsets = r11(-1, -1, -1, -1);
  }
  clear() {
    this._scales[0] = this._scales[1] = this._scales[2] = this._scales[3] = -1, this._offsets[0] = this._offsets[1] = this._offsets[2] = this._offsets[3] = -1;
  }
  setScale(s69, t68, e65) {
    this._scales[2 * s69] = t68, this._scales[2 * s69 + 1] = e65;
  }
  setOffset(s69, t68, e65) {
    this._offsets[2 * s69] = t68, this._offsets[2 * s69 + 1] = e65;
  }
  get scales() {
    return this._scales;
  }
  get offsets() {
    return this._offsets;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/TerrainTechnique.js
var g27 = class _g extends e22 {
  constructor() {
    super(...arguments), this.useStencil = false;
  }
  initializeConfiguration(i60, r62) {
    r62.spherical = i60.viewingMode === l13.Global;
  }
  initializeProgram(e65) {
    return new i13(e65.rctx, _g.shader.get().build(this.configuration), S20);
  }
  initializePipeline() {
    return this._stencilPipelineState = this._createPipeline(true), this._createPipeline(false);
  }
  _createPipeline(e65) {
    const i60 = this.configuration, r62 = i60.backfaceCullingEnabled && !i60.renderOccluded;
    return W3({ blending: i60.renderOccluded ? s23(R4.ONE, R4.ONE_MINUS_SRC_ALPHA) : null, culling: r62 ? r23 : null, depthTest: i60.renderOccluded ? null : { func: I4.LESS }, depthWrite: i60.renderOccluded ? null : a21, colorWrite: _6, stencilTest: e65 ? t17(a17.IntegratedMeshMaskExcluded) : null });
  }
  getPipelineState(e65, i60) {
    return this.useStencil ? this._stencilPipelineState : super.getPipelineState(e65, i60);
  }
};
g27.shader = new t16(H6, () => import("./Terrain.glsl-TUQ3ONXE.js"));
var S20 = /* @__PURE__ */ new Map([[O3.POSITION, 0], [O3.UV0, 1], [O3.NORMALCOMPRESSED, 2]]);

// node_modules/@arcgis/core/views/3d/terrain/PatchRenderData.js
var G15 = class {
  constructor() {
    this.geometry = new l47(), this.intersectionData = null, this.geometryState = null, this._textureRef = new i54(() => this.tile.surface.textureFadeDuration), this.overlay = new t58(), this._geometryStateChangedSinceLastUpdate = true, this._hasGeometry = false, this._numVerticesPerSideChanged = false, this._samplerDataChanged = false, this._clippingAreaChanged = false, this._wireframeChanged = false, this._dirtyEdgeResolutions = 15, this._dirtyEdges = 15, this._dirtyCorners = 15;
  }
  get tile() {
    return this._tile;
  }
  init(e65) {
    this.clear(), this._tile = e65;
    const t68 = this.geometry;
    t68.indices = null, t68.vertexAttributes = null, P3(t68.boundingBox), t68.indexCount = 0, t68.numVerticesPerSide = 0, this.intersectionData = null, this.geometryState = new r50(), this.localOrigin = null, this.overlay.clear();
  }
  clear() {
    this.releaseGeometry(), this.releaseTexture(), this._textureRef.clear(), this._tile = null, this.intersectionData = null, this.geometryState = null;
  }
  updateGeometryIfNeeded(e65) {
    if ((!this._vao || this._geometryStateChangedSinceLastUpdate || this._wireframeChanged || this._clippingAreaChanged || this._samplerDataChanged || this._numVerticesPerSideChanged || this._dirtyCorners || this._dirtyEdgeResolutions || this._dirtyEdges) && (this._updateGeometry(e65), this._geometryStateChangedSinceLastUpdate = false), T11 && this.tile.intersectsClippingArea)
      for (let t68 = 0; t68 < 4; ++t68)
        p12(this.geometry.outerEdges[t68].count === this.geometryState.neighborData.edgeResolutions[t68] + 1);
  }
  _calculateEdgeResolution(e65, t68) {
    var _a;
    const r62 = this.tile, i60 = this.geometryState.numVerticesPerSide - 1;
    if (!r62.surface.isGlobal) {
      const t69 = r62.surface.extent;
      if (null != t69 && (0 === e65 && r62.extent[3] > t69[3] || 1 === e65 && r62.extent[2] > t69[2] || 2 === e65 && r62.extent[1] < t69[1] || 3 === e65 && r62.extent[0] < t69[0]))
        return i60;
    }
    const s69 = r62.level, a67 = X2[e65];
    if (!t68)
      return p12(null == ((_a = r62.surface) == null ? void 0 : _a.rootTiles) || r62.surface.updatingRootTiles || !r62.shouldHaveNeighbor(a67)), i60;
    if (t68.isLoaded) {
      const r63 = t68, a68 = r63.renderData.geometryState, o62 = s69 - r63.level;
      if (p12(o62 >= 0), 0 === o62) {
        const e66 = a68.numVerticesPerSide - 1;
        return Math.max(e66, i60);
      }
      const n77 = 2 ** o62, l63 = a68.neighborData.edgeResolutions[(e65 + 2) % 4] / n77;
      return Math.max(1, l63);
    }
    p12(!t68.isLeaf);
    let o61 = i60;
    return t68.forAllSubtreeOnSide(P7(a67), (e66) => e66 === r62 || (e66.isLoaded ? (o61 = Math.max(o61, 2 ** (e66.level - s69)), true) : (p12(!e66.isLeaf), false))), o61;
  }
  updateNeighborData() {
    var _a;
    const e65 = this.tile;
    if (!e65.intersectsClippingArea)
      return;
    const r62 = e65.renderData.geometryState.neighborData, i60 = (t68) => (t68.isLoaded || t68.level === e65.level) && (t68 == null ? void 0 : t68.intersectsClippingArea), s69 = r62.edgePeerNeighbors, a67 = r62.edgePeerNeighborSamplerVersions;
    for (let n77 = 0; n77 < 4; ++n77) {
      const o62 = e65.findNeighborTile(X2[n77], i60), l63 = H20(e65, o62), h46 = ((_a = l63 == null ? void 0 : l63.renderData) == null ? void 0 : _a.geometryState.samplerDataVersion) ?? -1, d52 = s69[n77], g36 = l63 !== H20(e65, d52), u51 = a67[n77] !== h46;
      s69[n77] = o62, (g36 || u51) && (a67[n77] = h46, this._markEdgeDirty(n77));
      const c58 = r62.edgeResolutions[n77], m44 = this._calculateEdgeResolution(n77, o62);
      p12(o3(m44)), p12(m44 >= 1), r62.edgeResolutions[n77] = m44, c58 !== m44 && this._markEdgeResolutionDirty(n77);
    }
    const o61 = r62.cornerPeerNeighbors;
    for (let t68 = 0; t68 < 4; ++t68) {
      const a68 = e65.findNeighborTile(Y3[t68], i60);
      o61[t68] = a68;
      const n77 = H20(e65, s69[t68]), l63 = H20(e65, s69[(t68 + 1) % 4]), h46 = H20(e65, a68);
      X9[t68] = h46, X9[(t68 + 1) % 4] = l63, X9[(t68 + 2) % 4] = e65, X9[(t68 + 3) % 4] = n77, p12(X9.some((t69) => (t69 == null ? void 0 : t69.isLoaded) || t69 === e65));
      const d52 = X9.reduce((e66, t69) => Math.min(e66, (t69 == null ? void 0 : t69.level) ?? 1 / 0), 1 / 0);
      X9.forEach((e66, t69) => {
        e66 && (e66 == null ? void 0 : e66.level) > d52 && (X9[t69] = null);
      }), p12(X9.some((t69) => (t69 == null ? void 0 : t69.isLoaded) || t69 === e65));
      const g36 = r62.cornerNeighborData[t68].cornerTiles, u51 = r62.cornerNeighborData[t68].cornerTileSamplerVersions;
      for (let e66 = 0; e66 < 4; ++e66) {
        const r63 = X9[e66], i61 = (r63 == null ? void 0 : r63.renderData.geometryState.samplerDataVersion) ?? -1, s70 = g36[e66] !== r63, a69 = !s70 && u51[e66] !== i61;
        (s70 || a69) && (g36[e66] = r63, u51[e66] = i61, this._markCornerDirty(t68));
      }
      p12(g36.some((t69) => (t69 == null ? void 0 : t69.isLoaded) || t69 === e65));
    }
    T11 && p12(this.geometryState.neighborData.edgeResolutions.every((e66) => e66 > 0));
    for (let t68 = 0; t68 < 4; ++t68)
      X9[t68] = null;
  }
  _updateGeometry(e65) {
    if (!this.tile.intersectsClippingArea)
      return;
    T11 && p12(!this.tile.intersectsClippingArea || this.geometryState.neighborData.edgeResolutions.every((e66) => e66 > 0)), this.intersectionData = null;
    const t68 = this.tile, r62 = this._vao, i60 = this.geometry.vertexAttributes, s69 = !r62 || !i60 || this._wireframeChanged || this._numVerticesPerSideChanged || this._samplerDataChanged || this._clippingAreaChanged || this._dirtyEdgeResolutions, a67 = !s69 && (0 !== this._dirtyEdges || 0 !== this._dirtyEdgeResolutions), o61 = !a67 && 0 !== this._dirtyCorners;
    s69 ? (this.releaseGeometry(), this._createGeometry(e65)) : a67 || o61 ? t68.updateEdgeElevations() : o61 ? t68.updateCornerElevations() : console.warn("Update for no reason?"), this._numVerticesPerSideChanged = false, this._samplerDataChanged = false, this._dirtyEdgeResolutions = 0, this._dirtyEdges = 0, this._dirtyCorners = 0, this._clippingAreaChanged = false, this._wireframeChanged = false;
  }
  get hasGeometry() {
    return this._hasGeometry;
  }
  releaseGeometry() {
    return this._hasGeometry = false, this.intersectionData = null, !!this._vao && (this._vao.dispose(), this._vao = null, f39(this.geometry), true);
  }
  ensureTexture(e65, t68) {
    return null != this._texture && this._texture.descriptor.width !== e65 && this.releaseTexture(), null == this._texture && (this._texture = t68(), this.tile.setMemoryDirty()), this._texture;
  }
  releaseTexture() {
    null != this._texture && (this._texture.release(), this._texture = null, this.tile.setMemoryDirty());
  }
  _markCornerDirty(e65) {
    const t68 = 1 << e65;
    this._dirtyCorners |= t68;
  }
  _markEdgeDirty(e65) {
    const t68 = 1 << e65;
    this._dirtyEdges |= t68, this._markCornerDirty((e65 + 0) % 4), this._markCornerDirty((e65 + 3) % 4);
  }
  _markEdgeResolutionDirty(e65) {
    const t68 = 1 << e65;
    this._dirtyEdgeResolutions |= t68, this._markEdgeDirty(e65);
  }
  _markAllEdgesAndCornersDirty() {
    this._dirtyCorners = 15, this._dirtyEdges = 15, this._dirtyEdgeResolutions = 15;
  }
  updateGeometryState() {
    const t68 = this._getElevationInfo(), r62 = this.tile, i60 = t68.samplerData ? r62.getElevationVerticesPerSide(t68.maxTileLevel) : r62.getDefaultVerticesPerSide(), s69 = Math.max(i60, 5);
    let a67 = r62.clippingArea;
    r62.intersectsClippingArea && !r62.isWithinClippingArea || (a67 = null);
    const o61 = this.geometryState;
    let n77 = false;
    o61.numVerticesPerSide !== s69 && (this._numVerticesPerSideChanged = true, o61.numVerticesPerSide = s69, o61.samplerDataVersion++, n77 = true), t68.changed && (this._samplerDataChanged = true, o61.samplerData = t68.samplerData, o61.samplerDataVersion++, n77 = true), s(o61.clippingArea, a67) || (this._clippingAreaChanged = true, o61.clippingArea = a67, n77 = true);
    const l63 = r62.surface.wireframe;
    return o61.wireframe !== l63 && (this._wireframeChanged = true, o61.wireframe = l63, n77 = true), this._geometryStateChangedSinceLastUpdate || (this._geometryStateChangedSinceLastUpdate = n77), n77 && this._markAllEdgesAndCornersDirty(), this._hasGeometry = true, this._geometryStateChangedSinceLastUpdate;
  }
  _createGeometry(e65) {
    this.tile.createGeometry();
    const t68 = this.geometry.vertexAttributes, r62 = this.geometry.indices, i60 = e65.gl;
    this._vao = new r26(e65, S20, { geometry: r15(t68.layout) }, { geometry: c12.createVertex(e65, i60.STATIC_DRAW, t68.buffer) }, c12.createIndex(e65, i60.STATIC_DRAW, r62)), this._hasGeometry = true;
  }
  get vao() {
    return this._vao;
  }
  setTextureReference(e65, t68 = n60.Immediate) {
    null != e65 && e65.texture !== this._texture && this.releaseTexture(), this._textureRef.push(e65, t68);
  }
  get textureReference() {
    return this._textureRef.current;
  }
  get nextTextureReference() {
    return this._textureRef.next;
  }
  get textureFadeFactor() {
    return this._textureRef.fadeFactor;
  }
  get textureIsFading() {
    return this._textureRef.isFading;
  }
  _getElevationInfo() {
    const e65 = this.geometryState.samplerData, t68 = this.tile.layerInfo[A27.ELEVATION], r62 = t68.length, i60 = new Array(r62);
    let s69 = 0, a67 = 0, o61 = false;
    for (let h46 = 0; h46 < r62; h46++) {
      const r63 = t68[h46];
      if (null != r63.upsampleInfo) {
        const t69 = r63.upsampleInfo.tile, n78 = t69.layerInfo[A27.ELEVATION][h46].data, l64 = n78 && n78.samplerData;
        e65 && e65[s69] === l64 || (o61 = true), i60[s69++] = l64, a67 = Math.max(a67, t69.lij[0]);
      } else if (r63.data) {
        const t69 = this.tile.surface.layerViewByIndex(h46, A27.ELEVATION);
        if (o30(this.tile, t69.layer, false)) {
          const t70 = r63.data;
          e65 && e65[s69] === t70.samplerData || (o61 = true), i60[s69++] = t70.samplerData, a67 = this.tile.level;
        }
      }
    }
    null != e65 && e65.length !== s69 && (o61 = true);
    const n77 = s69 > 0, l63 = n77 ? i60 : null;
    return n77 && (i60.length = s69), { changed: o61, samplerData: l63, maxTileLevel: a67 };
  }
  get estimatedGeometryMemoryUsage() {
    var _a, _b, _c;
    const e65 = ((_a = this.intersectionData) == null ? void 0 : _a.estimatedMemoryUsage) ?? 0;
    return (((_b = this.geometry.indices) == null ? void 0 : _b.byteLength) ?? 0) + (((_c = this.geometry.vertexAttributes) == null ? void 0 : _c.byteLength) ?? 0) + e65;
  }
  get texture() {
    return this._texture;
  }
  get test() {
    return { hasTexture: null != this._texture };
  }
  checkGeometryWaterproofness() {
    if (!T11)
      return;
    const e65 = this.tile;
    if (!e65.isLoaded || !e65.intersectsClippingArea || 0 === e65.level)
      return void p12(e65 == null ? void 0 : e65.isLoaded);
    const u51 = e65.surface.extent;
    if (null != u51 && !e65.intersectsExtent(u51))
      return;
    const p54 = X2.map((t68, r62) => null != u51 && (r62 < 2 ? -1 : 1) * (e65.extent[3 - r62] - u51[3 - r62]) < 0), y32 = e65.level;
    p12(0 === this._dirtyCorners), p12(0 === this._dirtyEdges), p12(0 === this._dirtyEdgeResolutions), p12(!this._numVerticesPerSideChanged), p12(!this._samplerDataChanged), p12(!this._clippingAreaChanged), p12(!this._wireframeChanged);
    const _33 = Y3.map((t68) => e65.findNeighborCornerTileExact(t68, (t69) => !t69.intersectsClippingArea || t69.isLoaded || t69.level === e65.level) ?? null).map((e66) => (e66 == null ? void 0 : e66.intersectsClippingArea) ? e66 : null), x34 = this.geometryState.neighborData;
    for (let t68 = 0; t68 < 4; ++t68) {
      const r62 = x34.cornerPeerNeighbors[t68], i60 = _33[t68];
      p12(i60 === r62, `Tile[${e65.lij}].corner[${t68}] out of date: cur=[${r62 == null ? void 0 : r62.lij}] exp=[${i60 == null ? void 0 : i60.lij}]`);
    }
    X2.forEach((u52, _34) => {
      if (p54[_34])
        return;
      const x35 = e65.findNeighborTile(u52, (e66) => (e66.level === y32 || (e66 == null ? void 0 : e66.isLoaded)) && (e66 == null ? void 0 : e66.intersectsClippingArea));
      if (!x35) {
        const t68 = !e65.surface.updatingRootTiles && null != e65.surface.rootTiles && e65.surface.rootTiles.length > 0 && e65.shouldHaveNeighbor(u52);
        return void p12(!t68);
      }
      p12(x35.isLoaded || x35.level === e65.level), p12(x35 === this.geometryState.neighborData.edgePeerNeighbors[_34]);
      const D19 = y32 - x35.level;
      if (!x35.isLoaded)
        return p12(!x35.isLeaf), void p12(0 === D19);
      const v37 = x35.renderData;
      p12(ce6(e65, x35, u52)), p12(D19 >= 0);
      const S25 = 2 ** D19;
      if (D19 < 0)
        return void p12(false);
      const $10 = e65.renderData, E39 = $10.geometry, A33 = E39.outerEdges[_34], V15 = E39.numVerticesPerSide - 1, R21 = v37.geometry;
      if (!R21)
        return void p12(false);
      const w29 = this.geometryState.neighborData.edgePeerNeighbors[_34];
      if (w29 == null ? void 0 : w29.isLoaded) {
        const e66 = w29.renderData;
        p12(w29 == w29), p12($10.geometryState.neighborData.edgePeerNeighborSamplerVersions[_34] === e66.geometryState.samplerDataVersion), p12(this.geometryState.neighborData.edgePeerNeighborSamplerVersions[_34] === e66.geometryState.samplerDataVersion);
      }
      const L25 = (_34 + 2) % 4, P26 = R21.outerEdges[L25], N19 = A33.count - 1, G20 = P26.count - 1;
      p12(N19 * S25 === G20, `Tile[${e65.lij}]:e${_34},res=${N19} edgeRes mismatch with Neighbor[${x35.lij}]:e${L25},res=${G20} (expected:${N19 * S25})`);
      const X12 = e65.extent, H24 = u52 === S8.NORTH || u52 === S8.SOUTH, W16 = P26.count - 1, q19 = W16 / 2 ** D19, z20 = A33.count - 1;
      if (q19 < 1)
        return void p12(1 === z20);
      p12(q19 === z20), p12(o3(q19));
      const J15 = R21.numVerticesPerSide - 1;
      p12(D19 > 0 || q19 === Math.max(J15, V15));
      const K15 = e65.getNeighborEdgeStartVertexIndex(_34, x35);
      p12(0 <= K15 && K15 < S25);
      const Q14 = K15 * q19;
      p12(0 <= Q14 && Q14 <= W16 - q19);
      let Y11 = 0, Z11 = Q14;
      A33.getVertexPos(I21, 0), A33.getVertexPos(M15, A33.count - 1);
      const ee5 = x2(I21, M15), te6 = Math.max(B13, 1e-4 * ee5);
      for (let t68 = 0; t68 <= q19; ++t68) {
        A33.getVertexPos(I21, Y11), P26.getVertexPos(M15, Z11);
        const r62 = t68 / q19, p55 = H24 ? X12[0] + r62 * (X12[2] - X12[0]) : u52 === S8.WEST ? X12[0] : X12[2], y33 = H24 ? u52 === S8.SOUTH ? X12[1] : X12[3] : X12[1] + r62 * (X12[3] - X12[1]), D20 = e65.surface.extent;
        if (null == D20 || F4(D20, p55, y33)) {
          const t69 = U(I21, M15), r63 = Y(I21) - s12.radius, u53 = Y(M15) - s12.radius, c58 = t69 < te6;
          if (!c58) {
            console.warn(`Tile edge vertex position mismatch: between [${e65.lij}].edge${_34}[${Y11}/${A33.count}] and [${x35.lij}].edge${L25}[${Z11}/${P26.count}]`), null != D20 && console.warn("  surface extent= ", D20, " x,y=", p55, ",", y33);
            const i60 = n7();
            e7(i60, $10.localOrigin, v37.localOrigin), Y(i60) > 0 && console.warn(`   localOrigins: ${$10.localOrigin} vs ${v37.localOrigin} d=${Y(i60)} [${i60}]`);
            (() => {
              const t70 = t5(I21), r64 = t5(M15);
              e65.updateEdgeElevations(), x35.updateEdgeElevations(), A33.getVertexPos(I21, Y11), P26.getVertexPos(M15, Z11);
              const i61 = n7();
              J(i61, I21, t70), Y(i61) > 0 && console.warn(`  XXX Tile[${e65.lij}] edge out of date: ${t70} vs ${I21} d=${Y(i61)} [${i61}]`), J(i61, M15, r64), Y(i61) > 0 && console.warn(`  XXX Neighbor[${x35.lij}] edge out of date: ${r64} vs ${M15} d=${Y(i61)} [${i61}]`);
            })(), p12(c58, `Mismatch in tile [${e65.lij}].edge[${_34}][${Y11}/${A33.count}] vs neighbor [${x35.lij}].edge[${L25}][${Z11}/${P26.count}] ${F11(I21)} vs ${F11(M15)}  dist=${t69} h(t|n|d)=${r63}|${u53}|${u53 - r63}`);
          }
          A33.getNormal(O19, Y11), P26.getNormal(U19, Z11), z2(k20, O19), z2(F22, U19);
          const f49 = P(k20, F22), S26 = 1 - f49 < 0.01 || false || e65 === x35;
          if (!S26) {
            const t70 = n7();
            J(t70, O19, U19);
            const r64 = () => `Mismatch in tile edge normal ${V3(e65.lij)} (${Y11}/${A33.count - 1}) edge ${_34} vs neighbor ${V3(x35.lij)}  (${Z11}/${P26.count - 1}) nedge ${L25} :${F11(O19)} vs ${F11(U19)}  dot = ${f49} : ${F11(t70)}`;
            console.warn("Mismatch in tile edge normal: ", r64());
            {
              e65.updateEdgeElevations(), x35.updateEdgeElevations();
              const t71 = n7(), r65 = n7();
              A33.getNormal(t71, Y11), P26.getNormal(r65, Z11), G(O19, t71) || console.warn("Missing update in tile normal: ", F11(O19), " => ", F11(t71)), G(U19, r65) || console.warn("Missing update in neighbor normal: ", F11(U19), " => ", F11(r65));
            }
            p12(S26, r64());
          }
        }
        Y11 += 1, Z11 += 1;
      }
    });
  }
};
var I21 = n7();
var M15 = n7();
var O19 = n7();
var U19 = n7();
var k20 = n7();
var F22 = n7();
var B13 = 1;
var X9 = [null, null, null, null];
function H20(e65, t68) {
  return (t68 == null ? void 0 : t68.isLoaded) || t68 === e65 ? t68 : null;
}

// node_modules/@arcgis/core/views/3d/terrain/PatchGeometryFactory.js
var b21 = 65536;
function v32(t68, e65) {
  const n77 = t68.tile, { extent: s69, extentInRadians: r62, surface: a67 } = n77, f49 = t68.localOrigin, d52 = t68.geometryState, m44 = a67.isWebMercator, h46 = d52.numVerticesPerSide, M22 = h46 - 1, x34 = (h46 - 2) ** 2, y32 = m44 && (e65 === o22.HAS_SOUTH_POLE || e65 === o22.HAS_BOTH_POLES), b26 = m44 && (e65 === o22.HAS_NORTH_POLE || e65 === o22.HAS_BOTH_POLES), v37 = 6, L25 = ((y32 ? 1 : 0) + (b26 ? 1 : 0)) * v37 * (M22 + 1), R21 = d52.neighborData, T29 = R21.edgeResolutions.reduce((t69, e66) => t69 + e66 + 1, 0), D19 = d45(x34 + L25 + T29), A33 = t68.geometry;
  A33.numVerticesPerSide = d52.numVerticesPerSide, A33.vertexAttributes = D19;
  const V15 = A33.boundingBox;
  P3(V15);
  const U23 = E34(t68);
  X10.update(M22, r62, U23), B14(t68), k21(t68, x34), O20(t68);
  const C26 = [];
  if ((() => {
    let t69 = x34 + T29;
    const e66 = f49[0], o61 = f49[1], r63 = f49[2], i60 = n77.ellipsoid.radius, a68 = s69[1], l63 = s69[3], d53 = (n78, s70) => {
      const f50 = s70 * h46;
      x29(-e66, -o61, n78 * i60 - r63, V15), C26.push({ connectedRowOffset: f50, connectedOuterEdgeOffset: 1 === n78 ? 0 : 2, rowOffset: t69, latitudeResolution: v37 });
      const d54 = P22(-1 === n78 ? a68 : l63, i60), m45 = n78 * Math.PI / 2 - d54, g36 = 0.99 * (1 === n78 ? 1 : -1), p54 = i60 + 0, x35 = D19.position, y33 = D19.uv0, { typedBuffer: b27, typedBufferStride: B20 } = D19.normalCompressed;
      for (let i61 = 1; i61 <= v37; ++i61) {
        const n79 = d54 + m45 * (i61 / v37), s71 = Math.cos(n79), a69 = Math.sin(n79);
        for (let i62 = 0; i62 <= M22; i62++) {
          const n80 = i62 / M22, l64 = X10.sinLonLUT[i62], f51 = X10.cosLonLUT[i62] * s71, d55 = l64 * s71, m46 = a69, h47 = f51 * p54 - e66, v38 = d55 * p54 - o61, L26 = m46 * p54 - r63;
          x29(h47, v38, L26, V15), x35.setValues(t69, h47, v38, L26), b20(y33, t69, n80, g36), n33(b27, t69, f51, d55, m46, B20), ++t69;
        }
      }
    };
    y32 && d53(-1, 0), b26 && d53(1, M22);
  })(), F23(A33, d52.numVerticesPerSide, C26, [0, h46 - 1], [0, h46 - 1], d52.wireframe), t68.intersectionData = null, T11)
    for (let o61 = 0; o61 < 4; ++o61)
      p12(A33.outerEdges[o61].count === R21.edgeResolutions[o61] + 1);
}
function B14(t68) {
  const e65 = t68.tile;
  if (!e65.intersectsClippingArea)
    return;
  const n77 = t68.geometryState, o61 = n77.numVerticesPerSide, s69 = o61 - 2, i60 = o61 - 1, a67 = t68.geometry, l63 = a67.vertexAttributes, f49 = l63.position, d52 = l63.uv0, { typedBuffer: m44, typedBufferStride: g36 } = l63.normalCompressed, p54 = e65.extent, h46 = p54[0], M22 = p54[2], x34 = p54[1], y32 = p54[3], b26 = e65.ellipsoid.radius, v37 = n77.samplerData, B20 = t68.localOrigin, L25 = B20[0], R21 = B20[1], O26 = B20[2], T29 = f49.typedBuffer, D19 = f49.typedBufferStride, P26 = 1 / i60, A33 = a67.boundingBox;
  let V15 = 0;
  if (1 <= s69) {
    const t69 = P26, e66 = x34 * (1 - t69) + y32 * t69, n78 = X10.sinLatLUT[1], o62 = X10.cosLatLUT[1];
    for (let i61 = 1; i61 <= s69; i61++) {
      const s70 = i61 * P26, a68 = h46 * (1 - s70) + M22 * s70, l64 = X10.sinLonLUT[i61], f50 = X10.cosLonLUT[i61], m45 = b26 + e46(a68, e66, v37), g37 = m45 * f50 * o62 - L25, p55 = m45 * l64 * o62 - R21, x35 = m45 * n78 - O26;
      x29(g37, p55, x35, A33);
      const y33 = (i61 - 1) * D19;
      T29[y33] = g37, T29[y33 + 1] = p55, T29[y33 + 2] = x35, b20(d52, i61 - 1, s70, t69);
    }
  }
  for (let E39 = 1; E39 <= s69; E39++) {
    const t69 = E39 * P26, e66 = x34 * (1 - t69) + y32 * t69, n78 = X10.sinLatLUT[E39], o62 = X10.cosLatLUT[E39], a68 = E39 + 1, l64 = a68 * P26, f50 = x34 * (1 - l64) + y32 * l64, p55 = X10.sinLatLUT[a68], B21 = X10.cosLatLUT[a68], U23 = X10.sinLonLUT[0], C26 = X10.cosLonLUT[0], I28 = b26 + e46(h46, e66, v37);
    let j25 = C26 * o62 * I28 - L25, w29 = U23 * o62 * I28 - R21, N19 = n78 * I28 - O26;
    const H24 = V15 * D19;
    let _33 = T29[H24], q19 = T29[H24 + 1], W16 = T29[H24 + 2];
    for (let y33 = 1; y33 <= s69; y33++) {
      const t70 = y33 * P26, a69 = h46 * (1 - t70) + M22 * t70, U24 = X10.sinLonLUT[y33], C27 = X10.cosLonLUT[y33];
      let I29 = 0, H25 = 0, F29 = 0;
      if (y33 < s69) {
        const t71 = (V15 + 1) * D19;
        I29 = T29[t71], H25 = T29[t71 + 1], F29 = T29[t71 + 2];
      } else {
        const t71 = X10.sinLonLUT[i60], s70 = X10.cosLonLUT[i60], a70 = b26 + e46(M22, e66, v37);
        I29 = s70 * o62 * a70 - L25, H25 = t71 * o62 * a70 - R21, F29 = n78 * a70 - O26;
      }
      const k24 = j25, z20 = w29, G20 = N19;
      j25 = _33, w29 = q19, N19 = W16, _33 = I29, q19 = H25, W16 = F29;
      const J15 = I29 - k24, K15 = H25 - z20, Q14 = F29 - G20;
      let Y11 = 0, Z11 = 0, $10 = 0;
      if (E39 > 1) {
        const t71 = (V15 - s69) * D19;
        Y11 = T29[t71], Z11 = T29[t71 + 1], $10 = T29[t71 + 2];
      } else {
        const t71 = X10.sinLatLUT[0], e67 = X10.cosLatLUT[0], n79 = b26 + e46(a69, x34, v37);
        Y11 = C27 * e67 * n79 - L25, Z11 = U24 * e67 * n79 - R21, $10 = t71 * n79 - O26;
      }
      const tt5 = b26 + e46(a69, f50, v37), et4 = C27 * B21 * tt5 - L25, nt5 = U24 * B21 * tt5 - R21, ot6 = p55 * tt5 - O26;
      if (E39 < s69) {
        const e67 = V15 + s69, n79 = e67 * D19;
        T29[n79] = et4, T29[n79 + 1] = nt5, T29[n79 + 2] = ot6, x29(et4, nt5, ot6, A33), b20(d52, e67, t70, l64);
      }
      const st5 = Y11 - et4, rt4 = Z11 - nt5, it4 = $10 - ot6;
      let at5 = C27 * o62, lt5 = U24 * o62, ct5 = n78;
      ct5 * ct5 < 0.999 && (at5 = Q14 * rt4 - K15 * it4, lt5 = J15 * it4 - Q14 * st5, ct5 = K15 * st5 - J15 * rt4);
      const ut5 = 1 / Math.sqrt(at5 * at5 + lt5 * lt5 + ct5 * ct5);
      n33(m44, V15, at5 * ut5, lt5 * ut5, ct5 * ut5, g36), ++V15;
    }
  }
}
function L21(t68) {
  t68.tile.intersectsClippingArea && (O20(t68), K11(t68));
}
function R15(t68) {
  t68.tile.intersectsClippingArea && (D15(t68), T24(t68, true), K11(t68));
}
function O20(t68) {
  t68.tile.intersectsClippingArea && (D15(t68), T24(t68));
}
function T24(e65, n77 = false) {
  const o61 = e65.geometryState, s69 = e65.geometry, i60 = o61.neighborData, a67 = e65.tile, l63 = a67.level, f49 = a67.extent, d52 = a67.ellipsoid.radius, x34 = a67.extentInRadians, S25 = x34[0], b26 = x34[2], v37 = x34[1], B20 = x34[3], L25 = o61.samplerData, R21 = f49[0], O26 = f49[2], T29 = f49[1], D19 = f49[3], P26 = E34(e65), A33 = s69.boundingBox, V15 = e65.localOrigin, U23 = V15[0], C26 = V15[1], I28 = V15[2], j25 = s69.vertexAttributes, w29 = j25.position, N19 = w29.typedBuffer, H24 = w29.typedBufferStride, _33 = j25.uv0;
  for (let E39 = 0; E39 < 4; ++E39) {
    const o62 = 1 === E39 || 3 === E39, x35 = i60.edgeResolutions[E39];
    p12(o3(x35));
    const V16 = x35 + 1, j26 = H20(a67, i60.edgePeerNeighbors[E39]);
    if ($8(a67, j26, E39)) {
      z18(e65, E39, j26);
      continue;
    }
    const w30 = null != j26;
    p12(!w30 || j26.level === a67.level), p12(!w30 || l20(a67, j26) <= 0);
    const q19 = j26 == null ? void 0 : j26.renderData, W16 = q19 == null ? void 0 : q19.geometryState;
    if (T11) {
      const t68 = a67.surface;
      if (!j26 && t68 && !t68.updatingRootTiles) {
        const e66 = X2[E39], n78 = a67.findNeighborTile(e66, (t69) => t69.isLoaded || t69.isLeaf || t69.level === a67.level);
        n78 ? n78.intersectsClippingArea && (p12(!n78.isLoaded), p12(!n78.isLeaf), p12(n78.level === l63)) : p12(null == (t68 == null ? void 0 : t68.rootTiles) || !a67.shouldHaveNeighbor(e66));
      }
    }
    const F29 = 1 === E39 ? f49[2] : f49[0], k24 = j26 == null ? void 0 : j26.extent, G20 = k24 && o62 ? 1 === E39 ? k24[0] : k24[2] : F29, J15 = 0 === E39 ? f49[3] : f49[1], K15 = 1 === E39 ? 1 : 0, Q14 = 0 === E39 ? 1 : 0, X12 = 1 === E39 ? b26 : S25, Y11 = 0 === E39 ? B20 : v37, Z11 = Math.sin(X12), tt5 = Math.cos(X12), et4 = Math.sin(Y11), nt5 = Math.cos(Y11), ot6 = W16 == null ? void 0 : W16.samplerData, st5 = w30 ? (t68, e66, n78) => 0.5 * (e46(t68, e66, L25) + e46(n78, e66, ot6)) : (t68, e66, n78) => e46(t68, e66, L25), rt4 = s69.outerEdges[E39], it4 = n77 && V16 > 3 ? V16 - 3 : 1, at5 = null != L25 && L25.some((t68) => null != t68), lt5 = null != ot6 && ot6.some((t68) => null != t68), ct5 = at5 || lt5, ut5 = 1 / x35, ft2 = rt4.index0;
    p12(!k24 || G7(k24[2] - k24[0], f49[2] - f49[0]));
    (() => {
      const t68 = 1 === E39 ? -1 : 3 === E39 ? 1 : 0, e66 = 0 === E39 ? -1 : 2 === E39 ? 1 : 0, n78 = (f49[2] - f49[0]) * ut5, s70 = t68 * n78, i61 = e66 * n78, a68 = o62 ? t68 * ((b26 - S25) * ut5) : 0, l64 = o62 ? 0 : e66 * ut5, m44 = Q14, g36 = o62 ? X12 + a68 : X12, p54 = o62 ? Math.sin(g36) : Z11, h46 = o62 ? Math.cos(g36) : tt5, M22 = o62 ? X12 - a68 : X12, x36 = o62 ? Math.sin(M22) : Z11, y32 = o62 ? Math.cos(M22) : tt5, v38 = o62 ? Y11 : P26(m44 + l64), B21 = o62 ? et4 : Math.sin(v38), j27 = o62 ? nt5 : Math.cos(v38), q20 = o62 ? Y11 : P26(m44 - l64), W17 = o62 ? et4 : Math.sin(q20), k25 = o62 ? nt5 : Math.cos(q20);
      let z20 = 0, $10 = 0, at6 = 0;
      {
        const t69 = 0 * ut5, e67 = o62 ? F29 : R21 * (1 - t69) + O26 * t69, n79 = o62 ? G20 : e67, s71 = o62 ? T29 * (1 - t69) + D19 * t69 : J15, r62 = o62 ? X12 : S25 * (1 - t69) + b26 * t69, i62 = o62 ? Z11 : Math.sin(r62), a69 = o62 ? tt5 : Math.cos(r62), l65 = o62 ? P26(t69) : Y11, c58 = o62 ? Math.sin(l65) : et4, u51 = o62 ? Math.cos(l65) : nt5, f50 = d52 + st5(e67, s71, n79);
        z20 = a69 * u51 * f50, $10 = i62 * u51 * f50, at6 = c58 * f50;
      }
      let lt6 = 0, dt4 = 0, mt3 = 0;
      {
        const t69 = 1 * ut5, e67 = o62 ? F29 : R21 * (1 - t69) + O26 * t69, n79 = o62 ? G20 : e67, s71 = o62 ? T29 * (1 - t69) + D19 * t69 : J15, r62 = o62 ? X12 : S25 * (1 - t69) + b26 * t69, i62 = o62 ? Z11 : Math.sin(r62), a69 = o62 ? tt5 : Math.cos(r62), l65 = o62 ? P26(t69) : Y11, c58 = o62 ? Math.sin(l65) : et4, u51 = o62 ? Math.cos(l65) : nt5, f50 = d52 + st5(e67, s71, n79);
        lt6 = a69 * u51 * f50, dt4 = i62 * u51 * f50, mt3 = c58 * f50;
      }
      for (let f50 = 1; f50 < V16 - 1; f50 += it4) {
        let t69 = 0, e67 = 0, n79 = 0;
        {
          const s71 = (f50 + 1) * ut5, r62 = o62 ? F29 : R21 * (1 - s71) + O26 * s71, i62 = o62 ? G20 : r62, a70 = o62 ? T29 * (1 - s71) + D19 * s71 : J15, l66 = o62 ? X12 : S25 * (1 - s71) + b26 * s71, c58 = o62 ? Z11 : Math.sin(l66), u51 = o62 ? tt5 : Math.cos(l66), m46 = o62 ? P26(s71) : Y11, g38 = o62 ? Math.sin(m46) : et4, p55 = o62 ? Math.cos(m46) : nt5, h47 = d52 + st5(r62, a70, i62);
          t69 = u51 * p55 * h47, e67 = c58 * p55 * h47, n79 = g38 * h47;
        }
        const a69 = t69, l65 = e67, m45 = n79, g37 = lt6, M23 = dt4, v39 = mt3;
        lt6 = a69, dt4 = l65, mt3 = m45;
        {
          const t70 = ft2 + f50, e68 = t70 * H24, n80 = g37 - U23, s71 = M23 - C26, r62 = v39 - I28;
          N19[e68] = n80, N19[e68 + 1] = s71, N19[e68 + 2] = r62, x29(n80, s71, r62, A33);
          const i62 = f50 * ut5;
          b20(_33, t70, o62 ? K15 : i62, o62 ? i62 : Q14);
        }
        const V17 = z20, q21 = $10, it5 = at6;
        z20 = g37, $10 = M23, at6 = v39;
        const gt3 = g37, pt4 = M23, ht5 = v39, Mt2 = 1 / Math.sqrt(gt3 * gt3 + pt4 * pt4 + ht5 * ht5), xt2 = ht5 * Mt2;
        let yt2 = 0, St2 = 0, bt2 = 0;
        if (ct5 && xt2 * xt2 < 0.999) {
          let t70 = 0, e68 = 0, n80 = 0;
          {
            const o63 = 0 === E39 ? -1 : 1;
            t70 = o63 * (a69 - V17), e68 = o63 * (l65 - q21), n80 = o63 * (m45 - it5);
          }
          {
            const a70 = f50 * ut5, l66 = o62 ? F29 : R21 * (1 - a70) + O26 * a70, c58 = o62 ? G20 : l66, u51 = o62 ? T29 * (1 - a70) + D19 * a70 : J15, m46 = o62 ? X12 : S25 * (1 - a70) + b26 * a70, g38 = o62 ? Z11 : Math.sin(m46), M24 = o62 ? tt5 : Math.cos(m46), v40 = o62 ? P26(a70) : Y11, A34 = o62 ? Math.sin(v40) : et4, V18 = o62 ? Math.cos(v40) : nt5;
            let U24 = gt3, C27 = pt4, I29 = ht5;
            if (w30) {
              const t71 = d52 + e46(c58 - s70, u51 - i61, ot6), e69 = o62 ? V18 : k25;
              U24 = (o62 ? y32 : M24) * e69 * t71, C27 = (o62 ? x36 : g38) * e69 * t71, I29 = (o62 ? A34 : W17) * t71;
            }
            {
              const a71 = d52 + e46(l66 + s70, u51 + i61, L25), c59 = o62 ? V18 : j27, f51 = (o62 ? h46 : M24) * c59 * a71, m47 = (o62 ? p54 : g38) * c59 * a71, x37 = (o62 ? A34 : B21) * a71;
              w30 || (U24 = 2 * gt3 - f51, C27 = 2 * pt4 - m47, I29 = 2 * ht5 - x37);
              const y33 = 3 === E39 ? -1 : 1, S26 = y33 * (U24 - f51), b27 = y33 * (C27 - m47), v41 = y33 * (I29 - x37);
              yt2 = n80 * b27 - e68 * v41, St2 = t70 * v41 - n80 * S26, bt2 = e68 * S26 - t70 * b27;
              const R22 = 1 / Math.sqrt(yt2 * yt2 + St2 * St2 + bt2 * bt2);
              yt2 *= R22, St2 *= R22, bt2 *= R22;
            }
          }
        } else
          yt2 = gt3 * Mt2, St2 = pt4 * Mt2, bt2 = ht5 * Mt2;
        rt4.setNormalFromValues(f50, yt2, St2, bt2);
      }
    })();
  }
}
function D15(t68) {
  G16(t68);
}
function P22(t68, e65) {
  return Math.PI / 2 - 2 * Math.atan(Math.exp(-t68 / e65));
}
function A28(t68, e65, n77, o61) {
  return P22(t68 * (1 - o61) + e65 * o61, n77);
}
function V11(t68, e65, n77) {
  return t68 * (1 - n77) + e65 * n77;
}
function E34(t68) {
  const e65 = t68.tile;
  if (e65.surface.isWebMercator) {
    const t69 = e65.extent, n78 = e65.ellipsoid.radius;
    return (e66) => A28(t69[1], t69[3], n78, e66);
  }
  const n77 = e65.extentInRadians;
  return (t69) => V11(n77[1], n77[3], t69);
}
function U20(t68, e65) {
  const s69 = t68.tile.extent, r62 = t68.geometryState, i60 = s69[0], a67 = s69[1], c58 = s69[2] - i60, u51 = s69[3] - a67, f49 = r62.clippingArea, d52 = null != f49 ? Math.max(0, (f49[0] - i60) / c58) : 0, m44 = null != f49 ? Math.max(0, (f49[1] - a67) / u51) : 0, g36 = null != f49 ? Math.min(1, (f49[2] - i60) / c58) : 1, p54 = null != f49 ? Math.min(1, (f49[3] - a67) / u51) : 1, h46 = r62.numVerticesPerSide, M22 = (h46 - 2) ** 2, x34 = r62.neighborData.edgeResolutions.reduce((t69, e66) => t69 + e66 + 1, 0), y32 = d45(M22 + x34), S25 = t68.geometry, b26 = S25.boundingBox;
  P3(b26), S25.numVerticesPerSide = r62.numVerticesPerSide, S25.vertexAttributes = y32, r6(S25.uvRange, d52, m44, g36, p54), C22(t68), k21(t68, M22), w25(t68), F23(S25, r62.numVerticesPerSide, [], [0, h46 - 1], [0, h46 - 1], r62.wireframe), t68.intersectionData = null;
}
function C22(t68) {
  const n77 = t68.tile;
  if (!n77.intersectsClippingArea)
    return;
  const o61 = n77.surface, s69 = t68.geometryState, i60 = s69.samplerData, a67 = t68.localOrigin, l63 = o61.isWebMercatorOnPlateeCarree, f49 = s69.clippingArea, d52 = null != f49 ? f49 : Y10, m44 = n77.extent, g36 = m44[0], p54 = m44[1], h46 = m44[2], M22 = m44[3], x34 = Math.max(g36, d52[0]), y32 = Math.min(h46, d52[2]), b26 = Math.max(p54, d52[1]), v37 = Math.min(M22, d52[3]), B20 = n77.ellipsoid.radius, L25 = n77.horizontalScale, R21 = s69.numVerticesPerSide, O26 = R21 - 1, T29 = R21 - 2, D19 = t68.geometry, P26 = D19.vertexAttributes, A33 = P26.position, V15 = P26.uv0, { typedBuffer: E39, typedBufferStride: U23 } = P26.normalCompressed, C26 = D19.uvRange, I28 = C26[0], j25 = C26[1], w29 = C26[2], N19 = C26[3], H24 = D19.boundingBox, _33 = a67[0], q19 = a67[1], W16 = a67[2], F29 = A33.typedBuffer, k24 = A33.typedBufferStride;
  let z20 = 0;
  const G20 = i3(p54, b26, v37), J15 = l63 ? (Math.PI / 2 - 2 * Math.atan(Math.exp(-G20 / B20))) * B20 : G20 * L25, K15 = 1 / O26, Q14 = i3(p54 * (1 - K15) + M22 * K15, b26, v37);
  let X12 = J15, Z11 = l63 ? (Math.PI / 2 - 2 * Math.atan(Math.exp(-Q14 / B20))) * B20 : Q14 * L25;
  for (let Y11 = 1; Y11 <= T29; Y11++) {
    const t69 = Y11 / O26, n78 = i3(p54 * (1 - t69) + M22 * t69, b26, v37), o62 = i3(t69, j25, N19), s70 = Z11, a68 = (Y11 - 1) / O26, f50 = i3(p54 * (1 - a68) + M22 * a68, b26, v37), d53 = X12, m45 = (Y11 + 1) / O26, R22 = i3(p54 * (1 - m45) + M22 * m45, b26, v37), D20 = l63 ? (Math.PI / 2 - 2 * Math.atan(Math.exp(-R22 / B20))) * B20 : R22 * L25, P27 = i3(m45, j25, N19);
    X12 = Z11, Z11 = D20;
    const A34 = i3(g36, x34, y32);
    let C27 = A34 * L25, G21 = e46(A34, n78, i60);
    const J16 = 1 / O26, K16 = i3(J16, I28, w29), Q15 = i3(g36 * (1 - K16) + h46 * K16, x34, y32);
    let $10 = K16, tt5 = Q15, et4 = Q15 * L25, nt5 = e46(Q15, n78, i60);
    if (1 === Y11) {
      const t70 = et4 - _33, n79 = X12 - q19, s71 = nt5 - W16, r62 = 0 * k24;
      F29[r62] = t70, F29[r62 + 1] = n79, F29[r62 + 2] = s71, x29(t70, n79, s71, H24);
      const i61 = i3(J16, I28, w29);
      b20(V15, z20, i61, o62);
    }
    for (let l64 = 1; l64 <= T29; l64++) {
      const t70 = et4, a69 = nt5, m46 = (l64 + 1) / O26, p55 = i3(m46, I28, w29), M23 = i3(g36 * (1 - m46) + h46 * m46, x34, y32), b27 = tt5;
      tt5 = M23;
      {
        const t71 = z20 + 1, e65 = t71 * k24;
        if (1 === Y11 || l64 === T29) {
          const a70 = M23 * L25, f51 = e46(M23, n78, i60);
          if (1 === Y11 && l64 < T29) {
            const n79 = a70 - _33, r62 = s70 - q19, i61 = f51 - W16;
            F29[e65] = n79, F29[e65 + 1] = r62, F29[e65 + 2] = i61, x29(n79, r62, i61, H24), b20(V15, t71, p55, o62);
          }
          et4 = a70, nt5 = f51;
        } else
          et4 = F29[e65] + _33, nt5 = F29[e65 + 2] + W16;
      }
      const v38 = et4, B21 = nt5, A35 = C27, j26 = G21;
      C27 = t70, G21 = a69;
      const N20 = (z20 - T29) * k24, J17 = 1 === Y11 ? e46(b27, f50, i60) : F29[N20 + 2] + W16, K17 = e46(b27, R22, i60);
      if (Y11 < T29) {
        const e65 = z20 + T29, n79 = e65 * k24, o63 = t70 - _33, s71 = D20 - q19, r62 = K17 - W16;
        F29[n79] = o63, F29[n79 + 1] = s71, F29[n79 + 2] = r62, x29(o63, s71, r62, H24);
        const i61 = $10;
        $10 = p55, b20(V15, e65, i61, P27);
      }
      {
        const t71 = v38 - A35, e65 = d53 - D20, n79 = e65 * (B21 - j26), o63 = t71 * (J17 - K17), s71 = -e65 * t71, r62 = n79 * n79 + o63 * o63 + s71 * s71;
        if (0 === r62)
          n33(E39, z20, 0, 0, 1, U23);
        else {
          const t72 = 1 / Math.sqrt(r62);
          n33(E39, z20, n79 * t72, o63 * t72, s71 * t72, U23);
        }
      }
      ++z20;
    }
  }
}
function I22(t68, e65) {
  t68.tile.intersectsClippingArea && (H21(t68), N14(t68, true), K11(t68));
}
function j23(t68, e65) {
  t68.tile.intersectsClippingArea && (w25(t68), K11(t68));
}
function w25(t68, e65) {
  t68.tile.intersectsClippingArea && (H21(t68), N14(t68, false));
}
function N14(n77, o61) {
  const s69 = n77.geometryState, i60 = s69.neighborData, a67 = n77.tile, l63 = a67.surface, u51 = a67.extent, f49 = s69.clippingArea, d52 = null != f49 ? f49 : Y10, M22 = u51[0], x34 = u51[2], S25 = u51[1], b26 = u51[3], v37 = [b26 > d52[3], x34 > d52[2], S25 < d52[1], M22 < d52[0]], B20 = n77.geometry, L25 = a67.horizontalScale, R21 = W12(l63.isWebMercatorOnPlateeCarree, a67.ellipsoid.radius, L25), O26 = B20.boundingBox, T29 = B20.uvRange[0], D19 = B20.uvRange[1], P26 = B20.uvRange[2], A33 = B20.uvRange[3], V15 = Math.max(M22, d52[0]), E39 = Math.min(x34, d52[2]), U23 = Math.max(S25, d52[1]), C26 = Math.min(b26, d52[3]), I28 = n77.localOrigin, j25 = I28[0], w29 = I28[1], N19 = I28[2], H24 = s69.samplerData;
  for (let _33 = 0; _33 < 4; ++_33) {
    const s70 = 1 === _33 || 3 === _33, u52 = i60.edgeResolutions[_33];
    p12(o3(u52));
    const f50 = u52 + 1, d53 = v37[_33], I29 = H20(a67, i60.edgePeerNeighbors[_33]);
    if (!d53 && $8(a67, I29, _33)) {
      z18(n77, _33, I29);
      continue;
    }
    const q19 = null != I29 && !d53, W16 = I29 == null ? void 0 : I29.renderData, F29 = W16 == null ? void 0 : W16.geometryState;
    if (T11 && (p12(!q19 || I29.level === a67.level), p12(!q19 || l20(a67, I29) <= 0), a67 && !I29 && !l63.updatingRootTiles)) {
      const t68 = X2[_33], e65 = a67.findNeighborTile(t68, (t69) => t69.isLoaded || t69.isLeaf || t69.level === a67.level);
      l63.updatingRootTiles || (e65 ? e65.intersectsClippingArea && (p12(!e65.isLoaded), p12(!e65.isLeaf), p12(e65.level === a67.level)) : p12(null == (l63 == null ? void 0 : l63.rootTiles) || !a67.shouldHaveNeighbor(t68)));
    }
    const k24 = i3(1 === _33 ? x34 : M22, V15, E39), G20 = i3(0 === _33 ? b26 : S25, U23, C26), J15 = F29 == null ? void 0 : F29.samplerData, K15 = B20.outerEdges[_33], Q14 = o61 && f50 > 3 ? f50 - 3 : 1, X12 = i3(1 === _33 ? 1 : 0, T29, P26), Y11 = i3(0 === _33 ? 1 : 0, D19, A33), Z11 = q19 ? (t68, e65) => 0.5 * (e46(t68, e65, J15) + e46(t68, e65, H24)) : (t68, e65) => e46(t68, e65, H24), tt5 = (x34 - M22) / u52, et4 = s70 ? 1 === _33 ? tt5 : -tt5 : 0, nt5 = s70 ? 0 : 0 === _33 ? tt5 : -tt5, ot6 = -et4, st5 = -nt5;
    let rt4 = 0, it4 = 0, at5 = 0;
    {
      const t68 = 0 / u52, n78 = s70 ? k24 : i3(M22 * (1 - t68) + x34 * t68, V15, E39), o62 = s70 ? i3(S25 * (1 - t68) + b26 * t68, U23, C26) : G20, r62 = Z11(n78, o62);
      rt4 = n78 * L25, it4 = R21(o62), at5 = r62;
    }
    let lt5 = 0, ct5 = 0, ut5 = 0;
    {
      const t68 = 1 / u52, n78 = s70 ? k24 : i3(M22 * (1 - t68) + x34 * t68, V15, E39), o62 = s70 ? i3(S25 * (1 - t68) + b26 * t68, U23, C26) : G20, r62 = Z11(n78, o62);
      lt5 = n78 * L25, ct5 = R21(o62), ut5 = r62;
    }
    for (let t68 = 1; t68 < f50 - 1; t68 += Q14) {
      const n78 = t68 / u52, o62 = lt5, i61 = ct5, a68 = ut5;
      {
        const r62 = s70 ? X12 : i3(n78, T29, P26), l65 = s70 ? i3(n78, D19, A33) : Y11, u53 = o62 - j25, f52 = i61 - w29, d55 = a68 - N19;
        x29(o62, f52, d55, O26), K15.setVertexFromValuesRawPositionUV(t68, u53, f52, d55, r62, l65);
      }
      {
        const n79 = (t68 + 1) / u52, o63 = s70 ? k24 : i3(M22 * (1 - n79) + x34 * n79, V15, E39), r62 = s70 ? i3(S25 * (1 - n79) + b26 * n79, U23, C26) : G20, i62 = Z11(o63, r62);
        lt5 = o63 * L25, ct5 = R21(r62), ut5 = i62;
      }
      const l64 = lt5, f51 = ut5, d54 = rt4, m44 = it4, g36 = at5;
      rt4 = o62, it4 = i61, at5 = a68;
      let p54 = 0, h46 = 0, y32 = 0;
      if (s70) {
        const t69 = ct5 - i61, s71 = f51 - a68, l65 = m44 - i61, c58 = g36 - a68, u53 = i3(S25 * (1 - n78) + b26 * n78, U23, C26), d55 = k24 + ot6, M23 = d55 * L25 - o62, x35 = e46(d55, u53, H24) - a68, v39 = 3 === _33 ? -1 : 1;
        if (p54 = v39 * (-l65 + t69) * x35, h46 = v39 * M23 * (-c58 + s71), y32 = -v39 * M23 * (-l65 + t69), q19) {
          const e65 = k24 + et4, n79 = e65 * L25 - o62;
          p54 = (-l65 + t69) * (x35 - (e46(e65, u53, J15) - a68)), h46 = (M23 - n79) * (-c58 + s71), y32 = -(M23 - n79) * (-l65 + t69);
        }
      } else {
        const t69 = l64 - o62, s71 = f51 - a68, c58 = d54 - o62, u53 = g36 - a68, m45 = i3(M22 * (1 - n78) + x34 * n78, V15, E39), S26 = G20 + st5, b27 = e46(m45, S26, H24) - a68, v39 = R21(S26) - i61, B21 = 2 === _33 ? -1 : 1;
        if (p54 = B21 * v39 * (-u53 + s71), h46 = B21 * (-c58 + t69) * b27, y32 = -B21 * v39 * (-c58 + t69), q19) {
          const e65 = m45, n79 = G20 + nt5, o63 = R21(n79) - i61;
          p54 = (-v39 + o63) * (-u53 + s71), h46 = (-c58 + t69) * (-b27 + (e46(e65, n79, J15) - a68)), y32 = -(-v39 + o63) * (-c58 + t69);
        }
      }
      const v38 = 1 / Math.sqrt(p54 * p54 + h46 * h46 + y32 * y32);
      K15.setNormalFromValues(t68, p54 * v38, h46 * v38, y32 * v38);
    }
  }
}
function H21(t68, e65) {
  G16(t68);
}
function _28(t68, e65) {
  return (Math.PI / 2 - 2 * Math.atan(Math.exp(-t68 / e65))) * e65;
}
function q16(t68, e65) {
  return t68 * e65;
}
function W12(t68, e65, n77) {
  return t68 ? (t69) => _28(t69, e65) : (t69) => q16(t69, n77);
}
function F23(t68, e65, n77, o61, s69, r62) {
  const i60 = e65 - 1, a67 = t68.vertexAttributes.count, l63 = 2 * (Math.min(e65 - 2, o61[1]) - Math.max(1, o61[0])) * (Math.min(e65 - 2, s69[1]) - Math.max(1, s69[0])), c58 = X2.map((t69, n78) => 0 === n78 && s69[1] < e65 - 2 || 1 === n78 && o61[1] < e65 - 2 || 2 === n78 && s69[0] > 1 || 3 === n78 && o61[0] > 1), u51 = t68.outerEdges.reduce((t69, e66, n78) => t69 + (c58[n78] ? 0 : i60 - 2 + e66.count - 1), 0), f49 = n77.reduce((t69, e66) => t69 + i60 * (2 * (e66.latitudeResolution - 1) + 1), 0), d52 = r62 ? 2 : 1, m44 = 3 * (l63 + u51 + f49) * d52, M22 = a67 >= b21 ? new Uint32Array(m44) : new Uint16Array(m44);
  let x34 = 0;
  const y32 = e65 - 2, S25 = i60 - 2;
  p12(S25 >= 0);
  const v37 = (t69, e66, n78, o62, s70, r63) => {
    const i61 = t69 * s70, a68 = r63[i61], l64 = r63[i61 + 1], c59 = r63[i61 + 2], u52 = e66 * s70, f50 = r63[u52], d53 = r63[u52 + 1], m45 = r63[u52 + 2], g36 = n78 * s70, p54 = r63[g36], h46 = r63[g36 + 1], M23 = r63[g36 + 2], x35 = o62 * s70, y33 = r63[x35], S26 = r63[x35 + 1], b26 = r63[x35 + 2];
    return (f50 - y33) * (f50 - y33) + (d53 - S26) * (d53 - S26) + (m45 - b26) * (m45 - b26) > (a68 - p54) * (a68 - p54) + (l64 - h46) * (l64 - h46) + (c59 - M23) * (c59 - M23);
  };
  if (r62) {
    const r63 = (t69, e66, n78) => {
      M22[x34++] = t69, M22[x34++] = e66, M22[x34++] = e66, M22[x34++] = n78, M22[x34++] = n78, M22[x34++] = t69, T11 && (p12(t69 < a67), p12(e66 < a67), p12(n78 < a67), p12(x34 <= m44));
    };
    (() => {
      for (let n78 = Math.max(s69[0], 1) - 1; n78 < Math.min(s69[1], e65 - 2) - 1; ++n78) {
        const s70 = n78 * y32;
        for (let i61 = Math.max(o61[0], 1) - 1; i61 < Math.min(o61[1], e65 - 2) - 1; ++i61) {
          const e66 = n78 * y32 + i61, o62 = e66 + 1, a68 = o62 + y32, l64 = a68 - 1, c59 = s70 + i61, u52 = c59 + 1, f51 = u52 + y32, d53 = f51 - 1, m45 = t68.vertexAttributes.position.typedBuffer, g36 = t68.vertexAttributes.position.typedBufferStride;
          v37(c59, u52, f51, d53, g36, m45) ? (r63(e66, o62, a68), r63(a68, l64, e66)) : (r63(e66, o62, l64), r63(l64, a68, o62));
        }
      }
    })(), p12(x34 === 3 * l63 * d52);
    (() => {
      for (let e66 = 0; e66 < 4; ++e66) {
        const n78 = x34;
        if (c58[e66])
          continue;
        const o62 = t68.outerEdges[e66], s70 = t68.innerEdges[e66];
        let a68 = 0, l64 = 0;
        const u52 = o62.count, f51 = s70.count;
        p12(f51 === i60 - 1);
        let m45 = 0;
        const h46 = 1 === e66 || 2 === e66 ? (t69, e67, n79) => r63(t69, e67, n79) : (t69, e67, n79) => r63(t69, n79, e67);
        for (; a68 < u52 - 1 || l64 < f51 - 1; ) {
          const t69 = s70.getVertexIndex(l64), e67 = o62.getVertexIndex(a68), n79 = a68 < u52 - 1, r64 = l64 < f51 - 1;
          if (n79 && (!r64 || (n79 ? 0 + i60 * (a68 + 0.5) / (u52 - 1) : 0) <= (r64 ? 1 + S25 * (l64 + 0.5) / (f51 - 1) : 0))) {
            ++a68, T11 && p12(a68 < u52);
            h46(t69, e67, o62.getVertexIndex(a68)), m45++;
          } else {
            ++l64, T11 && p12(l64 < f51);
            h46(t69, e67, s70.getVertexIndex(l64)), m45++;
          }
        }
        T11 && (p12(a68 === u52 - 1), p12(l64 === f51 - 1), p12(m45 === u52 + f51 - 2), p12(m45 === i60 - 2 + o62.count - 1), p12(x34 === n78 + 3 * m45 * d52));
      }
    })(), p12(x34 === 3 * (l63 + u51) * d52);
    const f50 = (n78) => {
      const o62 = t68.outerEdges[n78.connectedOuterEdgeOffset];
      let s70 = o62.getVertexIndex(0), a68 = o62.stride;
      for (let t69 = 0; t69 < n78.latitudeResolution; ++t69) {
        const o63 = 0 === t69 ? n78.rowOffset : s70 + e65;
        for (let e66 = 0; e66 < i60; e66++)
          r63(s70, s70 + 1, o63 + e66), t69 < n78.latitudeResolution - 1 && r63(s70 + 1, o63 + e66 + 1, o63 + e66), s70 += a68;
        s70 = o63, a68 = 1;
      }
    };
    (() => n77.forEach(f50))();
  } else {
    (() => {
      const n78 = Math.max(s69[0], 1) - 1, r64 = Math.min(s69[1], e65 - 2) - 1, i61 = Math.max(o61[0], 1) - 1, a68 = Math.min(o61[1], e65 - 2) - 1;
      for (let e66 = n78; e66 < r64; ++e66) {
        const n79 = e66 * y32;
        for (let e67 = i61; e67 < a68; ++e67) {
          const o62 = n79 + e67, s70 = o62 + 1, r65 = s70 + y32, i62 = r65 - 1, a69 = t68.vertexAttributes.position.typedBuffer, l64 = t68.vertexAttributes.position.typedBufferStride;
          v37(o62, s70, r65, i62, l64, a69) ? (M22[x34] = o62, M22[x34 + 1] = s70, M22[x34 + 2] = r65, M22[x34 + 3] = r65, M22[x34 + 4] = i62, M22[x34 + 5] = o62) : (M22[x34] = o62, M22[x34 + 1] = s70, M22[x34 + 2] = i62, M22[x34 + 3] = i62, M22[x34 + 4] = s70, M22[x34 + 5] = r65), x34 += 6;
        }
      }
    })(), p12(x34 === 3 * l63 * d52);
    (() => {
      for (let e66 = 0; e66 < 4; ++e66) {
        if (c58[e66])
          continue;
        const n78 = t68.outerEdges[e66], o62 = t68.innerEdges[e66];
        let s70 = 0, r64 = 0;
        const a68 = n78.count, l64 = o62.count;
        p12(l64 === i60 - 1);
        const u52 = 1 === e66 || 2 === e66, f50 = u52 ? 1 : 2, d53 = u52 ? 2 : 1, m45 = n78.index0, g36 = n78.stride, h46 = o62.index0, y33 = o62.stride;
        for (; s70 < a68 - 1 || r64 < l64 - 1; ) {
          const t69 = h46 + r64 * y33, e67 = m45 + s70 * g36, n79 = s70 < a68 - 1, o63 = r64 < l64 - 1, c59 = n79 && (!o63 || (n79 ? 0 + i60 * (s70 + 0.5) / (a68 - 1) : 0) <= (o63 ? 1 + S25 * (r64 + 0.5) / (l64 - 1) : 0));
          c59 ? ++s70 : ++r64;
          const u53 = c59 ? e67 + g36 : t69 + y33;
          M22[x34] = t69, M22[x34 + f50] = e67, M22[x34 + d53] = u53, x34 += 3;
        }
      }
    })(), p12(x34 === 3 * (l63 + u51) * d52);
    const r63 = (n78) => {
      const o62 = t68.outerEdges[n78.connectedOuterEdgeOffset];
      let s70 = o62.getVertexIndex(0), r64 = o62.stride;
      for (let t69 = 0; t69 < n78.latitudeResolution; ++t69) {
        const o63 = 0 === t69 ? n78.rowOffset : s70 + e65;
        for (let e66 = 0; e66 < i60; e66++) {
          const i61 = o63 + e66;
          M22[x34] = s70, M22[x34 + 1] = s70 + 1, M22[x34 + 2] = i61, t69 < n78.latitudeResolution - 1 ? (M22[x34 + 3] = s70 + 1, M22[x34 + 4] = i61 + 1, M22[x34 + 5] = i61, x34 += 6) : x34 += 3, s70 += r64;
        }
        s70 = o63, r64 = 1;
      }
    };
    (() => n77.forEach(r63))();
  }
  p12(x34 === m44), t68.indices = M22, t68.indexCount = m44;
}
function k21(t68, e65) {
  const n77 = t68.localOrigin, o61 = t68.geometry, s69 = t68.geometryState.neighborData.edgeResolutions, r62 = o61.numVerticesPerSide - 2, i60 = o61.vertexAttributes;
  let a67 = e65;
  for (let l63 = 0; l63 < 4; ++l63) {
    {
      const t69 = 0 === l63 || 2 === l63, e66 = (0 === l63 ? r62 - 1 : 0) * r62 + (1 === l63 ? r62 - 1 : 0), s70 = (t69 ? 0 : 1) * r62 + (t69 ? 1 : 0);
      o61.innerEdges[l63] = new a53(i60, n77, e66, s70, r62);
    }
    {
      const t69 = a67, e66 = s69[l63] + 1;
      o61.outerEdges[l63] = new a53(i60, n77, t69, 1, e66), a67 += e66;
    }
  }
}
function z18(n77, o61, s69) {
  const r62 = (o61 + 2) % 4, i60 = n77.geometryState, a67 = n77.tile, l63 = i60.neighborData, f49 = a67.level - s69.level, d52 = 1 === o61 || 3 === o61, m44 = l63.edgeResolutions[o61];
  p12(o3(m44));
  const g36 = m44 + 1, h46 = n77.geometry, M22 = h46.boundingBox, x34 = h46.outerEdges[o61], y32 = h46.uvRange[0], S25 = h46.uvRange[1], b26 = h46.uvRange[2], v37 = h46.uvRange[3], B20 = i3(1 === o61 ? 1 : 0, y32, b26), L25 = i3(0 === o61 ? 1 : 0, S25, v37), R21 = s69.renderData, O26 = R21.geometryState, T29 = R21.geometry.outerEdges[r62], D19 = a67.getNeighborEdgeStartVertexIndex(o61, s69) * m44, P26 = m44 * 2 ** f49;
  p12(O26.neighborData.edgeResolutions[r62] === P26), p12(T29.count - 1 === P26);
  const A33 = R21.localOrigin[0] - n77.localOrigin[0], V15 = R21.localOrigin[1] - n77.localOrigin[1], E39 = R21.localOrigin[2] - n77.localOrigin[2], U23 = x34.attributes, C26 = x34.index0, I28 = x34.stride, j25 = U23.position.typedBuffer, w29 = U23.position.typedBufferStride, N19 = U23.normalCompressed.typedBuffer, H24 = U23.normalCompressed.typedBufferStride, _33 = U23.uv0, q19 = T29.attributes, W16 = T29.index0, F29 = T29.stride, k24 = q19.position.typedBuffer, z20 = q19.position.typedBufferStride, G20 = q19.normalCompressed.typedBuffer, J15 = q19.normalCompressed.typedBufferStride;
  for (let t68 = 1; t68 < g36 - 1; ++t68) {
    const n78 = C26 + I28 * t68, o62 = W16 + F29 * (D19 + t68), s70 = n78 * w29, r63 = o62 * z20, i61 = k24[r63] + A33, a68 = k24[r63 + 1] + V15, l64 = k24[r63 + 2] + E39;
    j25[s70] = i61, j25[s70 + 1] = a68, j25[s70 + 2] = l64, x29(i61, a68, l64, M22);
    const f50 = n78 * H24, g37 = o62 * J15;
    N19[f50] = G20[g37], N19[f50 + 1] = G20[g37 + 1];
    const p54 = t68 / m44, h47 = d52 ? B20 : i3(p54, y32, b26), x35 = d52 ? i3(p54, S25, v37) : L25;
    b20(_33, n78, h47, x35);
  }
}
function G16(t68) {
  var _a;
  const n77 = t68.geometryState, o61 = n77.neighborData, s69 = t68.localOrigin, i60 = o61.cornerNeighborData, a67 = t68.geometry, l63 = a67.outerEdges, f49 = a67.boundingBox, d52 = t68.tile, m44 = "local" === ((_a = t68.tile.surface.view) == null ? void 0 : _a.viewingMode), g36 = d52.ellipsoid.radius, h46 = d52.extentInRadians, M22 = d52.horizontalScale;
  let x34 = 0, S25 = 0, b26 = 0;
  const v37 = (t69, e65, n78) => {
    const o62 = h46[0 === e65 ? 1 : 3], s70 = h46[0 === t69 ? 0 : 2], r62 = Math.cos(o62), i61 = Math.sin(o62), a68 = Math.sin(s70), l64 = Math.cos(s70), c58 = g36 + n78;
    x34 = l64 * r62 * c58, S25 = a68 * r62 * c58, b26 = i61 * c58;
  }, B20 = m44 ? (() => {
    const n78 = t68.geometryState.clippingArea, o62 = d52.extent, s70 = null != n78 && (o62[3] > n78[3] || o62[2] > n78[2] || o62[1] < n78[1] || o62[0] < n78[0]), r62 = W12(d52.surface.isWebMercatorOnPlateeCarree, d52.ellipsoid.radius, M22);
    return (t69, o63, i61) => {
      const a68 = 0 === t69 ? j25[0] : j25[2], l64 = 0 === o63 ? j25[1] : j25[3], c58 = s70 ? i3(a68, n78[0], n78[2]) : a68, u51 = s70 ? i3(l64, n78[1], n78[3]) : l64, f50 = i61;
      x34 = c58 * M22, S25 = r62(u51), b26 = f50;
    };
  })() : v37;
  let L25 = 0, R21 = 0, O26 = 0, T29 = 0, D19 = 0, P26 = 0, A33 = 0, V15 = 0, U23 = 0;
  const C26 = m44 && t68.tile.surface.isWebMercatorOnPlateeCarree, I28 = (t69, e65, n78, o62, s70) => {
    let r62 = 0, i61 = 0, a68 = 0;
    if (m44) {
      const t70 = e65 * M22, s71 = C26 ? (Math.PI / 2 - 2 * Math.atan(Math.exp(-n78 / g36))) * g36 : n78 * M22;
      r62 = t70 - x34, i61 = s71 - S25, a68 = o62 - b26;
    } else {
      const s71 = E34(t69), l64 = t69.tile, c58 = l64.extent, u51 = l64.extentInRadians, f50 = (e65 - c58[0]) / (c58[2] - c58[0]), d53 = (n78 - c58[1]) / (c58[3] - c58[1]), m45 = u51[0] * (1 - f50) + u51[2] * f50, p54 = s71(d53), h47 = Math.cos(p54), M23 = Math.sin(p54), y32 = Math.sin(m45), v38 = Math.cos(m45), B21 = g36 + o62;
      r62 = v38 * h47 * B21 - x34, i61 = y32 * h47 * B21 - S25, a68 = M23 * B21 - b26;
    }
    switch (s70) {
      case 0:
        A33 += r62, V15 += i61, U23 += a68;
        break;
      case 1:
        T29 -= r62, D19 -= i61, P26 -= a68;
        break;
      case 2:
        A33 -= r62, V15 -= i61, U23 -= a68;
        break;
      case 3:
        T29 += r62, D19 += i61, P26 += a68;
    }
  }, j25 = d52.extent, w29 = n77.clippingArea, N19 = null != w29 ? w29 : Y10, H24 = j25[0], _33 = j25[2], q19 = j25[1], F29 = j25[3], k24 = [F29 > N19[3], _33 > N19[2], q19 < N19[1], H24 < N19[0]], z20 = Math.max(H24, N19[0]), G20 = Math.min(_33, N19[2]), K15 = Math.max(q19, N19[1]), X12 = Math.min(F29, N19[3]), $10 = a67.uvRange[0], tt5 = a67.uvRange[1], et4 = a67.uvRange[2], nt5 = a67.uvRange[3], ot6 = (t69) => {
    var _a2;
    const e65 = i60[t69].cornerTiles;
    L25 = 0, R21 = 0, O26 = 1, T29 = 0, D19 = 0, P26 = 0, A33 = 0, V15 = 0, U23 = 0;
    let n78 = 1 / 0;
    for (let r62 = 0; r62 < 4; ++r62)
      n78 = Math.min(n78, ((_a2 = e65[r62]) == null ? void 0 : _a2.level) ?? 1 / 0);
    for (let r62 = 0; r62 < 4; ++r62) {
      const t70 = e65[r62];
      Z9[r62] = (t70 == null ? void 0 : t70.level) === n78 ? t70 : null;
    }
    let o62 = 1, s70 = 0;
    for (let r62 = 0; r62 < 4; ++r62) {
      const t70 = Z9[r62];
      t70 && (o62 = Math.max(o62, t70 == null ? void 0 : t70.renderData.geometryState.numVerticesPerSide), s70 = t70.extent[2] - t70.extent[0]);
    }
    const a68 = s70, l64 = o62;
    p12(l64 > 1);
    const c58 = a68 / l64;
    for (let i61 = 0; i61 < 4; ++i61) {
      const t70 = Z9[(i61 + 3) % 4], e66 = Z9[i61 % 4];
      if (!t70 && !e66)
        continue;
      const n79 = 0 === i61 ? 1 : 1 === i61 ? 2 : 2 === i61 ? 3 : 0, o63 = 0 === i61 ? 2 : 1 === i61 ? 3 : 2 === i61 ? 0 : 1;
      if (t70 && e66) {
        const s71 = Q12[i61][0] * c58, a69 = Q12[i61][1] * c58, l65 = t70.extent, u51 = l65[0 === n79 || 1 === n79 ? 2 : 0] + s71, f50 = l65[0 === n79 || 3 === n79 ? 3 : 1] + a69, d53 = e66.extent, m45 = d53[0 === o63 || 1 === o63 ? 2 : 0] + s71, g37 = d53[0 === o63 || 3 === o63 ? 3 : 1] + a69, p54 = t70.renderData, h47 = e66.renderData, M23 = e46(u51, f50, p54.geometryState.samplerData), x35 = e46(m45, g37, h47.geometryState.samplerData);
        I28(p54, u51, f50, 0.5 * (M23 + x35), i61);
      } else {
        const s71 = t70 ?? e66, a69 = t70 ? n79 : o63, l65 = s71.extent, u51 = Q12[i61], f50 = l65[0 === a69 || 1 === a69 ? 2 : 0] + u51[0] * c58, d53 = l65[0 === a69 || 3 === a69 ? 3 : 1] + u51[1] * c58, m45 = s71.renderData, g37 = e46(f50, d53, m45.geometryState.samplerData);
        I28(m45, f50, d53, g37, i61);
      }
    }
    if (!m44) {
      const t70 = Math.sqrt(x34 * x34 + S25 * S25 + b26 * b26);
      L25 = x34 / t70, R21 = S25 / t70, O26 = b26 / t70;
    }
    if (m44 || O26 * O26 < 0.999) {
      const t70 = Math.sqrt(T29 * T29 + D19 * D19 + P26 * P26);
      T29 /= t70, D19 /= t70, P26 /= t70;
      const e66 = Math.sqrt(A33 * A33 + V15 * V15 + U23 * U23);
      A33 /= e66, V15 /= e66, U23 /= e66, L25 = P26 * V15 - D19 * U23, R21 = T29 * U23 - P26 * A33, O26 = D19 * A33 - T29 * V15;
      const n79 = 1 / Math.sqrt(L25 * L25 + R21 * R21 + O26 * O26);
      L25 *= n79, R21 *= n79, O26 *= n79;
    }
  };
  for (let E39 = 0; E39 < 4; ++E39) {
    const o62 = E39, a68 = (E39 + 1) % 4, m45 = 0 === E39 || 1 === E39 ? 1 : 0, g37 = 0 === E39 || 3 === E39 ? 1 : 0, h47 = i3(m45, $10, et4), M23 = i3(g37, tt5, nt5), v38 = l63[o62], T30 = 0 === E39 || 3 === E39 ? v38.count - 1 : 0, D20 = l63[a68], P27 = 0 === E39 || 1 === E39 ? D20.count - 1 : 0, A34 = i60[E39].cornerTiles;
    let V16 = -1;
    for (let t69 = 0; t69 < 4; ++t69) {
      const e65 = A34[t69];
      e65 && (-1 === V16 || l20(A34[V16], e65) > 0) && (V16 = t69);
    }
    const U24 = V16, C27 = A34[U24];
    if (C27 !== d52) {
      const e65 = d52.level - C27.level, n78 = 2 ** e65, o63 = [C27.lij[0] + e65, C27.lij[1] * n78, C27.lij[2] * n78], s70 = [o63[1] + n78 === d52.lij[1], 0 === E39 && (1 === U24 || 0 === U24 && C27 !== A34[3]) || 1 === E39 && (0 === U24 || 1 === U24 && C27 !== A34[2]), o63[1] === d52.lij[1] + 1, 2 === E39 && (3 === U24 || 2 === U24 && C27 !== A34[1]) || 3 === E39 && (2 === U24 || 3 === U24 && C27 !== A34[0])], r62 = s70.reduce((t69, e66) => t69 + (e66 ? 1 : 0), 0);
      p12(1 === r62 || 2 === r62);
      let i61 = -1, a69 = -1;
      const l64 = C27.renderData;
      if (1 === r62) {
        const e66 = s70.findIndex((t69) => t69);
        p12(0 <= e66 && e66 <= 3), i61 = (e66 + 2) % 4;
        const n79 = t68.geometryState.neighborData.edgeResolutions[e66];
        a69 = d52.getNeighborEdgeStartVertexIndex(e66, C27) * n79 + n79 * (0 === e66 && 0 === E39 || 1 === e66 && 0 === E39 || 2 === e66 && 1 === E39 || 3 === e66 && 3 === E39 ? 1 : 0);
      } else {
        p12(s70[1] || s70[3]), i61 = s70[1] ? 3 : 1;
        const t69 = l64.geometryState.neighborData.edgeResolutions[i61];
        a69 = 0 === E39 || 3 === E39 ? 0 : t69;
      }
      const m46 = l64.geometry.outerEdges[i61];
      {
        const e66 = v38.index0 + T30 * v38.stride, n79 = D20.index0 + P27 * D20.stride, o64 = m46.index0 + a69 * m46.stride;
        {
          const s71 = m46.attributes.position, r63 = s71.typedBuffer, i62 = o64 * s71.typedBufferStride, a70 = t68.localOrigin, l65 = m46.localOrigin, u51 = r63[i62] + l65[0] - a70[0], d53 = r63[i62 + 1] + l65[1] - a70[1], g38 = r63[i62 + 2] + l65[2] - a70[2];
          x29(u51, d53, g38, f49);
          {
            const t69 = v38.attributes.position, n80 = t69.typedBuffer, o65 = e66 * t69.typedBufferStride;
            n80[o65] = u51, n80[o65 + 1] = d53, n80[o65 + 2] = g38;
          }
          {
            const t69 = D20.attributes.position, e67 = t69.typedBuffer, o65 = n79 * t69.typedBufferStride;
            e67[o65] = u51, e67[o65 + 1] = d53, e67[o65 + 2] = g38;
          }
        }
        b20(v38.attributes.uv0, e66, h47, M23), b20(D20.attributes.uv0, n79, h47, M23);
        {
          const t69 = m46.attributes.normalCompressed.typedBuffer, s71 = o64 * m46.attributes.normalCompressed.typedBufferStride;
          {
            const n80 = v38.attributes.normalCompressed, o65 = n80.typedBuffer, r63 = e66 * n80.typedBufferStride;
            o65[r63] = t69[s71], o65[r63 + 1] = t69[s71 + 1];
          }
          {
            const e67 = D20.attributes.normalCompressed, o65 = e67.typedBuffer, r63 = n79 * e67.typedBufferStride;
            o65[r63] = t69[s71], o65[r63 + 1] = t69[s71 + 1];
          }
        }
      }
    } else {
      const t69 = k24[o62], i61 = k24[a68];
      let l64;
      if (t69 || i61) {
        const t70 = i3(H24 * (1 - m45) + _33 * m45, z20, G20), o63 = i3(q19 * (1 - g37) + F29 * g37, K15, X12), s70 = n77.samplerData;
        l64 = e46(t70, o63, s70);
      } else
        l64 = J13(A34);
      B20(m45, g37, l64), ot6(E39);
      const u51 = x34 - s69[0], d53 = S25 - s69[1], p54 = b26 - s69[2];
      x29(u51, d53, p54, f49), v38.setVertexFromValuesRawPositionUVNormal(T30, u51, d53, p54, h47, M23, L25, R21, O26), D20.setVertexFromValuesRawPositionUVNormal(P27, u51, d53, p54, h47, M23, L25, R21, O26);
    }
  }
  for (let e65 = 0; e65 < 4; ++e65)
    Z9[e65] = null;
}
function J13(t68) {
  var _a, _b;
  const e65 = t68.reduce((t69, e66) => Math.min(t69, (e66 == null ? void 0 : e66.level) ?? 1 / 0), 1 / 0);
  T11 && (p12(!t68[0] || !t68[2] || ge3(t68[0], t68[2], S8.SOUTH_WEST)), p12(!t68[1] || !t68[3] || ge3(t68[1], t68[3], S8.NORTH_WEST)));
  let n77 = 0, o61 = 0;
  for (let i60 = 0; i60 < 4; ++i60) {
    const s70 = t68[i60];
    if (s70 && s70.level === e65) {
      const t69 = 0 === i60 || 1 === i60, e66 = 0 === i60 || 3 === i60, a67 = s70.extent, l63 = a67[t69 ? 0 : 2], c58 = a67[e66 ? 1 : 3], u51 = (_b = (_a = s70.renderData) == null ? void 0 : _a.geometryState) == null ? void 0 : _b.samplerData;
      o61 += e46(l63, c58, u51), n77++;
    }
  }
  const s69 = n77 ? o61 / n77 : 0;
  return p12(null != s69), s69;
}
function K11(t68) {
  const e65 = t68.vao, n77 = t68.geometry.vertexAttributes.position.typedBuffer;
  e65.vertexBuffers.geometry.setSubData(n77, 0, 0, n77.length);
}
var Q12 = [[0, 1], [1, 0], [0, -1], [-1, 0]];
var X10 = new t55();
var Y10 = a7(-1 / 0, -1 / 0, 1 / 0, 1 / 0);
var Z9 = [null, null, null, null];
function $8(t68, e65, n77) {
  if (!e65)
    return false;
  const o61 = l20(t68, e65);
  return o61 > 0 || 0 === o61 && n77 >= 2;
}

// node_modules/@arcgis/core/views/3d/terrain/PlanarPatch.js
var p41 = class extends se5 {
  get horizontalScale() {
    return this._horizontalScaleFactor;
  }
  constructor(e65, t68, r62) {
    super(), this._horizontalScaleFactor = 1, this._extentInRenderSR = i5(), void 0 !== e65 && this.init(e65, t68, r62);
  }
  init(t68, a67, s69) {
    super.init(t68, a67, s69);
    const n77 = s69.view.renderSpatialReference, l63 = s69.spatialReference, c58 = null != n77 && G3(n77) && null != l63 && l63.isGeographic ? this.ellipsoid.radius * Math.PI / 180 : 1;
    this._horizontalScaleFactor = c58;
    const h46 = this.surface.isWebMercatorOnPlateeCarree, u51 = this._extentInRenderSR, d52 = this.extent;
    if (h46) {
      const t69 = r4(d52[0], d52[1], 0);
      Hn(t69, f3.WebMercator, t69, f3.PlateCarree);
      const a68 = r4(d52[2], d52[3], 0);
      Hn(a68, f3.WebMercator, a68, f3.PlateCarree), u51[0] = t69[0], u51[1] = t69[1], u51[2] = a68[0], u51[3] = a68[1];
    } else
      for (let e65 = 0; e65 < 4; ++e65)
        u51[e65] = d52[e65] * c58;
    this.centerAtSeaLevel[0] = 0.5 * (u51[0] + u51[2]), this.centerAtSeaLevel[1] = 0.5 * (u51[1] + u51[3]), this.centerAtSeaLevel[2] = 0, this._edgeLen = Math.max(u51[2] - u51[0], u51[3] - u51[1]), this._edgeLen2 = this._edgeLen * this._edgeLen, this.updateRadiusAndCenter();
  }
  updateRadiusAndCenter() {
    this._updateCenter();
    const e65 = this._extentInRenderSR, t68 = 0.5 * (e65[2] - e65[0]), r62 = 0.5 * (e65[3] - e65[1]), i60 = Math.sqrt(t68 * t68 + r62 * r62), a67 = 0.5 * (this.elevationBounds[0] - this.elevationBounds[1]), s69 = Math.max(i60, a67);
    this._center[he5.MIDDLE][3] = s69;
  }
  _calculateFrustumVisibilityStatus(e65) {
    const t68 = this._aabb(), r62 = t68[0], i60 = t68[1], a67 = t68[2], s69 = t68[3], o61 = t68[4], l63 = t68[5];
    let c58 = true;
    for (let h46 = 0; h46 < 6; h46++) {
      const t69 = e65[h46], u51 = t69[0], d52 = t69[1], m44 = t69[2], p54 = t69[3];
      if (u51 * (u51 > 0 ? r62 : s69) + d52 * (d52 > 0 ? i60 : o61) + m44 * (m44 > 0 ? a67 : l63) + p54 >= 0)
        return T10.OUTSIDE;
      c58 = c58 && u51 * (u51 < 0 ? r62 : s69) + d52 * (d52 < 0 ? i60 : o61) + m44 * (m44 < 0 ? a67 : l63) + p54 <= 0;
    }
    return c58 ? T10.INSIDE : T10.INTERSECTS;
  }
  _aabb() {
    const e65 = this._extentInRenderSR;
    return k2(e65[0], e65[1], this.elevationBounds[0], e65[2], e65[3], this.elevationBounds[1]);
  }
  intersectsRay(e65, t68, r62, i60) {
    return f40[0] = 1 / t68[0], f40[1] = 1 / t68[1], f40[2] = 1 / t68[2], O5(this._aabb(), e65, f40, r62, i60);
  }
  createGeometry() {
    U20(this.renderData, this._horizontalScaleFactor), this.setMemoryDirty();
  }
  getDefaultVerticesPerSide() {
    return this.level < 9 ? 3 : 2;
  }
  updateCornerElevations() {
    I22(this.renderData, this._horizontalScaleFactor);
  }
  updateEdgeElevations() {
    j23(this.renderData, this._horizontalScaleFactor);
  }
};
var f40 = n7();

// node_modules/@arcgis/core/views/3d/terrain/ScaleRangeQueries.js
var c47 = class {
  constructor() {
    this.extent = n14(), this.minLevel = 0, this.maxLevel = 0, this.callback = null;
  }
};
var l52 = class extends m {
  constructor() {
    super(...arguments), this._queries = new l2({ initialSize: 10 }), this._queriesInvPtr = 0, this._queryQueue = new l2({ initialSize: 30 }), this._queryPool = new e4(c47);
  }
  queryVisibleLevelRange(e65, t68, s69, r62) {
    const i60 = this._queryPool.acquire();
    a6(i60.extent, e65), i60.minLevel = t68 ?? -Number.MAX_VALUE, i60.maxLevel = s69 ?? Number.MAX_VALUE, i60.callback = r62, this._queryQueue.push(i60), this.notifyChange("updating");
  }
  get updating() {
    return 0 !== this._queryQueue.length;
  }
  prepare() {
    for (; this._queries.length < this._queries.data.length && this._queryQueue.length > 0; ) {
      const e65 = this._queryQueue.pop();
      this._queries.push(e65);
    }
    this._queriesInvPtr = this._queries.length;
  }
  process() {
    for (let e65 = 0; e65 < this._queries.length; e65++) {
      const t68 = this._queries.data[e65];
      this._queryPool.release(t68), t68.callback(e65 >= this._queriesInvPtr), t68.callback = null;
    }
    this._queries.clear(), this.notifyChange("updating");
  }
  queriesForTile(e65) {
    const t68 = e65.level;
    let s69 = 0;
    for (; s69 < this._queriesInvPtr; ) {
      const r62 = this._queries.data[s69], i60 = r62.extent;
      t68 >= r62.minLevel && t68 <= r62.maxLevel && i60[0] <= e65.extent[2] && i60[2] >= e65.extent[0] && i60[1] <= e65.extent[3] && i60[3] >= e65.extent[1] ? (this._queries.swapElements(s69, this._queriesInvPtr - 1), this._queriesInvPtr--) : s69++;
    }
  }
};
e([y2()], l52.prototype, "updating", null), l52 = e([a4("esri.views.3d.terrain.ScaleRangeQueries")], l52);

// node_modules/@arcgis/core/views/3d/terrain/SphericalPatch.js
var D16 = class extends se5 {
  get convexHull() {
    return this._convexHull;
  }
  constructor(t68, e65, s69) {
    super(), this._convexHull = new Array(24), this._boundingSphere = _4(), void 0 !== t68 && this.init(t68, e65, s69);
  }
  init(s69, i60, o61) {
    super.init(s69, i60, o61);
    const n77 = this.ellipsoid.radius, r62 = this.extentInRadians[0], l63 = this.extentInRadians[1], a67 = this.extentInRadians[2], h46 = this.extentInRadians[3], u51 = s69[0], d52 = s9(l63, h46, 0.5), p54 = s9(r62, a67, 0.5), f49 = 0 === u51 ? 0 : Math.min(Math.abs(l63), Math.abs(h46));
    this._edgeLen = (a67 - r62) * Math.cos(f49) * n77, this._edgeLen2 = this._edgeLen * this._edgeLen, this._curvatureHeight = n77 - Math.sqrt(n77 * n77 - this._edgeLen2 / 4), Ee(this.centerAtSeaLevel, p54, d52, this.ellipsoid.radius), z2(this.up, this.centerAtSeaLevel), this.updateRadiusAndCenter();
  }
  updateRadiusAndCenter() {
    this._updateBoundingVolumes();
    const t68 = this._center;
    if (0 === this.lij[0])
      o2(t68[he5.MIDDLE], 0, 0, 0), o2(t68[he5.TOP], 0, 0, 0), o2(t68[he5.BOTTOM], 0, 0, 0), t68[he5.MIDDLE][3] = this.ellipsoid.radius + this.elevationBounds[1];
    else {
      this._updateCenter();
      const e65 = t68[he5.MIDDLE], s69 = this.convexHull;
      let i60 = 0;
      for (let t69 = 0; t69 < 8; ++t69)
        i60 = Math.max(i60, L22(e65, s69, 3 * t69));
      t68[he5.MIDDLE][3] = Math.sqrt(i60);
    }
  }
  _calculateFrustumVisibilityStatus(t68) {
    if (!P5(t68, this._boundingSphere))
      return T10.OUTSIDE;
    if (this.lij[0] < 10)
      return T10.INTERSECTS;
    const e65 = this.convexHull, s69 = this.surface.view.state.camera.near;
    let i60 = true;
    for (let o61 = 0; o61 < v5; o61++) {
      const n77 = o61 === l11.NEAR, r62 = t68[o61], l63 = r62[0], a67 = r62[1], h46 = r62[2], u51 = r62[3] - (n77 ? s69 : 0);
      let c58 = false;
      for (let t69 = 0; t69 < 8; ++t69) {
        const s70 = 3 * t69;
        if (l63 * e65[s70] + a67 * e65[s70 + 1] + h46 * e65[s70 + 2] + u51 < 0) {
          if (c58 = true, !i60)
            break;
        } else
          i60 = false;
      }
      if (!c58)
        return T10.OUTSIDE;
    }
    return i60 ? T10.INSIDE : T10.INTERSECTS;
  }
  computeElevationBounds() {
    super.computeElevationBounds(), this._updateBoundingVolumes();
  }
  createGeometry() {
    v32(this.renderData, this._getPatchType()), this._updateBoundingVolumes(), this.setMemoryDirty();
  }
  _updateBoundingVolumes() {
    this._updateConvexHull(), this._updateBoundingSphere(), T11 && this._checkBVs();
  }
  _updateBoundingSphere() {
    const t68 = this._boundingSphere, e65 = t68, r62 = this.elevationBounds, l63 = this.ellipsoid.radius, a67 = r62[1];
    if (0 === this.level)
      o2(e65, 0, 0, 0), t68[3] = l63 + a67;
    else {
      const s69 = this.extentInRadians, a68 = 0.5 * (s69[0] + s69[2]), h46 = s69[1], u51 = s69[3];
      y27(O21, a68, h46, l63), y27(A29, a68, u51, l63), u2(e65, O21, A29);
      const c58 = 0.5 * (r62[0] + r62[1]);
      g2(e65, e65, (l63 + c58) / Y(e65));
      const d52 = this.convexHull;
      let p54 = 0;
      const f49 = (t69, e66) => {
        const s70 = t69[0] - d52[3 * e66], i60 = t69[1] - d52[3 * e66 + 1], o61 = t69[2] - d52[3 * e66 + 2];
        return Math.sqrt(s70 * s70 + i60 * i60 + o61 * o61);
      };
      for (let t69 = 0; t69 < 8; ++t69) {
        const s70 = f49(e65, t69);
        p54 = Math.max(p54, s70);
      }
      const m44 = p54;
      t68[3] = m44 + 2;
    }
  }
  _updateConvexHull() {
    const t68 = this.extentInRadians, s69 = this.ellipsoid.radius;
    if (0 === this.level)
      return;
    const a67 = this.elevationBounds, c58 = this._getPatchType(), d52 = this.surface.isWebMercator, p54 = d52 && c58 === o22.HAS_NORTH_POLE, f49 = d52 && c58 === o22.HAS_SOUTH_POLE, m44 = f49 || p54, g36 = Math.PI / 2, _33 = t68[0], v37 = t68[2], x34 = f49 ? -g36 : t68[1], M22 = p54 ? g36 : t68[3], j25 = 0.5 * (_33 + v37), T29 = a67[0], E39 = s69 + (m44 ? Math.min(0, T29 - 1) : T29), H24 = (t69, e65, s70) => y27(t69, e65, s70, E39), D19 = n7(), I28 = n7(), L25 = n7(), R21 = n7();
    H24(D19, _33, x34), H24(I28, _33, M22), H24(L25, v37, M22), H24(R21, v37, x34);
    const O26 = (t69, e65) => {
      for (let s70 = 0; s70 < 3; ++s70)
        this._convexHull[3 * e65 + s70] = t69[s70];
    };
    O26(D19, 0), O26(I28, 1), O26(L25, 2), O26(R21, 3);
    const A33 = a67[1], P26 = s69 + (m44 ? Math.max(0, A33 + 1) : A33), V15 = n7(), C26 = n7(), N19 = n7();
    y27(C26, j25, M22, E39), y27(N19, j25, x34, E39), u2(V15, C26, N19), z2(V15, V15);
    const k24 = n7(), U23 = n7(), F29 = (t69, s70) => {
      J(U23, t69, s70), z2(U23, U23);
      const n77 = -P(t69, k24) / P(U23, k24);
      p12(n77 >= 0), g2(U23, U23, n77), u2(t69, t69, U23);
    };
    if (2 ** this.lij[0] > 2 * this.lij[1]) {
      const t69 = N19, s70 = n7();
      _(s70, B15, t69), z2(s70, s70), _(k24, t69, s70), z2(k24, k24), p12(G7(P(k24, t69) / Y(t69), 0)), F29(D19, I28), F29(R21, L25), O26(D19, 0), O26(R21, 3);
    } else if (2 ** this.lij[0] !== 2 * this.lij[1]) {
      const t69 = C26, s70 = n7();
      _(s70, B15, t69), z2(s70, s70), _(k24, s70, t69), z2(k24, k24), F29(I28, D19), F29(L25, R21), O26(I28, 1), O26(L25, 2);
    }
    const w29 = (t69, e65) => {
      const s70 = P26 / P(e65, V15);
      for (let i60 = 0; i60 < 3; ++i60)
        this._convexHull[3 * t69 + i60] = e65[i60] * s70;
    };
    w29(4, D19), w29(5, I28), w29(6, L25), w29(7, R21);
  }
  _getPatchType() {
    const t68 = this.lij[1], e65 = 0 === t68, s69 = t68 === (1 << this.level) - 1;
    return e65 ? s69 ? o22.HAS_BOTH_POLES : o22.HAS_NORTH_POLE : s69 ? o22.HAS_SOUTH_POLE : o22.REGULAR;
  }
  intersectsRay(t68, e65, s69, i60) {
    const o61 = this._boundingSphere, n77 = o61[3] + s69, r62 = e65[0] * e65[0] + e65[1] * e65[1] + e65[2] * e65[2], l63 = o61[0] - t68[0], a67 = o61[1] - t68[1], h46 = o61[2] - t68[2], u51 = (l63 * e65[0] + a67 * e65[1] + h46 * e65[2]) / r62, c58 = e65[0] * u51 - l63, d52 = e65[1] * u51 - a67, p54 = e65[2] * u51 - h46;
    return c58 * c58 + d52 * d52 + p54 * p54 < n77 * n77;
  }
  getDefaultVerticesPerSide() {
    return this.level < I23.length ? I23[this.level] + 1 : 2;
  }
  updateCornerElevations() {
    R15(this.renderData), this._updateBoundingVolumes();
  }
  updateEdgeElevations() {
    L21(this.renderData), this._updateBoundingVolumes();
  }
  _checkBVs() {
    var _a;
    if (!T11)
      return;
    if (this.level <= 2)
      return;
    const t68 = this._boundingSphere, s69 = t68[3], o61 = t68, c58 = n7(), p54 = this.ellipsoid.radius, f49 = this.elevationBounds;
    f49[1], f49[0];
    const m44 = p54 + f49[0], g36 = 1, $10 = 0, _33 = this._center[he5.MIDDLE][3], v37 = this.convexHull, x34 = (t69, e65) => {
      for (let s70 = 0; s70 < 3; ++s70)
        t69[s70] = v37[3 * e65 + s70];
    };
    {
      const t69 = n7(), s70 = n7(), i60 = n7(), o62 = n7(), n77 = n7(), a67 = (a68, u51, c59, d52) => {
        x34(s70, a68), x34(i60, u51), x34(o62, c59), J(s70, s70, i60), J(o62, o62, i60), _(t69, s70, o62), z2(t69, t69);
        const p55 = P(t69, i60);
        x34(n77, d52);
        const f50 = P(t69, n77), m45 = Math.abs(f50 - p55);
        p12(G7(m45, 0), `Non coplanar ${a68},${u51},${c59},${d52} diff = ${m45}`);
      };
      a67(0, 1, 2, 3), a67(4, 5, 6, 7), a67(0, 1, 4, 5), a67(1, 2, 5, 6), a67(2, 3, 6, 7), a67(3, 0, 7, 4);
    }
    const M22 = t11(24), T29 = (t69, e65, s70) => {
      const i60 = 4 * t69;
      for (let o62 = 0; o62 < 3; ++o62)
        M22[i60 + o62] = e65[o62];
      M22[i60 + 3] = s70;
    }, D19 = n7(), I28 = n7(), L25 = n7(), B20 = n7(), O26 = (t69, s70, i60, o62) => {
      x34(D19, s70), x34(I28, i60), x34(L25, o62), J(D19, D19, I28), z2(D19, D19), J(L25, L25, I28), z2(L25, L25), _(B20, D19, L25), z2(B20, B20);
      const n77 = P(B20, I28);
      T29(t69, B20, n77);
    };
    O26(0, 0, 1, 2), O26(1, 1, 0, 4), O26(2, 1, 5, 2), O26(3, 3, 2, 6), O26(4, 4, 0, 3), O26(5, 4, 6, 5);
    const A33 = 1, P26 = (t69, e65, s70, i60) => {
      const o62 = 4 * t69;
      return M22[o62] * e65 + M22[o62 + 1] * s70 + M22[o62 + 2] * i60 - M22[o62 + 3];
    }, V15 = (t69, e65, s70, i60) => P26(t69, e65, s70, i60) >= -A33, C26 = (t69, e65) => V15(t69, e65[0], e65[1], e65[2]), N19 = 2 ** this.lij[0] > 2 * this.lij[1], k24 = (t69, e65, i60) => Math.sqrt(R16(t69, e65, i60, o61[0], o61[1], o61[2])) < s69, U23 = (t69) => k24(t69[0], t69[1], t69[2]), F29 = (t69, e65) => k24(t69[e65], t69[e65 + 1], t69[e65 + 2]), w29 = this.extentInRadians, q19 = 0.5 * (w29[0] + w29[2]), G20 = w29[1], z20 = w29[3], W16 = n7(), J15 = n7();
    y27(W16, q19, z20, m44), y27(J15, q19, G20, m44);
    const K15 = N19 ? "Upper" : "Lower";
    let Q14 = true;
    for (let e65 = 0; e65 < 6; ++e65) {
      for (let t69 = 0; t69 < 8; ++t69) {
        const s70 = 3 * t69, i60 = V15(e65, v37[s70], v37[s70 + 1], v37[s70 + 2]);
        Q14 && (Q14 = i60), p12(i60, `Tile[${this.lij}] Convex hull point ${t69} outside of plane ${e65}`);
      }
      p12(C26(e65, J15), `Tile[${this.lij}] (${K15}) bottom mid outside of plane ${e65}`), p12(C26(e65, W16), `Tile[${this.lij}] (${K15}) top mid outside of plane ${e65}`);
    }
    p12(Q14, "Not all convex hull points are inside  convex hull polyhedron"), p12(U23(J15), `Tile[${this.lij}] (${K15}) bottom mid outside of bounding sphere`), p12(U23(W16), `Tile[${this.lij}] (${K15}) top mid outside of bounding sphere`);
    for (let e65 = 0; e65 < 8; ++e65) {
      const t69 = F29(v37, 3 * e65);
      p12(t69, `Tile[${this.lij}] Convex hull point ${e65} outside of bounding sphere`);
    }
    for (let e65 = 0; e65 < 6; ++e65)
      for (let t69 = 0; t69 < 8; ++t69) {
        const s70 = 3 * t69;
        V15(e65, v37[s70], v37[s70 + 1], v37[s70 + 2]) || console.error(`Tile[${this.lij}] Convex hull point ${t69} outside of plane ${e65}`);
      }
    const X12 = this.extentInRadians, Y11 = Math.max(X12[2] - X12[0], X12[3] - X12[1]), Z11 = Math.round(Y11 * p54), tt5 = this.renderData;
    if (!tt5)
      return;
    const { geometry: et4, localOrigin: st5 } = tt5, it4 = (_a = et4.vertexAttributes) == null ? void 0 : _a.position;
    if (!it4)
      return;
    const ot6 = it4.count, nt5 = n7(), rt4 = et4.numVerticesPerSide - 2, lt5 = rt4 * rt4, at5 = tt5.geometryState.neighborData, ht5 = at5.edgeResolutions.reduce((t69, e65) => t69 + e65 + 1, 0);
    for (let e65 = 0; e65 < ot6; ++e65) {
      const t69 = e65 < lt5, r62 = !t69 && e65 < lt5 + ht5;
      let l63 = false, h46 = -1;
      if (r62) {
        let t70 = lt5;
        for (let s70 = 0; s70 < 4; ++s70) {
          const i60 = at5.edgeResolutions[s70];
          if (e65 === t70 || e65 === t70 + i60 - 1) {
            l63 = true;
            break;
          }
          if (t70 += i60, e65 < t70) {
            h46 = s70;
            break;
          }
        }
      }
      const u51 = r62 ? at5.edgePeerNeighbors[h46] : null, d52 = r62 && u51 && l20(this, u51) > 0;
      it4.getVec(e65, c58), u2(nt5, c58, st5);
      const m45 = Y(nt5) - p54;
      let v38 = 0, x35 = false;
      const M23 = f49[0] - m45, j25 = m45 - f49[1], b26 = M23 > g36, S25 = j25 > g36, T30 = b26 || S25, E39 = () => {
        const s70 = t69 ? "internal" : r62 && !l63 ? "edge" : l63 ? "corner" : "pole";
        return `Tile[${this.lij}].vertex[${e65}]:${s70}` + (b26 ? "(below)" : S25 ? "(above)" : "") + (d52 ? "(Neighbor)" : "");
      }, D20 = U(nt5, o61);
      if (D20 >= s69 + $10) {
        const t70 = D20 - s69;
        T30 || (console.error(`${E39()} is out of the bounding sphere by ${t70.toFixed(0)} / ${s69.toFixed(0)}[tol=${$10}] h=${m45.toFixed(0)} / [${f49[0].toFixed(0)}..${f49[1].toFixed(0)}] (${(t70 / s69).toFixed(0)})`), x35 = true);
      }
      for (let i60 = 0; i60 < 6; ++i60)
        if (!V15(i60, nt5[0], nt5[1], nt5[2])) {
          const t70 = P26(i60, nt5[0], nt5[1], nt5[2]), o62 = e65 % rt4, n77 = (e65 - o62) / rt4;
          0 === i60 && M23 || 5 === i60 && j25 || (console.error(`${E39()} (${o62},${n77})|${rt4}] is out of the bounding trapezoid plane ${i60} h=${Math.round(m45)} / [${Math.round(f49[0])}..${Math.round(f49[1])}] dist=${Math.round(t70)} radii = ${Math.round(s69)}/${Math.round(_33)}} : maxL = ${Z11}`), ++v38);
        }
      if (x35 || v38 > 0)
        break;
    }
  }
};
var I23 = [128, 64, 64, 32, 16, 8, 8, 4];
function L22(t68, e65, s69) {
  return R16(t68[0], t68[1], t68[2], e65[s69], e65[s69 + 1], e65[s69 + 2]);
}
function R16(t68, e65, s69, i60, o61, n77) {
  const r62 = i60 - t68, l63 = o61 - e65, a67 = n77 - s69;
  return r62 * r62 + l63 * l63 + a67 * a67;
}
var y27 = (t68, e65, s69, i60) => {
  const o61 = Math.cos(e65), n77 = Math.sin(e65), r62 = Math.cos(s69), l63 = Math.sin(s69);
  t68[0] = i60 * r62 * o61, t68[1] = i60 * r62 * n77, t68[2] = i60 * l63;
};
var B15 = [0, 0, 1];
var O21 = n7();
var A29 = n7();

// node_modules/@arcgis/core/views/3d/terrain/SplitLimits.js
var e49 = class extends m {
  constructor() {
    super(...arguments), this.fovX = 0, this.fovY = 0, this.relativeWidthLimit = 0, this.relativeHeightLimit = 0, this.maxLod = 0, this.angledSplitBias = 0, this.aboveGround = true;
  }
};
e([y2()], e49.prototype, "fovX", void 0), e([y2()], e49.prototype, "fovY", void 0), e([y2()], e49.prototype, "relativeWidthLimit", void 0), e([y2()], e49.prototype, "relativeHeightLimit", void 0), e([y2()], e49.prototype, "maxLod", void 0), e([y2()], e49.prototype, "angledSplitBias", void 0), e([y2()], e49.prototype, "aboveGround", void 0), e([y2()], e49.prototype, "frustum", void 0), e49 = e([a4("esri.views.3d.terrain.SplitLimits")], e49);

// node_modules/@arcgis/core/views/3d/terrain/BlendModeTechniqueConfiguration.js
var s57 = class extends t18 {
  constructor() {
    super(...arguments), this.blendMode = t30.Normal;
  }
};
e([r25({ count: t30.COUNT })], s57.prototype, "blendMode", void 0);

// node_modules/@arcgis/core/views/3d/terrain/TileBlendTechniqueConfiguration.js
var p42 = class extends s57 {
  constructor() {
    super(...arguments), this.output = u13.Composite, this.baseOpacityMode = n35.NotRequired, this.premultipliedSource = d18.Off;
  }
};
e([r25({ count: u13.COUNT })], p42.prototype, "output", void 0), e([r25({ count: n35.COUNT })], p42.prototype, "baseOpacityMode", void 0), e([r25()], p42.prototype, "premultipliedSource", void 0);

// node_modules/@arcgis/core/views/3d/terrain/BlendLayersTechnique.js
var b22 = class extends i23 {
  constructor() {
    super(...arguments), this.opacity = 1, this.baseOpacity = 1, this.texture = null, this.fboTexture = null, this.backgroundColor = f2;
  }
};
var p43 = class _p extends e22 {
  initializeProgram(e65) {
    return new i13(e65.rctx, _p.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return W3({ blending: s23(R4.ONE, R4.ONE_MINUS_SRC_ALPHA), colorWrite: _6 });
  }
};
p43.shader = new t16(u16, () => import("./BlendLayers.glsl-ZMVFRSUM.js"));
var f41 = class extends p42 {
  constructor() {
    super(...arguments), this.background = l23.BelowLayer;
  }
};
e([r25()], f41.prototype, "background", void 0);

// node_modules/@arcgis/core/views/3d/terrain/TextureReference.js
var e50 = class {
  constructor(e65, f49, o61, r62, c58, i60) {
    this.texture = e65, this.type = f49, e65.retain(), this.offsetAndScale = r11(o61.offset[0], o61.offset[1], o61.scale, o61.scale), this.opacities = r4(r62, c58, i60);
  }
  destroy() {
    this.texture.release();
  }
};

// node_modules/@arcgis/core/views/2d/engine/vectorTiles/VectorTileRendererHelper3D.js
var l53 = 0.125;
var n62 = class {
  constructor() {
    this._renderParams = { context: null, drawPhase: 1, state: new U8({ viewpoint: new l17({ targetGeometry: new x4(0, 0), scale: 1, rotation: 0 }), size: [256, 256] }), stationary: true, pixelRatio: 1, displayLevel: -1, requiredLevel: -1, globalOpacity: 1, renderPass: "background", styleLayer: null, styleLayerUID: -1, painter: null, glyphMosaic: null, spriteMosaic: null, profiler: null, renderingOptions: null, requestRender: null, allowDelayedRender: false, deltaTime: -1, timeline: null, time: 0, hasClipping: false, blendMode: null, dataUploadCounter: 0, effects: null, inFadeTransition: false, requireFBO: false, highlightGradient: null };
  }
  dispose() {
    this._renderParams = null;
  }
  render(e65, t68, r62, i60, l63, n77, s69, a67, o61, d52, p54) {
    this._render(e65, t68, r62, i60, l63, n77, s69, a67, o61, d52, p54);
  }
  renderSymbols(e65, t68, i60, l63, n77, s69, a67, o61, d52, p54, u51) {
    this._render(e65, t68, i60, l63, n77, s69, a67, o61, d52, p54, u51, a16.SYMBOL);
  }
  _render(e65, t68, r62, i60, n77, s69, a67, o61, d52, p54, u51, c58) {
    const m44 = t68[0] - s69.getLevelShift(t68[0]), y32 = this._renderParams;
    y32.context = e65, y32.painter = i60, y32.glyphMosaic = i60.glyphMosaic, y32.spriteMosaic = i60.spriteMosaic, y32.pixelRatio = p54 * u51, y32.displayLevel = m44, y32.requiredLevel = m44;
    const g36 = s69.getScale(t68[0]), [h46, f49] = s69.getOffset(t68, a67 * g36), w29 = l53 * a67 * g36 / d52, L25 = r62.transforms.dvs;
    L25[0] = w29, L25[4] = -w29, L25[6] = -1 - h46 - o61[0] * a67 * 2, L25[7] = 1 + f49 + (1 - o61[1]) * a67 * 2 - 2, y32.state.size[0] = d52 / u51, y32.state.size[1] = d52 / u51, y32.state.pixelRatio = u51, r62.stage || r62.attachWithContext(e65), r62.triangleCount = 0, i60.drawTile(y32, r62, n77, c58);
  }
};

// node_modules/@arcgis/core/views/3d/terrain/RasterColorizerTechnique.js
var u40 = class _u extends e22 {
  initializeProgram(e65) {
    return new i13(e65.rctx, _u.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return W3({ blending: s23(R4.ONE, R4.ONE_MINUS_SRC_ALPHA), colorWrite: _6 });
  }
};
u40.shader = new t16(z8, () => import("./RasterColorizer.glsl-XXRNN5Y3.js"));
var d46 = class extends p42 {
  constructor() {
    super(...arguments), this.colorizerType = t29.Stretch, this.stretchType = e26.Noop, this.applyColormap = true, this.requireBilinearWithNN = false;
  }
};
e([r25({ count: t29.COUNT })], d46.prototype, "colorizerType", void 0), e([r25({ count: e26.COUNT })], d46.prototype, "stretchType", void 0), e([r25()], d46.prototype, "applyColormap", void 0), e([r25()], d46.prototype, "requireBilinearWithNN", void 0);

// node_modules/@arcgis/core/views/3d/terrain/support/MultiSizeFramebuffer.js
var o51 = class {
  constructor(e65) {
    this._rctx = e65, this._fbos = /* @__PURE__ */ new Map();
  }
  get(e65) {
    return this._getPool(e65);
  }
  dispose() {
    this._fbos.forEach((e65) => e65.dispose()), this._fbos.clear();
  }
  _getPool(o61) {
    const i60 = this._fbos.get(o61);
    if (i60)
      return i60;
    const f49 = new x11(this._rctx, new e20(o61), new i15(B2.DEPTH_COMPONENT16, o61));
    return this._fbos.set(o61, f49), f49;
  }
};

// node_modules/@arcgis/core/views/3d/terrain/TileCompositor.js
var O22 = s3.getLogger("esri.views.3d.terrain");
var I24 = class {
  constructor(e65, t68) {
    this._rctx = e65, this._techniqueRepository = t68, this._fbos = [], this._vectorTileHelper = new n62(), this._bindParameters = new o27(null, null, null), this._blendLayersTechniqueConfig = new f41(), this._current = 0, this._lastUsedIds = new Array(), this._lastCreatedBufferId = 0, this._onHoldIds = new Array(), this._vaoQuad = f14(this._rctx, A9);
  }
  dispose() {
    this._fbos.forEach(t2), this._fbos = null, this._vtFBO = t2(this._vtFBO), this._vaoQuad = t2(this._vaoQuad), this._vectorTileHelper = t2(this._vectorTileHelper), this._backgroundTechnique = f(this._backgroundTechnique), this._applyOpacityTechnique = f(this._applyOpacityTechnique), this._blendLayersTechnique = f(this._blendLayersTechnique);
  }
  _getBlendLayersTechnique(e65, t68, r62, i60 = d18.Off, s69 = l23.BelowLayer) {
    return this._blendLayersTechniqueConfig.output = t68, this._blendLayersTechniqueConfig.blendMode = e65, this._blendLayersTechniqueConfig.baseOpacityMode = r62, this._blendLayersTechniqueConfig.premultipliedSource = i60, this._blendLayersTechniqueConfig.background = s69, this._blendLayersTechnique = this._techniqueRepository.releaseAndAcquire(p43, this._blendLayersTechniqueConfig, this._blendLayersTechnique), this._blendLayersTechnique;
  }
  drawBackground(e65, t68) {
    const r62 = this._getBlendLayersTechnique(t30.Normal, t68 ? u13.ColorComposite : u13.GridComposite, n35.NotRequired, d18.Off, l23.Only), i60 = this._rctx.bindTechnique(r62, e65, this._bindParameters);
    this._render(i60);
  }
  _render(e65) {
    this._rctx.bindVAO(this._vaoQuad), e65.assertCompatibleVertexAttributeLocations(this._vaoQuad), this._rctx.drawArrays(E5.TRIANGLE_STRIP, 0, n20(this._vaoQuad, "geometry"));
  }
  drawGroup(e65, t68, r62, i60, s69, o61 = d18.On) {
    t68 === u13.Composite && (e65.fboTexture = this._fbos[this.getLastOnHoldId()].get(r62).colorTexture), e65.texture = this.currentFBO(r62).colorTexture, this.closeGroup(r62);
    const n77 = this._getBlendLayersTechnique(i60, t68, s69, o61), a67 = this._rctx.bindTechnique(n77, e65, this._bindParameters);
    this._render(a67);
  }
  drawRasterData(e65, t68, r62, i60, s69, o61 = d18.Off) {
    if (null == e65.texture)
      return;
    e65.fboTexture = t68 === u13.GroupBackgroundComposite || i60 === t30.Normal && s69 === n35.NotRequired && o61 === d18.Off ? null : this.switch(r62).colorTexture;
    const n77 = this._getBlendLayersTechnique(i60, t68, s69, o61), a67 = this._rctx.bindTechnique(n77, e65, this._bindParameters);
    this._render(a67);
  }
  drawImageryTileData(e65, t68, r62, i60, s69, o61) {
    const n77 = o61.sourceLayerInfo.data;
    if (!n77.source)
      return;
    if (o61.tile.surface.layerViewByIndex(o61.layerIndex, A27.MAP).ensureSymbolizerParameters(n77), !n77.bind(this._rctx))
      return;
    e65.fboTexture = i60 === t30.Normal && s69 === n35.NotRequired ? null : this.switch(r62).colorTexture;
    const a67 = this._getRasterColorizerTechnique(n77, t68, i60, s69);
    n77.opacity = e65.opacity;
    const h46 = n77.getUniforms();
    h46.scale = o61.scale, h46.offset = o61.offset, h46.backgroundColor = e65.backgroundColor, h46.fboTexture = e65.fboTexture, h46.baseOpacity = e65.baseOpacity;
    const u51 = this._rctx.bindTechnique(a67, h46, null);
    this._render(u51);
  }
  _getRasterColorizerTechnique(e65, t68, r62, i60) {
    const o61 = e65.symbolizerParameters, n77 = ["stretch", "lut", "hillshade"].indexOf(o61.type);
    return null == this._rasterColorizerConfig && (this._rasterColorizerConfig = new d46(), this._rctx.gl.getExtension("WEBGL_color_buffer_float"), this._rctx.gl.getExtension("OES_texture_float")), this._rasterColorizerConfig.output = t68, this._rasterColorizerConfig.blendMode = r62, this._rasterColorizerConfig.baseOpacityMode = i60, this._rasterColorizerConfig.colorizerType = n77, this._rasterColorizerConfig.applyColormap = !!o61.colormap, this._rasterColorizerConfig.requireBilinearWithNN = e65.isBilinearWithStretchColorRamp, this._rasterColorizerConfig.stretchType = e65.hasStretchTypeNone() ? e26.Noop : e26.PerBand, this._rasterColorizerTechnique = this._techniqueRepository.releaseAndAcquire(u40, this._rasterColorizerConfig, this._rasterColorizerTechnique), this._rasterColorizerTechnique;
  }
  drawVectorData(e65, t68, r62, s69, o61, n77, a67, h46, u51) {
    const b26 = this._rctx, g36 = n77.sourceLayerInfo.data, m44 = n77.tile.surface.layerViewByIndex(n77.layerIndex, A27.MAP), T29 = o61 === n35.Required || e65.opacity < 1 || s69 !== t30.Normal || t68 !== u13.Composite, y32 = T29 ? d18.On : d18.Off;
    this._getBlendLayersTechnique(s69, t68, o61, y32).bindPipelineState(b26);
    let C26 = null, B20 = null;
    T29 ? (B20 = this.currentFBO(r62), null == this._vtFBO && (this._vtFBO = new o51(this._rctx)), C26 = this._vtFBO.get(r62), b26.bindFramebuffer(C26), this._clearCurrentFBO()) : u51 && b26.clearSafe(_3.DEPTH_BUFFER_BIT);
    try {
      this._vectorTileHelper.render(b26, n77.sourceLod, g36, m44.painter, m44.layer.styleRepository, m44.schemaHelper, Math.round(1 / n77.scale), n77.offset, h46, a67, m44.contentZoom), n77.vtlNeighborInfos.forAll((e66) => this._vectorTileHelper.renderSymbols(b26, e66.sourceLod, e66.sourceLayerInfo.data, m44.painter, m44.layer.styleRepository, m44.schemaHelper, 1, e66.offset, h46, a67, m44.contentZoom));
    } catch (q19) {
      O22.warnOnce("A render call containing vector tiles did not resolve correctly.", q19);
    }
    return null == C26 || (b26.bindFramebuffer(B20), e65.texture = C26.colorTexture, e65.offset = f8, e65.scale = 1, this.drawRasterData(e65, t68, r62, s69, o61, y32), u51);
  }
  copyFBOToTexture(e65) {
    const t68 = this._rctx, r62 = t68.bindTexture(e65.texture, T8.TEXTURE_UNIT_FOR_UPDATES), i60 = e65.descriptor;
    t68.gl.copyTexImage2D(M4.TEXTURE_2D, 0, i60.pixelFormat, 0, 0, i60.width, i60.height, 0), e65.generateMipmap(), t68.bindTexture(r62, T8.TEXTURE_UNIT_FOR_UPDATES);
  }
  _clearCurrentFBO() {
    this._rctx.setClearColor(0, 0, 0, 0), this._rctx.setClearDepth(1), this._rctx.clearSafe(_3.COLOR_BUFFER_BIT | _3.DEPTH_BUFFER_BIT);
  }
  _initFBO(e65, t68, r62) {
    this._rctx.bindFramebuffer(e65), r62 && (this._rctx.setViewport(0, 0, t68, t68), this._clearCurrentFBO());
  }
  ensureBuffer(e65) {
    this._lastUsedIds.length = 0, this._lastUsedIds.push(1), this._lastCreatedBufferId = 1, this._onHoldIds.length = 0, this.bind(e65);
  }
  bind(e65, t68 = 0, r62 = true) {
    if (this._current = t68, t68 >= this._fbos.length)
      for (let i60 = this._fbos.length; i60 <= t68; i60++)
        this._fbos.push(new o51(this._rctx));
    this._initFBO(this._fbos[t68].get(e65), e65, r62);
  }
  _bindNextFreeBuffer(e65) {
    this._lastUsedIds.length > 0 ? this.bind(e65, this._lastUsedIds.pop()) : (this._lastCreatedBufferId++, this.bind(e65, this._lastCreatedBufferId));
  }
  openGroup(e65) {
    this._onHoldIds.push(this._current), this._bindNextFreeBuffer(e65);
  }
  switch(e65) {
    const t68 = this.currentFBO(e65), r62 = this._current;
    return this._bindNextFreeBuffer(e65), this._lastUsedIds.push(r62), t68;
  }
  getLastOnHoldId() {
    return this._onHoldIds[this._onHoldIds.length - 1];
  }
  closeGroup(e65) {
    const t68 = this._current;
    this._bindNextFreeBuffer(e65), this._lastUsedIds.push(t68), this._lastUsedIds.push(this._onHoldIds.pop());
  }
  unbind() {
    this._rctx.bindFramebuffer(null);
  }
  currentFBO(e65) {
    return this._fbos[this._current].get(e65);
  }
};

// node_modules/@arcgis/core/views/3d/terrain/TileRenderInfo.js
var s58 = class {
  constructor() {
    this.sourceLod = [0, 0, 0], this.offset = [0, 0], this.scale = 1, this.layerIndex = 0, this.vtlNeighborInfos = new l2({ allocator: (o61) => o61 || new t59() });
  }
};
var t59 = class {
  constructor() {
    this.sourceLayerInfo = null, this.sourceLod = [0, 0, 0], this.offset = [-1, 0];
  }
};

// node_modules/@arcgis/core/views/3d/terrain/TileRenderer.js
var N15 = class {
  constructor(e65, t68, r62, s69) {
    this.start = e65, this.end = t68, this.blendMode = r62, this.opacity = s69;
  }
};
var C23 = class {
  constructor(e65, t68, r62) {
    this._rctx = e65, this.tileSize = t68, this._techniqueRepository = r62, this._passParameters = new b22(), this._backgroundTexture = null, this._backgroundColor = null, this._backgroundDirty = false, this._blackTex = null, this._maxAnisotropy = this._rctx.parameters.maxMaxAnisotropy, this._composition = new I24(this._rctx, this._techniqueRepository), this._blackTex = new t57(c13(this._rctx, [0, 0, 0, 1])), this._ensureBackgroundTexture(this.tileSize);
  }
  dispose() {
    this._composition = t2(this._composition), this._backgroundTexture = f(this._backgroundTexture), this._blackTex = f(this._blackTex);
  }
  get backgroundIsGrid() {
    return null == this._backgroundColor;
  }
  get backgroundColor() {
    return this._backgroundColor;
  }
  updateTileTexture(e65, t68) {
    if (!e65.renderData)
      return;
    const r62 = e65.surface, s69 = r62.baseOpacity;
    let o61 = 0, n77 = 0, u51 = this.tileSize, c58 = false;
    const l63 = r62.view.state.contentPixelRatio;
    let m44 = false;
    z19.clear(), H22.length = 0;
    const _33 = e65.layerInfo[A27.MAP];
    let f49 = _33.length, T29 = 0, y32 = null;
    for (; T29 < _33.length; T29++) {
      const t69 = r62.layerViewByIndex(T29, A27.MAP), g37 = t69.layer.opacity;
      F24[T29] = g37;
      const b26 = t69.fullOpacity;
      if (q17[T29] = b26, y4(t69.layer) && f49 >= _33.length && (f49 = T29), U6(t69)) {
        v33[T29] = t69.layer.blendMode;
        let e66 = "normal" !== t69.layer.blendMode;
        if (a11(t69.layer.parent)) {
          const r63 = U21(t69.layer.parent);
          null != r63 && "" !== r63 && (e66 = B16(t69.layer.parent) || e66);
        }
        e66 && (m44 = e66, c58 = false);
      }
      if (0 === g37 && !m44) {
        _33[T29].pendingUpdates &= ~(E33.TEXTURE_NOFADING & E33.TEXTURE_FADING);
        continue;
      }
      ++n77;
      const x34 = S21(e65, T29);
      if (x34) {
        if (_33[T29].pendingUpdates &= ~(E33.TEXTURE_NOFADING & E33.TEXTURE_FADING), a11(t69.layer.parent)) {
          const e66 = U21(t69.layer.parent);
          null != e66 && "" !== e66 && G17(t69.layer.parent, T29);
        }
        _9(t69) ? u51 = Math.max(u51, this.tileSize * l63) : 1 === s69 && 1 === b26 && (t69.isOpaque || this._dataToTexture(x34) && x34.sourceLayerInfo.data.descriptor.isOpaque) && (c58 = true), ++o61, null === y32 && (y32 = T29);
      }
    }
    const g36 = u51 / this.tileSize;
    this._ensureBackgroundTexture(this.tileSize), 0 !== o61 && null !== y32 ? 1 === o61 && !m44 && this._useLayerTexture(e65, y32, f49, q17[y32]) || this._composeMapLayers(e65, t68, T29 - 1, f49, F24, v33, u51, g36, !c58 || m44, z19, m44) : this._useBackgroundTexture(e65, n77);
  }
  _ensureBackgroundTexture(e65) {
    null == this._backgroundTexture && (this._backgroundTexture = this._buildTexture(e65), this._backgroundDirty = true), this._backgroundDirty && (this._composition.bind(e65), this._passParameters.offset = f8, this._passParameters.scale = 1, this._passParameters.opacity = 1, null != this.backgroundColor && (this._passParameters.backgroundColor = this.backgroundColor), this._composition.drawBackground(this._passParameters, null != this.backgroundColor), this._composition.copyFBOToTexture(this._backgroundTexture), this._composition.unbind(), this._backgroundDirty = false);
  }
  _useBackgroundTexture(e65, t68) {
    let r62 = n60.Immediate;
    (e65.surface.view.layerViewManager.updating || t68 > 0) && (r62 = n60.Delayed);
    const s69 = e65.renderData;
    this._backgroundTexture && null == s69.textureReference && (r62 = n60.Immediate), s69.setTextureReference(null != this._backgroundTexture ? new e50(this._backgroundTexture, r24.FADING, V12, e65.surface.baseOpacity, 0, 1) : null, r62);
  }
  _useLayerTexture(e65, t68, r62, s69) {
    const o61 = t68 < r62, a67 = o61 ? 1 : e65.surface.baseOpacity, i60 = o61 ? e65.surface.baseOpacity : 1, n77 = S21(e65, t68);
    return !!this._dataToTexture(n77) && (e65.renderData.setTextureReference(new e50(n77.sourceLayerInfo.data, r24.FADING, n77, a67, i60, s69)), true);
  }
  _composeMapLayers(e65, t68, r62, s69, a67, i60, n77, u51, c58, l63, p54) {
    this._composition.ensureBuffer(n77);
    const h46 = e65.surface.baseOpacity;
    let d52 = false, f49 = L.LINEAR_MIPMAP_LINEAR, T29 = false, y32 = 0;
    for (let b26 = r62; b26 >= 0; b26--) {
      const t69 = S21(e65, b26);
      if (!t69)
        continue;
      if (0 === a67[b26] && !p54)
        continue;
      const r63 = b26 < s69 && h46 < 1 && !d52;
      this._passParameters.baseOpacity = r63 ? h46 : 1;
      const g37 = this._passParameters.baseOpacity < 1 ? n35.Required : n35.NotRequired;
      r63 && (d52 = true);
      let x35 = false;
      l63.forEach((e66) => {
        e66.start === b26 && (H22.push(e66), this._composition.openGroup(n77), x35 = true);
      });
      const k24 = 0 === y32, w29 = x35 ? u13.GroupBackgroundComposite : c58 && k24 ? this.backgroundIsGrid ? u13.GridComposite : u13.ColorComposite : u13.Composite, I28 = e27[i60[b26]];
      for (A11(t69) ? (this._passParameters.opacity = a67[b26], T29 = this._composition.drawVectorData(this._passParameters, w29, n77, I28, g37, t69, u51, this.tileSize, T29)) : x12(t69) ? (this._passParameters.opacity = a67[b26], this._composition.drawImageryTileData(this._passParameters, w29, n77, I28, g37, t69), this._hasNearestInterpolation(t69) && (f49 = L.NEAREST)) : this._dataToTexture(t69) && (this._passParameters.texture = t69.sourceLayerInfo.data.texture, this._passParameters.offset = t69.offset, this._passParameters.scale = t69.scale, this._passParameters.opacity = a67[b26], this._composition.drawRasterData(this._passParameters, w29, n77, I28, g37)); H22.length > 0 && H22[H22.length - 1].end === b26; ) {
        const e66 = H22.pop();
        this._passParameters.opacity = e66.opacity, this._passParameters.offset = f8, this._passParameters.scale = 1;
        const t70 = c58 && k24 ? this.backgroundIsGrid ? u13.GridComposite : u13.ColorComposite : u13.Composite;
        this._composition.drawGroup(this._passParameters, t70, n77, e27[e66.blendMode], g37);
      }
      y32++;
    }
    const g36 = e65.renderData, x34 = g36.ensureTexture(n77, () => this._buildTexture(n77, f49));
    this._composition.copyFBOToTexture(x34), this._composition.unbind(), g36.setTextureReference(new e50(x34, t68, V12, d52 ? 1 : h46, 0, 1));
  }
  _hasNearestInterpolation(e65) {
    const t68 = e65.sourceLayerInfo.data;
    return !!t68.source && "nearest" === t68.interpolation;
  }
  _dataToTexture(e65) {
    if (h15(e65)) {
      const t68 = e65.sourceLayerInfo;
      t68.data = this._buildTexture(t68.data), e65.tile.setMemoryDirty();
    }
    return g9(e65);
  }
  setBackground(e65) {
    this._backgroundColor !== e65 && (this._backgroundColor = e65, this._backgroundDirty = true);
  }
  _buildTexture(e65, t68 = L.LINEAR_MIPMAP_LINEAR) {
    if (null == e65)
      return null;
    const r62 = new e20();
    r62.wrapMode = D2.CLAMP_TO_EDGE, r62.samplingMode = t68, r62.maxAnisotropy = this._maxAnisotropy, r62.preMultiplyAlpha = true, r62.flipped = true, r62.hasMipmap = true;
    const s69 = this._rctx;
    let o61;
    if ("number" == typeof e65)
      r62.width = r62.height = e65, o61 = new t57(new T8(s69, r62));
    else if (e65 instanceof A10)
      r62.isOpaque = e65.isOpaque, o61 = new t57(new T8(s69, r62, e65.image)), e65.release();
    else
      try {
        r62.width = e65.width, r62.height = e65.height, o61 = new t57(new T8(s69, r62, e65));
      } catch (i60) {
        o61 = new t57(l16(s69)), console.warn("TileRenderer: failed to execute 'texImage2D', cross-origin image may not be loaded.");
      }
    const a67 = s69.bindTexture(o61.texture, T8.TEXTURE_UNIT_FOR_UPDATES);
    return o61.generateMipmap(), s69.bindTexture(a67, T8.TEXTURE_UNIT_FOR_UPDATES), o61;
  }
  get test() {
    return { backgroundTexture: this._backgroundTexture };
  }
};
function S21(e65, t68) {
  X11.layerIndex = t68, X11.vtlNeighborInfos.clear();
  const o61 = e65.layerInfo[A27.MAP][t68];
  if (o61.data)
    return r13(X11.offset, 0, 0), X11.tile = e65, X11.scale = 1, X11.sourceLod = e65.lij, X11.sourceLayerInfo = o61, A11(X11) && e65.forEachLoadedNeighbor((r62, s69) => {
      if (r62.level !== e65.level)
        return;
      const a68 = r62.layerInfo[A27.MAP][t68];
      if (!L5(a68) || o61.data === a68.data)
        return;
      const i60 = X11.vtlNeighborInfos.pushNew();
      i60.offset = W13[s69], i60.sourceLod = r62.lij, i60.sourceLayerInfo = a68;
    }), X11;
  const a67 = o61.upsampleInfo;
  if (a67) {
    const e66 = a67.tile.layerInfo[A27.MAP][t68];
    return X11.tile = a67.tile, a12(X11.offset, a67.offset), X11.scale = a67.scale, X11.sourceLod = a67.tile.lij, X11.sourceLayerInfo = e66, X11;
  }
  return null;
}
function U21(e65) {
  return e65.get("uid");
}
function B16(e65) {
  let t68 = "normal" !== e65.blendMode;
  return a11(e65.parent) && (t68 = B16(e65.parent) || t68), t68;
}
function G17(e65, t68) {
  a11(e65.parent) && G17(e65.parent, t68);
  const r62 = U21(e65);
  if (null != r62 && "" !== r62) {
    const s69 = z19.get(r62);
    s69 ? s69.start = t68 : z19.set(r62, new N15(t68, t68, e65.blendMode, e65.opacity));
  }
}
var F24 = new Array();
var q17 = new Array();
var v33 = new Array();
var z19 = /* @__PURE__ */ new Map();
var H22 = new Array();
var X11 = new s58();
var V12 = { offset: [0, 0], scale: 1 };
var W13 = new Array();
W13[S8.NORTH] = [0, -1], W13[S8.NORTH_EAST] = [-1, -1], W13[S8.EAST] = [-1, 0], W13[S8.SOUTH_EAST] = [-1, 1], W13[S8.SOUTH] = [0, 1], W13[S8.SOUTH_WEST] = [1, 1], W13[S8.WEST] = [1, 0], W13[S8.NORTH_WEST] = [1, -1];

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/ComponentIntersectionData.js
var s59 = 200;
var o52 = 40;
var a55 = 0.8;
var c48 = 10;
var h39 = 1e-6;
function f42(t68, e65, i60) {
  const n77 = e65, r62 = i60;
  let s69 = 0, o61 = 1 / 0;
  for (let a67 = 0; a67 < 3; ++a67) {
    {
      const e66 = t68[a67];
      if (n77[a67] < e66) {
        if (r62[a67] <= h39)
          return false;
        const t69 = (e66 - n77[a67]) / r62[a67];
        s69 = Math.max(s69, t69);
      } else if (r62[a67] <= -h39) {
        const t69 = (e66 - n77[a67]) / r62[a67];
        o61 = Math.min(o61, t69);
      }
      if (s69 > o61)
        return false;
    }
    {
      const e66 = t68[a67 + 3];
      if (n77[a67] > e66) {
        if (r62[a67] >= -h39)
          return false;
        const t69 = (e66 - n77[a67]) / r62[a67];
        s69 = Math.max(s69, t69);
      } else if (r62[a67] >= h39) {
        const t69 = (e66 - n77[a67]) / r62[a67];
        o61 = Math.min(o61, t69);
      }
      if (s69 > o61)
        return false;
    }
  }
  return true;
}
var l54 = class {
  constructor(t68, e65, i60, n77, r62) {
    this.aabb = t68, this.axis = e65, this.d = i60, this.midStartIndex = n77, this.rightStartIndex = r62;
  }
};
var d47 = class _d {
  constructor(i60, n77, r62, s69) {
    this.globalTriangleVertexIndices = i60, this.firstTriangleIndex = n77, this.positionAttribute = s69, this._rayDirection = n7(), this.bspNodeTree = new Array();
    const h46 = r62 - n77, f49 = h46 <= I25 ? new Uint16Array(h46) : new Uint32Array(h46);
    this.indices = f49;
    for (let t68 = 0; t68 < h46; ++t68)
      f49[t68] = t68;
    {
      const e65 = b23(i60, n77, r62, s69.data, s69.stride), d52 = i3(Math.log2(h46 / o52), 2, c48), u51 = (t68, i61, n78) => {
        const r63 = y28(f49, e65, t68, i61), s70 = i61 - t68;
        if (s70 <= o52) {
          const e66 = new l54(r63, void 0, 0, t68, i61);
          return this.bspNodeTree.push(e66), e66;
        }
        const { axis: c58, midValue: h47 } = N16(r63), m44 = x30(f49, e65, t68, i61, c58, h47), g36 = (t69, e66) => {
          if (n78 > d52)
            return;
          const i62 = e66 - t69;
          return i62 < o52 || i62 >= a55 * s70 ? void 0 : u51(t69, e66, n78 + 1);
        }, b26 = new l54(r63, c58, h47, m44.next, m44.mid);
        return this.bspNodeTree.push(b26), b26.leftNode = g36(t68, m44.next), b26.rightNode = g36(m44.mid, i61), b26;
      };
      u51(0, h46, 0), this.triangleVertexIndices = p44(f49, i60, n77, r62);
    }
  }
  intersectRayTriangleRange(t68, e65) {
    {
      if (t68 >= e65)
        return;
      const i60 = this.triangleVertexIndices, n77 = this.positionAttribute.data, s69 = this.positionAttribute.stride, o61 = this._rayOrigin, a67 = o61[0], c58 = o61[1], h46 = o61[2], f49 = this._rayDirection, l63 = f49[0], d52 = f49[1], m44 = f49[2];
      for (let g36 = t68, x34 = 3 * t68; g36 < e65; ++g36) {
        let t69 = i60[x34++] * s69;
        const e66 = n77[t69++], o62 = n77[t69++], f50 = n77[t69];
        t69 = i60[x34++] * s69;
        const y32 = n77[t69++], N19 = n77[t69++], b26 = n77[t69];
        t69 = i60[x34++] * s69;
        const p54 = y32 - e66, I28 = N19 - o62, T29 = b26 - f50, M22 = n77[t69++] - e66, R21 = n77[t69++] - o62, S25 = n77[t69] - f50, A33 = d52 * S25 - R21 * m44, _33 = m44 * M22 - S25 * l63, w29 = l63 * R21 - M22 * d52, V15 = p54 * A33 + I28 * _33 + T29 * w29;
        if (Math.abs(V15) <= Number.EPSILON)
          continue;
        const U23 = a67 - e66, B20 = c58 - o62, v37 = h46 - f50, P26 = U23 * A33 + B20 * _33 + v37 * w29;
        if (V15 > 0) {
          if (P26 < 0 || P26 > V15)
            continue;
        } else if (P26 > 0 || P26 < V15)
          continue;
        const j25 = B20 * T29 - I28 * v37, D19 = v37 * p54 - T29 * U23, F29 = U23 * I28 - p54 * B20, O26 = l63 * j25 + d52 * D19 + m44 * F29;
        if (V15 > 0) {
          if (O26 < 0 || P26 + O26 > V15)
            continue;
        } else if (O26 > 0 || P26 + O26 < V15)
          continue;
        const k24 = (M22 * j25 + R21 * D19 + S25 * F29) / V15;
        if (k24 >= 0) {
          const t70 = this.indices[g36] + this.firstTriangleIndex, e67 = v7(p54, I28, T29, M22, R21, S25, u41);
          this._callback(k24, e67, t70, false);
        }
      }
    }
    _d.numFacesTested += e65 - t68;
  }
  intersectRay(t68, e65) {
    _d.numFacesTested = 0;
    const n77 = r4(t68.r0[0], t68.r0[1], t68.r0[2]), r62 = r4(t68.r1[0], t68.r1[1], t68.r1[2]), s69 = r62[0] - n77[0], o61 = r62[1] - n77[1], a67 = r62[2] - n77[2];
    if (s69 * s69 + o61 * o61 + a67 * a67 < h39)
      return;
    this._rayOrigin = n77;
    const c58 = this._rayDirection;
    c58[0] = s69, c58[1] = o61, c58[2] = a67;
    const f49 = this.triangleVertexIndices.length / 3;
    this._callback = e65;
    const l63 = this.bspNodeTree[0];
    this.intersectRayBSP(l63, 0, f49);
  }
  intersectRayBSP(t68, e65, i60) {
    const n77 = this._rayOrigin, r62 = this._rayDirection;
    if (!f42(t68.aabb, n77, r62))
      return;
    const s69 = t68.axis, o61 = t68.d;
    if (n77[s69] < o61 || r62[s69] < 0) {
      const i61 = e65, n78 = t68.midStartIndex;
      if (i61 < n78) {
        const e66 = t68.leftNode;
        void 0 !== e66 ? this.intersectRayBSP(e66, i61, n78) : this.intersectRayTriangleRange(i61, n78);
      }
    }
    if (this.intersectRayTriangleRange(t68.midStartIndex, t68.rightStartIndex), n77[s69] > o61 || r62[s69] > 0) {
      const e66 = t68.rightStartIndex, n78 = i60;
      if (e66 < n78) {
        const i61 = t68.rightNode;
        void 0 !== i61 ? this.intersectRayBSP(i61, e66, n78) : this.intersectRayTriangleRange(e66, n78);
      }
    }
  }
  get estimatedMemoryUsage() {
    return this.triangleVertexIndices.byteLength + this.indices.byteLength;
  }
};
d47.numFacesTested = 0;
var u41 = n7();
var m36 = [1 / 0, 1 / 0, 1 / 0];
var g28 = [-1 / 0, -1 / 0, -1 / 0];
function x30(t68, e65, i60, n77, r62, s69) {
  let o61 = i60, a67 = n77;
  for (; o61 < a67; ) {
    const i61 = t68[o61];
    e65[6 * i61 + r62 + 3] <= s69 ? ++o61 : (--a67, t68[o61] = t68[a67], t68[a67] = i61);
  }
  let c58 = o61;
  for (a67 = n77; c58 < a67; ) {
    const i61 = t68[a67 - 1];
    e65[6 * i61 + r62] >= s69 ? --a67 : (t68[a67 - 1] = t68[c58], t68[c58] = i61, ++c58);
  }
  return { next: o61, mid: c58 };
}
function y28(t68, e65, i60, r62) {
  if (r62 <= i60)
    return a10(NaN, NaN, NaN, NaN, NaN, NaN);
  {
    const n77 = 6 * t68[i60];
    for (let t69 = 0; t69 < 3; ++t69)
      m36[t69] = e65[n77 + 0 + t69], g28[t69] = e65[n77 + 3 + t69];
  }
  for (let n77 = i60 + 1; n77 < r62; ++n77) {
    const i61 = 6 * t68[n77];
    for (let t69 = 0; t69 < 3; ++t69)
      m36[t69] = Math.min(m36[t69], e65[i61 + 0 + t69]), g28[t69] = Math.max(g28[t69], e65[i61 + 3 + t69]);
  }
  return a10(m36[0], m36[1], m36[2], g28[0], g28[1], g28[2]);
}
function N16(t68) {
  const e65 = t68[3] - t68[0], i60 = t68[4] - t68[1], n77 = t68[5] - t68[2], r62 = e65 > i60 ? e65 > n77 ? 0 : i60 > n77 ? 1 : 2 : i60 > n77 ? 1 : n77 > e65 ? 2 : 0;
  return { axis: r62, midValue: (t68[r62] + t68[r62 + 3]) / 2 };
}
function b23(t68, e65, i60, n77, r62) {
  const s69 = i60 - e65, o61 = new Float32Array(6 * s69);
  for (let a67 = 0; a67 < s69; ++a67) {
    const i61 = 3 * (a67 + e65), s70 = t68[i61] * r62, c58 = t68[i61 + 1] * r62, h46 = t68[i61 + 2] * r62;
    for (let t69 = 0; t69 < 3; ++t69) {
      const e66 = n77[s70 + t69], i62 = n77[c58 + t69], r63 = n77[h46 + t69];
      o61[6 * a67 + t69] = Math.min(e66, i62, r63), o61[6 * a67 + 3 + t69] = Math.max(e66, i62, r63);
    }
  }
  return o61;
}
function p44(t68, e65, i60, n77) {
  const r62 = n77 - i60;
  let s69 = 0;
  for (let a67 = i60; a67 < n77; ++a67)
    for (let t69 = 0; t69 < 3; ++t69)
      s69 = Math.max(e65[3 * a67 + t69], s69);
  const o61 = s69 <= I25 ? new Uint16Array(3 * r62) : new Uint32Array(3 * r62);
  for (let a67 = 0; a67 < r62; ++a67) {
    const n78 = 3 * (t68[a67] + i60);
    for (let t69 = 0; t69 < 3; ++t69) {
      const i61 = e65[n78 + t69];
      o61[3 * a67 + t69] = i61;
    }
  }
  return o61;
}
var I25 = 65535;

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/TerrainTechniqueConfiguration.js
var d48 = class extends s25 {
  constructor() {
    super(...arguments), this.output = h10.Color, this.overlayMode = y9.Disabled, this.tileBlendInput = o37.LayerOnly, this.spherical = false, this.doublePrecisionRequiresObfuscation = false, this.receiveShadows = false, this.hasSlicePlane = false, this.backfaceCullingEnabled = false, this.textureFadingEnabled = false, this.renderOccluded = false, this.hasScreenSpaceReflections = false, this.hasCloudsReflections = false, this.invisible = false, this.tileBorders = false, this.visualizeNormals = false, this.screenSizePerspective = false, this.receiveAmbientOcclusion = false, this.pbrMode = c9.Terrain;
  }
};
e([r25({ count: h10.COUNT })], d48.prototype, "output", void 0), e([r25({ count: y9.COUNT })], d48.prototype, "overlayMode", void 0), e([r25({ count: o37.COUNT })], d48.prototype, "tileBlendInput", void 0), e([r25()], d48.prototype, "spherical", void 0), e([r25()], d48.prototype, "doublePrecisionRequiresObfuscation", void 0), e([r25()], d48.prototype, "receiveShadows", void 0), e([r25()], d48.prototype, "hasSlicePlane", void 0), e([r25()], d48.prototype, "backfaceCullingEnabled", void 0), e([r25()], d48.prototype, "textureFadingEnabled", void 0), e([r25()], d48.prototype, "renderOccluded", void 0), e([r25()], d48.prototype, "hasScreenSpaceReflections", void 0), e([r25()], d48.prototype, "hasCloudsReflections", void 0), e([r25()], d48.prototype, "invisible", void 0), e([r25()], d48.prototype, "tileBorders", void 0), e([r25()], d48.prototype, "visualizeNormals", void 0), e([r25()], d48.prototype, "screenSizePerspective", void 0), e([r25()], d48.prototype, "receiveAmbientOcclusion", void 0), e([r25({ count: c9.COUNT })], d48.prototype, "pbrMode", void 0), e([r25({ constValue: a20.Compressed })], d48.prototype, "normalType", void 0), e([r25({ constValue: d11.Compressed })], d48.prototype, "textureCoordinateType", void 0), e([r25({ constValue: false })], d48.prototype, "highStepCount", void 0), e([r25({ constValue: false })], d48.prototype, "useCustomDTRExponentForWater", void 0), e([r25({ constValue: false })], d48.prototype, "useFillLights", void 0);

// node_modules/@arcgis/core/views/3d/terrain/TerrainRenderer.js
var re6 = 7;
var ie7 = 10;
var se6 = i6();
var ne6;
!function(e65) {
  e65[e65.Opaque = 0] = "Opaque", e65[e65.Semitransparent = 1] = "Semitransparent", e65[e65.TransparentWithDraped = 2] = "TransparentWithDraped", e65[e65.Empty = 3] = "Empty";
}(ne6 || (ne6 = {}));
var oe6 = class extends m {
  get _isGlobal() {
    return this._stage.viewingMode === l13.Global;
  }
  constructor(e65) {
    super(e65), this.type = i20.TERRAIN, this.isGround = true, this._tileSize = 256, this._techniqueConfiguration = new d48(), this._passParameters = new _11(), this._rctx = null, this._renderDataPool = new e4(G15), this._patchGroups = /* @__PURE__ */ new Map(), this._patchGroupsDirty = true, this._patchSortingDirty = true, this._tileIterator = new n34(), this._highestVisibleLODTile = null, this._visible = true, this._transparencyState = ne6.Opaque, this._castShadows = true, this._emptyTex = null, this._tileRenderer = null, this._stencilEnabledLayerExtents = new Array(), this._numTilesRendered = 0, this._numTilesCulled = 0, this._numOriginsRendered = 0, this.needsHighlight = false, this.renderOccludedFlags = o19.Occlude;
  }
  initialize() {
    const e65 = [E8.OPAQUE_TERRAIN, E8.TRANSPARENT_TERRAIN, E8.OCCLUDED_TERRAIN];
    this._stage.addRenderPlugin(e65, this);
  }
  destroy() {
    this._stage.removeRenderPlugin(this), m35();
  }
  get canRender() {
    return this._visible && !!this._rootTiles && !this.renderingDisabled;
  }
  set renderingDisabled(e65) {
    this._set("renderingDisabled", !!e65), this.setDirty();
  }
  set transparency(e65) {
    this._transparencyState !== e65 && (this._techniqueConfiguration.invisible = e65 === ne6.TransparentWithDraped || e65 === ne6.Empty, this._transparencyState = e65, this.setNeedsRender());
  }
  get transparency() {
    return this._transparencyState;
  }
  get needsLinearDepth() {
    return this._overlayRenderer.hasWater;
  }
  get renderPatchBorders() {
    return !!this._techniqueConfiguration.tileBorders;
  }
  set renderPatchBorders(e65) {
    this._techniqueConfiguration.tileBorders !== e65 && (this._techniqueConfiguration.tileBorders = e65, this.setNeedsRender(), this.notifyChange("renderPatchBorders"));
  }
  get visualizeNormals() {
    return !!this._techniqueConfiguration.visualizeNormals;
  }
  set visualizeNormals(e65) {
    this._techniqueConfiguration.visualizeNormals !== e65 && (this._techniqueConfiguration.visualizeNormals = e65, this.setNeedsRender(), this.notifyChange("visualizeNormals"));
  }
  get cullBackFaces() {
    return this._techniqueConfiguration.backfaceCullingEnabled;
  }
  set cullBackFaces(e65) {
    this._techniqueConfiguration.backfaceCullingEnabled !== e65 && (this._techniqueConfiguration.backfaceCullingEnabled = e65, this.notifyChange("cullBackFaces"), this.setNeedsRender());
  }
  set renderOrder(e65) {
    this._set("renderOrder", e65), this._setSortingDirty();
  }
  get layerUid() {
    return L4;
  }
  get slicePlaneEnabled() {
    return this._techniqueConfiguration.hasSlicePlane;
  }
  set slicePlaneEnabled(e65) {
    this._techniqueConfiguration.hasSlicePlane !== e65 && (this._techniqueConfiguration.hasSlicePlane = e65, this.setNeedsRender());
  }
  set textureFadingEnabled(e65) {
    this._techniqueConfiguration.textureFadingEnabled !== e65 && (this._techniqueConfiguration.textureFadingEnabled = e65, this.setNeedsRender());
  }
  set pbrMode(e65) {
    this._techniqueConfiguration.pbrMode !== e65 && (this._techniqueConfiguration.pbrMode = e65, this.setNeedsRender());
  }
  setDebugScreenSizePerspective(e65) {
    this._techniqueConfiguration.screenSizePerspective !== e65 && (this._techniqueConfiguration.screenSizePerspective = e65, this.setNeedsRender());
  }
  setRootTiles(e65) {
    this._rootTiles = e65, this.setDirty();
  }
  setNeedsHighlight(e65) {
    this.needsHighlight = e65, this.setNeedsRender();
  }
  setRenderOccludedOverlay(e65) {
    this.renderOccludedFlags = e65 ? he : o19.Occlude, this.setNeedsRender();
  }
  setStencilEnabledLayerExtents(e65) {
    this._stencilEnabledLayerExtents = e65, this._setSortingDirty();
  }
  setTileSize(e65) {
    this._tileSize = e65, null != this._tileRenderer && (this._tileRenderer.tileSize = e65), this.setDirty();
  }
  _prepareTileForLoading(e65) {
    e65.renderData || (e65.renderData = this._renderDataPool.acquire(), e65.renderData.init(e65), e65.renderData.localOrigin = this._getLocalOriginOfTile(e65));
  }
  loadTile(e65) {
    this._prepareTileForLoading(e65), this.updateTileGeometryState(e65), this.updateTileTexture(e65, E33.TEXTURE_FADING);
  }
  updateTileTexture(e65, t68) {
    null != this._tileRenderer && (this._tileRenderer.updateTileTexture(e65, t68 === E33.TEXTURE_FADING ? r24.FADING : r24.UNFADED), this.setNeedsRender(), e65.resetPendingUpdate(t68));
  }
  updateTileGeometryState(e65) {
    for (const r62 of e65.layerInfo[A27.ELEVATION])
      r62.pendingUpdates &= ~E33.GEOMETRY;
    e65.resetPendingUpdate(E33.GEOMETRY);
    const t68 = e65.renderData.updateGeometryState();
    return t68 && this.setDirty(), t68;
  }
  updateGeometryIfNeeded(e65) {
    e65.isLoaded && e65.renderData.updateGeometryIfNeeded(this._rctx);
  }
  unloadTile(e65) {
    const t68 = e65.renderData;
    t68 && (t68.releaseGeometry(), this._renderDataPool.release(t68), t68.clear(), e65.renderData = null, e65.setMemoryDirty(), this.setDirty());
  }
  _getLocalOriginOfTile(e65) {
    const t68 = ie7 - re6, r62 = Math.max(0, Math.floor((e65.level - t68) / re6) * re6);
    if (this._isGlobal && 0 === r62)
      return f2;
    for (; e65.parent && e65.level > r62; )
      e65 = e65.parent;
    return e65.centerAtSeaLevel;
  }
  setVisibility(e65) {
    this._visible = e65, this.setDirty();
  }
  getStats() {
    return { numTilesRendered: this._numTilesRendered, numTilesCulled: this._numTilesCulled, numOriginsRendered: this._numOriginsRendered };
  }
  set wireframe(e65) {
    this._get("wireframe") !== e65 && (this._set("wireframe", e65), this.setNeedsRender());
  }
  setDirty(e65 = O4.UPDATE) {
    this._patchGroupsDirty = true, this._context.requestRender(e65);
  }
  _setSortingDirty(e65 = O4.UPDATE) {
    this._patchSortingDirty = true, this._context.requestRender(e65);
  }
  setNeedsRender(e65 = O4.UPDATE) {
    this._context.requestRender(e65);
  }
  initializeRenderContext(e65) {
    this._context = e65, this._rctx = e65.renderContext.rctx, this._techniqueRepository = e65.techniqueRepository, this._tileRenderer = new C23(this._rctx, this._tileSize, this._techniqueRepository), this.updateTileBackground(), this._emptyTex = l16(this._rctx);
  }
  uninitializeRenderContext() {
    this._emptyTex = t2(this._emptyTex), this._tileRenderer = t2(this._tileRenderer);
  }
  intersect(e65, t68, r62, i60) {
    if (!this._rootTiles || e65.options.selectOpaqueTerrainOnly && e65.options.selectionMode && this.transparency !== ne6.Opaque)
      return;
    const s69 = ae6, n77 = le6;
    e7(s69, i60, r62), o2(n77, 1 / s69[0], 1 / s69[1], 1 / s69[2]);
    const o61 = e65.results.min, u51 = e65.results.max, d52 = e65.results.ground, p54 = e65.options.store === t25.MIN, f49 = !!e65.results.ground.target, _33 = d12(e65.verticalOffset), b26 = e65.tolerance;
    let y32, T29 = p54 && null != o61.dist ? o61.dist : 1 / 0;
    const R21 = (h46) => {
      const f50 = h46.renderData;
      if (!(f50 == null ? void 0 : f50.vao))
        return;
      const R22 = f50.geometry;
      O2(se6, R22.boundingBox);
      const O27 = f50.localOrigin;
      null != _33 && (_33.localOrigin = O27, _33.applyToAabb(se6));
      const x34 = se6;
      if (he6[0] = r62[0] - O27[0], he6[1] = r62[1] - O27[1], he6[2] = r62[2] - O27[2], !O5(x34, he6, n77, b26, T29))
        return;
      const C26 = (e66, t69, r63) => {
        e66.set(this.type, h46, t69, r63, o11), T29 = p54 && null != o61.dist ? o61.dist : 1 / 0;
      }, v37 = (n78, a67) => {
        if (null != a67 && n78 >= 0 && (e65.options.backfacesTerrain || P(a67, s69) < 0) && (e65.options.invisibleTerrain || !e65.options.selectionMode || null == t68 || t68(r62, i60, n78))) {
          if ((null == d52.dist || n78 < d52.dist) && C26(d52, n78, a67), e65.options.isFiltered)
            return;
          e65.options.store === t25.ALL && (null == y32 ? (y32 = M5(e65.ray), C26(y32, n78, a67), e65.results.all.push(y32)) : n78 < y32.dist && C26(y32, n78, a67)), (null == o61.dist || n78 < o61.dist) && C26(o61, n78, a67), e65.options.store !== t25.MIN && (null == u51.dist || n78 > u51.dist) && C26(u51, n78, a67);
        }
      }, D19 = ce7;
      e7(D19, i60, O27);
      const P26 = R22.indices, S25 = R22.vertexAttributes, E39 = S25.getField(O3.POSITION, i9), q19 = new s20(E39.typedBuffer, 3, false, S25.stride / 4), A33 = R22.indexCount / 3;
      if (!_33 && A33 > s59) {
        const e66 = h46.renderData;
        null == e66.intersectionData && (e66.intersectionData = new d47(P26, 0, A33, q19)), e66.intersectionData.intersectRay({ r0: he6, r1: D19 }, v37);
      } else
        g7(he6, D19, 0, A33, P26, q19, null, _33, v37);
    }, O26 = this._rootTiles;
    if (null != O26) {
      (() => {
        const t69 = this._tileIterator;
        t69.reset(O26);
        const i61 = e65.options.invisibleTerrain;
        for (let e66 = t69.next(); e66; e66 = t69.next())
          !(e66.visible || i61 && e66.intersectsClippingArea) || null == _33 && !e66.intersectsRay(r62, s69, b26, T29) || f49 && this._useStencilForTile(e66) ? t69.skipSubtree() : R21(e66);
      })();
    }
  }
  processScaleRangeQueries(e65, t68) {
    var _a;
    if (!t68.done)
      for (this._updatePatchGroups(); e65.updating && !t68.done; ) {
        e65.prepare();
        for (const t69 of this._patchGroups.values())
          for (const r62 of t69)
            null != ((_a = r62.renderData) == null ? void 0 : _a.textureReference) && e65.queriesForTile(r62);
        e65.process(), t68.madeProgress();
      }
  }
  prepareTechnique(e65) {
    if (e65.bindParameters.slot === E8.OCCLUDED_TERRAIN) {
      if (0 == (e65.renderOccludedMask & he))
        return null;
    } else {
      const t68 = this.transparency === ne6.Opaque ? E8.OPAQUE_TERRAIN : E8.TRANSPARENT_TERRAIN;
      if (e65.bindParameters.slot !== t68)
        return null;
    }
    switch (e65.output) {
      case h10.Color:
        return this.transparency === ne6.Empty ? null : (this._techniqueConfiguration.hasScreenSpaceReflections = e65.bindParameters.ssr.enabled, this._techniqueConfiguration.hasCloudsReflections = null != e65.bindParameters.cloudsFade.data, this._techniqueConfiguration.receiveShadows = e65.bindParameters.shadowMap.ready, this._techniqueConfiguration.receiveAmbientOcclusion = e65.bindParameters.ssaoHelper.active, this._techniqueConfiguration.overlayMode = this._overlayRenderer.isEmpty ? y9.Disabled : this._overlayRenderer.hasWater ? y9.EnabledWithWater : y9.Enabled, this._updateTechnique(h10.Color, e65.bindParameters.slot === E8.OCCLUDED_TERRAIN));
      case h10.Shadow:
      case h10.ShadowExcludeHighlight:
        return this._castShadows && 1 === e65.bindParameters.lighting.globalFactor ? (this._techniqueConfiguration.receiveShadows = this._techniqueConfiguration.receiveAmbientOcclusion = false, this._updateTechnique(h10.Shadow, false)) : null;
      case h10.Depth:
        return this.transparency === ne6.Empty ? null : (this._techniqueConfiguration.receiveShadows = this._techniqueConfiguration.receiveAmbientOcclusion = false, this._updateTechnique(h10.Depth, false));
      case h10.Normal:
        return this.transparency === ne6.Empty ? null : (this._techniqueConfiguration.receiveShadows = this._techniqueConfiguration.receiveAmbientOcclusion = false, this._updateTechnique(h10.Normal, false));
      case h10.ObjectAndLayerIdColor:
        return this.transparency === ne6.Empty ? null : this._updateTechnique(h10.ObjectAndLayerIdColor, false);
      case h10.Highlight:
        return this.transparency !== ne6.Empty && this.needsHighlight ? (this._techniqueConfiguration.receiveShadows = this._techniqueConfiguration.receiveAmbientOcclusion = false, this._updateTechnique(h10.Highlight, false)) : null;
    }
    return null;
  }
  render(e65, t68) {
    const r62 = 1 === e65.bindParameters.lighting.globalFactor;
    switch (this._updatePatchGroups(), t68.useStencil = false, e65.output) {
      case h10.Color: {
        const r63 = e65.bindParameters.slot === E8.OCCLUDED_TERRAIN ? n24.Occluded : n24.ColorAndWater;
        this.transparency === ne6.Opaque ? this._renderMaterialPass(e65, t68, r63) : e65.offscreenRenderingHelper.renderToTargets(() => this._renderMaterialPass(e65, t68, r63), e65.offscreenRenderingHelper.tmpColor, e65.offscreenRenderingHelper.mainDepth, [0, 0, 0, 0]);
        break;
      }
      case h10.Depth:
      case h10.Normal:
        this._renderAuxiliaryPass(e65, t68, n24.ColorAndWater);
        break;
      case h10.Highlight:
        this.needsHighlight && this._renderAuxiliaryPass(e65, t68, n24.Highlight);
        break;
      case h10.Shadow:
      case h10.ShadowExcludeHighlight:
        this._castShadows && r62 && this._renderAuxiliaryPass(e65, t68, n24.None);
        break;
      case h10.ObjectAndLayerIdColor:
        this._renderAuxiliaryPass(e65, t68, n24.ObjectAndLayerIdColor);
    }
  }
  _renderMaterialPass(e65, t68, r62) {
    const { rctx: i60 } = e65;
    this._passParameters.overlaySource = r62, i60.bindTechnique(t68, this._passParameters, e65.bindParameters), this._numTilesRendered = 0, this._numTilesCulled = 0, this._numOriginsRendered = 0, this._renderPatchGroups(e65, t68, r62);
  }
  _renderAuxiliaryPass(e65, t68, r62) {
    const i60 = e65.rctx;
    this._passParameters.overlaySource = r62, i60.bindTechnique(t68, this._passParameters, e65.bindParameters), this._renderPatchGroupsAuxiliary(e65, t68, r62);
  }
  updateTileBackground(e65 = null) {
    if (null == this._tileRenderer)
      return;
    const r62 = this._tileRenderer;
    let i60 = null;
    if (null != e65) {
      const r63 = h6.toUnitRGBA(e65);
      i60 = r4(r63[0] || 0, r63[1] || 0, r63[2] || 0);
    }
    r62.setBackground(i60), this._allTiles.forAll((e66) => r62.updateTileTexture(e66, r24.FADING)), this._techniqueConfiguration.tileBlendInput = r62.backgroundIsGrid ? o37.GridComposite : null != r62.backgroundColor ? o37.ColorComposite : o37.LayerOnly, this.setNeedsRender();
  }
  _updatePatchGroups() {
    if (this._patchGroupsDirty && (this._highestVisibleLODTile = null, this._rebuildPatchGroups(), this._patchGroupsDirty = false, this._patchSortingDirty = true), this._patchSortingDirty && this.renderOrder !== O8.NONE) {
      const e65 = Array.from(this._patchGroups.values()), t68 = this._stencilEnabledLayerExtents;
      for (const r62 of e65)
        u11(this.renderOrder, r62, t68);
      e65.sort((e66, t69) => h16(e66[0], t69[0], this.renderOrder)), this._patchGroups = new Map(e65.map((e66) => [e66[0].renderData.localOrigin, e66])), this._patchSortingDirty = false;
    }
  }
  _rebuildPatchGroups() {
    var _a;
    const e65 = this._rootTiles;
    if (null != e65) {
      (_a = e65[0]) == null ? void 0 : _a.surface.checkAllTilesWaterproofness(), this._patchGroups.clear();
      for (const t68 of e65)
        this._rebuildPatchGroupsForRootTile(t68);
    }
  }
  _rebuildPatchGroupsForRootTile(e65) {
    const t68 = this._tileIterator;
    for (t68.resetOne(e65); !t68.done; ) {
      const e66 = t68.next(), r62 = e66.renderData;
      if (!r62) {
        this._numTilesCulled++;
        continue;
      }
      if (!e66.visible) {
        this._numTilesCulled++, t68.skipSubtree();
        continue;
      }
      const i60 = r62.localOrigin;
      let s69 = this._patchGroups.get(i60);
      s69 || (s69 = new Array(), this._patchGroups.set(i60, s69)), s69.push(e66), (!this._highestVisibleLODTile || e66.elevationLevel > this._highestVisibleLODTile.elevationLevel) && (this._highestVisibleLODTile = e66), t68.skipSubtree();
    }
  }
  _useStencilForTile(e65) {
    for (const t68 of this._stencilEnabledLayerExtents)
      if (e65.intersectsExtent(t68))
        return true;
    return false;
  }
  _renderPatchGroupsAuxiliary(e65, t68, r62) {
    const i60 = this._stencilEnabledLayerExtents.length > 0;
    this._patchGroups.forEach((s69) => {
      const n77 = s69[0].renderData.localOrigin;
      t68.program.bindDraw(new i21(n77), e65.bindParameters, this._passParameters);
      for (let o61 = 0; o61 < s69.length; o61++)
        this._renderPatch(e65, t68, s69[o61], E5.TRIANGLES, i60, r62);
    }), e65.rctx.bindVAO(null);
  }
  _renderPatchGroups(e65, t68, r62) {
    const i60 = e65.bindParameters.camera, s69 = t68.program;
    if (this._techniqueConfiguration.screenSizePerspective && this.pointsOfInterest) {
      const e66 = r22(this._stage.viewingMode, this._ellipsoidRadius), t69 = this.pointsOfInterest.centerOnSurfaceFrequent.distance;
      e66.update({ distance: t69, fovY: i60.fovY });
    }
    const n77 = this._stencilEnabledLayerExtents.length > 0, o61 = r62 === n24.Occluded;
    o61 && (s69.bindTexture("tex", this._emptyTex), s69.setUniform3fv("textureOpacities", f2), s69.setUniform4fv("texOffsetAndScale", l9));
    const a67 = null != this._tileRenderer && null != this._tileRenderer.backgroundColor ? this._tileRenderer.backgroundColor : f2;
    this._techniqueConfiguration.tileBlendInput === o37.ColorComposite && s69.setUniform3fv("backgroundColor", a67);
    const l63 = this.wireframe ? E5.LINES : E5.TRIANGLES;
    this._techniqueConfiguration.textureFadingEnabled && s69.bindTexture("texNext", this._emptyTex);
    const h46 = this._patchGroups;
    for (const c58 of h46.values()) {
      const i61 = c58[0].renderData.localOrigin;
      t68.program.bindDraw(new i21(i61), e65.bindParameters, this._passParameters), this._numOriginsRendered++;
      for (const a68 of c58) {
        const i62 = a68.renderData, h47 = i62.textureReference;
        if (null != h47) {
          if (!o61) {
            s69.setUniform4fv("texOffsetAndScale", h47.offsetAndScale), s69.bindTexture("tex", h47.texture.texture);
            const e66 = i62.textureFadeFactor, t69 = e66 < 1 ? i62.nextTextureReference : null;
            this._techniqueConfiguration.textureFadingEnabled && null != t69 && e66 < 1 ? (s69.setUniform1f("fadeFactor", e66), s69.setUniform4fv("nextTexOffsetAndScale", t69.offsetAndScale), s69.setUniform3fv("nextTexOpacities", t69.opacities), s69.bindTexture("texNext", t69.texture.texture)) : s69.setUniform1f("fadeFactor", 1), i62.textureIsFading && this.setNeedsRender(), s69.setUniform3fv("textureOpacities", h47.opacities);
          }
          this._renderPatch(e65, t68, a68, l63, n77, r62), a68.renderOrder = this._numTilesRendered, this._numTilesRendered++;
        }
      }
    }
    e65.rctx.bindVAO(null);
  }
  _renderPatch(e65, t68, r62, i60, s69, n77) {
    const o61 = r62.renderData, a67 = o61.vao, l63 = a67.indexBuffer;
    if (null == l63)
      return void (T11 && console.error("Rendered tile with no indices: ", r62.lij, " : ", o61));
    const h46 = t68.program;
    n77 === n24.None || this._overlayRenderer.isEmpty || this._bindOverlayPatchData(h46, o61.overlay), s69 && (t68.useStencil = this._useStencilForTile(r62), t68.bindPipelineState(e65.rctx, e65.bindParameters.slot));
    const c58 = o61.geometry.indexCount;
    e65.rctx.bindVAO(a67), h46.assertCompatibleVertexAttributeLocations(a67), e65.rctx.drawElements(i60, c58, l63.indexType, 0);
  }
  _bindOverlayPatchData(e65, t68) {
    e65.setUniform4fv("overlayTexOffset", t68.offsets), e65.setUniform4fv("overlayTexScale", t68.scales);
  }
  _updateTechnique(e65, t68) {
    return this._techniqueConfiguration.output = e65, this._techniqueConfiguration.renderOccluded = t68, this._shaderTechnique = this._techniqueRepository.releaseAndAcquire(g27, this._techniqueConfiguration, this._shaderTechnique), this._shaderTechnique;
  }
  get test() {
    return { tileRenderer: this._tileRenderer };
  }
};
e([y2({ constructOnly: true })], oe6.prototype, "_overlayRenderer", void 0), e([y2({ constructOnly: true })], oe6.prototype, "_stage", void 0), e([y2({ readOnly: true })], oe6.prototype, "_isGlobal", null), e([y2({ constructOnly: true })], oe6.prototype, "_allTiles", void 0), e([y2({ constructOnly: true })], oe6.prototype, "_ellipsoidRadius", void 0), e([y2({ value: false })], oe6.prototype, "renderingDisabled", null), e([y2()], oe6.prototype, "renderPatchBorders", null), e([y2()], oe6.prototype, "visualizeNormals", null), e([y2()], oe6.prototype, "cullBackFaces", null), e([y2({ value: O8.FRONT_TO_BACK })], oe6.prototype, "renderOrder", null), e([y2()], oe6.prototype, "wireframe", null), oe6 = e([a4("esri.views.3d.terrain.TerrainRenderer")], oe6);
var ae6 = n7();
var le6 = n7();
var he6 = n7();
var ce7 = n7();

// node_modules/@arcgis/core/views/3d/terrain/TerrainSurfacePerformanceInfo.js
var e51 = class {
  constructor() {
    this.numNodes = 0, this.numLeaves = 0, this.numVisible = 0, this.numRendered = 0, this.numSplit = 0, this.numMerged = 0, this.numRenderedPerLevel = new Array(), this.numLoadedPerLevel = new Array();
  }
};

// node_modules/@arcgis/core/views/3d/terrain/TilingSchemeLogic.js
var S22 = class extends m {
  constructor(e65) {
    super(e65), this._handles = new t3();
  }
  initialize() {
    this._handles.add(this.layers.on("change", () => this._update())), this._handles.add(l6(() => this.extentHelper.layerViewsExtent, () => this._setAdHocTilingScheme())), this._update(), this.tilingSchemeLocked || this._setAdHocTilingScheme();
  }
  destroy() {
    this._handles = l(this._handles), this._waitTask = null, this.layers.destroy();
  }
  _update() {
    if (this._waitTask = null, this.tilingSchemeLocked)
      return;
    let e65;
    if (this.layers.some((t68) => !(!s15(t68) || t68.isRejected()) && (!(t68.isFulfilled() && !g29(t68, this.viewSpatialReference, this.viewingMode)) && (e65 = t68, !("vector-tile" === (t68 == null ? void 0 : t68.type) || H5(t68))))), e65)
      if (e65.isResolved()) {
        const t68 = b3(e65, this.viewSpatialReference, this.viewingMode);
        if (null != t68) {
          const e66 = new v10(t68.tileInfo);
          this._lockTilingScheme(e66);
        }
      } else
        this._updateWhen(e65);
  }
  _updateWhen(e65) {
    const t68 = e65.when().catch(() => {
    }).then(() => {
      t68 !== this._waitTask || this.destroyed || this._update();
    });
    this._waitTask = t68;
  }
  _lockTilingScheme(e65) {
    if (this.viewingMode === l13.Global) {
      const t68 = e65.levels.length - 1;
      e65.spatialReference.isWebMercator ? e65 = v10.makeWebMercatorAuxiliarySphere(t68) : ce(e65.spatialReference) && (e65 = v10.makeGCSWithTileSize(e65.spatialReference, e65.pixelSize, t68));
    }
    this.tilingSchemeLocked = true, this.tilingScheme = e65, this.extentHelper.tilingScheme = this.tilingScheme, this._updateTiledLayerExtent(), this._handles.removeAll(), this._handles.add(l6(() => this.extentHelper.tiledLayersExtent, () => this._updateTiledLayerExtent()));
  }
  _updateTiledLayerExtent() {
    this._set("extent", this.extentHelper.tiledLayersExtent);
  }
  _setAdHocTilingScheme() {
    if (this.viewingMode === l13.Global) {
      const e65 = this.extentHelper.viewSpatialReference, t68 = ce(e65) || T2(e65) || P2(e65);
      e65.isWebMercator ? this.tilingScheme = v10.WebMercatorAuxiliarySphere : t68 && (this.tilingScheme = v10.makeGCSWithTileSize(e65, 256)), this._set("extent", this.extentHelper.layerViewsExtent);
    } else {
      const e65 = this.extentHelper.layerViewsExtent;
      null == e65 || H3(e65, this.extent) || (this.tilingScheme = v10.fromExtent(e65, this.extentHelper.viewSpatialReference), this._set("extent", e65));
    }
  }
  get test() {
    return { lockTilingScheme: (e65) => this._lockTilingScheme(e65), done: !this._waitTask };
  }
};
function g29(e65, t68, i60) {
  return null != b3(e65, t68, i60);
}
e([y2()], S22.prototype, "tilingScheme", void 0), e([y2({ readOnly: true })], S22.prototype, "extent", void 0), e([y2({ value: false })], S22.prototype, "tilingSchemeLocked", void 0), e([y2({ constructOnly: true })], S22.prototype, "viewSpatialReference", void 0), e([y2({ constructOnly: true })], S22.prototype, "layers", void 0), e([y2({ constructOnly: true })], S22.prototype, "extentHelper", void 0), e([y2({ constructOnly: true })], S22.prototype, "viewingMode", void 0), S22 = e([a4("esri.views.3d.terrain.TilingSchemeLogic")], S22);

// node_modules/@arcgis/core/views/3d/terrain/UpsampleInfo.js
var t60 = class {
  constructor() {
    this.offset = n15(), this.scale = 0, this.tile = null;
  }
  init(s69, t68, i60, e65) {
    this.tile = s69, this.offset[0] = t68, this.offset[1] = i60, this.scale = e65;
  }
  dispose() {
    this.tile = null, this.offset[0] = 0, this.offset[1] = 0, this.scale = 0;
  }
};

// node_modules/@arcgis/core/views/3d/terrain/TerrainSurface.js
var nt3 = class extends n8.EventedMixin(m) {
  constructor(e65) {
    var _a, _b;
    super(e65), this._scaleRangeQueries = new l52(), this._iteratorPool = new e4(n34, (e66) => e66.remove = () => this._iteratorPool.release(e66)), this._postorderIterator = new r33(), this._hasPendingUpdates = false, this._pendingUpdates = 0, this._asyncWorkItems = 0, this._allTilesDirty = true, this._allTilesSorted = true, this._visibleCached = false, this._usedMemory = null, this._performanceInfo = new e51(), this._viewChanged = false, this._inFrameTask = false, this._viewChangeUpdateDirty = false, this._eyePosRenderSR = n7(), this._eyePosSurfaceSR = n7(), this._splitLimits = new e49(), this._frustum = I5(), this._viewProjectionMatrix = e15(), this._layerViews = [new Array(), new Array()], this._layerIndexByUid = [/* @__PURE__ */ new Map(), /* @__PURE__ */ new Map()], this._basemapLayerViewHandles = /* @__PURE__ */ new Map(), this._handles = new t3(), this._watchUpdatingTracking = new c5(), this._frameTask = F5, this._allTiles = new l2(), this._upsampleInfoPool = new e4(t60), this._rootTilesExtent = i5(), this.updatingProgress = 0.5, this._maxNumUpdating = 1, this.maxTextureScale = 1.2, this._spatialReference = f3.WebMercator, this.visibleElevationBounds = new s56(1 / 0, -1 / 0), this.rootTileElevationBounds = new s56(1 / 0, -1 / 0), this._updatingRootTiles = false, this._pendingTilesForElevationUpdateEvent = /* @__PURE__ */ new Set(), this._pendingTilesToUpdate = /* @__PURE__ */ new Set(), this.totalGeometryUpdates = 0, this.totalTileUpdates = 0, this.oneBatchPerFrameTask = true, this._layerViewsDirty = false, this.unloadedMemory = 0, this.ignoresMemoryFactor = false, this._isWebMercator = false, this._isWebMercatorOnPlateeCarree = false, this.overlayManager = new le4({ ...e65, surface: this }), this._isGlobal = !((_b = (_a = e65.view) == null ? void 0 : _a.state) == null ? void 0 : _b.isLocal);
  }
  initialize() {
    this._lercDecoder = s21(this.view.resourceController), this._tilePool = this.view.state.isLocal ? new e4(p41) : new e4(D16);
    const e65 = this.view.resourceController.memoryController;
    this._upsampleMapCache = e65.newCache("terrain-upsample", (e66) => e66.unloadMapData()), this._elevationQueryCache = new t53(e65.newCache("elevation-query")), this._handles.add([l6(() => this.overlayManager.hasHighlights, (e66) => this._renderer.setNeedsHighlight(e66)), l6(() => this.overlayManager.rendersOccluded, (e66) => this._renderer.setRenderOccludedOverlay(e66)), l6(() => this.overlayManager.renderer.isEmpty, () => this._evaluateTransparency())], "overlayManager"), this._renderer = new oe6({ _overlayRenderer: this.overlayManager.renderer, _ellipsoidRadius: A3(this.view.spatialReference).radius, _stage: this.view._stage, _allTiles: this._allTiles }), this._handles.add([l6(() => this.baseOpacity, () => {
      this._handleLayerViewChanges(), this._updateTileTextures(this._evaluateTransparency() ? r24.UNFADED : r24.IMMEDIATE);
    }, w3), l6(() => this.hasCompositeBlendMode, () => this._updateTileTextures(this._evaluateTransparency() ? r24.UNFADED : r24.IMMEDIATE), w3), l6(() => this.renderingDisabled, () => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a._stage) == null ? void 0 : _b.renderer.setParameters({ terrainRenderingEnabled: !this.renderingDisabled });
    }, U3), l6(() => this.backgroundColor, (e66) => {
      this._handleLayerViewChanges(), this._renderer.updateTileBackground(e66);
    }, w3), l6(() => this.snapLevel, () => this._viewChanged = true, U3), l6(() => this.view.pointsOfInterest, (e66) => {
      this._renderer.pointsOfInterest = e66, this._watchUpdatingTracking.removeAll(), e66 && this._watchUpdatingTracking.add(() => e66.focus.renderLocation, () => this._allTilesSorted = false);
    }), l6(() => t19.TERRAIN_TILE_TREE_SHOW_TILES, (e66) => {
      e66 && !this._treeDebugger ? import("./TerrainTileTree3DDebugger-LY7HABVU.js").then(({ TerrainTileTree3DDebugger: e67 }) => {
        !this._treeDebugger && t19.TERRAIN_TILE_TREE_SHOW_TILES && (this._treeDebugger = new e67({ view: this.view }));
      }) : e66 || (this._treeDebugger = l(this._treeDebugger));
    }, h3)]);
    const { spatialReference: t68 } = this.view;
    this._extentHelper = x28(this.viewingMode, { layers: this.view.map.allLayers, layerViews: this.view.allLayerViews, viewSpatialReference: t68 });
    const i60 = new n11({ getCollections: () => {
      var _a, _b, _c;
      return (_c = (_b = (_a = this.view) == null ? void 0 : _a.defaultsFromMap) == null ? void 0 : _b.mapCollections) == null ? void 0 : _c.map(({ layers: e66 }) => e66);
    }, getChildrenFunction: (e66) => e66 && "layers" in e66 ? e66.layers : null }), r62 = new S22({ layers: i60, extentHelper: this._extentHelper, viewingMode: this.viewingMode, viewSpatialReference: t68 });
    this._set("tilingSchemeLogic", r62), this._updateTilingScheme(), this._elevationDataRequester = this.view.resourceController.createStreamDataRequester(A12.ELEVATION), this._mapDataRequester = this.view.resourceController.createStreamDataRequester(A12.BASEMAP);
    const a67 = this.view.resourceController.scheduler;
    this._frameTask = a67.registerTask(I3.TERRAIN_SURFACE, this), this._handles.add([l6(() => this._extentHelper.stencilEnabledExtents, (e66) => this._renderer.setStencilEnabledLayerExtents(e66), h3), l6(() => this.tilingSchemeLogic.tilingScheme, () => this._updateTilingScheme(), U3), l6(() => this.extent, () => this._updateRootTiles(), h3), this.view.on("resize", () => this._viewChangeUpdate()), l6(() => {
      var _a, _b;
      const e66 = this.view, t69 = e66.state;
      return [this._lodBias, this.lodSnapping, (_b = (_a = e66.resourceController) == null ? void 0 : _a.memoryController) == null ? void 0 : _b.memoryFactor, t69.camera, t69.contentCamera, t69.fixedContentCamera];
    }, () => this._viewChangeUpdate(), w3), l6(() => {
      var _a, _b;
      return (_b = (_a = this.view.qualitySettings) == null ? void 0 : _a.tiledSurface) == null ? void 0 : _b.textureFadeDuration;
    }, (e66) => this._renderer.textureFadingEnabled = e66 > 0, h3), l6(() => {
      var _a;
      return (_a = this.view.qualitySettings) == null ? void 0 : _a.physicallyBasedRenderingEnabled;
    }, (e66) => this._renderer.pbrMode = e66 ? c9.Terrain : c9.Disabled, h3), l6(() => this._userClippingExtent, () => this._updateClippingExtent(), U3)]), this._handles.add(this.view.allLayerViews.on("after-changes", () => this._layerViewsDirty = true)), this._layerViewsDirty = true, this._handleLayerViewChanges();
  }
  destroy() {
    this._frameTask.remove(), this._handles.destroy(), this._watchUpdatingTracking.destroy(), this._lercDecoder = f(this._lercDecoder), this._removeAllTiles(), this._upsampleMapCache = l(this._upsampleMapCache), this._elevationQueryCache = l(this._elevationQueryCache), this._set("tilingSchemeLogic", l(this.tilingSchemeLogic)), this._basemapLayerViewHandles.forEach((e65, t68) => this._unregisterTiledLayerView(t68)), this._elevationDataRequester = null, this._mapDataRequester = null, this._set("overlayManager", l(this.overlayManager)), this._tilePool = l(this._tilePool), se5.prune(), this._treeDebugger = l(this._treeDebugger), this._renderer = l(this._renderer), this._iteratorPool = l(this._iteratorPool), this._set("view", null), this._extentHelper = l(this._extentHelper), this._upsampleInfoPool = l(this._upsampleInfoPool), u14(), r52();
  }
  get renderer() {
    return this._renderer;
  }
  get frustum() {
    return this._frustum;
  }
  get snapLevel() {
    var _a, _b;
    if (this.lodSnapping === E9.ON) {
      const e65 = this.view, t68 = this.tilingScheme, i60 = (_b = (_a = e65.pointsOfInterest) == null ? void 0 : _a.cameraOnSurface) == null ? void 0 : _b.scale;
      if (t68 && i60) {
        const r62 = e65.state.contentCamera;
        let s69 = Q8(e65, r62.eye, r62.viewForward, r62.up).tilt;
        s69 > 90 && (s69 = 180 - s69);
        const a67 = 2 * (s69 / 90) ** 2, n77 = t68.levelAtScale(i60) - a67, l63 = Math.min(n77, this._splitLimits.maxLod || 1 / 0);
        return l63 <= 0 ? null : l63;
      }
    }
    return null;
  }
  get lodSnapping() {
    return this.view.qualitySettings.tiledSurface.reduceTileLevelDifferences ? E9.ON : E9.OFF;
  }
  get upsampleInfoPool() {
    return this._upsampleInfoPool;
  }
  get upsampleMapCache() {
    return this._upsampleMapCache;
  }
  get elevationQueryCache() {
    return this._elevationQueryCache;
  }
  get mapTileRequester() {
    return this._mapDataRequester;
  }
  get _userClippingExtent() {
    const { spatialReference: e65 } = this, { clippingArea: t68 } = this.view;
    if (null == t68 || null == e65)
      return null;
    const i60 = i5(), r62 = u10(t68, i60, e65) ? i60 : null, s69 = this._get("extent");
    return H3(r62, s69) ? s69 : r62;
  }
  get rootTilesExtent() {
    return this._rootTilesExtent;
  }
  get extent() {
    const e65 = R2(this.groundExtent, this._userClippingExtent, i5()), t68 = this._get("extent");
    return H3(e65, t68) ? t68 : e65;
  }
  get groundExtent() {
    return null != this._tilingSchemeExtent ? this._tilingSchemeExtent : this._rootTilesExtent;
  }
  get _tilingSchemeExtent() {
    var _a;
    return (_a = this.tilingSchemeLogic) == null ? void 0 : _a.extent;
  }
  get updating() {
    var _a, _b;
    return this._hasPendingUpdates || (this._maxNumUpdating = 1), !!((this.running || ((_a = this._watchUpdatingTracking) == null ? void 0 : _a.updating) || this._asyncWorkItems > 0) && this.ready && !this.suspended || ((_b = this.overlayManager) == null ? void 0 : _b.updating));
  }
  get running() {
    return (this._hasPendingUpdates || this._viewChanged || this._allTilesDirty || !this._allTilesSorted || this._layerViewsDirty || this._scaleRangeQueries.updating || this._frameTask.updating) && this.ready && !this.suspended;
  }
  get updatingProgressValue() {
    return this._maxNumUpdating = Math.max(this._pendingUpdates, this._maxNumUpdating), 1 - this._pendingUpdates / this._maxNumUpdating;
  }
  get baseOpacity() {
    var _a, _b, _c;
    return ((_c = (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.ground) == null ? void 0 : _c.opacity) ?? 1;
  }
  set baseOpacity(e65) {
    this.view.map.ground.opacity = e65;
  }
  get viewingMode() {
    return this.view.state.viewingMode;
  }
  get ready() {
    return null != this._rootTiles;
  }
  set renderOrder(e65) {
    this._renderer.renderOrder = e65, this._set("renderOrder", e65);
  }
  get rootTiles() {
    return this._rootTiles;
  }
  get spatialReference() {
    var _a;
    return ((_a = this.tilingScheme) == null ? void 0 : _a.spatialReference) ?? null;
  }
  get backgroundColor() {
    return this.view.map.ground.surfaceColor;
  }
  set backgroundColor(e65) {
    this.view.map.ground.surfaceColor = e65;
  }
  set slicePlaneEnabled(e65) {
    this._renderer.slicePlaneEnabled = e65, this._set("slicePlaneEnabled", e65), this._evaluateTransparency();
  }
  get tilingSchemeLocked() {
    var _a;
    return ((_a = this.tilingSchemeLogic) == null ? void 0 : _a.tilingSchemeLocked) ?? false;
  }
  get wireframe() {
    var _a;
    return (_a = this._renderer) == null ? void 0 : _a.wireframe;
  }
  set wireframe(e65) {
    e65 !== this._renderer.wireframe && (this._renderer.wireframe = e65, this._updateAllTileGeometries());
  }
  set _visible(e65) {
    e65 !== this._visibleCached && (this._visibleCached = e65, this._renderer.setVisibility(e65), this.suspended = !e65);
  }
  get opaque() {
    return this._renderer.transparency === ne6.Opaque;
  }
  set suspended(e65) {
    this._set("suspended", e65), this._viewChangeUpdate();
  }
  get textureFadeDuration() {
    return this.view.qualitySettings.tiledSurface.textureFadeDuration ?? 0;
  }
  intersect(e65, t68, i60, r62) {
    this._renderer.intersect(e65, t68, i60, r62);
  }
  getElevation(e65, t68, i60, r62) {
    const s69 = this._rootTiles;
    if (null == s69 || !s69.length)
      return null;
    if (0 === s69[0].layerInfo[A27.ELEVATION].length)
      return null;
    const a67 = pt2;
    if (a67[0] = e65, a67[1] = t68, a67[2] = i60, !Hn(a67, r62, a67, this._spatialReference))
      return s3.getLogger(this).error("TerrainSurface.getElevation(): could not project given point to tiling scheme coordinate system"), null;
    return Tt2(s69, a67[0], a67[1]);
  }
  getElevations(e65, t68, i60) {
    const r62 = this._rootTiles, s69 = r62 ? r62[0].layerInfo[A27.ELEVATION].length : 0;
    if (null != r62 && r62.length && 0 !== s69)
      for (let a67 = 0; a67 < t68; ++a67) {
        const t69 = 3 * a67;
        i60(a67, Tt2(r62, e65[t69], e65[t69 + 1]));
      }
    else
      for (let a67 = 0; a67 < t68; ++a67)
        i60(a67, null);
  }
  getScale(e65) {
    if (!this.tilingScheme)
      return null;
    if (!In(e65, pt2, this.spatialReference))
      return s3.getLogger(this).error("TerrainSurface.getScale(): could not project given point to tiling scheme coordinate system"), null;
    const t68 = this._rootTiles;
    if (null != t68) {
      for (const i60 of t68)
        if (i60 == null ? void 0 : i60.containsPoint(pt2)) {
          let e66 = i60;
          for (; e66.children[0] && !e66.rendered; ) {
            const t69 = e66.children[0].extent;
            let i61 = 0;
            pt2[0] > t69[2] && (i61 += 1), pt2[1] < t69[1] && (i61 += 2), e66 = e66.children[i61];
          }
          return this._getLodBiasCorrectedScale(e66.level);
        }
    }
    return 1 / 0;
  }
  getSphereElevationBounds(e65, t68) {
    var _a;
    if (pt2[0] = e65[0], pt2[1] = e65[1], pt2[2] = e65[2], pt2[3] = e65[3], !Hn(pt2, t68, pt2, (_a = this.tilingScheme) == null ? void 0 : _a.spatialReference))
      return s3.getLogger(this).error("TerrainSurface.getSphereElevationBounds(): could not project given point to tiling scheme coordinate system"), null;
    let i60 = 1 / 0, r62 = -1 / 0;
    const s69 = (e66) => {
      if (e66 && b(e66.extent, pt2))
        if (e66.isLeaf || e66.rendered)
          i60 = Math.min(i60, e66.elevationBounds[0]), r62 = Math.max(r62, e66.elevationBounds[1]);
        else
          for (const t69 of e66.children)
            s69(t69);
    }, a67 = this._rootTiles;
    if (null != a67)
      for (const n77 of a67)
        s69(n77);
    return { min: i60, max: r62 };
  }
  getSphereScale(e65, t68) {
    if (!this.tilingScheme)
      return null;
    if (!In(e65, pt2, this.spatialReference))
      return s3.getLogger(this).error("TerrainSurface.getSphereScale(): could not project given point to tiling scheme coordinate system"), null;
    pt2[3] = t68;
    let i60 = null;
    const r62 = (e66) => {
      if (e66 && b(e66.extent, pt2)) {
        const t69 = e66.children;
        if (t69[0] && !e66.rendered)
          for (const e67 of t69)
            r62(e67);
        else {
          const t70 = this._getLodBiasCorrectedScale(e66.level);
          i60 = null == i60 ? t70 : Math.min(i60, t70);
        }
      }
    }, s69 = this._rootTiles;
    if (null != s69)
      for (const a67 of s69)
        r62(a67);
    return i60;
  }
  queryVisibleScaleRange(e65, t68, i60, r62) {
    const s69 = t68 ? this.tilingScheme.levelAtScale(t68) : 0, a67 = i60 ? this.tilingScheme.levelAtScale(i60) : 1 / 0, n77 = this._lodBias;
    this._scaleRangeQueries.queryVisibleLevelRange(e65, s69 + n77, a67 + n77, r62);
  }
  _evaluateTransparency() {
    var _a, _b;
    const e65 = this.baseOpacity, t68 = this.overlayManager.renderer.isEmpty, i60 = this._renderer.transparency, r62 = this._allSurfaceLayersTransparent() ? t68 ? ne6.Empty : ne6.TransparentWithDraped : e65 >= 1 && !this.hasCompositeBlendMode && !this._renderer.slicePlaneEnabled ? ne6.Opaque : ne6.Semitransparent, s69 = i60 !== r62;
    return s69 && (this._renderer.transparency = r62, (_b = (_a = this.view) == null ? void 0 : _a._stage) == null ? void 0 : _b.renderer.setParameters({ terrainTransparency: this._renderer.transparency })), s69;
  }
  _updateTilingScheme() {
    var _a, _b, _c;
    const e65 = this.tilingSchemeLogic.tilingScheme;
    if (!(e65 !== this.tilingScheme))
      return;
    a26(!!e65, "tiling scheme cannot be reset to undefined"), this._isGlobal = !((_b = (_a = this.view) == null ? void 0 : _a.state) == null ? void 0 : _b.isLocal), this.tilingScheme && this._removeAllTiles();
    const t68 = (e65 == null ? void 0 : e65.spatialReference) ?? f3.WebMercator;
    this._spatialReference = t68, this._isWebMercator = !!(t68 == null ? void 0 : t68.isWebMercator), this._isWebMercatorOnPlateeCarree = this._isWebMercator && G3((_c = this.view) == null ? void 0 : _c.renderSpatialReference), this._set("tilingScheme", e65), this._updateClippingExtent(), e65 && (this._updateTiledLayers(), this._renderer.setTileSize(e65.pixelSize), this.overlayManager.setSpatialReference(e65.spatialReference), this._updateRootTiles());
  }
  _acquireTile(e65, t68, i60, r62) {
    const s69 = this._tilePool.acquire();
    return ct3[0] = e65, ct3[1] = t68, ct3[2] = i60, s69.init(ct3, r62, this), s69;
  }
  get updatingRootTiles() {
    return this._updatingRootTiles;
  }
  _updateRootTiles() {
    const { extent: e65, tilingScheme: t68 } = this;
    if (!t68)
      return;
    const i60 = ut3;
    let s69 = t68.rootTilesInExtent(e65, i60, 5 * s26);
    if (null != this._rootTiles) {
      if (s69.length > s26)
        return void s3.getLogger(this).warn(p11);
      const e66 = this._rootTiles.map((e67) => e67.lij), t69 = a(e66, s69, ot4);
      if (this._updatingRootTiles = true, t69.removed.length > 0 || t69.added.length > 0) {
        const e67 = this._rootTiles.filter((e68) => !(t69.removed.findIndex((t70) => ot4(t70, e68.lij)) > -1) || (this._purgeTile(e68), false));
        t69.added.forEach((t70) => e67.push(this._newRootTile(t70))), this._setRootTiles(e67);
      }
    } else
      this._updatingRootTiles = true, s69.length > s26 && (s3.getLogger(this).warn(f15), s69 = t68.rootTilesInExtent(e65, i60, s26)), this._setRootTiles(s69.map((e66) => this._newRootTile(e66)));
    H3(i60, this._rootTilesExtent) || (this._rootTilesExtent = i5(i60)), this._visible = true, this._viewChangeUpdate(), this.overlayManager.setPlacementDirty(), this.notifyChange("ready"), this._updateAllTileGeometries(), this._updatingRootTiles = false, this.checkAllTilesWaterproofness();
  }
  _updateAllTileGeometries() {
    const e65 = this._allTiles.filter((e66) => e66.isLoaded && e66.intersectsClippingArea);
    e65.forEach((e66) => this._renderer.updateTileGeometryState(e66)), e65.forEach((e66) => e66.renderData.updateNeighborData()), this._updateTilesGeometries(e65), this._pendingTilesToUpdate.clear();
  }
  _updateTilesGeometries(e65) {
    if (0 === e65.length)
      return;
    e65.sort(l20);
    const t68 = this.renderer;
    e65.forEach((e66) => t68.updateGeometryIfNeeded(e66)), e65.forEach((e66) => this._pendingTilesForElevationUpdateEvent.add(e66));
  }
  _shouldSplit(e65) {
    return e65.shouldSplit(this._splitLimits, this._eyePosRenderSR, this.snapLevel) === E33.SPLIT;
  }
  _newRootTile(e65) {
    const t68 = this._acquireTile(0, e65[1], e65[2], null);
    return this._shouldSplit(t68) && t68.setPendingUpdate(E33.SPLIT), this._loadTile(t68), this._markTileToUpdate(t68), this._updateRootTileElevationBounds(), t68;
  }
  _setRootTiles(e65) {
    if (this._rootTiles = e65, this._allTiles.clear(), null != e65) {
      const t68 = this._iteratorPool.acquire();
      for (t68.reset(e65); !t68.done; )
        this._allTiles.push(t68.next());
      t68.remove();
    }
    this._renderer.setRootTiles(this._rootTiles), this._updateTilesVisibility(e65);
  }
  _runViewChangeUpdateIfDirty() {
    this._viewChangeUpdateDirty && (this._viewChangeUpdateDirty = false, this._viewChangeUpdate());
  }
  _viewChangeUpdate() {
    this.view && !this.suspended && this.tilingScheme && this._visibleCached && (this._inFrameTask ? this._viewChangeUpdateDirty = true : (this._viewChangeUpdateDirty = false, this._updateViewDependentParameters(), this._updateTilesVisibility(this._rootTiles)));
  }
  _updateClippingStatus(e65) {
    e65.updateClippingStatus(this.extent) && e65.resetPendingUpdate(E33.GEOMETRY) && this._updateTileGeometryState(e65);
  }
  _updateTilesVisibility(e65) {
    if (null == e65)
      return;
    const t68 = q4(e65), i60 = this.visibleElevationBounds;
    let r62 = t68 ? i60.min : 1 / 0, s69 = t68 ? i60.max : -1 / 0;
    const a67 = this.extent, n77 = this._viewProjectionMatrix;
    this.setTileTreeDirty();
    const l63 = this._iteratorPool.acquire();
    for (l63.reset(e65); !l63.done; ) {
      const e66 = l63.next();
      e66.updateClippingStatus(a67) && e66.resetPendingUpdate(E33.GEOMETRY) && this._updateTileGeometryState(e66), e66.setPendingUpdate(E33.RENDERDATA), e66.computeVisibility(), e66.updateScreenDepth(n77), e66.renderData && (r62 = Math.min(e66.elevationBounds[0], r62), s69 = Math.max(e66.elevationBounds[1], s69));
    }
    l63.remove(), this._viewChanged = true, this._allTilesDirty = true, this._batchUpdatePendingTileGeometries(), isFinite(r62) && isFinite(s69) && (i60.min !== r62 || i60.max !== s69) && (this.visibleElevationBounds = new s56(r62, s69));
  }
  _updateRootTileElevationBounds() {
    let e65 = 1 / 0, t68 = -1 / 0;
    const i60 = this._rootTiles;
    null != i60 && i60.forEach(({ elevationBounds: i61 }) => {
      e65 = Math.min(e65, i61[0]), t68 = Math.max(t68, i61[1]);
    });
    const r62 = this.rootTileElevationBounds;
    r62.min === e65 && r62.max === t68 || (this.rootTileElevationBounds = new s56(e65, t68));
  }
  _updateViewDependentParameters() {
    const { camera: e65, contentCamera: t68 } = this.view.state, i60 = Math.tan(0.5 * t68.fovX), r62 = Math.tan(0.5 * t68.fovY), s69 = this.tilingScheme.pixelSize, a67 = 2 ** -this._lodBias * e65.pixelRatio;
    this._splitLimits.aboveGround = e65.aboveGround, this._splitLimits.fovX = i60, this._splitLimits.fovY = r62, this._splitLimits.relativeWidthLimit = s69 / e65.width * this.maxTextureScale * a67, this._splitLimits.relativeHeightLimit = s69 / e65.height * this.maxTextureScale * a67, this._splitLimits.maxLod = this.tilingScheme.getMaxLod(), this._splitLimits.angledSplitBias = this.view.qualitySettings.tiledSurface.angledSplitBias, this.view.state.fixedContentCamera ? (null == this._splitLimits.frustum && (this._splitLimits.frustum = I5()), L3(this._splitLimits.frustum, t68.frustum)) : this._splitLimits.frustum = null, L3(this._frustum, e65.frustum), c3(this._viewProjectionMatrix, t68.projectionMatrix, t68.viewMatrix), r5(this._eyePosRenderSR, t68.eye), Hn(e65.eye, this.view.renderSpatialReference, this._eyePosSurfaceSR, this.spatialReference);
  }
  _updateRenderData(e65) {
    e65.rendered && !e65.shouldLoad && (ht3(e65) ? this._loadChildren(e65) : dt2(e65) && this._loadParent(e65));
  }
  _updateTileGeometryState(e65) {
    e65.updateVisibility();
    this._renderer.updateTileGeometryState(e65) && this._markTileToUpdate(e65), this._usedMemory = null;
  }
  _markAllTileNeighborsForGeometryUpdate(e65) {
    const t68 = this._pendingTilesToUpdate;
    e65.forEachLoadedNeighbor((e66) => {
      t68.add(e66);
    });
  }
  _updateTileTexture(e65, t68) {
    const i60 = e65.resetPendingUpdate(E33.TEXTURE_FADING) ? E33.TEXTURE_FADING : !!e65.resetPendingUpdate(E33.TEXTURE_NOFADING) && E33.TEXTURE_NOFADING;
    i60 && (this._renderer.updateTileTexture(e65, i60), this._usedMemory = null, t68.madeProgress());
  }
  _emitElevationUpdateEventForTiles() {
    const e65 = gt2.extent;
    C2(e65), this._pendingTilesForElevationUpdateEvent.forEach((t68) => m3(e65, t68.extent, e65)), this._pendingTilesForElevationUpdateEvent.clear(), gt2.spatialReference = this.spatialReference, this.emit("elevation-change", gt2);
  }
  runTask(e65) {
    this._handleLayerViewChanges(e65), this._frameTask.processQueue(e65), this.renderer.processScaleRangeQueries(this._scaleRangeQueries, e65), this._inFrameTask = true, this._pendingUpdates = 0, this._hasPendingUpdates = false, this._updateAllTilesStatus(e65), this._sortTiles(e65);
    const t68 = !this.view.state.fixedContentCamera;
    this._mergeAndSplit(e65, t68), this._updateElevation(e65), this._updateTextures(e65), t68 || this._mergeAndSplit(e65, true), this._inFrameTask = false, this._runViewChangeUpdateIfDirty(), this._batchUpdatePendingTileGeometries(), this._emitElevationUpdateEventForTiles(), e65.done && e65.hasProgressed && this.requestUpdate(), this.notifyChange("updatingProgressValue");
  }
  _updateAllTilesStatus(e65) {
    if (!this._viewChanged || !this._rootTiles || e65.done)
      return;
    this._viewChanged = false;
    const t68 = this._iteratorPool.acquire();
    t68.reset(this._rootTiles);
    const i60 = this.snapLevel, r62 = this._splitLimits, s69 = this._eyePosRenderSR;
    for (; !t68.done; ) {
      const e66 = t68.next(), a67 = e66.shouldSplit(r62, s69, i60);
      if (a67 !== E33.SPLIT) {
        if (e66.resetPendingUpdate(E33.SPLIT) && e66.updateAgentSuspension(), a67 === E33.ELEVATION && e66.updateAgents(A27.ELEVATION), t68.skipSubtree(), !e66.isLeaf) {
          e66.setPendingUpdate(E33.MERGE), e66.resetPendingUpdate(E33.SPLIT);
          const t69 = this._iteratorPool.acquire();
          t69.resetOne(e66);
          const i61 = this._viewProjectionMatrix;
          for (let e67 = t69.next(); !t69.done; e67 = t69.next())
            this._updateClippingStatus(e67), e67.updateVisibility(), e67.updateScreenDepth(i61);
          t69.remove();
        }
      } else
        e66.resetPendingUpdate(E33.MERGE), e66.isLeaf && (e66.setPendingUpdate(E33.SPLIT), t68.skipSubtree()), e66.rendered && e66.setPendingUpdate(E33.RENDERDATA);
    }
    t68.remove(), this.requestUpdate(), (this.shortBatches || !this.oneBatchPerFrameTask) && this._batchUpdatePendingTileGeometries(), e65.madeProgress();
  }
  _sortTiles(e65) {
    e65.done || this._allTilesSorted || (d16(this._allTiles, this.view.pointsOfInterest.focus.renderLocation), this._allTilesSorted = true, this._treeDebugger && this._treeDebugger.update(), e65.madeProgress());
  }
  _markTileToUpdate(e65) {
    p12(e65.isLoaded), e65.intersectsClippingArea && (this._pendingTilesToUpdate.add(e65), this._markAllTileNeighborsForGeometryUpdate(e65));
  }
  _batchUpdatePendingTileGeometries() {
    const e65 = this._pendingTilesToUpdate;
    if (0 === e65.size)
      return;
    const t68 = Array.from(this._pendingTilesToUpdate.keys()).filter((e66) => e66.isLoaded && e66.intersectsClippingArea), i60 = (i61, r63) => {
      !(r63 == null ? void 0 : r63.isLoaded) || !r63.intersectsClippingArea || r63.level < i61.level || e65.has(r63) || (e65.add(r63), t68.push(r63), r63.renderData.updateNeighborData());
    };
    t68.sort(l20);
    const r62 = t68.length;
    for (let s69 = 0; s69 < r62; ++s69) {
      const r63 = t68[s69];
      p12(r63.isLoaded), p12(r63.intersectsClippingArea);
      const a67 = r63.renderData;
      a67.updateNeighborData();
      const n77 = a67._dirtyEdgeResolutions, l63 = a67.geometryState.neighborData.cornerPeerNeighbors, o61 = (e66) => {
        var _a;
        const t69 = Y3[e66];
        i60(r63, (_a = l63[e66]) == null ? void 0 : _a.findCorner(D6(t69), (e67) => e67.isLoaded));
      };
      for (let t69 = 0; t69 < 4; ++t69)
        if (n77 & 1 << t69) {
          const s70 = a67.geometryState.neighborData.edgePeerNeighbors[t69];
          s70 && (s70 == null ? void 0 : s70.level) >= r63.level && s70.forAllSubtreeOnSide(P7(X2[t69]), (t70) => !(!t70.isLoaded || !t70.intersectsClippingArea) && (p12(e65.has(t70) || l20(r63, t70) < 0), i60(r63, t70), true)), o61((t69 + 1) % 4), o61(t69);
        }
    }
    e65.clear(), this._updateTilesGeometries(t68), T11 && s27 && this.checkAllTilesWaterproofness();
  }
  _mergeAndSplit(e65, t68) {
    if (this.suspended || e65.done || !this._allTilesDirty)
      return;
    this._allTilesDirty = false, this.requestUpdate();
    let i60 = false;
    const r62 = this.view.state.fixedContentCamera;
    let s69 = false;
    for (; !e65.done; ) {
      s69 = true;
      let a67 = false;
      const n77 = !this._allTiles.some((s70) => {
        var _a;
        if (!i60 && !r62 && !s70.visible)
          return e65.done;
        let n78 = s70;
        if (s70.resetPendingUpdate(E33.MERGE)) {
          if (!t68)
            return s70.setPendingUpdate(E33.MERGE), e65.done;
          for (; (_a = n78.parent) == null ? void 0 : _a.resetPendingUpdate(E33.MERGE); )
            n78 = n78.parent;
          this._mergeTile(n78), a67 = true, e65.madeProgress();
        } else
          s70.resetPendingUpdate(E33.SPLIT) && (this._splitTile(s70), a67 = true, e65.madeProgress());
        return !e65.done && n78 === s70 && s70.resetPendingUpdate(E33.RENDERDATA) && (this._updateRenderData(s70), e65.madeProgress()), e65.done;
      });
      if (a67 && (this._allTilesSorted = false, this._allTilesDirty = true), n77) {
        if (!i60) {
          i60 = true;
          continue;
        }
        if (!a67)
          break;
      } else
        this._allTilesDirty = true;
    }
    s69 ? e65.madeProgress() : this._allTilesDirty = true, !this.oneBatchPerFrameTask && this._batchUpdatePendingTileGeometries(), this._sortTiles(e65);
  }
  _updateElevation(e65) {
    e65.done || (this._allTiles.some((t68) => (t68.resetPendingUpdate(E33.GEOMETRY) && (this._updateTileGeometryState(t68), this._updateTileTexture(t68, e65), this.shortBatches && this._batchUpdatePendingTileGeometries(), e65.madeProgress()), e65.done)), !this.oneBatchPerFrameTask && this._batchUpdatePendingTileGeometries());
  }
  _updateTextures(e65) {
    e65.done || this._allTiles.some((t68) => (this._updateTileTexture(t68, e65), e65.done));
  }
  _updateClippingExtent() {
    this.spatialReference && (this.updateTileOverlayParams(O4.UPDATE), this.overlayManager.setPlacementDirty(), this._updateRootTiles());
  }
  get _lodBias() {
    const e65 = this.view.resourceController.memoryController.memoryFactor;
    return this.view.qualitySettings.tiledSurface.lodBias - (1 - e65) * a22;
  }
  _getLodBiasCorrectedScale(e65) {
    const t68 = this.tilingScheme.levels, i60 = i3(e65 - this._lodBias, 0, t68.length - 1), r62 = i60 - Math.floor(i60);
    return t68[Math.floor(i60)].scale * (1 - r62) + t68[Math.ceil(i60)].scale * r62;
  }
  _removeAllTiles() {
    null != this._rootTiles && (this._rootTiles.forEach((e65) => this._purgeTile(e65)), this._setRootTiles(null), this.notifyChange("ready")), this._allTiles.clear(), this._visible = false;
  }
  _purgeDescendantTiles(e65) {
    if (!e65.children[0])
      return false;
    let t68 = false;
    for (let i60 = 0; i60 < 4; ++i60)
      t68 = this._purgeTile(e65.children[i60]) || t68;
    return e65.unsetChildren(), t68;
  }
  _purgeTile(e65) {
    const t68 = this._purgeDescendantTiles(e65) || e65.rendered;
    return this._allTiles.removeUnordered(e65), this._unloadTile(e65), this._tilePool.release(e65), t68;
  }
  _unloadTile(e65) {
    this._pendingTilesToUpdate.delete(e65), this._pendingTilesForElevationUpdateEvent.delete(e65), e65.unload(this._renderer);
  }
  _splitTile(e65) {
    a26(e65.isLeaf, "tile that is already split should not be split again!");
    const t68 = e65.level + 1, i60 = 2 * e65.lij[1], r62 = 2 * e65.lij[2];
    e65.setChildren(this._createTile(t68, i60, r62, e65), this._createTile(t68, i60, r62 + 1, e65), this._createTile(t68, i60 + 1, r62, e65), this._createTile(t68, i60 + 1, r62 + 1, e65)), e65.setPendingUpdate(E33.RENDERDATA), e65.updateAgentSuspension(), this._allTiles.pushArray(e65.children), this._allTilesDirty = true, ++this._performanceInfo.numSplit;
  }
  _emitTileScaleChange(e65, t68 = e65.level) {
    mt2.spatialReference = this.spatialReference, mt2.extent = e65.extent, mt2.scale = this._getLodBiasCorrectedScale(t68), this.emit("scale-change", mt2);
  }
  _createTile(e65, t68, i60, r62) {
    a26(!!r62, "_createTile sanity check");
    const s69 = this._acquireTile(e65, t68, i60, r62);
    return s69.updateClippingStatus(this.extent), s69.updateScreenDepth(this._viewProjectionMatrix), this._shouldSplit(s69) && s69.setPendingUpdate(E33.SPLIT), s69;
  }
  get shortBatches() {
    return this.view.state.mode !== I2.IDLE;
  }
  _mergeTile(e65) {
    a26(!e65.hasPendingUpdate(E33.SPLIT), "_mergeTile sanity check"), this._purgeDescendantTiles(e65) && (a26(!e65.renderData, "_mergeTile sanity check"), this._loadTile(e65), this._markTileToUpdate(e65), this._emitTileScaleChange(e65), this.shortBatches && this._batchUpdatePendingTileGeometries()), this._allTilesDirty = true, ++this._performanceInfo.numMerged;
  }
  _loadChildren(e65) {
    a26(e65.rendered, "parent should be rendered"), this._unloadTile(e65);
    const t68 = e65.children;
    t68.forEach((e66) => this._loadTile(e66)), t68.forEach((e66) => this._pendingTilesToUpdate.add(e66)), this._markAllTileNeighborsForGeometryUpdate(e65), this._emitTileScaleChange(e65, e65.level + 1), this.shortBatches && this._batchUpdatePendingTileGeometries();
  }
  _loadParent(e65) {
    const t68 = e65.parent;
    this._unloadChildren(t68), this._loadTile(t68), this._markTileToUpdate(t68), this._emitTileScaleChange(t68, t68.level), this.shortBatches && this._batchUpdatePendingTileGeometries();
  }
  _unloadChildren(e65) {
    const t68 = e65.children;
    if (t68[0])
      for (let i60 = 0; i60 < 4; ++i60) {
        const e66 = t68[i60];
        this._unloadChildren(e66), this._unloadTile(e66);
      }
  }
  _loadTile(e65) {
    e65.load(), e65.setPendingUpdate(E33.RENDERDATA), this.requestUpdate(), this._allTilesDirty = true, this.overlayManager && this.overlayManager.hasOverlays && this.overlayManager.setTileParameters(e65);
  }
  _elevationDataArrived(e65, t68, i60) {
    const r62 = new r49(e65.lij, e65.extent, i60);
    e65.dataArrived(t68, A27.ELEVATION, r62);
    const s69 = [e65], a67 = e65.level, n77 = this._iteratorPool.acquire();
    for (n77.reset(s69); !n77.done; ) {
      const e66 = n77.next();
      e66.findElevationBoundsForLayer(t68, a67), e66.computeElevationBounds();
    }
    0 === a67 && this._updateRootTileElevationBounds(), n77.remove(), this._updateTilesVisibility(s69);
  }
  _handleLayerViewChanges(e65 = C4) {
    if (!this._layerViewsDirty)
      return;
    this._layerViewsDirty = false;
    let t68 = false;
    const i60 = /* @__PURE__ */ new Set();
    let r62 = -1;
    for (const s69 of this.view.allLayerViews.items)
      if (i60.add(s69.uid), N3(s69) || d15(s69))
        if (this._basemapLayerViewHandles.has(s69.uid) && !d15(s69)) {
          const e66 = this._layerClassFromLayerView(s69), i61 = this._getLayerIdxByUID(e66, s69.uid);
          null != i61 && ((i61 < r62 || null == r62) && (t68 = true), r62 = i61);
        } else
          this._registerTiledLayerView(s69), s69.layer.loaded && (t68 = true);
    this._basemapLayerViewHandles.forEach((e66, r63) => {
      i60.has(r63) || (this._unregisterTiledLayerView(r63), t68 = true);
    }), t68 && this._updateTiledLayers(), this.hasCompositeBlendMode = this._hasCompositeBlendMode(), this._evaluateTransparency(), e65.madeProgress();
  }
  _allSurfaceLayersTransparent() {
    var _a, _b;
    let e65 = 0 === ((_b = (_a = this.view.map) == null ? void 0 : _a.ground) == null ? void 0 : _b.opacity);
    for (const t68 of this.view.allLayerViews.items)
      if (W6(t68) && !y4(t68.layer) && 0 !== t68.fullOpacity)
        return e65 = false, e65;
    return e65;
  }
  _hasCompositeBlendMode() {
    for (const e65 of this.view.allLayerViews.items)
      if ((U6(e65) || d15(e65)) && o32(e27[e65.layer.blendMode]))
        return true;
    return false;
  }
  _layerClassFromLayerView(e65) {
    return R8(e65) ? A27.ELEVATION : A27.MAP;
  }
  _registerTiledLayerView(e65) {
    const t68 = [];
    if ((U6(e65) || d15(e65)) && t68.push(l6(() => e65.layer.blendMode, () => {
      this.hasCompositeBlendMode = this._hasCompositeBlendMode(), this._updateTileTextures(r24.UNFADED);
    })), !d15(e65)) {
      const i60 = this._layerClassFromLayerView(e65);
      t68.push(l6(() => e65.suspended, () => this._updateTiledLayers())), t68.push(l6(() => e65.fullOpacity, () => this._updateTileTextures(r24.UNFADED))), t68.push(l6(() => "effectiveScaleRange" in e65.layer ? e65.layer.effectiveScaleRange : null, () => this._restartAllAgents(i60))), t68.push(e65.on("data-changed", () => {
        const t69 = this._getLayerIdxByUID(i60, e65.uid);
        null != t69 && this._invalidateLayerData(t69, i60);
      }));
    }
    this._unregisterTiledLayerView(e65.uid), this._basemapLayerViewHandles.set(e65.uid, t68);
  }
  _unregisterTiledLayerView(e65) {
    const t68 = this._basemapLayerViewHandles.get(e65);
    if (t68) {
      for (const e66 of t68)
        e66.remove();
      this._basemapLayerViewHandles.delete(e65);
    }
  }
  _updateTiledLayers() {
    if (!this.tilingScheme || this.view.suspended)
      return;
    const e65 = this.view.allLayerViews, t68 = [[], []];
    let i60 = null;
    e65.forEach((e66) => {
      if (!e66.layer || e66.suspended || !N3(e66) || !e66.fullExtent)
        return;
      const r62 = this._layerClassFromLayerView(e66);
      if (r62 === A27.MAP) {
        const t69 = e66.displayLevelRange.maxLevel;
        t69 !== 1 / 0 && (null === i60 || t69 > i60) && (i60 = t69);
      }
      t68[r62].push(e66);
    });
    for (const r62 of E32) {
      const e66 = this._layerViews[r62], i61 = t68[r62];
      i61.reverse();
      const s69 = i61.length;
      let a67 = e66.length !== s69;
      const n77 = new Array(s69), l63 = new Array(e66.length);
      this._layerIndexByUid[r62].clear();
      for (let t69 = 0; t69 < s69; t69++) {
        const s70 = i61[t69].uid;
        this._layerIndexByUid[r62].set(s70, t69);
        const o61 = e66.indexOf(i61[t69]);
        n77[t69] = o61, t69 !== o61 && (a67 = true), o61 > -1 && (l63[o61] = t69);
      }
      if (a67) {
        const e67 = this._postorderIterator;
        for (e67.reset(this._rootTiles); !e67.done; )
          e67.next().modifyLayers(l63, n77, r62);
        this._layerViews[r62] = i61, this._restartAllAgents(r62), this._updateTilesVisibility(this._rootTiles);
      }
    }
    this.tilingScheme.ensureMaxLod(i60) && this._viewChangeUpdate();
  }
  _restartAllAgents(e65) {
    const t68 = this._postorderIterator;
    for (t68.reset(this._rootTiles); !t68.done; ) {
      const i60 = t68.next();
      i60.restartAgents(e65), e65 === A27.ELEVATION && i60.computeElevationBounds();
    }
    this._updateRootTileElevationBounds();
  }
  layerViewByIndex(e65, t68) {
    return this._layerViews[t68][e65];
  }
  numLayers(e65) {
    return this._layerViews[e65].length;
  }
  _updateTileTextures(e65) {
    this._allTiles.forAll((t68) => {
      t68.updateAgents(A27.MAP), e65 === r24.IMMEDIATE ? this.renderer.updateTileTexture(t68, E33.TEXTURE_NOFADING) : t68.updateRenderData(A27.MAP, e65);
    }), this._evaluateTransparency();
  }
  _invalidateLayerData(e65, t68) {
    this._allTiles.forAll((i60) => i60.removeLayerAgent(e65, t68)), this._allTiles.forAll((i60) => i60.invalidateLayerData(e65, t68));
  }
  setTileTreeDirty() {
    this._allTilesDirty = true;
  }
  requestRender(e65 = O4.UPDATE) {
    this.renderer.setNeedsRender(e65);
  }
  requestUpdate() {
    1 == ++this._pendingUpdates && (this._hasPendingUpdates = true);
  }
  requestTileData(e65, t68, i60, r62) {
    const s69 = this.layerViewByIndex(t68, i60), a67 = s69.layer;
    return !a67.tilemapCache || _9(s69) ? this._requestTileData(e65, i60, s69, r62) : (++this._asyncWorkItems, a67.tilemapCache.fetchAvailability(e65.lij[0], e65.lij[1], e65.lij[2], { ...r62, timeout: 6e3 }).then(() => --this._asyncWorkItems).catch((t69) => {
      throw --this._asyncWorkItems, s6(r62), d(t69) || this._dataMissing(e65, i60, s69, { notInTilemap: true }), t69;
    }).then(() => this._frameTask.schedule(() => this._requestTileData(e65, i60, s69, r62), r62.signal)));
  }
  _requestTileData(e65, t68, i60, r62) {
    return t68 === A27.ELEVATION ? R8(i60) ? this._requestElevationTileData(e65, i60, r62) : Promise.reject() : W6(i60) ? this._requestMapTileData(e65, i60, r62) : Promise.reject();
  }
  _requestElevationTileData(e65, t68, i60) {
    ++this._asyncWorkItems;
    const r62 = (r63) => {
      if (a3(i60))
        return;
      const s70 = this._layerIndexByUid[A27.ELEVATION].get(t68.uid);
      null != s70 ? (this._usedMemory = null, this.requestUpdate(), this._elevationDataArrived(e65, s70, r63)) : s3.getLogger(this).warn("TerrainSurface: received data from unknown layer %d %s", A27.ELEVATION, e65.lij.toString());
    }, s69 = (i61) => {
      d(i61) || (this._dataMissing(e65, A27.ELEVATION, t68, i61), this.requestUpdate());
    };
    if (j5(t68.layer))
      return t68.layer.fetchTile(e65.lij[0], e65.lij[1], e65.lij[2], { noDataValue: l18, signal: i60.signal }).then((e66) => {
        if (!a3(i60))
          return this._frameTask.schedule(() => r62(e66), i60.signal, s69);
        s3.getLogger(this).warnOnce("A call to fetchTile resolved even though the request was aborted. fetchTile should not resolve if options.signal.aborted is true.");
      }, s69).finally(() => {
        --this._asyncWorkItems;
      });
    const a67 = t68.getTileUrl(e65.lij[0], e65.lij[1], e65.lij[2]);
    return this._elevationDataRequester.request(a67, "binary", i60).then((e66) => this._lercDecoder.decode(e66, { noDataValue: l18 }, i60.signal)).then((e66) => {
      e66 ? r62(new a19(e66)) : s69(new Error("LERC decoding failed"));
    }, s69).finally(() => {
      --this._asyncWorkItems;
    });
  }
  _requestMapTileData(e65, t68, i60) {
    ++this._asyncWorkItems;
    const r62 = (r63, s70) => {
      --this._asyncWorkItems, w13(s70), a3(i60) || (this._dataMissing(e65, A27.MAP, t68, r63), this.requestUpdate());
    }, s69 = (e66) => (t69) => r62(t69, e66), a67 = (r63) => this._frameTask.schedule(() => {
      --this._asyncWorkItems, this.requestUpdate(), a3(i60) ? w13(r63) : this._mapTileDataArrived(e65, t68, r63);
    }, i60.signal, s69(r63)).catch(s69(r63)), n77 = (e66, t69 = null) => this._frameTask.schedule(() => r62(e66, t69));
    if (_9(t68)) {
      const r63 = t68.schemaHelper.getLevelRowColumn(e65.lij);
      return t68.fetchTile(r63[0], r63[1], r63[2], i60).then(a67, n77);
    }
    if (O7(t68))
      return t68.fetchTile(e65.lij[0], e65.lij[1], e65.lij[2], i60).then(a67, n77);
    if (y7(t68) && j5(t68.layer))
      return t68.layer.fetchTile(e65.lij[0], e65.lij[1], e65.lij[2], i60).then((e66) => {
        if (a3(i60))
          return s3.getLogger(this).warnOnce("A call to fetchTile resolved even though the request was aborted. fetchTile should not resolve if options.signal.aborted is true."), void n77(c());
        a67(e66);
      }, n77);
    let o61 = t68.getTileUrl(e65.lij[0], e65.lij[1], e65.lij[2]);
    n12(t68.layer) && t68.layer.refreshTimestamp && (o61 += `${o61.includes("?") ? "&" : "?"}_ts=${t68.layer.refreshTimestamp}`);
    const h46 = t68.hasMixedImageFormats ? "image+type" : "image";
    return this._mapDataRequester.request(o61, h46, i60).then(a67, n77);
  }
  _mapTileDataArrived(e65, t68, i60) {
    const r62 = this._getLayerIdxByUID(A27.MAP, t68.uid);
    null != r62 ? e65.dataArrived(r62, A27.MAP, i60) : (w13(i60), s3.getLogger(this).warn("TerrainSurface: received data from unknown layer"));
  }
  _getLayerIdxByUID(e65, t68) {
    return this._layerIndexByUid[e65].get(t68);
  }
  _dataMissing(e65, t68, i60, r62) {
    const s69 = this._getLayerIdxByUID(t68, i60.uid);
    null != s69 ? e65.dataMissing(s69, t68, r62) : s3.getLogger(this).warn("TerrainSurface: received data from unknown layer");
  }
  updateTileOverlayParams(e65) {
    this._rootTiles && this.overlayManager && (this._allTiles.forAll((e66) => {
      e66.renderData && this.overlayManager.setTileParameters(e66);
    }), this._renderer.setNeedsRender(e65));
  }
  get performanceInfo() {
    const e65 = this._performanceInfo;
    return e65.numNodes = this._allTiles.length, e65.numLeaves = e65.numVisible = e65.numRendered = e65.numLoadedPerLevel.length = e65.numRenderedPerLevel.length = 0, this._allTiles.forAll((t68) => {
      t68.isLeaf && e65.numLeaves++;
      const i60 = t68.level;
      t68.renderData && (e65.numLoadedPerLevel[i60] = (e65.numLoadedPerLevel[i60] || 0) + 1), t68.visible && (e65.numVisible++, t68.rendered && (e65.numRenderedPerLevel[i60] = (e65.numRenderedPerLevel[i60] || 0) + 1, e65.numRendered++));
    }), e65;
  }
  get usedMemory() {
    return this.tilingScheme ? (null == this._usedMemory && (this._usedMemory = this._recalculateUsedMemory()), null != this._usedMemory ? this._usedMemory : 0) : 0;
  }
  _recalculateUsedMemory() {
    return this.tilingScheme ? this._allTiles.reduce((e65, t68) => e65 + t68.usedMemory, 0) : null;
  }
  getUsedMemoryForLayerView(e65) {
    let t68 = this.overlayManager.gpuMemoryUsage;
    const i60 = this._layerClassFromLayerView(e65), r62 = this._getLayerIdxByUID(i60, e65.uid);
    return null != r62 && this._allTiles.forAll((e66) => t68 += e66.getUsedMemoryForLayer(i60, r62)), t68;
  }
  getTile(e65) {
    if (null == e65 || null == this._rootTiles)
      return null;
    const t68 = e65.split("/").map((e66) => +e66);
    if (0 === t68[0])
      return this._rootTiles.find((e66) => e66.lij[1] === t68[1] && e66.lij[2] === t68[2]);
    const i60 = 2 ** t68[0], r62 = Math.floor(t68[1] / i60), s69 = Math.floor(t68[2] / i60);
    let a67;
    if (this._rootTiles.some((e66) => e66.lij[1] === r62 && e66.lij[2] === s69 && (a67 = e66, true)), a67) {
      let e66 = 1 << t68[0] - 1;
      for (; a67.lij[0] < t68[0]; ) {
        let i61 = t68[1] & e66 ? 2 : 0;
        if ((t68[2] & e66) > 0 && i61++, !a67.children[i61])
          return null;
        a67 = a67.children[i61], e66 >>= 1;
      }
      return a26(a67.lij[0] === t68[0] && a67.lij[1] === t68[1] && a67.lij[2] === t68[2], "not the right tile?"), a67;
    }
    return null;
  }
  get renderPatchBorders() {
    return this._renderer.renderPatchBorders;
  }
  set renderPatchBorders(e65) {
    this._renderer.renderPatchBorders = e65;
  }
  get visualizeNormals() {
    return this._renderer.visualizeNormals;
  }
  set visualizeNormals(e65) {
    this._renderer.visualizeNormals = e65;
  }
  get renderingDisabled() {
    return this._renderer.renderingDisabled;
  }
  set renderingDisabled(e65) {
    this._renderer.renderingDisabled = e65;
  }
  get test() {
    const e65 = this;
    return { renderer: e65._renderer, lercDecoder: e65._lercDecoder, forceReload: () => {
      null != e65._rootTiles && e65._rootTiles.length > 0 && (e65._mergeTile(e65._rootTiles[0]), e65._viewChangeUpdate());
    }, getTiles: () => e65._allTiles.toArray(), getRenderedTiles() {
      _t2.clear(), e65._allTiles.forAll((e66) => {
        e66.visible && e66.rendered && _t2.push(e66);
      });
      const t68 = _t2.toArray();
      return u11(e65.renderOrder, t68), t68;
    }, lockTilingScheme(t68, i60) {
      e65._extentHelper.defaultTiledLayersExtent = i60, e65.tilingSchemeLogic.test.lockTilingScheme(t68);
    } };
  }
  checkAllTilesWaterproofness() {
    if (!s27)
      return;
    const e65 = this._rootTiles;
    if (null == e65)
      return;
    const t68 = (e66) => {
      var _a, _b, _c;
      return ((_c = (_b = (_a = e66 == null ? void 0 : e66.renderData) == null ? void 0 : _a.geometry) == null ? void 0 : _b.indices) == null ? void 0 : _c.length) > 0;
    }, i60 = (e66, i61) => {
      t68(e66) && console.error("Tile[", e66.lij, "] has geometry although parent[", i61.lij, "] has geom");
    }, r62 = (e66) => {
      var _a, _b;
      if (e66.intersectsClippingArea)
        if (e66.renderData && !e66.renderData.geometryState && console.error("Tile[", e66.lij, "] has renderData but not geometryState"), e66.renderData && !e66.renderData.geometry && console.error("Tile[", e66.lij, "] has renderData but not geometryInfo"), !((_a = e66.renderData) == null ? void 0 : _a.geometry) || (((_b = e66.renderData.geometry.indices) == null ? void 0 : _b.length) ?? 0) > 0 || console.error("Tile[", e66.lij, "] has renderData but no indices - geometryInfo: ", e66.renderData.geometry), t68(e66)) {
          e66.checkGeometryWaterproofness();
          for (const t69 of e66.children)
            i60(t69, e66);
        } else if (e66.isLeaf)
          console.error("Tile[", e66.lij, "] has no geometry and no children, from root to leaf");
        else
          for (const t69 of e66.children)
            r62(t69);
    }, s69 = (e66) => {
      var _a;
      const t69 = ((_a = e66.parent) == null ? void 0 : _a.visible) ?? true, i61 = e66.visible;
      e66.computeVisibility();
      const r63 = e66.visible;
      if (i61 !== r63 && t69 && console.error(" Tile[", e66.lij, "] has out of date visibility: ", i61, " instead of ", r63), !e66.isLeaf)
        for (const a67 of e66.children)
          s69(a67);
    };
    for (const a67 of e65)
      r62(a67), s69(a67);
  }
  get isGlobal() {
    return this._isGlobal;
  }
  get isWebMercator() {
    return this._isWebMercator;
  }
  get isWebMercatorOnPlateeCarree() {
    return this._isWebMercatorOnPlateeCarree;
  }
  isEastEndWrap(e65) {
    return this.isGlobal && e65[2] === this.lijEastEnd(e65[0]) - 1;
  }
  isWestEndWrap(e65) {
    return this.isGlobal && 0 === e65[2];
  }
  lijEastEnd(e65) {
    return 2 ** (e65 + (null != this.spatialReference && this.spatialReference.isGeographic ? 1 : 0));
  }
  wrapEastWest(e65) {
    const t68 = this.lijEastEnd(e65[0]), i60 = e65[2];
    if (0 <= i60 && i60 < t68)
      return e65;
    if (!this.isGlobal)
      return null;
    const r62 = (i60 + (i60 < 0 ? t68 : 0)) % t68;
    return [e65[0], e65[1], r62];
  }
  enableInternalChecks(e65) {
    E10(e65);
  }
  enableWaterproofnessChecks(e65) {
    S9(e65);
  }
};
e([y2()], nt3.prototype, "_renderer", void 0), e([y2({ constructOnly: true })], nt3.prototype, "_scaleRangeQueries", void 0), e([y2({ constructOnly: true })], nt3.prototype, "view", void 0), e([y2({ constructOnly: true })], nt3.prototype, "overlayManager", void 0), e([y2()], nt3.prototype, "_hasPendingUpdates", void 0), e([y2()], nt3.prototype, "_asyncWorkItems", void 0), e([y2()], nt3.prototype, "_allTilesDirty", void 0), e([y2()], nt3.prototype, "_allTilesSorted", void 0), e([y2()], nt3.prototype, "_viewChanged", void 0), e([y2()], nt3.prototype, "_splitLimits", void 0), e([y2({ readOnly: true })], nt3.prototype, "_watchUpdatingTracking", void 0), e([y2()], nt3.prototype, "_frameTask", void 0), e([y2({ readOnly: true })], nt3.prototype, "snapLevel", null), e([y2({ readOnly: true })], nt3.prototype, "lodSnapping", null), e([y2()], nt3.prototype, "_userClippingExtent", null), e([y2()], nt3.prototype, "_rootTilesExtent", void 0), e([y2({ readOnly: true })], nt3.prototype, "extent", null), e([y2({ readOnly: true })], nt3.prototype, "groundExtent", null), e([y2({ readOnly: true })], nt3.prototype, "_tilingSchemeExtent", null), e([y2({ readOnly: true })], nt3.prototype, "updating", null), e([y2({ readOnly: true })], nt3.prototype, "running", null), e([y2(t22)], nt3.prototype, "updatingProgress", void 0), e([y2({ readOnly: true })], nt3.prototype, "updatingProgressValue", null), e([y2()], nt3.prototype, "_maxNumUpdating", void 0), e([y2()], nt3.prototype, "baseOpacity", null), e([y2()], nt3.prototype, "hasCompositeBlendMode", void 0), e([y2({ readOnly: true })], nt3.prototype, "viewingMode", null), e([y2()], nt3.prototype, "maxTextureScale", void 0), e([y2({ readOnly: true })], nt3.prototype, "ready", null), e([y2({ value: O8.FRONT_TO_BACK })], nt3.prototype, "renderOrder", null), e([y2({ readOnly: true })], nt3.prototype, "rootTiles", null), e([y2()], nt3.prototype, "_rootTiles", void 0), e([y2({ readOnly: true })], nt3.prototype, "spatialReference", null), e([y2({ type: h6 })], nt3.prototype, "backgroundColor", null), e([y2({ value: false })], nt3.prototype, "slicePlaneEnabled", null), e([y2({ readOnly: true })], nt3.prototype, "tilingScheme", void 0), e([y2({ readOnly: true })], nt3.prototype, "tilingSchemeLocked", null), e([y2({ readOnly: true })], nt3.prototype, "tilingSchemeLogic", void 0), e([y2()], nt3.prototype, "wireframe", null), e([y2({ value: false })], nt3.prototype, "suspended", null), e([y2()], nt3.prototype, "textureFadeDuration", null), e([y2()], nt3.prototype, "visibleElevationBounds", void 0), e([y2()], nt3.prototype, "rootTileElevationBounds", void 0), e([y2()], nt3.prototype, "_layerViewsDirty", void 0), e([y2()], nt3.prototype, "renderPatchBorders", null), e([y2()], nt3.prototype, "visualizeNormals", null), e([y2()], nt3.prototype, "renderingDisabled", null), nt3 = e([a4("esri.views.3d.terrain.TerrainSurface")], nt3);
var lt3 = nt3;
function ot4(e65, t68) {
  return e65[0] === t68[0] && e65[1] === t68[1] && e65[2] === t68[2];
}
function ht3(e65) {
  const t68 = e65.children;
  if (!t68[0])
    return false;
  for (const i60 of t68)
    if (i60.shouldLoad)
      return true;
  for (const i60 of t68)
    if (ht3(i60))
      return true;
  return false;
}
function dt2(e65) {
  var _a;
  return e65.isLeaf && (((_a = e65.parent) == null ? void 0 : _a.shouldLoad) ?? false);
}
var pt2 = n14();
var ut3 = i5();
var ct3 = [0, 0, 0];
var _t2 = new l2();
var gt2 = { spatialReference: null, extent: i5(), context: "ground" };
var mt2 = { spatialReference: null, extent: null, scale: 0 };
function Tt2(e65, t68, i60) {
  var _a;
  for (const r62 of e65) {
    if (!r62.containsPointXY(t68, i60))
      continue;
    let e66 = r62;
    for (; e66 && !e66.renderData; ) {
      const r63 = (t68 > e66.extentMidX ? 1 : 0) + (i60 < e66.extentMidY ? 2 : 0);
      e66 = e66.children[r63];
    }
    const s69 = ((_a = e66 == null ? void 0 : e66.renderData) == null ? void 0 : _a.geometryState.samplerData) ?? null;
    return e46(t68, i60, s69);
  }
  return null;
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/ModelDirtySet.js
var n63 = class {
  constructor(e65, t68, r62) {
    this.operation = e65, this.geometry = t68, this.states = r62;
  }
};
var m37 = class extends m {
  constructor(e65) {
    super(e65), this._residentGeomRecords = /* @__PURE__ */ new Map(), this._dirtyGeomRecords = /* @__PURE__ */ new Map(), this.dirty = false;
  }
  commitLayer(e65, t68) {
    const r62 = this._dirtyGeomRecords.get(e65);
    r62 && (r62.forEach((r63, o61) => {
      const s69 = this._ensureGeomRecord(e65, o61);
      r63.forEach(({ geometry: e66, operation: r64, states: d52 }, n77) => {
        let m44 = false;
        if (r64 === E11.UPDATE) {
          const r65 = s69.get(n77);
          if (r65) {
            if (d52 & I7.TRANSFORMATION) {
              const t69 = this.model.getObject(o61);
              this.model.updateRenderGeometryTransformation(t69, e66, r65) && (m44 = true);
            }
            m44 || t68.updates.push({ renderGeometry: r65, updateType: d52 });
          } else
            s18(false, "ModelDirtySet.getAddRemoveListFilteredByLayers: invalid update");
        }
        if (r64 === E11.REMOVE || m44) {
          const e67 = s69.get(n77);
          e67 ? (t68.removes.push(e67), s69.delete(n77)) : r64 === E11.REMOVE && s18(false, "ModelDirtySet.getAddRemoveListFilteredByLayers: invalid remove");
        }
        if (r64 === E11.ADD || m44) {
          const r65 = this.model.getObject(o61);
          if (null != r65) {
            const o62 = this.model.getRenderGeometry(r65, e66);
            t68.adds.push(o62), s69.set(n77, o62);
          }
        }
      }), 0 === s69.size && this._residentGeomRecords.get(e65).delete(o61);
    }), 0 === this._residentGeomRecords.get(e65).size && this._residentGeomRecords.delete(e65), this._dirtyGeomRecords.delete(e65), this.dirty = this._hasDirtyGeometryRecords);
  }
  getResidentRenderGeometries(e65, t68) {
    const r62 = this._residentGeomRecords.get(e65);
    r62 && r62.forEach((e66) => e66.forEach((e67) => t68.push(e67)));
  }
  _objectStateChanged(e65, t68) {
    for (const r62 of t68.geometries)
      this._updateOrCreateDirtyRecord(t68, r62, null, E11.UPDATE, e65);
  }
  visibilityChanged(e65) {
    this._objectStateChanged(I7.VISIBILITY, e65);
  }
  highlightChanged(e65) {
    this._objectStateChanged(I7.HIGHLIGHT, e65);
  }
  occlusionChanged(e65) {
    this._objectStateChanged(I7.OCCLUDEE, e65);
  }
  objectGeometryUpdated(e65) {
    this._updateOrCreateDirtyRecord(e65.object, e65.geometry, null, E11.UPDATE, I7.GEOMETRY);
  }
  layerAdded(e65) {
    e65.objects.forAll((t68) => this._layerObjectAdded(e65, t68));
  }
  layerRemoved(e65) {
    e65.objects.forAll((t68) => this._layerObjectRemoved(e65, t68));
  }
  layerObjectAdded(e65) {
    this._layerObjectAdded(e65.layer, e65.object);
  }
  _layerObjectAdded(e65, t68) {
    const r62 = e65.id;
    for (const o61 of t68.geometries)
      this._objectGeometryAdded(t68, o61, r62);
  }
  layerObjectRemoved(e65) {
    this._layerObjectRemoved(e65.layer, e65.object);
  }
  layerObjectsAdded(e65) {
    for (const t68 of e65.objects)
      this._layerObjectAdded(e65.layer, t68);
  }
  layerObjectsRemoved(e65) {
    for (const t68 of e65.objects)
      this._layerObjectRemoved(e65.layer, t68);
  }
  _layerObjectRemoved(e65, t68) {
    const r62 = e65.id;
    for (const o61 of t68.geometries)
      this._objectGeometryRemoved(t68, o61, r62);
  }
  shaderTransformationChanged(e65) {
    const t68 = this._residentGeomRecords.get(e65.id);
    t68 && t68.forEach((e66, t69) => {
      const r62 = this.model.getObject(t69);
      r62 && r62.hasVolativeTransformation() && e66.forEach((e67) => e67.shaderTransformationChanged());
    });
  }
  objectTransformation(e65) {
    const t68 = this._getParentLayerId(e65), r62 = e65.id;
    this._ensureGeomRecord(t68, r62).forEach((r63) => {
      this._updateOrCreateDirtyRecord(e65, r63.geometry, t68, E11.UPDATE, I7.TRANSFORMATION);
    });
  }
  objectShaderTransformation() {
  }
  objectGeometryAdded(e65) {
    this._objectGeometryAdded(e65.object, e65.geometry);
  }
  _objectGeometryAdded(e65, t68, r62 = null) {
    this._updateOrCreateDirtyRecord(e65, t68, r62, E11.ADD);
  }
  objectGeometryRemoved(e65) {
    this._objectGeometryRemoved(e65.object, e65.geometry);
  }
  _objectGeometryRemoved(e65, t68, r62 = null) {
    this._updateOrCreateDirtyRecord(e65, t68, r62, E11.REMOVE);
  }
  _updateOrCreateDirtyRecord(e65, t68, r62, o61, s69 = I7.NONE) {
    r62 = r62 ?? this._getParentLayerId(e65);
    const d52 = e65.id, m44 = t68.id, h46 = this._ensureDirtyRecord(r62, d52), y32 = h46.get(m44);
    if (y32) {
      const e66 = y32.operation;
      e66 === E11.REMOVE && o61 === E11.ADD && y32.states !== I7.NONE ? y32.operation = E11.UPDATE : e66 === E11.REMOVE && o61 === E11.ADD || e66 === E11.ADD && o61 === E11.REMOVE ? h46.delete(m44) : e66 !== E11.UPDATE || o61 !== E11.REMOVE && o61 !== E11.UPDATE ? (s18((e66 === E11.REMOVE || e66 === E11.ADD) && o61 === E11.UPDATE, "ModelDirtySet.objectGeometryAdded: inconsistent state"), y32.states |= s69) : (y32.operation = o61, y32.states |= s69);
    } else
      h46.set(m44, new n63(o61, t68, s69));
    this.dirty = this._hasDirtyGeometryRecords;
  }
  _ensureGeomRecord(e65, t68) {
    let r62 = this._residentGeomRecords.get(e65);
    r62 || (r62 = /* @__PURE__ */ new Map(), this._residentGeomRecords.set(e65, r62));
    let o61 = r62.get(t68);
    return o61 || (o61 = /* @__PURE__ */ new Map(), r62.set(t68, o61)), o61;
  }
  get _hasDirtyGeometryRecords() {
    return n6(this._dirtyGeomRecords, (e65) => n6(e65, (e66) => e66 && e66.size > 0));
  }
  _ensureDirtyRecord(e65, t68) {
    let r62 = this._dirtyGeomRecords.get(e65);
    r62 || (r62 = /* @__PURE__ */ new Map(), this._dirtyGeomRecords.set(e65, r62));
    let o61 = r62.get(t68);
    return o61 || (o61 = /* @__PURE__ */ new Map(), r62.set(t68, o61)), o61;
  }
  _getParentLayerId(e65) {
    return e65.parentLayer ? e65.parentLayer.id : n5;
  }
  formatDebugInfo() {
    const e65 = ["ADD", "UPD", void 0, "REM"];
    let t68 = "";
    return this._dirtyGeomRecords.forEach((r62, o61) => {
      r62.forEach((r63, s69) => {
        t68.length > 0 && (t68 += "\n"), t68 += o61 + "." + s69;
        const d52 = [];
        r63.forEach((e66) => {
          const t69 = e66.operation;
          d52[t69] || (d52[t69] = []), d52[t69].push(e66.geometry.id);
        });
        for (let o62 = 0; o62 < d52.length; o62++)
          if (d52[o62]) {
            t68 += " " + e65[o62 - 1] + ": ";
            for (let e66 = 0; e66 < d52[o62].length; e66++)
              t68 += d52[o62][e66] + ", ";
          }
      });
    }), t68;
  }
  get test() {
    const e65 = this;
    return { get residentLayerCount() {
      return e65._residentGeomRecords.size;
    }, get residentObjectCount() {
      return Array.from(e65._residentGeomRecords.values()).reduce((e66, t68) => e66 + t68.size, 0);
    }, commit: (t68) => e65._dirtyGeomRecords.forEach((r62, o61) => e65.commitLayer(o61, t68)) };
  }
};
e([y2({ constructOnly: true })], m37.prototype, "model", void 0), e([y2()], m37.prototype, "dirty", void 0), m37 = e([a4("esri.views.3d.webgl-engine.lib.ModelDirtySet")], m37);
var h40 = m37;

// node_modules/@arcgis/core/views/3d/webgl-engine/parts/Model.js
var l55 = class extends m {
  constructor() {
    super(...arguments), this.dirtySet = new h40({ model: this }), this._content = /* @__PURE__ */ new Map(), this._originFactory = new f17(null);
  }
  getObject(t68) {
    return this._content.get(t68);
  }
  add(t68) {
    const e65 = t68.id;
    s18(!this._content.has(e65), "Model/Stage already contains object to be added"), this._content.set(e65, t68), n28(t68) && this.dirtySet.layerAdded(t68);
  }
  remove(t68) {
    s18(this._content.has(t68.id), "Model/Stage doesn't contain object to be removed"), this._content.delete(t68.id), t68.unload(), n28(t68) && this.dirtySet.layerRemoved(t68);
  }
  addMany(t68) {
    for (const e65 of t68)
      null != e65 && (s18(!this._content.has(e65.id), "Model/Stage already contains object to be added"), this._content.set(e65.id, e65));
  }
  removeMany(t68) {
    for (const e65 of t68)
      s18(this._content.has(e65.id), "Model/Stage doesn't contain object to be removed"), this._content.delete(e65.id), e65.unload();
  }
  has(t68) {
    return this._content.has(t68.id);
  }
  forEachOfType(t68, e65) {
    this._content.forEach((o61) => {
      o61.type === t68 && e65(o61);
    });
  }
  getRenderGeometry(t68, e65) {
    const { shaderTransformer: o61, localOrigin: r62 } = e65, n77 = new a27(e65, { shaderTransformer: o61, castShadow: t68.castShadow });
    return n77.updateTransformation((o62) => t68.getCombinedStaticTransformation(e65, o62)), n77.localOrigin = null != r62 ? r62 : this._originFactory.getOrigin(n77.boundingSphere), n77;
  }
  updateRenderGeometryTransformation(t68, e65, o61) {
    if (null == t68)
      return false;
    o61.updateTransformation((o62) => t68.getCombinedStaticTransformation(e65, o62));
    const r62 = this._originFactory.getOrigin(o61.boundingSphere);
    return o61.localOrigin !== r62;
  }
  getStats() {
    const t68 = {}, e65 = Array.from(this._content.values());
    for (let o61 = 0; o61 < e19.COUNT; ++o61)
      t68[o61] = e65.filter((t69) => t69.type === o61).length;
    return { contentTypes: t68, dirtySet: this.dirtySet.formatDebugInfo() };
  }
  get test() {
    return { content: Array.from(this._content.values()) };
  }
};
e([y2({ constructOnly: true })], l55.prototype, "dirtySet", void 0), l55 = e([a4("esri.views.3d.webgl-engine.parts.Model")], l55);

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/IndexRange/ComponentRangeRunLengthEncoded.js
var t61 = class {
  constructor(t68) {
    this._totalCount = t68, this._indexRanges = [0, t68];
  }
  allVisible() {
    return this.componentCount() === this._totalCount;
  }
  allInvisible() {
    return 0 === this._indexRanges.length;
  }
  componentCount() {
    const t68 = this._indexRanges;
    let n77 = 0;
    for (let e65 = 0; e65 < t68.length; e65 += 2)
      n77 += t68[e65 + 1];
    return n77;
  }
  reset(t68) {
    "all" === t68 || t68.length === this._totalCount ? this._indexRanges = [0, this._totalCount] : this._indexRanges = n64(t68);
  }
  forEachComponent(t68) {
    const n77 = this._indexRanges;
    for (let e65 = 0; e65 < n77.length; e65 += 2) {
      const s69 = n77[e65], o61 = s69 + n77[e65 + 1];
      for (let n78 = s69; n78 < o61; n78++)
        if (!t68(n78))
          return false;
    }
    return true;
  }
  forEachComponentRange(t68) {
    const n77 = this._indexRanges;
    for (let e65 = 0; e65 < n77.length; e65 += 2) {
      const s69 = n77[e65];
      if (!t68(s69, s69 + n77[e65 + 1]))
        return false;
    }
    return true;
  }
  computeOffsetRanges(t68) {
    const n77 = new Array(this._indexRanges.length), e65 = this._indexRanges;
    for (let s69 = 0; s69 < e65.length; s69 += 2) {
      const o61 = e65[s69], r62 = o61 + e65[s69 + 1], i60 = t68[o61], l63 = t68[r62];
      n77[s69] = i60, n77[s69 + 1] = l63 - i60;
    }
    return n77;
  }
};
function n64(t68) {
  const n77 = new Array();
  if (0 === t68.length)
    return n77;
  let e65 = t68[0], s69 = 1;
  for (let o61 = 1; o61 < t68.length; o61++) {
    const r62 = t68[o61];
    e65 + s69 === r62 ? s69 += 1 : (n77.push(e65), n77.push(s69), e65 = r62, s69 = 1);
  }
  return n77.push(e65), n77.push(s69), n77;
}

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/ComponentData.js
var e52 = class {
  constructor(e65, h46) {
    this.offsets = h46, this.pickability = null, this.highlightCounts = null, this.verticalOffsets = null, this.cachedGeometryRanges = null, this.cachedHighlightRanges = null, this.cachedDefaultRanges = null;
    const i60 = this.count;
    this.visibility = new t61(i60), this.materialDataBuffer = e65.getBuffer(i60), this.materialDataIndices = new Uint16Array(i60);
    for (let t68 = 0; t68 < i60; t68++)
      this.materialDataIndices[t68] = this.materialDataBuffer.acquireIndex();
  }
  destroy() {
    for (let t68 = 0; t68 < this.count; t68++)
      this.materialDataBuffer.releaseIndex(this.materialDataIndices[t68]);
  }
  get count() {
    return this.offsets.length - 1;
  }
  get geometryRanges() {
    return null == this.cachedGeometryRanges && (this.cachedGeometryRanges = this.visibility.computeOffsetRanges(this.offsets)), this.cachedGeometryRanges;
  }
  get highlightRanges() {
    return null == this.highlightCounts ? null : (this._updateCachedHighlightRanges(), this.cachedHighlightRanges);
  }
  get defaultShadowMapRanges() {
    return null == this.highlightCounts ? this.geometryRanges : (this._updateCachedHighlightRanges(), this.cachedDefaultRanges);
  }
  highlightsDirty() {
    this.cachedHighlightRanges = null, this.cachedDefaultRanges = null;
  }
  visibilityDirty() {
    this.cachedGeometryRanges = null, this.highlightsDirty();
  }
  _updateCachedHighlightRanges() {
    if ((null == this.cachedHighlightRanges || null == this.cachedDefaultRanges) && null != this.highlightCounts) {
      const { highlightRanges: t68, defaultRanges: e65 } = h41(this.highlightCounts, this.visibility, this.offsets);
      this.cachedHighlightRanges = t68, this.cachedDefaultRanges = e65;
    }
  }
};
function h41(t68, e65, h46) {
  const i60 = [], s69 = [];
  let a67 = h46.length, n77 = h46.length;
  return e65.forEachComponent((e66) => (t68[e66] > 0 ? (a67 !== e66 - 1 && (i60.length && i60.push(h46[a67 + 1] - i60[i60.length - 1]), i60.push(h46[e66])), a67 = e66) : (n77 !== e66 - 1 && (s69.length && s69.push(h46[n77 + 1] - s69[s69.length - 1]), s69.push(h46[e66])), n77 = e66), true)), i60.length && i60.push(h46[a67 + 1] - i60[i60.length - 1]), s69.length && s69.push(h46[n77 + 1] - s69[s69.length - 1]), { highlightRanges: i60, defaultRanges: s69 };
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/ComponentUtils.js
function n65(n77, i60, e65, s69) {
  if (e65 >= i60)
    return n77;
  null == n77 && (n77 = r53());
  const a67 = n77.isVisibleBit;
  let l63 = n77.data;
  const c58 = u42(l63), f49 = e65 / c58 | 0, h46 = e65 - c58 * f49, B20 = (i60 - 1) / c58 | 0, E39 = l63, b26 = s69 === a67;
  if (!(e65 < E39.length * c58) && b26) {
    const n78 = f49 + 1, i61 = Math.ceil(E39.length * n3), r62 = B20 + 1;
    let e66 = Math.max(n78, i61);
    e66 = Math.min(e66, r62), l63 = new Uint32Array(e66), l63.set(E39);
  }
  return f49 < l63.length && (l63[f49] = o53(l63[f49], h46, b26)), n77.data = l63, n77;
}
function i55(t68, n77) {
  if (null == t68)
    return true;
  const { isVisibleBit: i60, data: r62 } = t68, o61 = u42(r62);
  return n77 < r62.length * o61 ? e53(i60, r62, n77, o61) : !t68.isVisibleBit;
}
function r53(t68 = true) {
  return { isVisibleBit: !t68, data: new Uint32Array(0) };
}
function e53(t68, n77, i60, r62) {
  const e65 = i60 / r62 | 0, u51 = i60 - e65 * r62;
  return s60(n77[e65], u51) === t68;
}
function u42(t68) {
  const n77 = 8;
  return t68.BYTES_PER_ELEMENT * n77;
}
function o53(t68, n77, i60) {
  return t68 & ~(1 << n77) | (i60 ? 1 : 0) << n77;
}
function s60(t68, n77) {
  return 0 != (t68 & 1 << n77);
}

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/IntersectionGeometry.js
var f43 = class {
  constructor(t68, o61) {
    this._components = o61, this._indices = null != t68.indices ? t9(t68.indices) : y5(t68.positions.length / 3), this._positions = t68.positions, this._componentIntersectionData = new Array(o61.count);
  }
  getComponentAabb(t68, o61) {
    this._perComponentAabbs || (this._perComponentAabbs = this._computePerComponentAabbs());
    for (let n77 = 0; n77 < 6; n77++)
      o61[n77] = this._perComponentAabbs[6 * t68 + n77];
    return o61;
  }
  getComponentPositions(t68, o61) {
    o61.indices = this._indices, o61.data = this._positions, o61.stride = 3, o61.startIndex = this._components.offsets[t68], o61.endIndex = this._components.offsets[t68 + 1];
  }
  intersect(o61, n77, s69, i60, e65, f49, b26) {
    const d52 = new s20(this._positions, 3, false, 3), A33 = this._indices, C26 = this._components.offsets, g36 = T9(o61, n77, _29), j25 = o61[2], y32 = n77[2];
    this._components.visibility.forEachComponent((m44) => {
      if (!i55(this._components.pickability, m44))
        return true;
      const a67 = this.getComponentAabb(m44, u43);
      if (null != f49) {
        const t68 = f49[m44];
        null != e65 ? e65.componentOffset = t68 : (o61[2] = j25 - t68, n77[2] = y32 - t68);
      }
      if (null != e65 && e65.applyToAabb(a67), !I6(a67, o61, g36, s69))
        return true;
      const _33 = C26[m44] / 3, I28 = C26[m44 + 1] / 3, x34 = (o62, n78, s70) => b26(m44, o62, S2(n78, n78, i60), s70);
      return null == e65 && I28 - _33 > s59 ? (null == this._componentIntersectionData[m44] && (this._componentIntersectionData[m44] = new d47(this._indices, _33, I28, d52)), this._componentIntersectionData[m44].intersectRay({ r0: o61, r1: n77 }, x34)) : g7(o61, n77, _33, I28, A33, d52, void 0, e65, x34), true;
    });
  }
  _computePerComponentAabbs() {
    const t68 = this._components.count, o61 = t14(6 * t68), n77 = this._indices, i60 = this._positions, e65 = this._components.offsets;
    let r62 = 0;
    for (let s69 = 0; s69 < t68; s69++) {
      const t69 = e65[s69], p54 = e65[s69 + 1];
      let m44 = 1 / 0, c58 = 1 / 0, a67 = 1 / 0, h46 = -1 / 0, l63 = -1 / 0, f49 = -1 / 0;
      for (let o62 = t69; o62 < p54; o62++) {
        const t70 = 3 * n77[o62], s70 = i60[t70], e66 = i60[t70 + 1], r63 = i60[t70 + 2];
        m44 = Math.min(m44, s70), c58 = Math.min(c58, e66), a67 = Math.min(a67, r63), h46 = Math.max(h46, s70), l63 = Math.max(l63, e66), f49 = Math.max(f49, r63);
      }
      o61[r62++] = m44, o61[r62++] = c58, o61[r62++] = a67, o61[r62++] = h46, o61[r62++] = l63, o61[r62++] = f49;
    }
    return o61;
  }
  get positions() {
    return this._positions;
  }
  get indices() {
    return this._indices;
  }
};
var _29 = n7();
var u43 = i6();

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/Renderable.js
var t62 = class {
  constructor(t68, s69, e65) {
    this.material = t68, this.geometry = s69, this.meta = e65;
  }
  destroy() {
    this.material.dispose(), this.geometry.dispose();
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/RenderGeometry.js
var s61 = class {
  constructor(s69, i60, t68, e65) {
    this.vao = s69, this.primitiveType = i60, this.parameters = t68, this.indexed = e65;
  }
  dispose() {
    this.vao.dispose();
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/depthRange.js
var r54 = class {
  constructor() {
    this.near = Number.MAX_VALUE, this.far = -Number.MAX_VALUE;
  }
};
function n66(r62, n77) {
  return { near: r62, far: n77 };
}
function a56(r62) {
  return r62 ? t63(r62, 1 / 0, -1 / 0) : n66(1 / 0, -1 / 0);
}
function t63(r62, n77, a67) {
  return r62.near = n77, r62.far = a67, r62;
}
function e54(r62, n77, a67 = r62) {
  return null != n77 && (a67.near = Math.min(r62.near, n77.near), a67.far = Math.max(r62.far, n77.far)), a67;
}
function u44(r62, n77) {
  return r62.near <= n77 && n77 <= r62.far;
}
var f44 = { near: 0, far: 0 };

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/DepthRange.js
function S23(t68, n77) {
  const o61 = a56(), { eye: e65, frustum: r62, viewForward: a67 } = t68;
  n77.forAll((t69) => {
    const n78 = null != t69.offsetObb ? t69.offsetObb : t69.obb, s69 = P(J(G18, n78.center, e65), a67), l63 = ne(n78, a67);
    if (u44(o61, s69 - l63) && u44(o61, s69 + l63))
      return;
    const u51 = C24(n78, r62);
    if (-1 === u51)
      return;
    if (0 === u51)
      return y29.far = s69 + l63, y29.near = s69 - l63, void e54(o61, y29);
    const i60 = q18.pushNew();
    i60.near = s69 - l63, i60.far = s69 + l63, i60.mask = u51, i60.object = t69;
  });
  for (let s69 = 0; s69 < q18.length; s69++) {
    const t69 = q18.data[s69];
    if (u44(o61, t69.near) && u44(o61, t69.far))
      continue;
    y29.far = t69.far, y29.near = 1 / 0;
    const n78 = N17(null != t69.object.offsetObb ? t69.object.offsetObb : t69.object.obb, e65, A30, (n79) => {
      let o62 = x31;
      for (let e66 = 0; e66 < R17 && n79.length > 0; e66++) {
        if (0 == (t69.mask & 1 << e66))
          continue;
        B17(r62[e66], n79, o62);
        const a68 = n79;
        n79 = o62, o62 = a68;
      }
      for (let t70 = 0; t70 < n79.length; t70 += 3) {
        o2(v34, n79.data[t70], n79.data[t70 + 1], n79.data[t70 + 2]);
        const o63 = P(J(v34, v34, e65), a67);
        y29.near = Math.min(y29.near, o63);
      }
    });
    0 === n78 && (y29.near = 0), e54(o61, y29);
  }
  return q18.length = 0, o61;
}
var q18 = new l2({ allocator: (t68) => t68 || { near: 1 / 0, far: -1 / 0, mask: 0, object: null }, deallocator: (n77) => (n77.object = i(n77.object), n77) });
var y29 = a56();
var v34 = n7();
var O23 = n7();
var A30 = new l2({ deallocator: null });
var x31 = new l2({ deallocator: null });
function B17(t68, n77, o61) {
  o61.length = 0;
  const e65 = n77.length - 3;
  F25(v34, n77, e65);
  const r62 = R5(t68, v34);
  r62 <= 0 && (o61.push(v34[0]), o61.push(v34[1]), o61.push(v34[2]));
  let a67 = 0, s69 = r62;
  for (; a67 < e65; a67 += 3) {
    F25(O23, n77, a67);
    const e66 = R5(t68, O23);
    if (s69 * e66 < 0) {
      A2(v34, O23, v34, e66 / (e66 - s69)), M16(o61, v34);
    }
    e66 <= 0 && M16(o61, O23), s69 = e66, r5(v34, O23);
  }
  if (s69 * r62 < 0) {
    F25(O23, n77, e65);
    A2(v34, O23, v34, r62 / (r62 - s69)), M16(o61, v34);
  }
}
function F25(t68, n77, o61) {
  return o2(t68, n77.data[o61], n77.data[o61 + 1], n77.data[o61 + 2]);
}
function M16(t68, n77) {
  t68.push(n77[0]), t68.push(n77[1]), t68.push(n77[2]);
}
function N17(t68, n77, r62, s69) {
  S6(E35, t68.quaternion), J(G18, n77, t68.center), E(G18, G18, E35);
  const f49 = 8 * ((G18[0] < -t68.halfSize[0] ? -1 : G18[0] > t68.halfSize[0] ? 1 : 0) + 3 * (G18[1] < -t68.halfSize[1] ? -1 : G18[1] > t68.halfSize[1] ? 1 : 0) + 9 * (G18[2] < -t68.halfSize[2] ? -1 : G18[2] > t68.halfSize[2] ? 1 : 0) + 13), i60 = P23[f49];
  if (0 === i60)
    return i60;
  p7(D17, t68.quaternion), f9(D17, D17, t68.halfSize);
  const h46 = (n78, o61) => {
    const e65 = P23[f49 + o61 + 1];
    return o2(n78, ((1 & e65) << 1) - 1, (2 & e65) - 1, ((4 & e65) >> 1) - 1), S2(n78, n78, D17), u2(n78, t68.center, n78);
  };
  return r62.length = 0, M16(r62, h46(H23, 0)), M16(r62, h46(I26, 1)), M16(r62, h46(G18, 2)), M16(r62, h46(J14, 3)), s69(r62), 1 === i60 ? i60 : (r62.length = 0, M16(r62, H23), M16(r62, J14), M16(r62, h46(G18, 4)), M16(r62, h46(K12, 5)), s69(r62), 2 === i60 || (r62.length = 0, M16(r62, H23), M16(r62, K12), M16(r62, h46(G18, 6)), M16(r62, I26), s69(r62)), i60);
}
var P23 = (() => {
  const t68 = new Array(216);
  let n77 = 0;
  const o61 = (o62) => {
    for (let e65 = 0; e65 < o62.length; e65++)
      t68[n77 + e65] = o62[e65];
    n77 += 8;
  };
  return o61([3, 0, 6, 2, 3, 1, 5, 4]), o61([2, 0, 2, 3, 1, 5, 4, 0]), o61([3, 1, 0, 2, 3, 7, 5, 4]), o61([2, 0, 1, 3, 2, 6, 4, 0]), o61([1, 0, 1, 3, 2, 0, 0, 0]), o61([2, 1, 5, 7, 3, 2, 0, 0]), o61([3, 2, 0, 1, 3, 7, 6, 4]), o61([2, 2, 0, 1, 3, 7, 6, 0]), o61([3, 3, 0, 1, 5, 7, 6, 2]), o61([2, 0, 1, 5, 4, 6, 2, 0]), o61([1, 0, 1, 5, 4, 0, 0, 0]), o61([2, 1, 3, 7, 5, 4, 0, 0]), o61([1, 0, 2, 6, 4, 0, 0, 0]), o61([0, 0, 0, 0, 0, 0, 0, 0]), o61([1, 1, 3, 7, 5, 0, 0, 0]), o61([2, 2, 3, 7, 6, 4, 0, 0]), o61([1, 2, 3, 7, 6, 0, 0, 0]), o61([2, 3, 1, 5, 7, 6, 2, 0]), o61([3, 4, 0, 1, 5, 7, 6, 2]), o61([2, 5, 7, 6, 4, 0, 1, 0]), o61([3, 5, 0, 1, 3, 7, 6, 4]), o61([2, 4, 5, 7, 6, 2, 0, 0]), o61([1, 4, 5, 7, 6, 0, 0, 0]), o61([2, 5, 1, 3, 7, 6, 4, 0]), o61([3, 6, 0, 2, 3, 7, 5, 4]), o61([2, 6, 2, 3, 7, 5, 4, 0]), o61([3, 7, 6, 2, 3, 1, 5, 4]), t68;
})();
var R17 = 4;
function C24(t68, n77) {
  let o61 = 0;
  for (let e65 = 0; e65 < R17; e65++) {
    const r62 = T7(t68, n77[e65]);
    if (r62 > 0)
      return -1;
    0 === r62 && (o61 |= 1 << e65);
  }
  return o61;
}
var D17 = e14();
var E35 = e16();
var G18 = n7();
var H23 = n7();
var I26 = n7();
var J14 = n7();
var K12 = n7();

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/RenderSubmitSystem.js
var e55 = class {
  constructor(t68) {
    this._objects = t68;
  }
  submit(t68, e65) {
    this._objects.preSubmit(e65), this._objects.visibleObjects.forAll((s69) => s69.renderable.material.submit(t68, e65, s69));
  }
  queryShadowCasterDepthRange(e65) {
    return this._objects.visibleObjects.length ? S23(e65, this._objects.visibleObjects) : null;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/UniformComponentParameters.js
var t64 = class {
  constructor() {
    this.externalColor = n14(), this.externalColorMixMode = n19.Multiply, this.castShadows = true, this.pickable = true, this.elevationOffset = 0;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/Material/ComponentTechnique.js
var T25 = class _T extends e22 {
  initializeConfiguration(r62, i60) {
    i60.spherical = r62.viewingMode === l13.Global, i60.doublePrecisionRequiresObfuscation = r62.rctx.driverTest.doublePrecisionRequiresObfuscation.result;
  }
  initializeProgram(e65) {
    return new i13(e65.rctx, _T.shader.get().build(this.configuration), M17);
  }
  _setPipelineState(e65) {
    const i60 = this.configuration, o61 = i60.integratedMeshMode !== v12.None, n77 = e65 === o20.NONE, d52 = e65 === o20.FrontFace;
    return W3({ blending: i60.output !== h10.Color && i60.output !== h10.Alpha || !i60.blendingEnabled ? null : n77 ? c10 : A7(e65), culling: h12(i60.cullFace), depthTest: { func: l15(e65) }, depthWrite: n77 || d52 ? a21 : null, colorWrite: _6, stencilWrite: o61 || i60.hasOccludees ? e23 : null, stencilTest: o61 ? u7(a17.IntegratedMeshMaskExcluded) : i60.hasOccludees ? f13 : null, polygonOffset: n77 || d52 ? i60.hasPolygonOffset ? { factor: 2, units: 2 } : null : _7 });
  }
  initializePipeline() {
    return this._setPipelineState(this.configuration.transparencyPassType);
  }
};
T25.shader = new t16(F13, () => import("./ComponentShader.glsl-J36GPXC4.js"));
var M17 = /* @__PURE__ */ new Map([[O3.POSITION, 0], [O3.NORMAL, 1], [O3.NORMALCOMPRESSED, 1], [O3.COLOR, 2], [O3.UV0, 3], [O3.UVREGION, 4], [O3.COMPONENTINDEX, 5]]);

// node_modules/@arcgis/core/views/3d/webgl-engine/core/material/MaterialBase.js
var e56 = class extends n21 {
  constructor() {
    super(...arguments), this._dirty = true;
  }
  _setDirty() {
    this._dirty = true;
  }
  _setClean() {
    if (this._dirty = false, null != this._parameterBlocks)
      for (const t68 of this._parameterBlocks)
        this[t68]._setClean();
  }
  get dirty() {
    return this._dirty || this._checkParameterBlocksDirty();
  }
  _checkParameterBlocksDirty() {
    if (null == this._parameterBlocks)
      return false;
    for (const t68 of this._parameterBlocks)
      if (this[t68].dirty)
        return true;
    return false;
  }
};
var r55 = class {
  constructor() {
    this._dirty = true;
  }
  _setDirty() {
    this._dirty = true;
  }
  _setClean() {
    this._dirty = false;
  }
  get dirty() {
    return this._dirty;
  }
};
function s62(t68 = {}) {
  return (e65, r62) => {
    const s69 = e65._parameterCount ?? 0;
    if (e65._parameterCount = s69 + 1, t68.vectorOps) {
      const i60 = t68.vectorOps;
      Object.defineProperty(e65, r62, { get() {
        return this[s69];
      }, set(t69) {
        const e66 = this[s69];
        if (null == e66)
          this[s69] = t69;
        else {
          if (i60.equals(e66, t69))
            return;
          i60.copy(e66, t69);
        }
        this._setDirty();
      } });
    } else
      Object.defineProperty(e65, r62, { get() {
        return this[s69];
      }, set(e66) {
        this[s69] !== e66 && (t68.dispose && this[s69] && this[s69].dispose(), this[s69] = e66, this._setDirty());
      } });
  };
}
function i56() {
  return (t68, e65) => {
    const r62 = t68._parameterCount ?? 0;
    t68._parameterCount = r62 + 1, t68._parameterBlocks = t68._parameterBlocks || [], t68._parameterBlocks.push(r62), Object.defineProperty(t68, e65, { get() {
      return this[r62];
    }, set(t69) {
      this[r62] !== t69 && (this[r62] = t69, this._setDirty());
    } });
  };
}

// node_modules/@arcgis/core/views/3d/webgl-engine/core/util/TwoVectorPosition.js
var c49 = class {
  constructor(s69) {
    this._low = n7(), this._high = n7(), s69 && this.set(s69);
  }
  get low() {
    return this._low;
  }
  get high() {
    return this._high;
  }
  set(h46) {
    r5(this._low, r5(e57, h46));
    const i60 = J(e57, h46, this._low);
    r5(this._high, i60);
  }
  get(s69) {
    return u2(s69, this._low, this._high);
  }
  getLowScaled(s69) {
    return g2(s69, this._low, 1);
  }
};
var e57 = n16();

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/Material/ComponentMaterial.js
var F26 = class extends e56 {
  constructor(e65, t68) {
    super(), this.toMapSpace = t68, this.baseColor = r11(1, 1, 1, 1), this.usePBR = false, this.hasParametersFromSource = false, this.mrrFactors = e6(n23), this.emissiveFactor = r4(0, 0, 0), this.baseColorTexture = null, this.metallicRoughnessTexture = null, this.emissionTexture = null, this.occlusionTexture = null, this.normalTexture = null, this.objectOpacity = 1, this.commonMaterialParameters = new E36(), this.componentParameters = new B18(), this.textureAlphaCutoff = o21, this.alphaDiscardMode = i11.Opaque, this.isIntegratedMesh = false, this.polygonOffsetEnabled = false, this.ellipsoidMode = t23.Earth, this.hasOccludees = false, this._techniqueConfiguration = new m14();
    const i60 = new c49(e65.position), u51 = r21(e65.rotationScale);
    u5(u51, u51), this.transformNormalGlobalFromModel = r16(o12(u51, u51)), this.transformWorldFromModelTL = i60.low, this.transformWorldFromModelTH = i60.high, this.transformWorldFromModelRS = e65.rotationScale;
  }
  dispose() {
    this._technique = f(this._technique), this.baseColorTexture = null, this.metallicRoughnessTexture = null, this.emissionTexture = null, this.occlusionTexture = null, this.normalTexture = null;
  }
  get texture() {
    return null != this.baseColorTexture ? this.baseColorTexture.glTexture : null;
  }
  get textureMetallicRoughness() {
    return null != this.metallicRoughnessTexture ? this.metallicRoughnessTexture.glTexture : null;
  }
  get textureEmissive() {
    return null != this.emissionTexture ? this.emissionTexture.glTexture : null;
  }
  get textureOcclusion() {
    return null != this.occlusionTexture ? this.occlusionTexture.glTexture : null;
  }
  get textureNormal() {
    return null != this.normalTexture ? this.normalTexture.glTexture : null;
  }
  prepareTechnique(e65, t68, r62, s69) {
    const o61 = this._techniqueConfiguration;
    o61.hasVertexColors = s69.colors, o61.hasNormals = s69.normals, o61.textureCoordinateType = s69.textureCoordinates, o61.hasMetallicRoughnessTexture = null != this.metallicRoughnessTexture, o61.hasEmissionTexture = null != this.emissionTexture, o61.hasOcclusionTexture = null != this.occlusionTexture, o61.hasNormalTexture = null != this.normalTexture, o61.transparencyPassType = t68.identifier === o36.Material && null != r62.transparencyPassType ? r62.transparencyPassType : o20.NONE, o61.hasMultipassTerrain = t68.identifier === o36.Material && null != r62.multipassTerrain && r62.multipassTerrain.enabled, o61.cullAboveGround = t68.identifier === o36.Material && null != r62.multipassTerrain && r62.multipassTerrain.cullAboveGround, o61.ellipsoidMode = this.ellipsoidMode, o61.componentData = this.componentParameters.type, o61.cullFace = this.commonMaterialParameters.cullFace, o61.doubleSidedMode = this.commonMaterialParameters.doubleSided ? i12.View : i12.None, o61.hasBaseColorTexture = null != this.baseColorTexture;
    const a67 = this._computeWhichMaterialPass();
    o61.blendingEnabled = a67 === _30.Transparent || a67 === _30.OpaqueAndTransparent, o61.alphaDiscardMode = this.alphaDiscardMode, o61.integratedMeshMode = this.isIntegratedMesh ? G19(r62) ? I11(r62) ? v12.ColorOverlayWithWater : v12.ColorOverlay : v12.NoOverlay : v12.None, o61.hasPolygonOffset = this.polygonOffsetEnabled;
    const i60 = this.hasParametersFromSource && null == this.baseColorTexture;
    if (o61.pbrMode = o61.integratedMeshMode === v12.ColorOverlayWithWater ? c9.WaterOnIntegratedMesh : this.usePBR ? i60 ? c9.Schematic : c9.Normal : c9.Disabled, o61.normalType = o61.integratedMeshMode === v12.None ? o61.hasNormals ? a20.Compressed : a20.ScreenDerivative : a20.Ground, o61.hasSlicePlane = null != r62.slicePlane && this.commonMaterialParameters.hasSlicePlane, t68.identifier === o36.ShadowMap)
      o61.output = h10.Shadow, o61.vertexDiscardMode = a32.None;
    else if (t68.identifier === o36.Highlight)
      o61.output = h10.Highlight, o61.vertexDiscardMode = a32.None;
    else {
      switch (this._computeWhichMaterialPass() === _30.OpaqueAndTransparent ? o61.vertexDiscardMode = t68.transparent ? a32.Opaque : a32.Transparent : o61.vertexDiscardMode = a32.None, o61.output = t68.output, o61.receiveAmbientOcclusion = false, o61.receiveShadows = false, t68.output) {
        case h10.Color:
          o61.receiveAmbientOcclusion = r62.ssaoHelper.active, o61.hasOccludees = r62.hasOccludees, o61.receiveShadows = r62.shadowMap.ready, o61.hasScreenSpaceReflections = r62.ssr.enabled, o61.hasCloudsReflections = null != r62.cloudsFade.data;
          break;
        case h10.Alpha:
          o61.hasOccludees = r62.hasOccludees;
          break;
        case h10.ObjectAndLayerIdColor:
          o61.objectAndLayerIdColor = true;
      }
      o61.snowCover = this.hasSnowCover(r62);
    }
    return this._technique = e65.releaseAndAcquire(T25, o61, this._technique), this._setClean(), this._technique;
  }
  hasSnowCover(e65) {
    return null != e65.weather && e65.weatherVisible && "snowy" === e65.weather.type && "enabled" === e65.weather.snowCover;
  }
  submit(e65, t68, r62) {
    if (0 === this.objectOpacity)
      return;
    const s69 = r62.renderable.geometry, o61 = r62.components, a67 = r62.renderable.meta.cameraDepthSquared, i60 = o61.geometryRanges, l63 = o61.highlightRanges, n77 = o61.defaultShadowMapRanges;
    switch (this._computeWhichMaterialPass()) {
      case _30.Opaque:
        e65.materialOpaque.submitDraw(this, s69, i60, a67);
        break;
      case _30.Transparent:
        e65.materialTransparent.submitDraw(this, s69, i60, a67);
        break;
      case _30.OpaqueAndTransparent:
        e65.materialOpaque.submitDraw(this, s69, i60, a67), e65.materialTransparent.submitDraw(this, s69, i60, a67);
        break;
      case _30.IntegratedMesh:
        e65.materialIntegratedMesh.submitDraw(this, s69, i60, a67), V13(t68) && e65.highlightIntegratedMesh.submitDraw(this, s69, i60, a67);
    }
    const u51 = this.componentParameters.castShadows !== W14.None;
    u51 && e65.shadowMap.submitDraw(this, s69, i60, a67), null != l63 && (e65.highlight.submitDraw(this, s69, l63, a67), u51 && e65.highlightShadowMap.submitDraw(this, s69, l63, a67)), u51 && null != n77 && e65.defaultShadowMap.submitDraw(this, s69, n77, a67);
  }
  _computeWhichMaterialPass() {
    return this.isIntegratedMesh ? _30.IntegratedMesh : this.objectOpacity < 1 ? _30.Transparent : this.componentParameters.opaqueOverride === W14.All ? _30.Opaque : this.baseColor[3] < 1 || this.alphaDiscardMode === i11.Blend || this.alphaDiscardMode === i11.MaskBlend ? _30.Transparent : this.componentParameters.transparent === W14.None ? _30.Opaque : this.componentParameters.transparent === W14.All ? _30.Transparent : _30.OpaqueAndTransparent;
  }
};
var _30;
var W14;
e([s62({ vectorOps: G2 })], F26.prototype, "baseColor", void 0), e([s62()], F26.prototype, "usePBR", void 0), e([s62()], F26.prototype, "hasParametersFromSource", void 0), e([s62({ vectorOps: V })], F26.prototype, "mrrFactors", void 0), e([s62({ vectorOps: V })], F26.prototype, "emissiveFactor", void 0), e([s62({ dispose: true })], F26.prototype, "baseColorTexture", void 0), e([s62({ dispose: true })], F26.prototype, "metallicRoughnessTexture", void 0), e([s62({ dispose: true })], F26.prototype, "emissionTexture", void 0), e([s62({ dispose: true })], F26.prototype, "occlusionTexture", void 0), e([s62({ dispose: true })], F26.prototype, "normalTexture", void 0), e([s62()], F26.prototype, "objectOpacity", void 0), e([i56()], F26.prototype, "commonMaterialParameters", void 0), e([i56()], F26.prototype, "componentParameters", void 0), e([s62()], F26.prototype, "textureAlphaCutoff", void 0), e([s62()], F26.prototype, "alphaDiscardMode", void 0), e([s62()], F26.prototype, "isIntegratedMesh", void 0), e([s62()], F26.prototype, "polygonOffsetEnabled", void 0), e([s62()], F26.prototype, "ellipsoidMode", void 0), e([s62()], F26.prototype, "hasOccludees", void 0), function(e65) {
  e65[e65.Opaque = 0] = "Opaque", e65[e65.Transparent = 1] = "Transparent", e65[e65.OpaqueAndTransparent = 2] = "OpaqueAndTransparent", e65[e65.IntegratedMesh = 3] = "IntegratedMesh";
}(_30 || (_30 = {}));
var E36 = class extends r55 {
  constructor() {
    super(...arguments), this.doubleSided = false, this.cullFace = n18.Back, this.hasSlicePlane = true;
  }
};
e([s62()], E36.prototype, "doubleSided", void 0), e([s62()], E36.prototype, "cullFace", void 0), e([s62()], E36.prototype, "hasSlicePlane", void 0);
var B18 = class extends r55 {
  constructor() {
    super(...arguments), this.externalColor = r11(1, 1, 1, 1), this.externalColorMixMode = n19.Multiply, this.castShadows = W14.All;
  }
  get transparent() {
    return this.externalColor[3] < 1 ? W14.All : W14.None;
  }
  get opaqueOverride() {
    return this.externalColorMixMode === n19.Replace && 1 === this.externalColor[3] ? W14.All : W14.None;
  }
  get visible() {
    return this.externalColor[3] > 0 ? W14.All : W14.None;
  }
  get type() {
    return s37.Uniform;
  }
};
e([s62({ vectorOps: G2 })], B18.prototype, "externalColor", void 0), e([s62()], B18.prototype, "externalColorMixMode", void 0), e([s62()], B18.prototype, "castShadows", void 0), function(e65) {
  e65[e65.All = 0] = "All", e65[e65.Some = 1] = "Some", e65[e65.None = 2] = "None";
}(W14 || (W14 = {}));
var L23 = class extends r55 {
  constructor() {
    super(...arguments), this.texture = null, this.transparent = W14.None, this.opaqueOverride = W14.None, this.castShadows = W14.None;
  }
  get type() {
    return s37.Varying;
  }
};
function V13(e65) {
  return 0 !== e65.overlays.length && null != e65.overlays[O6.INNER].getValidTexture(A8.Highlight);
}
function G19(e65) {
  return 0 !== e65.overlays.length && null != e65.overlays[O6.INNER].getColorTextureNoRasterImage();
}
e([s62()], L23.prototype, "texture", void 0), e([s62()], L23.prototype, "transparent", void 0), e([s62()], L23.prototype, "opaqueOverride", void 0), e([s62()], L23.prototype, "castShadows", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureBackedBuffer/SimpleIndexManager.js
var e58 = class {
  constructor(e65) {
    this._maxCount = e65, this._nextIndex = 0, this._recycledIndices = [];
  }
  get activeCount() {
    return this._nextIndex - this._recycledIndices.length;
  }
  get availableCount() {
    return this._recycledIndices.length + this._maxCount - this._nextIndex;
  }
  acquire() {
    return this._recycledIndices.length > 0 ? this._recycledIndices.pop() : this.availableCount ? this._nextIndex++ : void 0;
  }
  release(e65) {
    this._recycledIndices.push(e65);
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureBackedBuffer/TextureBackedBuffer.js
var h42 = class {
  constructor(h46, a67 = 1) {
    this._rctx = h46, this._fieldCount = a67, this.textureWidth = 4096, this._dirty = true;
    const d52 = new e20();
    d52.samplingMode = L.NEAREST, d52.wrapMode = D2.CLAMP_TO_EDGE, d52.width = this.textureWidth, d52.height = 1, this._texture = new T8(this._rctx, d52), this._data = new x8(new ArrayBuffer(4 * this.textureWidth));
  }
  dispose() {
    this._texture.dispose(), this._texture = void 0, this._data = void 0;
  }
  setData(t68, e65, i60, s69, r62, h46) {
    const a67 = t68 * this._fieldCount + e65;
    this._dirty = true, this._data.set(a67, 0, i60), this._data.set(a67, 1, s69), this._data.set(a67, 2, r62), this._data.set(a67, 3, h46);
  }
  setDataElement(t68, e65, i60, s69) {
    const r62 = t68 * this._fieldCount + e65;
    this._dirty = true, this._data.set(r62, i60, s69);
  }
  getDataElement(t68, e65, i60) {
    const s69 = t68 * this._fieldCount + e65;
    return this._dirty = true, this._data.get(s69, i60);
  }
  resizeToFit(e65) {
    const i60 = (e65 + 1) * this._fieldCount;
    if (i60 > this._data.count) {
      const e66 = Math.ceil(i60 / this.textureWidth) * this.textureWidth, s69 = new x8(new ArrayBuffer(4 * e66));
      s69.typedBuffer.set(this._data.typedBuffer), this._data = s69;
    }
  }
  updateTexture() {
    if (!this._dirty)
      return;
    const t68 = this._texture.descriptor.width, e65 = this._texture.descriptor.height;
    this._data.count > t68 * e65 && this._texture.resize(t68, this._data.count / t68), this._texture.setData(this._data.typedBuffer), this._dirty = false;
  }
  get texture() {
    return this._texture;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureBackedBuffer/ManagedTextureBackedBuffer.js
var r56 = 65536;
var i57 = class {
  constructor(i60, a67 = 1) {
    this.textureBuffer = new h42(i60, a67), this._indexManager = new e58(r56);
  }
  dispose() {
    this.textureBuffer.dispose(), this.textureBuffer = void 0;
  }
  get availableCount() {
    return this._indexManager.availableCount;
  }
  get activeCount() {
    return this._indexManager.activeCount;
  }
  acquireIndex() {
    const e65 = this._indexManager.acquire();
    return this.textureBuffer.resizeToFit(e65), e65;
  }
  releaseIndex(e65) {
    this._indexManager.release(e65);
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureBackedBuffer/BufferManager.js
var r57 = class {
  constructor(t68, e65 = 1) {
    this._rctx = t68, this._fieldCount = e65, this._buffers = [];
  }
  garbageCollect() {
    this._buffers = this._buffers.filter((t68) => 0 !== t68.activeCount || (t68.dispose(), false));
  }
  destroy() {
    this._buffers.forEach((t68) => t68.dispose()), this._buffers = [];
  }
  getBuffer(r62) {
    for (const t68 of this._buffers)
      if (t68.availableCount >= r62)
        return t68;
    if (r62 > r56)
      return null;
    const s69 = new i57(this._rctx, this._fieldCount);
    return this._buffers.push(s69), s69;
  }
  updateTextures() {
    for (const t68 of this._buffers)
      t68.textureBuffer.updateTexture();
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/ComponentObjectCollection.js
var K13 = s3.getLogger("esri.views.3d.webgl-engine.collections.Component.ComponentObjectCollection");
var Q13 = class {
  constructor(e65, t68) {
    this._renderManager = e65, this._viewingMode = t68, this._objects = [new l2(), new l2()], this._renderSubmit = new e55(this), this._renderManager.register(this._renderSubmit), this._hasObjectAndLayerId = has("enable-feature:objectAndLayerId-rendering"), this._componentBufferManager = new r57(e65.rctx, 2 + (this._hasObjectAndLayerId ? 1 : 0));
  }
  destroy() {
    s18(0 === this._objects[c19.Hidden].length && 0 === this._objects[c19.Visible].length, "ObjectCollection should be empty upon disposal"), this._componentBufferManager.destroy();
    const e65 = this._objects.flatMap((e66) => e66.toArray());
    for (const t68 of e65)
      t68 == null ? void 0 : t68.destroy();
  }
  createObject(e65) {
    const t68 = new t27();
    return t68.toMapSpace = e65.toMapSpace, t68.transform = e65.transform, t68.obb = P6(e65.obb), t68.components = new e52(this._componentBufferManager, t9(e65.geometry.componentOffsets)), t68.renderable = this._createRenderable(e65, t68.components), t68.intersectionGeometry = new f43(e65.geometry.positionData, t68.components), this._objects[t68.visible].push(t68), t68;
  }
  destroyObject(e65) {
    const t68 = e65;
    this._objects[t68.visible].removeUnordered(t68), t68.destroy(), this._notifyDirty();
  }
  setObjectVisibility(e65, t68) {
    const o61 = e65;
    t68 !== o61.visible && (this._objects[o61.visible].removeUnordered(o61), this._objects[t68].push(o61), o61.visible = t68, this._notifyDirty());
  }
  preSubmit(e65) {
    const t68 = e65.camera.eye;
    this.visibleObjects.forAll((e66) => e66.renderable.meta.cameraDepthSquared = p2(t68, e66.obb.center));
  }
  getMaterial(e65) {
    return e65.renderable.material;
  }
  updateMaterial(e65, t68) {
    const o61 = e65.renderable.material;
    t68(o61), o61.dirty && this._notifyDirty();
  }
  setAllComponentVisibilities(e65, t68) {
    const o61 = e65;
    o61.components.visibility.reset(t68), o61.components.visibilityDirty(), this._notifyDirty();
  }
  forEachVisibleComponent(e65, t68) {
    return e65.components.visibility.forEachComponent(t68);
  }
  getComponentCount(e65) {
    const t68 = e65, o61 = t68.components.visibility.componentCount();
    return { visible: o61, invisible: t68.components.count - o61 };
  }
  setComponentData(e65, t68) {
    const o61 = e65, n77 = o61.renderable.material, r62 = o61.components, i60 = r62.materialDataBuffer, s69 = r62.materialDataIndices, a67 = new t64(), c58 = i60.textureBuffer, m44 = new Uint8Array(4), l63 = new Uint32Array(m44.buffer);
    let f49 = 0, p54 = 0, h46 = 0, u51 = r62.verticalOffsets, b26 = 1 / 0, C26 = -1 / 0, v37 = false, _33 = false, w29 = 0;
    for (let y32 = 0; y32 < r62.count; y32++) {
      t68(y32, a67), f49 += +(a67.externalColor[3] < 1), p54 += +(a67.externalColorMixMode === n19.Replace && 1 === a67.externalColor[3]), h46 += +a67.castShadows, r20(a67.externalColor, a67.externalColorMixMode, m44), m44[2] = 254 & m44[2] | +a67.castShadows, c58.setData(s69[y32], 0, m44[0], m44[1], m44[2], m44[3]), v37 || (v37 = y32 > 0 && w29 !== l63[0]), w29 = l63[0], _33 || (_33 = 0 !== a67.elevationOffset), _33 && null == u51 && (u51 = new Array(y32).fill(0)), null != u51 && (u51[y32] = a67.elevationOffset), b26 = Math.min(b26, a67.elevationOffset), C26 = Math.max(C26, a67.elevationOffset), C10(a67.elevationOffset, m44), c58.setData(s69[y32], 1, m44[0], m44[1], m44[2], m44[3]);
      const e66 = a67.objectAndLayerIdColor;
      null != e66 && c58.setData(s69[y32], 2, e66[0], e66[1], e66[2], e66[3]), a67.pickable !== i55(r62.pickability, y32) && (r62.pickability = n65(r62.pickability, r62.count, y32, a67.pickable));
    }
    r62.verticalOffsets = _33 ? u51 : null, o61.offsetObb = _33 ? se(o61.obb, b26, C26, this._viewingMode, null != o61.offsetObb ? o61.offsetObb : P6(o61.obb)) : null, v37 || _33 || this._hasObjectAndLayerId ? (n77.componentParameters = new L23(), n77.componentParameters.castShadows = $9(h46, r62.count), n77.componentParameters.transparent = $9(f49, r62.count), n77.componentParameters.opaqueOverride = $9(p54, r62.count), n77.componentParameters.texture = c58, c58.updateTexture()) : (n77.componentParameters = new B18(), n77.componentParameters.castShadows = a67.castShadows ? W14.All : W14.None, n77.componentParameters.externalColor = a67.externalColor, n77.componentParameters.externalColorMixMode = a67.externalColorMixMode), this._notifyDirty();
  }
  getComponentAabb(e65, t68, o61, n77 = false) {
    e65.intersectionGeometry.getComponentAabb(t68, o61);
    const r62 = e65, i60 = r62.components.verticalOffsets;
    if (n77 || null == i60)
      return o61;
    const s69 = i60[t68];
    if (this._viewingMode === l13.Local || 0 === s69)
      return o61[2] += s69, o61[5] += s69, o61;
    const a67 = y6(s69);
    return a67.localOrigin = r62.transform.position, a67.applyToAabb(o61);
  }
  getComponentObb(e65) {
    return e65.obb;
  }
  getObjectTransform(e65) {
    return e65.transform;
  }
  getComponentPositions(e65, t68, o61) {
    return e65.intersectionGeometry.getComponentPositions(t68, o61);
  }
  intersect(e65, t68, o61, n77, s69, a67) {
    const l63 = e65;
    null != s69 && (s69.localOrigin = l63.transform.position);
    const f49 = u5(ee4, l63.transform.rotationScale);
    J(te4, t68, l63.transform.position), J(oe7, o61, l63.transform.position), S2(te4, te4, f49), S2(oe7, oe7, f49);
    const p54 = o12(ee4, f49);
    return l63.intersectionGeometry.intersect(te4, oe7, n77, p54, s69, l63.components.verticalOffsets, a67);
  }
  addEdges(e65, t68, o61, n77) {
    const r62 = e65, { indices: i60, positions: s69 } = r62.intersectionGeometry, a67 = r62.components.offsets;
    return t68.addComponentObject(e65, r62.transform, { center: r62.obb.center, radius: re(r62.obb) }, s69, i60, a67, o61, n77);
  }
  async extractEdgeInformation(e65, t68, o61) {
    const n77 = e65, r62 = n77.components.visibility;
    if (r62.allInvisible())
      return { buffer: m6.createBuffer(0), origin: [0, 0, 0] };
    const { indices: i60, positions: s69 } = n77.intersectionGeometry, a67 = n77.components.offsets, c58 = A5.createBuffer(s69.length / 3);
    t12(c58.position.typedBuffer, s69, c58.position.typedBufferStride, 3), f10(c58.position, c58.position, n77.transform.rotationScale), this._setComponentIndices(c58.componentIndex, i60, a67);
    const m44 = c58.count, f49 = this._computeVisibilityIndices(i60, r62, a67, m44);
    return { origin: t5(n77.transform.position), buffer: await t68.extractComponentsEdgeLocations({ indices: f49, indicesLength: f49.length, skipDeduplicate: true, data: c58, writerSettings: { reducedPrecision: false, variants: 0 } }, o61) };
  }
  _setComponentIndices(e65, t68, o61) {
    let n77 = 0;
    for (let r62 = 0; r62 < o61.length - 1; r62++) {
      const i60 = o61[r62], s69 = o61[r62 + 1];
      for (let o62 = i60; o62 < s69; o62++) {
        const r63 = t68 ? t68[o62] : o62;
        e65.set(r63, n77);
      }
      n77++;
    }
  }
  _computeVisibilityIndices(e65, t68, o61, r62) {
    if (e65 && t68.allVisible())
      return e65;
    let i60 = 0;
    t68.forEachComponentRange((e66, t69) => (i60 += o61[t69] - o61[e66], true));
    const s69 = s2(e65) ? new Array(i60) : 2 === (e65 == null ? void 0 : e65.BYTES_PER_ELEMENT) || r62 <= 65536 ? new Uint16Array(i60) : new Uint32Array(i60);
    let a67 = 0;
    return t68.forEachComponentRange((t69, n77) => {
      const r63 = o61[t69], i61 = o61[n77];
      for (let o62 = r63; o62 < i61; o62++)
        s69[a67++] = e65 ? e65[o62] : o62;
      return true;
    }), s69;
  }
  addComponentHighlight(e65, t68) {
    const o61 = e65.components;
    null == o61.highlightCounts && (o61.highlightCounts = new Uint32Array(o61.count + 1));
    0 === o61.highlightCounts[t68]++ && (o61.highlightsDirty(), this._notifyDirty()), o61.highlightCounts[o61.count]++;
  }
  removeComponentHighlight(e65, t68) {
    const o61 = e65.components;
    if (null == o61.highlightCounts)
      return void K13.warn("Removing non-existing highlight.");
    const n77 = o61.highlightCounts[t68], r62 = o61.highlightCounts[o61.count];
    if (0 !== n77) {
      if (n77 > 1)
        return o61.highlightCounts[t68] = n77 - 1, void (o61.highlightCounts[o61.count] = r62 - 1);
      o61.highlightCounts[t68] = 0, o61.highlightsDirty(), this._notifyDirty(), 1 === r62 ? o61.highlightCounts = null : o61.highlightCounts[o61.count] = r62 - 1;
    } else
      K13.warn("Removing non-existing highlight.");
  }
  clearHighlights(e65) {
    const t68 = e65.components;
    null != t68.highlightCounts && (t68.highlightCounts = null, t68.highlightsDirty(), this._notifyDirty());
  }
  getObjectGPUMemoryUsage(e65) {
    return e65.renderable.meta.gpuMemoryEstimate;
  }
  get visibleObjects() {
    return this._objects[c19.Visible];
  }
  _createRenderable(e65, o61) {
    const n77 = this._renderManager.rctx, r62 = e65.geometry, i60 = r62.vertices.layoutParameters, s69 = c12.createVertex(n77, F6.STATIC_DRAW, r62.vertices.data), a67 = n(r62.indices, (e66) => c12.createIndex(n77, F6.STATIC_DRAW, e66)), c58 = r15(o31(i60)), m44 = new Uint16Array(r62.vertices.count);
    for (let t68 = 0; t68 < o61.count; t68++) {
      const e66 = o61.offsets[t68], n78 = o61.offsets[t68 + 1], i61 = o61.materialDataIndices[t68];
      if (null != r62.indices)
        for (let t69 = e66; t69 < n78; t69++) {
          m44[r62.indices[t69]] = i61;
        }
      else
        for (let t69 = e66; t69 < n78; t69++)
          m44[t69] = i61;
    }
    const l63 = c12.createVertex(n77, F6.STATIC_DRAW, m44.buffer), f49 = new F26(e65.transform, e65.toMapSpace), p54 = new u8(n77, M17, { data: c58, componentIndices: Z10 }, { data: s69, componentIndices: l63 }, a67), h46 = new s61(p54, E5.TRIANGLES, i60, null != a67), u51 = { cameraDepthSquared: 0.5, gpuMemoryEstimate: s69.byteLength + l63.byteLength + (null != a67 ? a67.byteLength : 0) };
    return new t62(f49, h46, u51);
  }
  _notifyDirty() {
    this._renderManager.notifyDirty();
  }
};
var Z10 = r15(H4().u16(O3.COMPONENTINDEX));
function $9(e65, t68) {
  return e65 === t68 ? W14.All : 0 === e65 ? W14.None : W14.Some;
}
var ee4 = e18();
var te4 = n7();
var oe7 = n7();

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/AtmosphereCompositingTechnique.js
var p45 = class _p extends e22 {
  initializeProgram(e65) {
    return new i13(e65.rctx, _p.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return this.configuration.haze ? W3({ blending: l14(R4.ONE, R4.ZERO, R4.ONE_MINUS_SRC_COLOR, R4.ONE), depthTest: { func: I4.ALWAYS }, colorWrite: _6 }) : W3({ blending: s23(R4.SRC_ALPHA, R4.ONE_MINUS_SRC_ALPHA), depthTest: { func: I4.ALWAYS }, colorWrite: _6 });
  }
};
p45.shader = new t16(f21, () => import("./AtmosphereCompositing.glsl-XULYBIR3.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/CompositingTechniqueConfiguration.js
var a57;
!function(o61) {
  o61[o61.None = 0] = "None", o61[o61.Alpha = 1] = "Alpha", o61[o61.PremultipliedAlpha = 2] = "PremultipliedAlpha", o61[o61.COUNT = 3] = "COUNT";
}(a57 || (a57 = {}));
var r58 = class extends t18 {
  constructor() {
    super(...arguments), this.alphaMode = a57.None, this.hasOpacityFactor = false;
  }
};
e([r25({ count: a57.COUNT })], r58.prototype, "alphaMode", void 0), e([r25()], r58.prototype, "hasOpacityFactor", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/CompositingTechnique.js
var p46 = class _p extends e22 {
  initializeProgram(e65) {
    return new i13(e65.rctx, _p.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    switch (this.configuration.alphaMode) {
      case a57.None:
        return W3({ colorWrite: _6 });
      case a57.Alpha:
        return W3({ blending: l14(R4.SRC_ALPHA, R4.ONE, R4.ONE_MINUS_SRC_ALPHA, R4.ONE_MINUS_SRC_ALPHA), colorWrite: _6 });
      case a57.PremultipliedAlpha:
      case a57.COUNT:
        return W3({ blending: s23(R4.ONE, R4.ONE_MINUS_SRC_ALPHA), colorWrite: _6 });
    }
  }
};
p46.shader = new t16(d21, () => import("./Compositing.glsl-I3RGXQMR.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/HUDCompositingTechnique.js
var a58 = class _a extends e22 {
  initializeProgram(e65) {
    return new i13(e65.rctx, _a.shader.get().build(), E7);
  }
  initializePipeline() {
    return W3({ colorWrite: { r: false, g: true, b: false, a: false } });
  }
};
a58.shader = new t16(i29, () => import("./HUDCompositing.glsl-QUZFRRSJ.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/OITCompositingTechnique.js
var a59 = class _a extends e22 {
  initializeProgram(e65) {
    return new i13(e65.rctx, _a.shader.get().build(), E7);
  }
  initializePipeline() {
    return W3({ blending: l14(R4.SRC_ALPHA, R4.ONE, R4.ONE_MINUS_SRC_ALPHA, R4.ONE_MINUS_SRC_ALPHA), colorWrite: _6 });
  }
};
a59.shader = new t16(c21, () => import("./OITCompositing.glsl-4KFUWKVY.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/OverlayCompositingTechnique.js
var n67 = class _n extends e22 {
  initializeProgram(e65) {
    return new i13(e65.rctx, _n.shader.get().build(), E7);
  }
  initializePipeline() {
    return W3({ blending: s23(R4.ONE, R4.ONE_MINUS_SRC_ALPHA), colorWrite: _6 });
  }
};
n67.shader = new t16(m15, () => import("./OverlayCompositing.glsl-NUHQS4ST.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/CompositingHelper.js
var d49 = class {
  constructor(e65, t68) {
    this._rctx = e65, this._techniqueRepository = t68, this._configuration = new r58(), this._atmosphereConfiguration = new s44(), this._passParameters = new i28(), this._atmosphereParameters = new l24(), this._oitParameters = new s38(), this._hudParameters = new t39(), this._overlayParameters = new d22();
  }
  destroy() {
    this._vao = t2(this._vao);
  }
  compositeOIT(e65, s69, t68, r62) {
    this._oitParameters.colorTexture = s69, this._oitParameters.alphaTexture = t68, this._oitParameters.frontFaceTexture = r62;
    const i60 = this._rctx, o61 = this._techniqueRepository.acquire(a59);
    i60.bindTechnique(o61, this._oitParameters, e65);
    const a67 = this._ensureVAO();
    i60.bindVAO(a67), i60.drawArrays(E5.TRIANGLE_STRIP, 0, n20(a67, "geometry")), o61.release();
  }
  compositeHUD(e65, s69) {
    this._hudParameters.texture = s69;
    const t68 = this._rctx, r62 = this._techniqueRepository.acquire(a58);
    t68.bindTechnique(r62, this._hudParameters, e65);
    const i60 = this._ensureVAO();
    t68.bindVAO(i60), t68.drawArrays(E5.TRIANGLE_STRIP, 0, n20(i60, "geometry")), r62.release();
  }
  compositeOverlay(e65, s69, t68, r62) {
    this._overlayParameters.texture = s69, this._overlayParameters.opacity = t68, this._overlayParameters.overlayIndex = r62;
    const i60 = this._rctx, o61 = this._techniqueRepository.acquire(n67);
    i60.bindTechnique(o61, this._overlayParameters, e65);
    const a67 = this._ensureVAO();
    i60.bindVAO(a67), i60.drawArrays(E5.TRIANGLE_STRIP, 0, n20(a67, "geometry")), o61.release();
  }
  compositeAtmosphere(e65, s69, t68, r62, o61) {
    const a67 = this._rctx;
    this._atmosphereParameters.texture = s69, this._atmosphereParameters.depthTexture = t68, this._atmosphereParameters.scale = r62, this._atmosphereConfiguration.haze = o61;
    const h46 = this._techniqueRepository.acquire(p45, this._atmosphereConfiguration);
    a67.bindTechnique(h46, this._atmosphereParameters, e65);
    const n77 = this._ensureVAO();
    a67.bindVAO(n77), a67.drawArrays(E5.TRIANGLE_STRIP, 0, n20(n77, "geometry")), h46.release();
  }
  composite(e65, s69, t68 = a57.None, r62 = 1) {
    const i60 = this._rctx;
    this._configuration.alphaMode = t68, this._configuration.hasOpacityFactor = 1 !== r62, this._passParameters.texture = s69, this._passParameters.opacity = r62;
    const o61 = this._techniqueRepository.acquire(p46, this._configuration);
    i60.bindTechnique(o61, this._passParameters, e65);
    const h46 = this._ensureVAO();
    i60.bindVAO(h46), i60.drawArrays(E5.TRIANGLE_STRIP, 0, n20(h46, "geometry")), o61.release();
  }
  _ensureVAO() {
    return null == this._vao && (this._vao = f14(this._rctx)), this._vao;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/depthRangeUtils.js
var w26 = 1e4;
var v35 = 100;
var R18 = 500;
var j24 = 500;
var C25 = 0.1;
function A31(t68, r62, i60) {
  return r17(r62, t68) * (i60[1] - i60[0]) + i60[0];
}
function B19(e65, t68, r62) {
  let i60 = 0;
  if (!t68.some((e66) => (i60 += e66.numGeometries, i60 >= w26)))
    return S24.compute(e65, t68);
  const n77 = a56();
  return r62.forAll((t69) => {
    t69.visible && e54(n77, M18(e65, t69));
  }), n77;
}
function M18(e65, t68) {
  if (!t68.visible)
    return;
  const r62 = a56(), i60 = t68.getSpatialQueryAccelerator();
  return null != i60 ? O24(r62, e65, i60) : T26(r62, e65, t68.objects), r62;
}
function O24(e65, t68, r62) {
  const i60 = t68.eye, n77 = t68.viewForward, s69 = t68.frustum, a67 = (e66) => e66.visible, o61 = r62.objectCount;
  if (o61 < R18)
    t63(E37, t68.near, Math.min(e65.near, t68.far)), r62.forEachInDepthRange(i60, n77, W2.DepthOrder.FRONT_TO_BACK, E37, (r63, i61) => {
      D18(e65, t68, r63), E37.far = e65.near, i61.setRange(E37);
    }, s69, a67), t63(E37, Math.max(e65.far, t68.near), t68.far), r62.forEachInDepthRange(i60, n77, W2.DepthOrder.BACK_TO_FRONT, E37, (r63, i61) => {
      D18(e65, t68, r63), E37.near = e65.far, i61.setRange(E37);
    }, s69, a67);
  else {
    const i61 = Math.max(Math.min(o61, j24), Math.ceil(o61 * C25)), h46 = r62.findClosest(n77, W2.DepthOrder.FRONT_TO_BACK, s69, a67, i61), f49 = r62.findClosest(n77, W2.DepthOrder.BACK_TO_FRONT, s69, a67, i61);
    h46 && f49 && (x32(e65, t68, h46.boundingVolumeWorldSpace.bounds), x32(e65, t68, f49.boundingVolumeWorldSpace.bounds));
  }
}
function T26(e65, t68, r62) {
  K14.clear(), r62.forAll((e66) => {
    e66.visible && 0 !== e66.geometries.length && K14.add(e66);
  }), K14.empty || (K14.sort(t68), t63(E37, t68.near, Math.min(e65.near, t68.far)), K14.forEachInDepthRange(E37, W2.DepthOrder.FRONT_TO_BACK, (r63, i60) => {
    i60 < e65.near && D18(e65, t68, r63);
  }), t63(E37, Math.max(e65.far, t68.near), t68.far), K14.forEachInDepthRange(E37, W2.DepthOrder.BACK_TO_FRONT, (t69, r63, i60) => {
    e65.far = Math.max(e65.far, i60);
  }));
}
function D18(e65, t68, i60) {
  if (!i60.visible)
    return;
  if (!P5(t68.frustum, i60.boundingVolumeWorldSpace.bounds))
    return;
  const n77 = i60.transformation, s69 = k22;
  i60.geometries.forEach((i61) => {
    c3(s69, n77, i61.shaderTransformation);
    const a67 = l10(s69);
    F27(e65, t68, i61.boundingInfo, s69, a67);
  });
}
function F27(e65, t68, r62, i60, n77) {
  if (null == r62)
    return;
  O(W15, r62.center, i60);
  const { eye: a67, viewForward: o61 } = t68, f49 = o61[0] * (W15[0] - a67[0]) + o61[1] * (W15[1] - a67[1]) + o61[2] * (W15[2] - a67[2]);
  if (W15[3] = r62.radius * n77, !(f49 - W15[3] > e65.near && f49 + W15[3] < e65.far) && P5(t68.frustum, W15))
    if (r62.radius > v35 && r62.getChildren())
      for (const s69 of r62.getChildren())
        F27(e65, t68, s69, i60, n77);
    else
      V14.unionDepthRangeWithAABB(e65, t68.viewProjectionMatrix, i60, r62.bbMin, r62.bbMax);
}
function x32(e65, t68, r62) {
  const i60 = t68.eye, n77 = t68.viewForward, s69 = (r62[0] - i60[0]) * n77[0] + (r62[1] - i60[1]) * n77[1] + (r62[2] - i60[2]) * n77[2];
  e65.near = Math.min(e65.near, s69 - r62[3]), e65.far = Math.max(e65.far, s69 + r62[3]);
}
var I27 = class {
  constructor() {
    this._items = new l2({ allocator: (e65) => e65 || { obj: null, distance: 0, near: 0, far: 0 }, deallocator: (e65) => (e65.obj = null, e65.distance = 0, e65.near = 0, e65.far = 0, e65) });
  }
  get length() {
    return this._items.length;
  }
  get empty() {
    return 0 === this._items.length;
  }
  clear() {
    this._items.clear();
  }
  add(e65) {
    this._items.pushNew().obj = e65;
  }
  sort(e65) {
    const t68 = e65.eye, r62 = e65.viewForward;
    this._items.forAll((e66) => {
      const i60 = e66.obj.boundingVolumeWorldSpace.bounds, n77 = (i60[0] - t68[0]) * r62[0] + (i60[1] - t68[1]) * r62[1] + (i60[2] - t68[2]) * r62[2];
      e66.distance = n77, e66.near = n77 - i60[3], e66.far = n77 + i60[3];
    }), this._items.sort((e66, t69) => e66.distance - t69.distance);
  }
  forEachInDepthRange(e65, t68, r62) {
    if (t68 === W2.DepthOrder.FRONT_TO_BACK)
      for (let i60 = 0; i60 < this._items.length; ++i60) {
        const t69 = this._items.data[i60];
        t69.far < e65.near || t69.near > e65.far || r62(t69.obj, t69.near, t69.far);
      }
    else
      for (let i60 = this._items.length - 1; i60 >= 0; --i60) {
        const t69 = this._items.data[i60];
        t69.far < e65.near || t69.near > e65.far || r62(t69.obj, t69.near, t69.far);
      }
  }
};
var P24 = class {
  constructor() {
    this._view = e15(), this._viewProj = e15(), this._frustum = I5(), this._geometries = new Array(), this._near = [], this._far = [], this._nearCandidates = [], this._farCandidates = [], this._looseRange = { near: 0, far: 0 };
  }
  compute(e65, t68) {
    this._reset(), n10(this._view, e65.viewMatrix), c3(this._viewProj, e65.projectionMatrix, this._view), L3(this._frustum, e65.frustum);
    const n77 = this._view, s69 = n77[2], a67 = n77[6], o61 = n77[10], h46 = n77[14];
    t68.forAll((e66) => e66.forEachGeometry((e67) => {
      if (!e67.visible || !e67.castShadow)
        return;
      const t69 = e67.boundingSphere, r62 = s69 * t69[0] + a67 * t69[1] + o61 * t69[2] + h46, i60 = r62 - t69[3], n78 = r62 + t69[3];
      this._geometries.push(e67), this._near.push(-n78), this._far.push(-i60);
    }));
    const f49 = new r54();
    if (0 === this._geometries.length)
      return f49;
    for (let r62 = 0; r62 < this._geometries.length; ++r62)
      this._near[r62] > f49.far && (f49.far = this._near[r62]), this._near[r62] > 2 && this._far[r62] < f49.near && (f49.near = this._far[r62]);
    const l63 = this._looseRange;
    l63.near = Math.max(0.5 * f49.near, 2), l63.far = 2 * f49.far;
    let _33 = 0, u51 = 0;
    for (let r62 = 0; r62 < this._geometries.length; ++r62)
      this._near[r62] < f49.near && (this._near[r62] >= l63.near ? f49.near = this._near[r62] : this._nearCandidates[_33++] = r62), this._far[r62] > f49.far && (this._far[r62] <= l63.far ? f49.far = this._far[r62] : this._farCandidates[u51++] = r62);
    if (0 === this._nearCandidates.length && 0 === this._farCandidates.length)
      return f49;
    this._nearCandidates.sort((e66, t69) => this._near[e66] < this._near[t69] ? -1 : this._near[e66] > this._near[t69] ? 1 : 0), this._farCandidates.sort((e66, t69) => this._far[e66] < this._far[t69] ? 1 : this._far[e66] > this._far[t69] ? -1 : 0);
    for (let r62 = 0; r62 < this._nearCandidates.length; ++r62) {
      const e66 = this._nearCandidates[r62];
      if (this._near[e66] < f49.near) {
        const t69 = this._geometries[e66], r63 = t69.boundingInfo;
        this._includeNearBoundingInfoRec(r63, t69.shaderTransformation, f49);
      }
    }
    for (let r62 = 0; r62 < this._farCandidates.length; ++r62) {
      const e66 = this._farCandidates[r62];
      if (this._far[e66] > f49.far) {
        const t69 = this._geometries[e66], r63 = t69.boundingInfo;
        this._includeFarBoundingInfoRec(r63, t69.shaderTransformation, f49);
      }
    }
    return this._reset(), f49;
  }
  _reset() {
    this._geometries.length = 0, this._near.length = 0, this._far.length = 0, this._nearCandidates.length = 0, this._farCandidates.length = 0;
  }
  _includeNearBoundingInfoRec(e65, t68, r62) {
    if (null == e65)
      return;
    const i60 = e65.center;
    O(W15, i60, t68);
    const n77 = l10(t68), a67 = W15[0], o61 = W15[1], h46 = W15[2], f49 = e65.radius * n77, c58 = this._frustum;
    if (c58[0][0] * a67 + c58[0][1] * o61 + c58[0][2] * h46 + c58[0][3] > f49 || c58[1][0] * a67 + c58[1][1] * o61 + c58[1][2] * h46 + c58[1][3] > f49 || c58[2][0] * a67 + c58[2][1] * o61 + c58[2][2] * h46 + c58[2][3] > f49 || c58[3][0] * a67 + c58[3][1] * o61 + c58[3][2] * h46 + c58[3][3] > f49)
      return;
    const l63 = this._view[2] * a67 + this._view[6] * o61 + this._view[10] * h46 + this._view[14], u51 = l63 + f49;
    if (!(-(l63 - f49) < 2 || -u51 >= r62.near))
      if (-u51 > this._looseRange.near)
        r62.near = -u51;
      else {
        if (f49 > v35) {
          const i61 = e65.getChildren();
          if (void 0 !== i61) {
            for (const e66 of i61)
              this._includeNearBoundingInfoRec(e66, t68, r62);
            return;
          }
        }
        V14.unionDepthRangeWithAABB(r62, this._viewProj, t68, e65.bbMin, e65.bbMax);
      }
  }
  _includeFarBoundingInfoRec(e65, t68, r62) {
    if (null == e65)
      return;
    let i60 = e65.radius;
    const n77 = e65.center;
    O(W15, n77, t68);
    const a67 = l10(t68), o61 = W15[0], h46 = W15[1], f49 = W15[2];
    i60 *= a67;
    const c58 = this._frustum;
    if (c58[0][0] * o61 + c58[0][1] * h46 + c58[0][2] * f49 + c58[0][3] > i60 || c58[1][0] * o61 + c58[1][1] * h46 + c58[1][2] * f49 + c58[1][3] > i60 || c58[2][0] * o61 + c58[2][1] * h46 + c58[2][2] * f49 + c58[2][3] > i60 || c58[3][0] * o61 + c58[3][1] * h46 + c58[3][2] * f49 + c58[3][3] > i60)
      return;
    const l63 = this._view[2] * o61 + this._view[6] * h46 + this._view[10] * f49 + this._view[14] - i60;
    if (!(-l63 <= r62.far))
      if (-l63 < this._looseRange.far)
        r62.far = -l63;
      else {
        if (i60 > v35) {
          const i61 = e65.getChildren();
          if (void 0 !== i61) {
            for (const e66 of i61)
              this._includeFarBoundingInfoRec(e66, t68, r62);
            return;
          }
        }
        V14.unionDepthRangeWithAABB(r62, this._viewProj, t68, e65.bbMin, e65.bbMax);
      }
  }
};
var y30 = class {
  constructor() {
    this._modelViewProj = e15(), this._clipPosition = [n14(), n14(), n14(), n14(), n14(), n14(), n14(), n14()];
  }
  unionDepthRangeWithAABB(e65, t68, i60, n77, s69) {
    const a67 = this._modelViewProj;
    c3(a67, t68, i60);
    let o61 = false;
    for (let r62 = 0; r62 < 8; ++r62) {
      const e66 = this._clipPosition[r62], t69 = 0 === r62 || 3 === r62 || 4 === r62 || 7 === r62 ? n77[0] : s69[0], i61 = 0 === r62 || 1 === r62 || 4 === r62 || 5 === r62 ? n77[1] : s69[1], o62 = r62 < 4 ? n77[2] : s69[2];
      e66[0] = a67[0] * t69 + a67[4] * i61 + a67[8] * o62 + a67[12], e66[1] = a67[1] * t69 + a67[5] * i61 + a67[9] * o62 + a67[13], e66[2] = a67[2] * t69 + a67[6] * i61 + a67[10] * o62 + a67[14], e66[3] = a67[3] * t69 + a67[7] * i61 + a67[11] * o62 + a67[15];
    }
    for (let r62 = 0; r62 < 12; ++r62) {
      const t69 = this._clipPosition[N18[r62][0]], i61 = this._clipPosition[N18[r62][1]], n78 = this._clipPosition[N18[r62][2]], s70 = this._clipTriangle(t69, i61, n78);
      let a68 = true;
      for (let e66 = 0; e66 < s70.length; ++e66) {
        if (s70[e66][3] >= 2) {
          a68 = false;
          break;
        }
      }
      if (!a68) {
        o61 = true;
        for (let t70 = 0; t70 < s70.length; ++t70) {
          const r63 = s70[t70][3];
          Number.isFinite(r63) && (e65.near = Math.min(r63, e65.near), e65.far = Math.max(r63, e65.far));
        }
      }
    }
    return o61;
  }
  _inside(e65, t68) {
    return 0 === t68 ? e65[0] >= -e65[3] : 1 === t68 ? e65[1] >= -e65[3] : 2 === t68 ? e65[0] <= e65[3] : 3 === t68 ? e65[1] <= e65[3] : void s18(false);
  }
  _intersect(e65, t68, r62) {
    let i60 = 0;
    return 0 === r62 ? i60 = (-e65[3] - e65[0]) / (t68[0] - e65[0] + t68[3] - e65[3]) : 1 === r62 ? i60 = (-e65[3] - e65[1]) / (t68[1] - e65[1] + t68[3] - e65[3]) : 2 === r62 ? i60 = (e65[3] - e65[0]) / (t68[0] - e65[0] - t68[3] + e65[3]) : 3 === r62 && (i60 = (e65[3] - e65[1]) / (t68[1] - e65[1] - t68[3] + e65[3])), j3(n14(), e65, t68, i60);
  }
  _clipTriangle(e65, t68, r62) {
    let i60 = [e65, t68, r62];
    for (let n77 = 0; n77 < 4; ++n77) {
      const e66 = i60;
      i60 = [];
      for (let t69 = 0; t69 < e66.length; ++t69) {
        const r63 = e66[t69], s69 = e66[(t69 + 1) % e66.length];
        this._inside(s69, n77) ? (this._inside(r63, n77) || i60.push(this._intersect(r63, s69, n77)), i60.push(s69)) : this._inside(r63, n77) && i60.push(this._intersect(r63, s69, n77));
      }
    }
    return i60;
  }
};
var N18 = [[0, 1, 3], [2, 3, 1], [1, 5, 2], [6, 2, 5], [5, 4, 6], [7, 6, 4], [4, 0, 7], [3, 7, 0], [3, 2, 7], [6, 7, 2], [4, 5, 0], [1, 0, 5]];
var W15 = _4();
var k22 = e15();
var E37 = a56();
var K14 = new I27();
var S24 = new P24();
var V14 = new y30();

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/Magnifier.glsl.js
var c50 = class {
};
var f45 = class extends n21 {
  constructor() {
    super(...arguments), this.textures = new c50();
  }
};
function v36() {
  const e65 = new i14();
  return e65.attributes.add(O3.POSITION, "vec2"), e65.vertex.uniforms.add(new e24("drawPosition", (e66, r62) => x33(e66, r62))), e65.varyings.add("vUV", "vec2"), e65.vertex.code.add(o18`void main(void) {
vUV = position;
gl_Position = vec4(drawPosition.xy + vec2(position - 0.5) * drawPosition.zw, 0.0, 1.0);
}`), e65.fragment.uniforms.add(new s22("textureInput", (e66) => e66.textures.input)), e65.fragment.uniforms.add(new s22("textureMask", (e66) => e66.textures.mask)), e65.fragment.uniforms.add(new s22("textureOverlay", (e66) => e66.textures.overlay)), e65.fragment.uniforms.add(new s24("maskEnabled", (e66) => e66.magnifier.maskEnabled)), e65.fragment.uniforms.add(new s24("overlayEnabled", (e66) => e66.magnifier.overlayEnabled)), e65.fragment.code.add(o18`const float barrelFactor = 1.1;
vec2 barrel(vec2 uv) {
vec2 uvn = uv * 2.0 - 1.0;
if (uvn.x == 0.0 && uvn.y == 0.0) {
return vec2(0.5, 0.5);
}
float theta = atan(uvn.y, uvn.x);
float r = pow(length(uvn), barrelFactor);
return r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;
}
void main() {
float mask = maskEnabled ? texture(textureMask, vUV).a : 1.0;
vec4 inputColor = texture(textureInput, barrel(vUV)) * mask;
vec4 overlayColor = overlayEnabled ? texture(textureOverlay, vUV) : vec4(0);
fragColor = overlayColor + (1.0 - overlayColor.a) * inputColor;
}`), e65;
}
function x33(r62, t68) {
  const a67 = t68.camera.pixelRatio, n77 = r62.magnifier.offset.x * a67, s69 = r62.magnifier.offset.y * a67;
  d6(r62.magnifier.position, p47);
  const i60 = t68.camera.screenToRender(p47, g30), u51 = Math.ceil(a67 * r62.magnifier.size), m44 = t68.camera.fullWidth, d52 = t68.camera.fullHeight;
  return r6(h43, (i60[0] + n77) / m44 * 2 - 1, (i60[1] - s69) / d52 * 2 - 1, u51 / m44 * 2, u51 / d52 * 2);
}
var p47 = i8();
var g30 = s16();
var h43 = n14();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/MagnifierHelper.js
var M19 = class extends m {
  constructor() {
    super(...arguments), this._handles = new t3(), this._magnifier = null, this._imageSources = null, this._imageLoadTask = null, this._resources = null, this._passParameters = new f45(), this.events = new n8(), this.attributeLocations = /* @__PURE__ */ new Map([[O3.POSITION, 0]]), this._tmpScreenPoint = i8(), this._tmpRenderPoint = s16();
  }
  get updating() {
    return null == this._imageSources && null != this._imageLoadTask && !this._imageLoadTask.task.finished;
  }
  get magnifier() {
    return this._magnifier;
  }
  set magnifier(e65) {
    if (e65 === this._magnifier)
      return;
    this._handles.removeAll(), this._magnifier = e65;
    const s69 = () => {
      this._updateResourceLoading(), this.events.emit("request-render");
    };
    null != this._magnifier && this._handles.add(l6(() => n(this._magnifier, (e66) => e66.version), s69)), s69();
  }
  get enabled() {
    return null != this._validMagnifier;
  }
  get _validMagnifier() {
    return null != this._magnifier && this._magnifier.visible && null != this._magnifier.position && this._magnifier.size > 0 ? this._magnifier : null;
  }
  get _factor() {
    return null != this._magnifier && this._magnifier.factor || 1;
  }
  destroy() {
    this._magnifier = null, this._handles.destroy(), null != this._imageLoadTask && (this._imageLoadTask.task.abort(), this._imageLoadTask = null), this._disposeResources();
  }
  render(e65, s69) {
    const r62 = this._validMagnifier;
    if (null == r62)
      return;
    const t68 = s69.camera.pixelRatio, i60 = Math.ceil(t68 * r62.size);
    if (this._updateResources(e65, i60), null == this._resources)
      return;
    const o61 = this._passParameters.textures, n77 = Math.ceil(1 / this._factor * i60);
    o61.input.resize(n77, n77), d6(r62.position, this._tmpScreenPoint);
    const l63 = s69.camera.screenToRender(this._tmpScreenPoint, this._tmpRenderPoint), u51 = s69.camera.fullWidth, h46 = s69.camera.fullHeight, p54 = 0.5 * n77, c58 = 0.5 * n77;
    l63[0] = i3(l63[0], p54, u51 - p54 - 1), l63[1] = i3(l63[1], c58, h46 - c58 - 1);
    const _33 = Math.floor(l63[0] - p54), g36 = Math.floor(l63[1] - c58), d52 = this._resources.program;
    d52.bindTexture("textureInput", o61.input), e65.gl.copyTexImage2D(o61.input.descriptor.target, 0, o61.input.descriptor.pixelFormat, _33, g36, n77, n77, 0), this._passParameters.magnifier = r62, e65.useProgram(d52), d52.bindPass(this._passParameters, s69), e65.bindVAO(this._resources.vao), e65.setPipelineState(this._resources.pipelineState), e65.drawArrays(E5.TRIANGLE_STRIP, 0, 4);
  }
  _updateResourceLoading() {
    const e65 = this._validMagnifier;
    if (null == e65)
      return;
    const s69 = e65.maskUrl, t68 = e65.overlayUrl;
    null == this._imageLoadTask || this._imageLoadTask.maskUrl === s69 && this._imageLoadTask.overlayUrl === t68 || (this._imageLoadTask.task.abort(), this._imageLoadTask = null, this._imageSources = null), null == this._imageSources && null == this._imageLoadTask && (this._imageLoadTask = { maskUrl: s69, overlayUrl: t68, task: d5(async (e66) => {
      const r62 = null == s69 || null == t68 ? s39(e66) : null, i60 = null != s69 ? t15(s69, { signal: e66 }) : r62.then((e67) => e67.mask), a67 = null != t68 ? t15(t68, { signal: e66 }) : r62.then((e67) => e67.overlay);
      this._imageSources = { mask: await i60, overlay: await a67 }, this._disposeResources(), this.events.emit("request-render");
    }) }, this._imageLoadTask.task.promise.then(() => this.notifyChange("updating"), () => this.notifyChange("updating")));
  }
  _updateResources(e65, s69) {
    if (!this.enabled)
      return void this._disposeResources();
    if (null != this._resources) {
      if (this._passParameters.textures.size !== s69) {
        const r63 = this._createTextureResources(e65, s69);
        if (null == r63)
          return void this._disposeResources();
        this._disposeTextureResources(this._passParameters.textures), this._passParameters.textures = r63;
      }
      return;
    }
    const r62 = this._createTextureResources(e65, s69);
    null != r62 && (this._resources = { program: this._createProgram(e65), vao: f14(e65, t20, this.attributeLocations, 0, 1), pipelineState: W3({ blending: s23(R4.ONE, R4.ONE_MINUS_SRC_ALPHA), depthTest: null, depthWrite: null, colorWrite: _6 }) }, this._passParameters.textures = r62);
  }
  _disposeResources() {
    null != this._resources && (this._disposeTextureResources(this._passParameters.textures), this._resources.program.dispose(), this._resources.vao.dispose(), this._resources = null);
  }
  _disposeTextureResources(e65) {
    e65.mask.dispose(), e65.overlay.dispose(), e65.input.dispose();
  }
  _createTextureResources(e65, s69) {
    if (null == this._imageSources)
      return null;
    this._imageSources.overlay.width = s69, this._imageSources.overlay.height = s69, this._imageSources.mask.width = s69, this._imageSources.mask.height = s69;
    const r62 = new e20();
    r62.internalFormat = G5.RGBA, r62.wrapMode = D2.CLAMP_TO_EDGE, r62.flipped = true, r62.preMultiplyAlpha = !vt(this._imageSources.overlay.src) || !e65.driverTest.svgPremultipliesAlpha.result;
    const t68 = new T8(e65, r62, this._imageSources.overlay);
    r62.pixelFormat = r62.internalFormat = G5.ALPHA, r62.preMultiplyAlpha = false;
    const i60 = new T8(e65, r62, this._imageSources.mask);
    r62.pixelFormat = r62.internalFormat = G5.RGBA, r62.flipped = false;
    return { input: new T8(e65, r62), mask: i60, overlay: t68, size: s69 };
  }
  _createProgram(e65) {
    return new i13(e65, v36(), this.attributeLocations);
  }
};
e([y2()], M19.prototype, "_imageSources", void 0), e([y2()], M19.prototype, "_imageLoadTask", void 0), e([y2({ readOnly: true })], M19.prototype, "updating", null), M19 = e([a4("esri/views/3d/webgl-engine/lib/MagnifierHelper")], M19);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/ObjectAndLayerIdRenderHelper.js
var o54 = class {
  constructor() {
    this.declaredClass = "esri.views.3d.webgl-engine.lib.ObjectAndLayerIdRenderHelper", this.colorZero = new x8(new ArrayBuffer(4)), this._uidToRenderColor = /* @__PURE__ */ new Map(), this._colorToUID = /* @__PURE__ */ new Map(), this._layerUidToGraphicsUidToObjectId = /* @__PURE__ */ new Map(), this._layerUidToId = /* @__PURE__ */ new Map(), this._layerUidToPopupEnabled = /* @__PURE__ */ new Map();
  }
  setUidToObjectAndLayerId(e65, r62, t68, o61, i60, d52 = null, a67 = null, n77 = null) {
    if (!(e65 && r62 && t68 && o61))
      return;
    if (this._layerUidToId.set(o61, t68), this._layerUidToPopupEnabled.set(o61, i60), !i60)
      return;
    let s69 = this._layerUidToGraphicsUidToObjectId.get(o61);
    s69 || (s69 = /* @__PURE__ */ new Map(), this._layerUidToGraphicsUidToObjectId.set(o61, s69)), s69.set(r62, { objectId: e65, attributeNodeId: d52, attributeIndex: a67, subLayerId: n77 });
  }
  getObjectAndLayerIdColor(e65) {
    const t68 = this.getObjectAndLayerIdColorArray(e65);
    return r11(t68.get(0, 1), t68.get(0, 2), t68.get(0, 3), 255);
  }
  getObjectAndLayerIdColorArray(r62) {
    if (!r62.layerUid || !r62.graphicUid)
      return this.colorZero;
    const o61 = this._layerUidToPopupEnabled.get(r62.layerUid);
    if (void 0 === o61)
      return s3.getLogger(this).warn("popupEnabled is undefined for layerUid " + r62.layerUid), this.colorZero;
    if (false === o61)
      return this.colorZero;
    let i60 = this._uidToRenderColor.get(r62.layerUid);
    i60 || (i60 = /* @__PURE__ */ new Map(), this._uidToRenderColor.set(r62.layerUid, i60));
    let d52 = i60.get(r62.graphicUid);
    if (!d52) {
      for (; !d52; ) {
        const e65 = Math.floor(16777214 * Math.random()) + 1;
        this._colorToUID.has(e65) || (d52 = e65);
      }
      if (d52 > 16777215)
        throw new Error("Object ID Overflow");
      i60.set(r62.graphicUid, d52), this._colorToUID.set(d52, r62);
    }
    const a67 = new ArrayBuffer(4);
    new DataView(a67).setUint32(0, d52, false);
    return new x8(a67);
  }
  getColorToObjectAndLayerIdMapping() {
    const r62 = /* @__PURE__ */ new Map();
    for (const [t68, o61] of this._colorToUID.entries()) {
      const i60 = this._layerUidToGraphicsUidToObjectId.get(o61.layerUid);
      let d52 = null;
      i60 ? (d52 = i60.get(o61.graphicUid), d52 || s3.getLogger(this).warn("getColorMapping: no entry found for graphicsId " + o61.graphicUid)) : s3.getLogger(this).warn("getColorMapping: no entry found for layerUid " + o61.layerUid);
      const a67 = this._layerUidToId.get(o61.layerUid);
      a67 || s3.getLogger(this).warn("no layerId found for uid " + o61.layerUid), d52 && a67 && r62.set(t68, d52.attributeNodeId ? { type: "object-and-layer-and-i3s-id", oid: d52.objectId, lid: a67, attrId: d52.attributeNodeId, attrIdx: d52.attributeIndex, subLayerId: d52.subLayerId } : { type: "object-and-layer-id", oid: d52.objectId, lid: a67 });
    }
    return r62;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/renderPasses/RenderPass.js
var i58;
!function(e65) {
  e65[e65.FrontToBack = 0] = "FrontToBack", e65[e65.BackToFront = 1] = "BackToFront";
}(i58 || (i58 = {}));
var a60 = class {
  constructor(t68, r62, a67 = i58.FrontToBack) {
    this._rctx = t68, this._techniqueRepository = r62, this._sorting = a67, this._draws = new l2({ initialSize: 32, allocator: (e65) => e65 || { material: null, geometry: null, geometryRanges: null, bindDrawParams: null, depthSquaredHint: 0, indexType: 0 } }), this._previouslyBoundDraw = /* @__PURE__ */ new Map();
  }
  submitDraw(e65, t68, r62, i60) {
    const a67 = this._draws.pushNew();
    a67.geometry = t68, a67.geometryRanges = r62, a67.material = e65, a67.depthSquaredHint = i60, a67.indexType = (t68.indexed ? t68.vao.indexBuffer.indexType : null) ?? 0;
  }
  prepare(e65, t68) {
    return this._draws.map((r62) => r62.material.prepareTechnique(this._techniqueRepository, e65, t68, r62.geometry.parameters));
  }
  dispatch(e65, r62, i60) {
    const a67 = this._rctx;
    this._previouslyBoundDraw.clear();
    let s69 = null;
    const o61 = this._draws.length;
    for (let p54 = 0; p54 < o61; p54++) {
      const o62 = i60[p54];
      o62 === s69 && o62.configuration.transparencyPassType === o20.NONE || (a67.bindTechnique(o62, e65, r62), s69 = o62);
      const l63 = this._draws.data[p54], d52 = l63.geometry;
      a67.bindVAO(d52.vao), this._previouslyBoundDraw.get(o62) !== l63.material && (o62.program.bindDraw(l63.material, r62, e65), this._previouslyBoundDraw.set(o62, l63.material));
      const c58 = l63.geometryRanges, u51 = c58.length;
      if (0 !== l63.indexType) {
        const e66 = n68.get(l63.indexType);
        for (let t68 = 0; t68 < u51; t68 += 2) {
          const r63 = c58[t68], i61 = c58[t68 + 1];
          a67.drawElements(d52.primitiveType, i61, l63.indexType, r63 * e66);
        }
      } else
        for (let e66 = 0; e66 < u51; e66 += 2) {
          const t68 = c58[e66], r63 = c58[e66 + 1];
          a67.drawArrays(d52.primitiveType, t68, r63);
        }
    }
  }
  prepareSubmit() {
    this._draws.clear();
  }
  finishSubmit() {
    const e65 = this._sorting === i58.FrontToBack ? 1 : -1;
    this._draws.sort((t68, r62) => {
      const i60 = e65 * (t68.depthSquaredHint - r62.depthSquaredHint);
      return 0 !== i60 ? i60 : t68.geometry.vao.byteSize - r62.geometry.vao.byteSize;
    });
  }
  get count() {
    return this._draws.length;
  }
};
var n68 = /* @__PURE__ */ new Map();
n68.set(C5.UNSIGNED_BYTE, 1), n68.set(C5.UNSIGNED_SHORT, 2), n68.set(C5.UNSIGNED_INT, 4);

// node_modules/@arcgis/core/views/3d/webgl-engine/core/renderPasses/RenderPassManager.js
var w27 = class {
  constructor(s69, e65) {
    this.rctx = s69, this.shaderTechniqueRepository = e65, this.canRender = true, this._materialPassParameters = new n37(), this._shadowPassParameters = new h18(), this._highlightPassParameters = new l22(), this._systems = /* @__PURE__ */ new Set(), this._passes = { materialOpaque: new a60(s69, e65), materialTransparent: new a60(s69, e65, i58.BackToFront), materialIntegratedMesh: new a60(s69, e65), shadowMap: new a60(s69, e65), highlight: new a60(s69, e65), highlightIntegratedMesh: new a60(s69, e65), highlightShadowMap: new a60(s69, e65), defaultShadowMap: new a60(s69, e65) };
  }
  destroy() {
    this._context = null, this._systems.clear();
  }
  register(s69) {
    this._systems.add(s69);
  }
  prepareRender(s69) {
    if (0 !== this._systems.size) {
      for (const s70 of Object.values(this._passes))
        s70.prepareSubmit();
      this._systems.forEach((e65) => e65.submit(this._passes, s69.bindParameters));
      for (const s70 of Object.values(this._passes))
        s70.finishSubmit();
      this.shaderTechniqueRepository.frameUpdate();
    }
  }
  prepareTechniques(s69) {
    return 0 === this._systems.size ? null : (this._configure(s69), this._materialPassParameters.output = s69.output, this._invoke(s69, (e65, t68) => e65.prepare(t68, s69.bindParameters)));
  }
  render(s69, e65) {
    this._invoke(s69, (t68, a67) => t68.dispatch(a67, s69.bindParameters, e65));
  }
  _invoke(s69, e65) {
    switch (s69.bindParameters.slot) {
      case E8.OPAQUE_MATERIAL:
        switch (s69.output) {
          case h10.Color:
          case h10.Depth:
          case h10.Normal:
          case h10.ObjectAndLayerIdColor:
            return e65(this._passes.materialOpaque, this._materialPassParameters);
          case h10.Highlight:
            return e65(this._passes.highlight, this._highlightPassParameters);
          case h10.Shadow:
            return e65(this._passes.shadowMap, this._shadowPassParameters);
          case h10.ShadowHighlight:
            return e65(this._passes.highlightShadowMap, this._shadowPassParameters);
          case h10.ShadowExcludeHighlight:
            return e65(this._passes.defaultShadowMap, this._shadowPassParameters);
        }
        break;
      case E8.TRANSPARENT_MATERIAL:
        switch (s69.output) {
          case h10.Color:
          case h10.Alpha:
          case h10.Depth:
          case h10.Normal:
          case h10.ObjectAndLayerIdColor:
            return e65(this._passes.materialTransparent, this._materialPassParameters);
        }
        break;
      case E8.INTEGRATED_MESH:
        switch (s69.output) {
          case h10.Color:
          case h10.Depth:
          case h10.Normal:
          case h10.ObjectAndLayerIdColor:
            return e65(this._passes.materialIntegratedMesh, this._materialPassParameters);
          case h10.Highlight:
            return e65(this._passes.highlightIntegratedMesh, this._highlightPassParameters);
        }
    }
    return null;
  }
  notifyDirty() {
    this._context.requestRender();
  }
  slots() {
    return [E8.OPAQUE_MATERIAL, E8.TRANSPARENT_MATERIAL, E8.INTEGRATED_MESH];
  }
  initializeRenderContext(s69) {
    this._context = s69;
  }
  uninitializeRenderContext() {
  }
  queryDepthRange(s69) {
    const e65 = { near: 1 / 0, far: -1 / 0 };
    return this._systems.forEach((t68) => {
      const a67 = t68.queryShadowCasterDepthRange(s69);
      null != a67 && e54(e65, a67, e65);
    }), e65;
  }
  _configure(s69) {
    const e65 = s69.output === h10.Shadow || s69.output === h10.ShadowHighlight || s69.output === h10.ShadowExcludeHighlight ? this._shadowPassParameters : s69.output === h10.Highlight ? this._highlightPassParameters : this._materialPassParameters;
    this._updateParameters(s69, e65);
  }
  _updateParameters(a67, o61) {
    const n77 = a67.bindParameters.camera, m44 = n77.viewInverseTransposeMatrix;
    o2(f46, m44[3], m44[7], m44[11]), T27.set(f46), r5(o61.transformWorldFromViewTH, T27.high), r5(o61.transformWorldFromViewTL, T27.low), r5(o61.slicePlaneLocalOrigin, f46), a13(o61.transformViewFromCameraRelativeRS, n77.viewMatrix), n10(o61.transformProjFromView, n77.projectionMatrix), o61.identifier === o36.Material && (this._materialPassParameters.transparent = a67.bindParameters.slot === E8.TRANSPARENT_MATERIAL, this._materialPassParameters.integratedMesh = a67.bindParameters.slot === E8.INTEGRATED_MESH, o12(R19, o61.transformViewFromCameraRelativeRS), u5(o61.transformNormalViewFromGlobal, R19));
  }
  get needsHighlight() {
    return this._passes.highlight.count > 0 || this._passes.highlightIntegratedMesh.count > 0;
  }
  get needsTransparentPass() {
    return this._passes.materialTransparent.count > 0;
  }
};
var f46 = n7();
var R19 = e14();
var T27 = new c49();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/AnimationTimeStep.js
var e59 = class {
  constructor() {
    this._step = m38, this._dilation = 1, this._firstIdleTime = n4(0);
  }
  frame(e65, _33) {
    _33 ? 0 === this._firstIdleTime && (this._firstIdleTime = n4(performance.now())) : this._firstIdleTime = n4(0);
    if (!has("disable-feature:high-quality-idle")) {
      const t68 = _33 ? performance.now() - this._firstIdleTime : 0;
      if (t68 >= r59 + o55)
        return this._step = n4(1 / 0), void (this._dilation = 1);
      this._dilation = t68 >= r59 ? h44 : 1;
    } else
      this._dilation = 1;
    const n77 = i3(e65 / s63, m38, a61);
    this._step === 1 / 0 ? this._step = n4(n77) : this._step = n4(this._step * l56 + n77 * (1 - l56));
  }
  get value() {
    return this._step;
  }
  get timeDilation() {
    return this._dilation;
  }
  clear() {
    this._step = this._firstIdleTime = n4(0);
  }
};
var s63 = 0.5;
var r59 = n4(12e4);
var o55 = n4(1e4);
var h44 = 10;
var l56 = 0.9;
var _31 = 30;
var m38 = n4(1e3 / 1);
var a61 = n4(1e3 / _31);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/HighlightApplyTechnique.js
var n69 = class _n extends e22 {
  initializeProgram(e65) {
    return new i13(e65.rctx, _n.shader.get().build(), E7);
  }
  initializePipeline() {
    return W3({ blending: l14(R4.SRC_ALPHA, R4.ONE, R4.ONE_MINUS_SRC_ALPHA, R4.ONE_MINUS_SRC_ALPHA), colorWrite: _6 });
  }
};
n69.shader = new t16(d23, () => import("./HighlightApply.glsl-7MDV5O2I.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/HighlightBlurTechnique.js
var a62 = class _a extends e22 {
  initializeProgram(r62) {
    return new i13(r62.rctx, _a.shader.get().build(), E7);
  }
  initializePipeline() {
    return W3({ colorWrite: _6 });
  }
};
a62.shader = new t16(l25, () => import("./HighlightBlur.glsl-LLGTO4VJ.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/HighlightDownsampleTechnique.js
var a63 = class _a extends e22 {
  initializeProgram(e65) {
    return new i13(e65.rctx, _a.shader.get().build(), E7);
  }
  initializePipeline() {
    return W3({ colorWrite: _6 });
  }
};
a63.shader = new t16(m16, () => import("./HighlightDownsample.glsl-AAHU6GDA.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/HighlightPassParameters.js
var c51 = class extends n21 {
  constructor() {
    super(...arguments), this.color = r34(1, 0, 1, 1), this.haloColor = r34(1, 0, 1, 1), this.haloOpacity = 1, this.haloOpacityOccluded = 0.25, this.fillOpacity = 0.2, this.fillOpacityOccluded = 0.05, this.shadowColor = r11(1, 0, 1, 1), this.shadowOpacity = 0.15, this.occludedShadowOpacity = 0.075;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Highlight.js
var P25 = 32;
var F28 = class {
  constructor(e65, r62) {
    this._techniqueRep = e65, this._rctx = r62, this._viewportToRestore = n14(), this._passParameters = new c51(), this._downsampleDrawParameters = new s40(), this._blurDrawParameters = new a33(), this._grid = { coverageMipmap: null, vao: null, verticalCellCount: 0, horizontalCellCount: 0, cellPixelSize: 0, mipmapLevels: 0, viewportWidth: 0, viewportHeight: 0 };
  }
  _assertResources() {
    if (this._quadVAO)
      return;
    this._quadVAO = f14(this._rctx);
    const e65 = new e20();
    e65.wrapMode = D2.CLAMP_TO_EDGE, this._blur0Fbo = new x11(this._rctx, e65), this._blur1Fbo = new x11(this._rctx, e65), this._blurTechnique = this._techniqueRep.acquire(a62), this._downsampleTechnique = this._techniqueRep.acquire(a63), this._applyTechnique = this._techniqueRep.acquire(n69);
  }
  dispose() {
    if (this._blurTechnique = f(this._blurTechnique), this._downsampleTechnique = f(this._downsampleTechnique), this._applyTechnique = f(this._applyTechnique), this._grid.coverageMipmap)
      for (let e65 = 1; e65 < this._grid.coverageMipmap.length; e65++)
        this._grid.coverageMipmap[e65].dispose();
    this._grid.vao && this._grid.vao.dispose(), this._quadVAO && (this._quadVAO.dispose(), this._quadVAO = null), this._blur0Fbo = t2(this._blur0Fbo), this._blur1Fbo = t2(this._blur1Fbo);
  }
  setDefaultOptions(e65) {
    this._passParameters = { ...new c51(), ...e65 };
  }
  render(e65, r62, s69) {
    this._passParameters.highlightColorTexture = r62.colorTexture, this._assertResources();
    const a67 = e65.camera;
    a6(this._viewportToRestore, a67.fullViewport);
    const o61 = a67.fullWidth, h46 = a67.fullHeight, l63 = a67.pixelRatio, p54 = Math.ceil(o61 / l63), u51 = Math.ceil(h46 / l63);
    this._blur0Fbo.resize(p54, u51), this._blur1Fbo.resize(p54, u51);
    const m44 = this._rctx;
    m44.bindVAO(this._quadVAO);
    let c58 = null;
    this._gridUpdateResources(r62, P25), this._gridComputeMipmap(e65), this._passParameters.coverageTexture = this._grid.coverageMipmap[this._grid.mipmapLevels].colorTexture, c58 = this._grid.vao;
    const _33 = m44.bindTechnique(this._blurTechnique, this._passParameters, e65);
    m44.bindVAO(c58), m44.bindFramebuffer(this._blur0Fbo), m44.setViewport(0, 0, p54, u51), m44.setClearColor(0, 0, 0, 0), m44.clear(_3.COLOR_BUFFER_BIT), this._blurDrawParameters.blurInputTexture = r62.colorTexture, r13(this._blurDrawParameters.blurSize, 1 / p54, 0), _33.bindDraw(this._blurDrawParameters, e65, this._passParameters), m44.drawArrays(this._blurTechnique.primitiveType, 0, n20(c58, "geometry")), m44.bindFramebuffer(this._blur1Fbo), m44.clear(_3.COLOR_BUFFER_BIT), this._blurDrawParameters.blurInputTexture = this._blur0Fbo.colorTexture, r13(this._blurDrawParameters.blurSize, 0, 1 / u51), _33.bindDraw(this._blurDrawParameters, e65, this._passParameters), m44.drawArrays(this._blurTechnique.primitiveType, 0, n20(c58, "geometry")), m44.bindFramebuffer(s69), m44.setViewport(this._viewportToRestore[0], this._viewportToRestore[1], this._viewportToRestore[2], this._viewportToRestore[3]), this._passParameters.blurColorTexture = this._blur1Fbo.colorTexture, m44.bindTechnique(this._applyTechnique, this._passParameters, e65), m44.drawArrays(this._applyTechnique.primitiveType, 0, n20(c58, "geometry")), m44.bindVAO(null);
  }
  _gridUpdateResources(e65, r62) {
    const t68 = this._rctx, i60 = this._grid;
    let s69 = false;
    if (null === i60.coverageMipmap && (i60.coverageMipmap = [e65], s69 = true), i60.viewportWidth === e65.width && i60.viewportHeight === e65.height || (s69 = true, i60.viewportWidth = e65.width, i60.viewportHeight = e65.height), i60.coverageMipmap[0] = e65, i60.cellPixelSize !== r62 && (i60.cellPixelSize = r62, s69 = true), s69) {
      for (let e66 = 1; e66 < i60.coverageMipmap.length; e66++)
        i60.coverageMipmap[e66].dispose();
      i60.mipmapLevels = Math.ceil(Math.log(i60.cellPixelSize) * Math.LOG2E), i60.coverageMipmap.length = i60.mipmapLevels + 1;
      for (let e66 = 0; e66 < i60.mipmapLevels; e66++) {
        const r63 = i60.coverageMipmap[e66], s70 = new e20(Math.ceil(r63.width / 2), Math.ceil(r63.height / 2));
        s70.pixelFormat = G5.RGB, s70.dataType = U4.UNSIGNED_SHORT_5_6_5, s70.wrapMode = D2.CLAMP_TO_EDGE, i60.coverageMipmap[e66 + 1] = new x11(t68, s70);
      }
    }
    const h46 = Math.ceil(e65.height / i60.cellPixelSize), p54 = Math.ceil(e65.width / i60.cellPixelSize);
    if (!i60.vao || i60.verticalCellCount !== h46 || i60.horizontalCellCount !== p54) {
      i60.verticalCellCount = h46, i60.horizontalCellCount = p54;
      const e66 = h46 + 1, r63 = p54 + 1, s70 = 1 / h46, u51 = 1 / p54, m44 = 6, c58 = 4, _33 = new Float32Array(m44 * c58 * e66 * r63);
      let n77 = 0;
      for (let t69 = 0; t69 < e66; t69++)
        for (let e67 = 0; e67 < r63; e67++)
          _33[n77] = (e67 - 0.5) * u51 * 2 - 1, _33[n77 + 1] = (t69 - 0.5) * s70 * 2 - 1, _33[n77 + 2] = e67 * u51, _33[n77 + 3] = t69 * s70, _33[n77 + 4] = (e67 + 0.5) * u51 * 2 - 1, _33[n77 + 5] = (t69 - 0.5) * s70 * 2 - 1, _33[n77 + 6] = e67 * u51, _33[n77 + 7] = t69 * s70, _33[n77 + 8] = (e67 - 0.5) * u51 * 2 - 1, _33[n77 + 9] = (t69 + 0.5) * s70 * 2 - 1, _33[n77 + 10] = e67 * u51, _33[n77 + 11] = t69 * s70, _33[n77 + 12] = (e67 - 0.5) * u51 * 2 - 1, _33[n77 + 13] = (t69 + 0.5) * s70 * 2 - 1, _33[n77 + 14] = e67 * u51, _33[n77 + 15] = t69 * s70, _33[n77 + 16] = (e67 + 0.5) * u51 * 2 - 1, _33[n77 + 17] = (t69 - 0.5) * s70 * 2 - 1, _33[n77 + 18] = e67 * u51, _33[n77 + 19] = t69 * s70, _33[n77 + 20] = (e67 + 0.5) * u51 * 2 - 1, _33[n77 + 21] = (t69 + 0.5) * s70 * 2 - 1, _33[n77 + 22] = e67 * u51, _33[n77 + 23] = t69 * s70, n77 += m44 * c58;
      i60.vao && i60.vao.dispose(), i60.vao = new r26(t68, E7, { geometry: A9 }, { geometry: c12.createVertex(t68, F6.STATIC_DRAW, _33) });
    }
  }
  _gridComputeMipmap(e65) {
    const r62 = this._rctx, i60 = this._grid, s69 = r62.bindTechnique(this._downsampleTechnique, this._passParameters, e65);
    r62.bindVAO(this._quadVAO);
    for (let a67 = 0; a67 < i60.mipmapLevels; a67++) {
      r62.bindFramebuffer(i60.coverageMipmap[a67 + 1]);
      const o61 = i60.coverageMipmap[a67 + 1].width, h46 = i60.coverageMipmap[a67 + 1].height;
      this._downsampleDrawParameters.inputTexture = i60.coverageMipmap[a67].colorTexture, r13(this._downsampleDrawParameters.invFramebufferDim, 1 / o61, 1 / h46), s69.bindDraw(this._downsampleDrawParameters, e65, this._passParameters), r62.setViewport(0, 0, o61, h46), r62.drawArrays(E5.TRIANGLE_STRIP, 0, n20(this._quadVAO, "geometry"));
    }
  }
  get gpuMemoryUsage() {
    let e65 = (null != this._blur0Fbo ? this._blur0Fbo.gpuMemoryUsage : 0) + (null != this._blur1Fbo ? this._blur1Fbo.gpuMemoryUsage : 0);
    if (this._grid.coverageMipmap)
      for (const r62 of this._grid.coverageMipmap)
        e65 += r62.gpuMemoryUsage;
    return e65;
  }
  get test() {
    return { coverage: this._grid.coverageMipmap, blur: [this._blur0Fbo, this._blur1Fbo] };
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/RenderTargetHelper.js
var c52 = { dataType: U4.UNSIGNED_BYTE, internalFormat: G5.RGBA };
var p48 = {};
var u45 = class {
  constructor(e65) {
    this._rctx = e65, this._activeTargets = /* @__PURE__ */ new Set(), this._colorTextures = /* @__PURE__ */ new Map(), this._depthTextures = /* @__PURE__ */ new Map(), this._fbos = /* @__PURE__ */ new Map();
  }
  dispose() {
    this._depthTextures.forEach((e65) => e65.dispose()), this._depthTextures.clear(), this._colorTextures.forEach((e65) => e65.dispose()), this._colorTextures.clear(), this._fbos.forEach((e65) => e65.dispose()), this._fbos.clear(), this._activeTargets.clear();
  }
  disposeTargetResource(e65) {
    const t68 = e65.id;
    this._activeTargets.has(t68) && (this._activeTargets.delete(t68), this._disposeWithFramebuffers(this._depthTextures, t68), this._disposeWithFramebuffers(this._colorTextures, t68));
  }
  _disposeWithFramebuffers(e65, t68) {
    const r62 = e65.get(t68);
    r62 && (this._fbos.forEach((e66, t69) => {
      e66.colorTexture !== r62 && e66.depthStencilAttachment !== r62 || (e66.detachColorTexture(), e66.detachDepthStencilTexture(), e66.dispose(), this._fbos.delete(t69));
    }), r62.dispose(), e65.delete(t68));
  }
  _getDepthTexture(e65, t68, h46) {
    let c58 = this._depthTextures.get(e65.id);
    if (!c58 || c58.descriptor.width === t68 && c58.descriptor.height === h46 || (c58.dispose(), c58 = null), !c58) {
      const p54 = new e20(t68, h46);
      p54.pixelFormat = G5.DEPTH_STENCIL, p54.dataType = U4.UNSIGNED_INT_24_8, p54.samplingMode = L.NEAREST, p54.wrapMode = D2.CLAMP_TO_EDGE, c58 = new T8(this._rctx, p54), this._depthTextures.set(e65.id, c58), this._activeTargets.add(e65.id);
    }
    return c58;
  }
  getAllocatedDepthTexture(e65) {
    return this._depthTextures.get(e65.id);
  }
  getColorTexture(t68, r62, s69) {
    let h46 = this._colorTextures.get(t68.id);
    if (h46 && (h46.descriptor.width === r62 && h46.descriptor.height === s69 || (h46.dispose(), h46 = i())), !h46) {
      const e65 = new e20(r62, s69);
      e65.internalFormat = t68.internalFormat, e65.dataType = t68.dataType, e65.samplingMode = null != t68.samplingMode ? t68.samplingMode : L.LINEAR, e65.wrapMode = D2.CLAMP_TO_EDGE, h46 = new T8(this._rctx, e65), this._colorTextures.set(t68.id, h46), this._activeTargets.add(t68.id);
    }
    return h46;
  }
  getAllocatedColorTexture(e65) {
    return this._colorTextures.get(e65.id);
  }
  registerDepthTarget(e65 = {}) {
    return { id: e5(), ...p48, ...e65 };
  }
  registerColorTarget(e65 = {}) {
    return { id: e5(), ...c52, ...e65 };
  }
  getFramebuffer(e65, t68, r62, s69) {
    const i60 = this._getKey(r62, s69);
    let o61 = this._fbos.get(i60);
    const a67 = this.getColorTexture(r62, e65, t68), d52 = s69 ? this._getDepthTexture(s69, e65, t68) : void 0;
    if (!o61)
      return o61 = new x11(this._rctx, a67, d52), this._fbos.set(i60, o61), o61;
    return (o61.width !== e65 || o61.height !== t68 || o61.colorTexture !== a67 || o61.depthStencilAttachment !== d52) && (o61.detachColorTexture(), o61.detachDepthStencilTexture(), o61.resize(e65, t68), o61.attachColorTexture(a67), o61.attachDepthStencil(d52)), o61;
  }
  _getKey(e65, t68) {
    return `${e65.id}_${t68 ? t68.id : "X"}_${e65.name}${t68 ? "_" + t68.name : ""}`;
  }
  get gpuMemoryUsage() {
    let e65 = 0;
    const t68 = /* @__PURE__ */ new Set(), r62 = (r63) => {
      t68.has(r63) || (t68.add(r63), e65 += r63.gpuMemoryUsage);
    };
    return this._colorTextures.forEach(r62), this._depthTextures.forEach(r62), e65;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/OffscreenRendering.js
var n70 = class {
  constructor(t68, r62) {
    this._rctx = t68, this._compositingHelper = r62, this._mainColorTarget = 0, this.width = 4, this.height = 4, this._background = { type: "color", color: [0, 0, 0, 1] }, this._renderTargetHelper = new u45(t68);
    const a67 = this._renderTargetHelper;
    this._mainColorTargets = [a67.registerColorTarget({ name: "mainColorTarget0" }), a67.registerColorTarget({ name: "mainColorTarget1" })], this.frontFaceTarget = a67.registerColorTarget({ name: "frontFaceTarget" }), this.colorFloatTarget = a67.registerColorTarget({ name: "colorFloatTarget", dataType: U4.HALF_FLOAT, internalFormat: P4.RGBA16F, samplingMode: L.NEAREST }), this.alphaFloatTarget = a67.registerColorTarget({ name: "alphaFloatTarget", dataType: U4.HALF_FLOAT, internalFormat: P4.R16F, samplingMode: L.NEAREST }), this.mainDepth = a67.registerDepthTarget({ name: "mainDepth" }), this.linearDepth = a67.registerColorTarget({ name: "linearDepth", samplingMode: L.NEAREST }), this.terrainLinearDepth = a67.registerColorTarget({ name: "terrainLinearDepth" }), this.geometryLinearDepth = a67.registerColorTarget({ name: "geometryLinearDepth" }), this.normal = a67.registerColorTarget({ name: "normal" }), this.highlight = a67.registerColorTarget({ name: "highlight", internalFormat: P4.RGBA4, dataType: U4.UNSIGNED_SHORT_4_4_4_4 }), this.hudVisibility = a67.registerColorTarget({ name: "hudVisibility", internalFormat: P4.RGBA4, dataType: U4.UNSIGNED_SHORT_4_4_4_4 }), this.tmpColor = a67.registerColorTarget({ name: "tmpColor" }), this.tmpDepth = a67.registerDepthTarget({ name: "tmpDepth" }), this.hudColor = a67.registerColorTarget({ name: "hudColor" });
  }
  dispose() {
    this._renderTargetHelper.dispose();
  }
  set background(e65) {
    this._background = e65;
  }
  get background() {
    return this._background;
  }
  get currentColorTarget() {
    return this._mainColorTargets[this._mainColorTarget];
  }
  get previousColorTarget() {
    return this._mainColorTargets[1 - this._mainColorTarget];
  }
  get framebuffer() {
    return this.getFramebuffer(this.currentColorTarget, this.mainDepth);
  }
  getFramebuffer(e65, t68) {
    return this._renderTargetHelper.getFramebuffer(this.width, this.height, e65, t68);
  }
  get colorTexture() {
    return this._renderTargetHelper.getAllocatedColorTexture(this.currentColorTarget);
  }
  get depthTexture() {
    return this._renderTargetHelper.getAllocatedDepthTexture(this.mainDepth);
  }
  get linearDepthTexture() {
    return this._renderTargetHelper.getAllocatedColorTexture(this.linearDepth);
  }
  get terrainLinearDepthTexture() {
    return this._renderTargetHelper.getAllocatedColorTexture(this.terrainLinearDepth);
  }
  get geometryLinearDepthTexture() {
    return this._renderTargetHelper.getAllocatedColorTexture(this.geometryLinearDepth);
  }
  get lastFrameColorTexture() {
    return this._renderTargetHelper.getAllocatedColorTexture(this.previousColorTarget);
  }
  get normalTexture() {
    return this._renderTargetHelper.getAllocatedColorTexture(this.normal);
  }
  get highlightTexture() {
    return this._renderTargetHelper.getAllocatedColorTexture(this.highlight);
  }
  get hudVisibilityTexture() {
    return this._getColorTexture(this.hudVisibility);
  }
  get tmpColorTexture() {
    return this._getColorTexture(this.tmpColor);
  }
  get hudColorTexture() {
    return this._getColorTexture(this.hudColor);
  }
  get mainColorTexture() {
    return this._getColorTexture(this.currentColorTarget);
  }
  setupRenderTarget(e65) {
    e65 ? this._mainColorTarget = this._mainColorTarget ? 0 : 1 : (this._mainColorTarget = 0, this.disposeTarget(this._mainColorTargets[1]));
  }
  initializeFrame(e65) {
    const t68 = this._rctx;
    this.width = e65.fullWidth, this.height = e65.fullHeight, R7(this, t68.parameters.maxTextureSize), this.bindTarget(this.currentColorTarget, this.mainDepth), t68.setClearStencil(0);
    const r62 = this._background.color;
    t68.setClearColor(r62[0] * r62[3], r62[1] * r62[3], r62[2] * r62[3], r62[3]), t68.clearSafe(_3.COLOR_BUFFER_BIT | _3.DEPTH_BUFFER_BIT | _3.STENCIL_BUFFER_BIT);
  }
  composite(e65) {
    null != this.colorTexture && this._compositingHelper.composite(e65, this.colorTexture, a57.None);
  }
  renderTmpAndCompositeToMain(e65, t68, r62, i60 = false) {
    this.renderToTargets(e65, this.tmpColor, i60 ? this.tmpDepth : this.mainDepth, l57), this._compositingHelper.composite(t68, this._getColorTexture(this.tmpColor), r62);
  }
  compositeAtmosphereToMain(e65, t68, r62, i60) {
    this.bindTarget(this.currentColorTarget), this._compositingHelper.compositeAtmosphere(e65, this._renderTargetHelper.getColorTexture(this.tmpColor, this.width, this.height), r62, i60, t68), this.bindTarget(this.currentColorTarget, this.mainDepth);
  }
  renderHUDVisibility(e65, t68 = false) {
    this.renderToTargets(e65, this.hudVisibility, t68 ? this.tmpDepth : this.mainDepth, g31);
  }
  compositeTransparentTerrainOntoHUDVisibility(e65) {
    this.renderToTargets(() => this._compositingHelper.compositeHUD(e65, this._getColorTexture(this.tmpColor)), this.hudVisibility, this.tmpDepth);
  }
  renderOITPass(e65, r62, i60) {
    let o61, s69;
    switch (r62) {
      case o20.Color:
        o61 = this.colorFloatTarget, s69 = [0, 0, 0, 0];
        break;
      case o20.Alpha:
        o61 = this.alphaFloatTarget, s69 = [1, 1, 1, 1];
        break;
      case o20.FrontFace:
        o61 = this.frontFaceTarget, s69 = [0, 0, 0, 0];
        break;
      case o20.NONE:
      case o20.COUNT:
        return;
    }
    i60 ? this.renderToTargets(e65, o61, this.tmpDepth, s69, true, true) : this.renderToTargets(e65, o61, this.mainDepth, s69, false);
  }
  compositeTransparentTerrainOntoMain(e65) {
    this.bindFramebuffer(), this._compositingHelper.composite(e65, this._getColorTexture(this.tmpColor), a57.PremultipliedAlpha);
  }
  compositeOccludedOntoMain(e65, t68) {
    this.bindFramebuffer(), this._compositingHelper.composite(e65, this._getColorTexture(this.tmpColor), a57.PremultipliedAlpha, t68);
  }
  compositeTransparentOntoOpaque(e65, t68) {
    t68 ? (this.bindTarget(this.hudColor, this.tmpDepth), this._rctx.setClearColor(0, 0, 0, 1e-13), this._rctx.clearSafe(_3.COLOR_BUFFER_BIT)) : this.bindFramebuffer(), this._compositingHelper.compositeOIT(e65, this._getColorTexture(this.colorFloatTarget), this._getColorTexture(this.alphaFloatTarget), this._getColorTexture(this.frontFaceTarget));
  }
  bindFramebuffer() {
    this._rctx.bindFramebuffer(this.framebuffer);
  }
  renderDepthDetached(e65) {
    this.bindTarget(this.currentColorTarget), e65(), this.bindTarget(this.currentColorTarget, this.mainDepth);
  }
  disposeTarget(e65) {
    this._renderTargetHelper.disposeTargetResource(e65);
  }
  renderToFBO(e65, t68, r62 = false, i60 = false) {
    const o61 = this._rctx;
    let s69 = 0;
    if (t68) {
      const e66 = 1e-13, r63 = Math.max(e66, t68[3]);
      o61.setClearColor(t68[0], t68[1], t68[2], r63), s69 |= _3.COLOR_BUFFER_BIT;
    }
    r62 && (s69 |= _3.DEPTH_BUFFER_BIT), false === i60 ? i60 = 0 : (true === i60 && (i60 = 255), s69 |= _3.STENCIL_BUFFER_BIT), s69 && o61.clearSafe(s69, i60), e65(), o61.gl.flush(), this.bindTarget(this.currentColorTarget, this.mainDepth);
  }
  renderToTargets(e65, t68, r62, i60, o61 = false, s69 = false) {
    const a67 = this.bindTarget(t68, r62);
    return this.renderToFBO(e65, i60, o61, s69), a67;
  }
  bindTarget(e65, t68) {
    const r62 = this._renderTargetHelper.getFramebuffer(this.width, this.height, e65, t68);
    return this._rctx.bindFramebuffer(r62), r62;
  }
  _getColorTexture(e65) {
    return this._renderTargetHelper.getColorTexture(e65, this.width, this.height);
  }
  get gpuMemoryUsage() {
    let e65 = 0;
    return this._renderTargetHelper && (e65 += this._renderTargetHelper.gpuMemoryUsage), e65;
  }
};
var l57 = [0, 0, 0, 0];
var g31 = [0, 1, 0, 1];

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/RenderPluginManager.js
var d50 = class extends m {
  constructor(e65) {
    super({}), this._context = e65, this._renderPlugins = new l2(), this._slots = [];
    for (let r62 = 0; r62 < E8.MAX_SLOTS; ++r62)
      this._slots[r62] = [];
  }
  normalizeCtorArgs() {
    return {};
  }
  add(e65, r62, t68) {
    const o61 = () => {
      if (t68 == null ? void 0 : t68.aborted)
        throw r62.uninitializeRenderContext(), c();
      this._renderPlugins.push(r62);
      for (const t69 of e65)
        this._slots[t69].push(r62);
      this._context.requestRender();
    }, i60 = r62.initializeRenderContext(this._context, t68);
    if (T(i60))
      return i60.then(o61);
    o61(), this.notifyChange("_renderPlugins");
  }
  remove(e65) {
    if (null != this._renderPlugins.removeUnordered(e65)) {
      for (let r62 = 0; r62 < this._slots.length; ++r62)
        this._slots[r62] = this._slots[r62].filter((r63) => r63 !== e65);
      e65.uninitializeRenderContext(), this._context.requestRender(), this.notifyChange("_renderPlugins");
    }
  }
  prepareRender() {
    this._renderPlugins.forAll((e65) => {
      e65.prepareRender && e65.prepareRender(this._context.renderContext);
    });
  }
  updateAnimation(e65) {
    let r62 = false;
    return this._renderPlugins.forAll((t68) => {
      t68.updateAnimation && (r62 = t68.updateAnimation(e65) || r62);
    }), r62;
  }
  prepareSlots(e65) {
    for (const r62 of e65)
      this._context.renderContext.bindParameters.slot = r62, this._slots[r62].filter((e66) => {
        e66.canRender && (p49(e66) && e66.prepareTechnique(this._context.renderContext), h45(e66) && e66.prepareTechniques(this._context.renderContext));
      });
  }
  render() {
    const e65 = this._slots[this._context.renderContext.bindParameters.slot], r62 = new Array();
    e65.filter((e66) => {
      if (!e66.canRender)
        return false;
      if (p49(e66)) {
        const t68 = e66.prepareTechnique(this._context.renderContext);
        return null != t68 && (r62.push(t68), true);
      }
      if (h45(e66)) {
        const t68 = e66.prepareTechniques(this._context.renderContext);
        return null != t68 && (r62.push(t68), true);
      }
      return r62.push(null), true;
    }).forEach((e66, t68) => e66.render(this._context.renderContext, r62[t68]));
  }
  queryDepthRange(e65) {
    const r62 = c53;
    return r62.near = 1 / 0, r62.far = -1 / 0, this._renderPlugins.forAll((t68) => {
      if (t68.queryDepthRange) {
        const n77 = t68.queryDepthRange(e65);
        n77 && e54(r62, n77, r62);
      }
    }), r62;
  }
  get updating() {
    return this._renderPlugins.some((e65) => e65.running);
  }
  get needsTransparentPass() {
    return this._renderPlugins.some((e65) => e65.needsTransparentPass);
  }
  get needsHighlight() {
    return this._renderPlugins.some((e65) => e65.needsHighlight);
  }
  get needsLinearDepth() {
    return this._renderPlugins.some((e65) => e65.needsLinearDepth);
  }
  get needsLaserlineWithContrastControl() {
    const e65 = this._slots[E8.LASERLINES_CONTRAST_CONTROL];
    return !!e65 && e65.length > 0;
  }
  get renderOccludedFlags() {
    return this._renderPlugins.reduce((e65, r62) => e65 | r62.renderOccludedFlags, o19.None);
  }
};
function p49(e65) {
  return "prepareTechnique" in e65;
}
function h45(e65) {
  return "prepareTechniques" in e65;
}
e([y2()], d50.prototype, "_renderPlugins", void 0), e([y2({ readOnly: true })], d50.prototype, "updating", null), d50 = e([a4("esri.views.3d.webgl-engine.lib.RenderPluginManager")], d50);
var c53 = { near: 0, far: 0 };

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/ShadowCastVisualizeTechnique.js
var m39 = class _m extends e22 {
  constructor(e65, r62) {
    super(e65, r62, () => this.destroy());
  }
  initializeProgram(e65) {
    return new i13(e65.rctx, _m.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return W3({ blending: c10, colorWrite: _6, depthTest: null, depthWrite: null });
  }
  get primitiveType() {
    return E5.TRIANGLE_STRIP;
  }
};
m39.shader = new t16(f22, () => import("./ShadowCastVisualize.glsl-7CLIEXS5.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/ShadowCastRenderer.js
var c54 = 4e4;
var p50 = 5e4;
var m40 = 1 / 512;
var b24 = class extends m {
  constructor(e65, t68, s69, i60) {
    super({}), this._techniqueRepository = e65, this._rctx = t68, this._data = s69, this._requestRender = i60, this._passParameters = new p13(this._data), this._techniqueConfig = new r38(), this._enabled = false, this._vao = f14(t68), this._techniqueConfig.visualization = t40.Gradient;
  }
  normalizeCtorArgs() {
    return {};
  }
  dispose() {
    this._stop(), this._vao = t2(this._vao), this._techniqueRepository.release(this._technique), this._technique = null;
  }
  get _visualizeShadowCastTechnique() {
    return this._technique = this._techniqueRepository.releaseAndAcquire(m39, this._techniqueConfig, this._technique), this._technique;
  }
  render(e65) {
    if (!this._showVisualization)
      return;
    this._passParameters.sampleScale = 1 / this._data.computedSamples;
    const t68 = this._visualizeShadowCastTechnique;
    this._rctx.bindVAO(this._vao), this._rctx.bindTechnique(t68, this._passParameters, e65), this._rctx.drawArrays(t68.primitiveType, 0, n20(this._vao, "geometry"));
  }
  setOptions(e65) {
    void 0 !== e65.enabled && this._setEnabled(e65.enabled), void 0 !== e65.color && this._setColor(e65.color), void 0 !== e65.threshold && (this._threshold = e65.threshold), void 0 !== e65.visualization && (this._visualization = e65.visualization), void 0 !== e65.bandSize && (this._bandSize = e65.bandSize), void 0 !== e65.bandsEnabled && (this._bandsEnabled = e65.bandsEnabled);
  }
  get opacityFromElevation() {
    return this._passParameters.opacityFromElevation;
  }
  set opacityFromElevation(e65) {
    this._passParameters.opacityFromElevation !== e65 && (this._passParameters.opacityFromElevation = e65, this.notifyChange("opacityFromElevation"));
  }
  get _showVisualization() {
    return this._enabled && this._data.computedSamples > 0 && this.opacityFromElevation > m40;
  }
  get _threshold() {
    return this._passParameters.threshold;
  }
  set _threshold(e65) {
    this._threshold !== e65 && (this._passParameters.threshold = e65, this._requestRenderIfRunning());
  }
  get _visualization() {
    return this._techniqueConfig.visualization;
  }
  set _visualization(e65) {
    e65 !== this._visualization && (this._techniqueConfig.visualization = e65, this._techniqueRepository.release(this._technique), this._technique = null, this._requestRenderIfRunning());
  }
  get _bandSize() {
    return this._passParameters.bandSize;
  }
  set _bandSize(e65) {
    e65 !== this._bandSize && (this._passParameters.bandSize = e65, this._requestRenderIfRunning());
  }
  get _bandsEnabled() {
    return this._techniqueConfig.bandsEnabled;
  }
  set _bandsEnabled(e65) {
    e65 !== this._bandsEnabled && (this._techniqueConfig.bandsEnabled = e65, this._techniqueRepository.release(this._technique), this._technique = null, this._requestRenderIfRunning());
  }
  _setColor(e65) {
    const t68 = this._passParameters.color;
    D(e65, t68) || (a6(this._passParameters.color, e65), this._requestRenderIfRunning());
  }
  _setEnabled(e65) {
    e65 !== this._enabled && (e65 ? this._start() : this._stop());
  }
  _requestRenderIfRunning() {
    this._enabled && this._requestRender();
  }
  _start() {
    this._enabled = true, this._requestRender();
  }
  _stop() {
    this._enabled = false, this._requestRender();
  }
};
e([y2()], b24.prototype, "opacityFromElevation", null), b24 = e([a4("esri.views.3d.webgl-engine.lib.ShadowCastRenderer")], b24);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/ShadowConfiguration.js
var s64 = class extends t18 {
  constructor() {
    super(...arguments), this.receiveShadows = true;
  }
};
e([r25()], s64.prototype, "receiveShadows", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/ShadowCastAccumulateTechnique.js
var d51 = class _d extends e22 {
  constructor(e65) {
    super(e65, new s64(), () => this.destroy());
  }
  initializeProgram(e65) {
    return new i13(e65.rctx, _d.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return W3({ blending: l14(R4.ONE, R4.ONE, R4.ONE, R4.ONE), colorWrite: _6, depthTest: null, depthWrite: null });
  }
  get primitiveType() {
    return E5.TRIANGLE_STRIP;
  }
};
d51.shader = new t16(x13, () => import("./ShadowCastAccumulate.glsl-WH5BNHKE.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/ShadowAccumulator.js
var M20 = class extends m {
  constructor(e65, t68, i60, r62, o61, a67) {
    super({}), this._rctx = e65, this._stage = i60, this._prepareForShadowMapPass = r62, this._renderToShadowMap = o61, this._requestRender = a67, this._progress = 0, this._sampleCount = 0, this._passParameters = new w16(), this._cachedLightDirections = [], this._depthRange = f44, this._previewing = false, this._handles = new t3(), this._cameraForcedForScreenshot = false, this._bindParameters = new o27(new J4(e65, i60.viewingMode), null, null), this._bindParameters.shadowMap.enabled = true, this._vao = f14(e65), this._accumulationRenderer = new b24(t68, e65, this, a67);
    const _33 = this._stage.view.resourceController.scheduler;
    this._handles.add([_33.registerTask(I3.SHADOW_ACCUMULATOR, this), l6(() => i60.renderView, (e66) => {
      this._handles.remove(L24), null != e66 && this._handles.add(e66.events.on("force-camera-for-screenshot", () => this._cameraForcedForScreenshot = true), L24);
    }, w3), l6(() => this._previewing, () => this._requestRenderIfEnabled(), U3)]);
  }
  normalizeCtorArgs() {
    return {};
  }
  dispose() {
    this._disable(), this._handles.destroy(), this._accumulationRenderer = t2(this._accumulationRenderer), this._bindParameters.shadowMap.dispose(), this._fbo = t2(this._fbo), this._vao = t2(this._vao), this._accumulationTechniqueCached = f(this._accumulationTechniqueCached), this._cachedLightDirections.length = 0, this._sampleCount = 0;
  }
  get computedSamples() {
    return this._progress;
  }
  get shadowCastTexture() {
    var _a;
    return (_a = this._fbo) == null ? void 0 : _a.colorTexture;
  }
  get isAccumulating() {
    return this._isPreviewing || this._isRefining;
  }
  get _accumulationTechnique() {
    if (null == this._accumulationTechniqueCached) {
      const e65 = { rctx: this._rctx, viewingMode: this._stage.viewingMode };
      this._accumulationTechniqueCached = new d51(e65);
    }
    return this._accumulationTechniqueCached;
  }
  get _isRefining() {
    return this._isActive && !this._isDoneAccumulating && !this._previewing;
  }
  get _isPreviewing() {
    return this._isActive && this._previewing;
  }
  get _isActive() {
    return null != this._fbo && this._sampleCount > 0;
  }
  get canAccumulate() {
    return null !== this._passParameters.linearDepthTexture && this._depthRange !== f44 && this._opacityFromElevation > m40;
  }
  get _isDoneAccumulating() {
    return this._progress >= this._sampleCount;
  }
  get _lightDirections() {
    return this._cachedLightDirections;
  }
  set _lightDirections(e65) {
    const t68 = this._cachedLightDirections;
    if (s(t68, e65, G))
      return;
    const s69 = Math.min(u17, e65.length);
    t68.length = s69, this._sampleCount = s69;
    for (let i60 = 0; i60 < s69; ++i60)
      t68[i60] = r5(t68[i60] ?? n7(), e65[i60]);
    this._invalidate();
  }
  get _opacityFromElevation() {
    return this._accumulationRenderer.opacityFromElevation;
  }
  set _opacityFromElevation(e65) {
    this._accumulationRenderer.opacityFromElevation = e65;
  }
  get running() {
    return this._isRefining && this.canAccumulate && this._progress > 0;
  }
  runTask(e65) {
    for (this._prepareForShadowMapPass(this._bindParameters); !e65.done && !this._isDoneAccumulating; )
      this._accumulateShadow(), e65.madeProgress();
    this._requestRender();
  }
  renderAccumulation(e65, t68, i60, s69) {
    if (this._depthRange = t68, this._updateCamera(i60), this._bindParameters.contentCamera = s69, this._passParameters.linearDepthTexture = e65, this._passParameters.origin = this._bindParameters.camera.center, this.notifyChange("canAccumulate"), !this.isAccumulating || !this.canAccumulate)
      return;
    (this._previewing || 0 === this._progress || this._cameraForcedForScreenshot) && this._clear();
    const r62 = this._cameraForcedForScreenshot ? this._sampleCount : Math.min(U22, this._sampleCount - this._progress);
    for (let o61 = 0; o61 < r62; ++o61)
      this._accumulateShadow();
    this._cameraForcedForScreenshot = false, this._requestRender();
  }
  render(e65) {
    this._accumulationRenderer.render(e65);
  }
  setOptions(e65) {
    if (void 0 !== e65.enabled) {
      const t68 = null != this._fbo;
      e65.enabled !== t68 && (e65.enabled ? this._enable() : this._disable());
    }
    void 0 !== e65.previewing && (this._previewing = e65.previewing), void 0 !== e65.lightDirections && (this._lightDirections = e65.lightDirections), this._accumulationRenderer.setOptions(e65);
  }
  readAccumulatedShadow(e65, t68) {
    return !this._isActive || !this._fbo || this._progress < 1 || e65 < 0 || e65 >= this._fbo.width || t68 < 0 || t68 >= this._fbo.height ? 0 : (this._fbo.readPixels(e65, t68, 1, 1, G5.RGBA, U4.UNSIGNED_BYTE, k23), k23[0] / this._progress);
  }
  _enable() {
    this._progress = 0;
    const e65 = new e20();
    e65.wrapMode = D2.CLAMP_TO_EDGE, this._fbo = new x11(this._rctx, e65);
  }
  _disable() {
    this._fbo = t2(this._fbo);
  }
  _invalidate() {
    this._progress = 0, this._requestRenderIfEnabled();
  }
  _clear() {
    this._rctx.bindFramebuffer(this._fbo), this._rctx.setClearColor(0, 0, 0, 0), this._rctx.clearSafe(_3.COLOR_BUFFER_BIT), this._progress = 0;
  }
  _accumulateShadow() {
    this._renderToShadowMap(this._bindParameters, this._sampleLightDirection(), this._depthRange);
    const e65 = this._accumulationTechnique;
    this._rctx.bindFramebuffer(this._fbo), this._rctx.bindTechnique(e65, this._passParameters, this._bindParameters), this._rctx.bindVAO(this._vao), this._rctx.drawArrays(e65.primitiveType, 0, n20(this._vao, "geometry"));
  }
  _sampleLightDirection() {
    return this._progress++, this._lightDirections[this._progress * O25 % this._lightDirections.length];
  }
  _updateCamera(e65) {
    !e65.equals(this._bindParameters.camera) && this._fbo && (this._bindParameters.camera.copyFrom(e65), this._fbo.resize(e65.fullWidth, e65.fullHeight), this._opacityFromElevation = 1 - k(c54, p50, e65.relativeElevation));
  }
  _requestRenderIfEnabled() {
    this._fbo && this._requestRender();
  }
  get test() {
    const e65 = this;
    return { lightDirections: this._lightDirections, get isDone() {
      return e65._isDoneAccumulating;
    }, get isActive() {
      return e65._isActive;
    } };
  }
};
e([y2()], M20.prototype, "_progress", void 0), e([y2()], M20.prototype, "_sampleCount", void 0), e([y2()], M20.prototype, "_fbo", void 0), e([y2()], M20.prototype, "_depthRange", void 0), e([y2()], M20.prototype, "_previewing", void 0), e([y2()], M20.prototype, "_accumulationRenderer", void 0), e([y2()], M20.prototype, "_isRefining", null), e([y2()], M20.prototype, "_isActive", null), e([y2()], M20.prototype, "canAccumulate", null), e([y2()], M20.prototype, "_isDoneAccumulating", null), e([y2()], M20.prototype, "_opacityFromElevation", null), e([y2()], M20.prototype, "running", null), M20 = e([a4("esri.views.3d.webgl-engine.lib.ShadowAccumulator")], M20);
var U22 = 6;
var L24 = "renderView";
var O25 = 104729;
var k23 = new Uint8Array(4);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/ShadowHighlightTechnique.js
var p51 = class extends v8 {
  constructor() {
    super(...arguments), this.shadowColor = r11(1, 0, 1, 1), this.shadowOpacity = 0.2, this.occludedShadowOpacity = 0.1, this.opacityElevation = 1, this.dayNightTerminator = 1;
  }
};
var u46 = class _u extends e22 {
  constructor(r62) {
    super(r62, new s64(), () => this.destroy());
  }
  initializeProgram(r62) {
    return new i13(r62.rctx, _u.shader.get().build(this.configuration), E7);
  }
  initializePipeline() {
    return W3({ blending: l14(R4.SRC_ALPHA, R4.ONE, R4.ONE_MINUS_SRC_ALPHA, R4.ONE_MINUS_SRC_ALPHA), colorWrite: _6, depthTest: null, depthWrite: null });
  }
  get primitiveType() {
    return E5.TRIANGLE_STRIP;
  }
};
u46.shader = new t16(j7, () => import("./ShadowHighlight.glsl-4UGSJ3G3.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/ShadowHighlight.js
var u47 = 1953125e-9;
var l58 = 4e4;
var g32 = 5e4;
var w28 = class {
  constructor(t68, e65) {
    this._rctx = t68, this._viewingMode = e65, this._maxOpacity = 1, this._passParameters = new p51(), this._drawParameters = new c15(), this._vao = f14(this._rctx);
  }
  get _technique() {
    return null == this._techniqueCached && (this._techniqueCached = new u46({ rctx: this._rctx, viewingMode: this._viewingMode })), this._techniqueCached;
  }
  render(t68, e65) {
    if (!t68.shadowMap.enabled || !t68.linearDepthTexture || !this.isVisible)
      return;
    const s69 = this._technique;
    this._drawParameters.origin = t68.camera.center, this._rctx.bindFramebuffer(e65), this._rctx.bindTechnique(s69, this._passParameters, t68).bindDraw(this._drawParameters, t68, this._passParameters), this._rctx.bindVAO(this._vao), this._rctx.drawArrays(s69.primitiveType, 0, n20(this._vao, "geometry"));
  }
  get gpuMemoryUsage() {
    var _a;
    return ((_a = this._vao) == null ? void 0 : _a.memoryEstimate) ?? 0;
  }
  setDefaultOptions(t68) {
    this._passParameters = { ...this._passParameters, ...t68 }, this._updateMaxOpacity();
  }
  updateParameters(s69, a67) {
    this._passParameters.opacityElevation = 1 - k(l58, g32, s69.relativeElevation);
    const o61 = this._viewingMode === l13.Global ? z2(y31, s69.center) : o2(y31, 0, 0, 1), m44 = P(o61, a67);
    this._passParameters.dayNightTerminator = k(0, 1, i3(30 * m44, 0, 1));
  }
  dispose() {
    this._vao = t2(this._vao), this._techniqueCached = f(this._techniqueCached);
  }
  get isVisible() {
    const { opacityElevation: t68, dayNightTerminator: e65 } = this._passParameters;
    return this._maxOpacity * t68 * e65 >= u47;
  }
  _updateMaxOpacity() {
    const t68 = Math.max(this._passParameters.shadowOpacity, this._passParameters.occludedShadowOpacity);
    this._maxOpacity = t68 * this._passParameters.shadowColor[3];
  }
};
var y31 = n7();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/SliceHelper.js
var t65 = W5();
var n71 = class {
  constructor() {
    this._plane = W5();
  }
  get isEnabled() {
    return !ps(this.plane, t65);
  }
  get plane() {
    return this._plane;
  }
  set plane(e65) {
    Z2(e65 || t65, this._plane);
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/BlendWeightsTechnique.js
var l59 = class _l extends e22 {
  initializeProgram(e65) {
    return new i13(e65.rctx, _l.shader.get().build(), E7);
  }
  initializePipeline() {
    return W3({ colorWrite: _6 });
  }
};
l59.shader = new t16(d24, () => import("./BlendWeights.glsl-EICRNQET.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/BlurTechnique.js
var l60 = class _l extends e22 {
  initializeProgram(r62) {
    return new i13(r62.rctx, _l.shader.get().build(), E7);
  }
  initializePipeline() {
    return W3({ colorWrite: _6 });
  }
};
l60.shader = new t16(f23, () => import("./Blur.glsl-FGIPOCKF.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/EdgeDetectTechnique.js
var l61 = class _l extends e22 {
  initializeProgram(e65) {
    return new i13(e65.rctx, _l.shader.get().build(), E7);
  }
  initializePipeline() {
    return W3({ colorWrite: _6 });
  }
};
l61.shader = new t16(d25, () => import("./EdgeDetect.glsl-IKWGFQOU.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/SmaaRenderPass.js
var A32 = class extends m {
  constructor(e65, r62) {
    super({}), this._rctx = e65, this._techniqueRep = r62, this._passParameters = new t41(), this._isEnabled = false;
  }
  normalizeCtorArgs() {
    return {};
  }
  dispose() {
    this._abortController = e2(this._abortController), this.disable();
  }
  _loadResources(e65) {
    if (null != this._abortController)
      return false;
    if (null != this._passParameters.searchTexture)
      return true;
    this._abortController = new AbortController();
    const r62 = this._abortController.signal;
    return import("./SmaaRenderPassData-KQONFQ2J.js").then((e66) => this._loadTextures(e66, r62)).then(() => e65()).finally(() => this._abortController = null), false;
  }
  _loadTextures(e65, r62) {
    return s6(r62), Promise.all([this._loadTextureFromBase64(e65.areaTexture, L.LINEAR, G5.RGB), this._loadTextureFromBase64(e65.searchTexure, L.NEAREST, G5.LUMINANCE)]).then(([e66, s69]) => {
      a3(r62) ? (e66.dispose(), s69.dispose(), s6(r62)) : (this._passParameters.areaTexture = e66, this._passParameters.searchTexture = s69);
    });
  }
  get updating() {
    return null != this._abortController;
  }
  enable(e65) {
    if (this._isEnabled)
      return true;
    if (!this._edgeDetectTechnique || !this._blendWeightsTechnique || !this._blurTechnique) {
      const e66 = new t18();
      this._edgeDetectTechnique = this._techniqueRep.releaseAndAcquire(l61, e66, this._edgeDetectTechnique), this._blendWeightsTechnique = this._techniqueRep.releaseAndAcquire(l59, e66, this._blendWeightsTechnique), this._blurTechnique = this._techniqueRep.releaseAndAcquire(l60, e66, this._blurTechnique);
    }
    if (!this._loadResources(e65))
      return false;
    this._vao = w9(this._rctx);
    const r62 = new e20(4, 4);
    r62.pixelFormat = G5.RG, r62.internalFormat = P4.RG8, r62.wrapMode = D2.CLAMP_TO_EDGE, this._passParameters.edges = new x11(this._rctx, r62);
    const s69 = new e20(4, 4);
    return s69.pixelFormat = G5.RGBA, s69.wrapMode = D2.CLAMP_TO_EDGE, this._passParameters.blend = new x11(this._rctx, s69), this._isEnabled = true, true;
  }
  disable() {
    this._isEnabled && (this._vao = t2(this._vao), this._passParameters.areaTexture = t2(this._passParameters.areaTexture), this._passParameters.searchTexture = t2(this._passParameters.searchTexture), this._passParameters.blend = t2(this._passParameters.blend), this._passParameters.edges = t2(this._passParameters.edges), this._isEnabled = false);
  }
  get _validPassParameters() {
    return this._isEnabled ? this._passParameters : null;
  }
  render(e65) {
    const r62 = this._validPassParameters;
    if (null == r62)
      return;
    r62.colorTexture = e65;
    const s69 = this._rctx, t68 = s69.getBoundFramebufferObject(), i60 = e65.descriptor.width, a67 = e65.descriptor.height;
    s69.bindVAO(this._vao), s69.setViewport(0, 0, i60, a67), r62.edges.resize(i60, a67), s69.bindFramebuffer(r62.edges), s69.setClearColor(0, 0, 0, 1), s69.clear(_3.COLOR_BUFFER_BIT), s69.bindTechnique(this._edgeDetectTechnique, r62, null), s69.drawArrays(E5.TRIANGLES, 0, 3), r62.blend.resize(i60, a67), s69.bindFramebuffer(r62.blend), s69.setClearColor(0, 0, 1, 1), s69.clear(_3.COLOR_BUFFER_BIT), s69.bindTechnique(this._blendWeightsTechnique, r62, null), s69.drawArrays(E5.TRIANGLES, 0, 3), s69.bindFramebuffer(t68), s69.setClearColor(0, 1, 0, 1), s69.clear(_3.COLOR_BUFFER_BIT), s69.bindTechnique(this._blurTechnique, r62, null), s69.drawArrays(E5.TRIANGLES, 0, 3);
  }
  _loadTextureFromBase64(e65, r62, s69) {
    return t15(e65).then((e66) => {
      const t68 = new e20();
      return t68.pixelFormat = s69, t68.wrapMode = D2.CLAMP_TO_EDGE, t68.width = e66.width, t68.height = e66.height, t68.samplingMode = r62, new T8(this._rctx, t68, e66);
    });
  }
};
e([y2()], A32.prototype, "_abortController", void 0), e([y2({ readOnly: true })], A32.prototype, "updating", null), A32 = e([a4("esri.views.3d.webgl-engine.lib.SmaaRenderPass")], A32);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/localOriginHelper.js
function n72(n77, o61) {
  const t68 = -n77[0], c58 = -n77[1], f49 = -n77[2], i60 = o61[3], s69 = o61[7], u51 = o61[11], e65 = o61[15];
  o61[0] += i60 * t68, o61[1] += i60 * c58, o61[2] += i60 * f49, o61[4] += s69 * t68, o61[5] += s69 * c58, o61[6] += s69 * f49, o61[8] += u51 * t68, o61[9] += u51 * c58, o61[10] += u51 * f49, o61[12] += e65 * t68, o61[13] += e65 * c58, o61[14] += e65 * f49;
}
function o56(n77, o61) {
  const t68 = n77[0], c58 = n77[1], f49 = n77[2];
  o61[12] += t68 * o61[0] + c58 * o61[4] + f49 * o61[8], o61[13] += t68 * o61[1] + c58 * o61[5] + f49 * o61[9], o61[14] += t68 * o61[2] + c58 * o61[6] + f49 * o61[10], o61[14] += t68 * o61[3] + c58 * o61[7] + f49 * o61[11];
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/LocalOriginManager.js
var e60 = class {
  constructor(i60) {
    this._factory = i60, this._originData = /* @__PURE__ */ new Map();
  }
  acquire(i60) {
    return this.register(this._factory.getOrigin(i60));
  }
  register(i60) {
    const t68 = this._originData.get(i60.id) || new s65(i60);
    return t68.refCount++, this._originData.has(t68.origin.id) || this._originData.set(t68.origin.id, t68), t68;
  }
  release(i60) {
    i60.refCount--, 0 === i60.refCount && this._originData.delete(i60.origin.id);
  }
  updateViewMatrices(t68) {
    this._originData.forEach((e65) => {
      n10(e65.viewMatrix, t68), o56(e65.origin.vec3, e65.viewMatrix);
    });
  }
};
var s65 = class {
  constructor(i60) {
    this.origin = i60, this.refCount = 0, this.viewMatrix = e15();
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/EdgeShaderParameters.js
var a64 = class extends F9 {
  constructor(s69, o61) {
    super(), this.distanceFalloffFactor = s69, this.transparency = o61, this.transformNormalViewFromGlobal = e14();
  }
};
var e61 = class extends W4 {
  constructor() {
    super(...arguments), this.transformNormalViewFromGlobal = e14(), this.slicePlaneLocalOrigin = n7(), this.transformNormalGlobalFromModel = e14();
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/EdgeShaderTechnique.js
var u48 = class _u extends e22 {
  initializeProgram(e65) {
    return new i13(e65.rctx, _u.shader.get().build(this.configuration), o10);
  }
  initializePipeline(e65) {
    return e65.blendMinMax ? W3({ blending: l14(R4.ONE, R4.ONE, R4.ZERO, R4.ONE, T3.ADD, e65.blendMinMax.MAX), depthTest: { func: I4.LEQUAL }, colorWrite: _6 }) : W3({ depthTest: { func: I4.LEQUAL }, depthWrite: a21, colorWrite: _6 });
  }
};
u48.shader = new t16(L7, () => import("./EdgeShader.glsl-Z746TQVV.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/EdgeShaderTechniqueConfiguration.js
var s66 = class extends s25 {
  constructor() {
    super(...arguments), this.mode = x14.SOLID, this.hasSlicePlane = false, this.silhouette = false, this.legacy = false, this.antialiasing = false, this.doublePrecisionRequiresObfuscation = false, this.hasMultipassTerrain = false, this.cullAboveGround = false, this.spherical = false;
  }
};
e([r25({ count: x14.COUNT })], s66.prototype, "mode", void 0), e([r25()], s66.prototype, "hasSlicePlane", void 0), e([r25()], s66.prototype, "silhouette", void 0), e([r25()], s66.prototype, "legacy", void 0), e([r25()], s66.prototype, "antialiasing", void 0), e([r25()], s66.prototype, "doublePrecisionRequiresObfuscation", void 0), e([r25()], s66.prototype, "hasMultipassTerrain", void 0), e([r25()], s66.prototype, "cullAboveGround", void 0), e([r25()], s66.prototype, "spherical", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/EdgeRenderer.js
var m41 = 8;
var g33 = 128;
var f47 = { type: "uber", hasSlicePlane: false, strokesTexture: null, legacy: true, spherical: true };
var T28 = { solid: x14.SOLID, sketch: x14.SKETCH, uber: x14.MIXED };
var b25 = class _b {
  constructor(e65, t68, i60) {
    this._rctx = e65, this._shaderTechniqueRepository = t68, this._configuration = new s66(), this.refCount = 0, this._renderables = /* @__PURE__ */ new Set(), this._sortedRenderables = { [A6.TRANSPARENT]: { [A6.TRANSPARENT]: new l2(), [A6.OPAQUE]: new l2() }, [A6.OPAQUE]: { [A6.TRANSPARENT]: new l2(), [A6.OPAQUE]: new l2() } }, this._renderablesDirty = false, this._drawParameters = new e61(), this._settings = { ...f47, ...i60 }, this.key = _b.getKey(this._settings.type, this._settings.hasSlicePlane, this._settings.legacy);
    const s69 = this._settings.strokesTexture.variants;
    this.writerSettings = { variants: s69, reducedPrecision: t19.TESTS_DISABLE_OPTIMIZATIONS }, this._configuration.legacy = this._settings.legacy, this._configuration.mode = T28[this._settings.type], this._configuration.silhouette = false, this._configuration.antialiasing = !!this._rctx.capabilities.blendMinMax, this._configuration.hasSlicePlane = this._settings.hasSlicePlane, this._configuration.doublePrecisionRequiresObfuscation = e65.driverTest.doublePrecisionRequiresObfuscation.result, this._configuration.spherical = i60.spherical;
  }
  dispose() {
    this._technique = f(this._technique);
  }
  addRenderable(e65) {
    this._renderables.add(e65), this._renderablesDirty = true;
  }
  removeRenderable(e65) {
    this._renderables.delete(e65), this._renderablesDirty = true;
  }
  setRenderablesDirty() {
    this._renderablesDirty = true;
  }
  forEachRenderable(e65, r62) {
    if (this._renderablesDirty && this._sortRenderables(), r62 !== A6.INVISIBLE) {
      const t68 = this._sortedRenderables[r62];
      t68[A6.TRANSPARENT].forAll(e65), t68[A6.OPAQUE].forAll(e65);
    }
  }
  updateTechnique(e65, r62) {
    return this._configuration.hasMultipassTerrain = !!e65.multipassTerrain.enabled, this._configuration.cullAboveGround = !!e65.multipassTerrain.cullAboveGround, this._configuration.silhouette = r62, this._technique = this._shaderTechniqueRepository.releaseAndAcquire(u48, this._configuration, this._technique), this._technique;
  }
  bindRegularEdges(e65, r62) {
    return this._lastOriginId = null, this._rctx.bindTechnique(this.updateTechnique(r62, false), e65, r62);
  }
  bindSilhouetteEdges(e65, r62) {
    return this._lastOriginId = null, this._rctx.bindTechnique(this.updateTechnique(r62, true), e65, r62);
  }
  renderRegularEdges(e65, r62, t68, i60, s69) {
    this._render(e65, r62, r62.regular.vao, t68, i60, s69);
  }
  renderSilhouetteEdges(e65, r62, t68, i60, s69) {
    this._render(e65, r62, r62.silhouette.vao, t68, i60, s69);
  }
  _render(e65, r62, t68, i60, s69, n77) {
    n77 > 0 && (this._bindDraw(e65, r62, i60, s69), this._rctx.bindVAO(t68), this._rctx.capabilities.instancing.drawArraysInstanced(E5.TRIANGLE_FAN, 0, 4, n77));
  }
  _bindDraw(e65, r62, s69, a67) {
    if (this._drawParameters.componentDataTexture = r62.components.buffer.textureBuffer.texture, this._drawParameters.strokesTexture = this._settings.strokesTexture, "origin" in r62.transform)
      this._lastOriginId !== r62.transform.origin.origin.id && (e65.setUniformMatrix4fv("localView", r62.transform.origin.viewMatrix), this._lastOriginId = r62.transform.origin.origin.id), e65.setUniformMatrix4fv("model", r62.transform.modelMatrix), this._drawParameters.slicePlaneLocalOrigin = r62.transform.origin.origin.vec3;
    else {
      const e66 = new c49(r62.transform.position), s70 = o12(R20, u5(R20, r62.transform.rotationScale));
      this._drawParameters.transformWorldFromModelTL = e66.low, this._drawParameters.transformWorldFromModelTH = e66.high, this._drawParameters.transformWorldFromModelRS = r62.transform.rotationScale, this._drawParameters.transformNormalGlobalFromModel = s70;
      const d52 = a67.camera.viewInverseTransposeMatrix;
      o2(this._drawParameters.slicePlaneLocalOrigin, d52[3], d52[7], d52[11]);
    }
    e65.bindDraw(this._drawParameters, a67, s69);
  }
  _sortRenderables() {
    this._renderablesDirty = false, this._sortedRenderables[A6.TRANSPARENT][A6.TRANSPARENT].clear(), this._sortedRenderables[A6.TRANSPARENT][A6.OPAQUE].clear(), this._sortedRenderables[A6.OPAQUE][A6.TRANSPARENT].clear(), this._sortedRenderables[A6.OPAQUE][A6.OPAQUE].clear(), this._renderables.forEach((e66) => {
      e66.objectTransparency !== A6.INVISIBLE && e66.edgeTransparency !== A6.INVISIBLE && this._sortedRenderables[e66.objectTransparency][e66.edgeTransparency].push(e66);
    });
    const e65 = (e66, r62) => "origin" in e66.transform ? "origin" in r62.transform ? e66.transform.origin.origin.id < r62.transform.origin.origin.id ? -1 : e66.transform.origin.origin.id > r62.transform.origin.origin.id ? 1 : 0 : 1 : 0;
    this._sortedRenderables[A6.TRANSPARENT][A6.TRANSPARENT].sort(e65), this._sortedRenderables[A6.TRANSPARENT][A6.OPAQUE].sort(e65), this._sortedRenderables[A6.OPAQUE][A6.TRANSPARENT].sort(e65), this._sortedRenderables[A6.OPAQUE][A6.OPAQUE].sort(e65);
  }
  static getKey(e65, r62, t68) {
    return `edges-t:${e65}:${r62}:${t68}`;
  }
};
var R20 = e18();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/strokes.js
function n73(e65) {
  const n77 = 4, u51 = a65.resolution, c58 = u51 / 2, h46 = new Uint8Array(n77 * u51 * u51), p54 = n77 * u51 * c58, m44 = a65.amplitude, f49 = 2 * m44, d52 = n77 * u51, S25 = Math.log2(u51) + 1, E39 = a65.strokes.length;
  let g36 = (S25 - 1) * E39 * d52;
  for (const { distance: s69, pressure: r62 } of a65.strokes) {
    let e66 = s69, u52 = r62, c59 = g36;
    for (let s70 = 0; s70 < S25; s70++) {
      0 !== s70 && (e66 = o57(e66, i59.DISTANCE), u52 = o57(u52, i59.PRESSURE));
      for (let s71 = 0; s71 < a65.resolution; s71++) {
        const r63 = 0.5 + (e66 ? e66[s71 % e66.length] / f49 : 0), o61 = u52 ? u52[s71 % u52.length] : 1;
        o13(r63, h46, c59), o13(o61, h46, c59 + p54), c59 += n77;
      }
      c59 -= d52 * (E39 + 1);
    }
    g36 += d52;
  }
  const R21 = new e20();
  R21.width = R21.height = u51;
  const w29 = new T8(e65, R21, h46);
  return new l62(u51, f49, m44, E39, w29);
}
function o57(t68, e65) {
  if (!t68)
    return null;
  const s69 = t68.length / 2, r62 = u49 * s69, n77 = new Array(s69);
  let o61 = 0;
  const l63 = e65 === i59.PRESSURE;
  for (let i60 = 0; i60 < t68.length; i60 += 2) {
    const e66 = (t68[i60] + t68[i60 + 1]) / 2;
    n77[o61++] = l63 ? Math.min(r62, 1 - (1 - e66) * c55) : Math.min(r62, e66 * c55);
  }
  return n77;
}
var i59;
!function(t68) {
  t68[t68.DISTANCE = 0] = "DISTANCE", t68[t68.PRESSURE = 1] = "PRESSURE";
}(i59 || (i59 = {}));
var u49 = 0.1;
var c55 = 0.5;
var l62 = class {
  constructor(t68, e65, s69, r62, n77) {
    this.resolution = t68, this.normalizationScale = e65, this.amplitude = s69, this.variants = r62, this.texture = n77;
  }
  dispose() {
    this.texture = t2(this.texture);
  }
};
var a65 = { amplitude: 8, resolution: 256, strokes: [{ distance: [-1.59027, -1.59426, -1.59674, -1.59766, -1.59702, -1.59479, -1.59095, -1.5855, -1.57843, -1.56973, -1.55942, -1.5475, -1.53398, -1.5189, -1.50226, -1.4841, -1.46446, -1.44337, -1.42088, -1.39703, -1.37188, -1.34547, -1.31786, -1.28912, -1.2593, -1.22847, -1.19668, -1.16402, -1.13053, -1.09629, -1.06137, -1.02582, -0.98972, -0.95313, -0.91611, -0.87872, -0.84102, -0.80306, -0.76488, -0.72654, -0.68807, -0.64952, -0.61092, -0.57232, -0.53375, -0.49527, -0.45692, -0.41874, -0.38078, -0.34309, -0.3057, -0.26867, -0.23204, -0.19585, -0.16015, -0.12497, -0.09036, -0.05634, -0.02296, 977e-5, 0.04183, 0.07321, 0.10389, 0.13386, 0.16313, 0.19169, 0.21956, 0.24672, 0.27321, 0.299, 0.32413, 0.34858, 0.37237, 0.3955, 0.41798, 0.43981, 0.461, 0.48154, 0.50145, 0.52073, 0.53939, 0.55744, 0.57488, 0.5917, 0.6079, 0.62347, 0.63837, 0.65259, 0.66609, 0.67885, 0.69083, 0.70201, 0.71235, 0.72183, 0.73042, 0.73812, 0.7449, 0.75076, 0.7557, 0.75973, 0.76284, 0.76507, 0.76642, 0.76692, 0.76659, 0.76545, 0.76352, 0.76083, 0.7574, 0.75324, 0.74837, 0.74279, 0.73652, 0.72959, 0.72199, 0.71377, 0.70493, 0.69553, 0.68558, 0.67515, 0.66426, 0.65298, 0.64135, 0.62944, 0.6173, 0.60499, 0.59257, 0.58008, 0.56759, 0.55513, 0.54275, 0.5305, 0.51842, 0.50654, 0.4949, 0.48353, 0.47246, 0.4617, 0.45128, 0.44121, 0.43149, 0.42213, 0.41313, 0.40448, 0.39617, 0.38818, 0.3805, 0.37309, 0.36594, 0.35902, 0.35229, 0.34572, 0.33927, 0.33292, 0.32663, 0.32035, 0.31407, 0.30774, 0.30135, 0.29486, 0.28824, 0.28148, 0.27454, 0.26739, 0.26002, 0.25241, 0.24454, 0.23639, 0.22796, 0.21922, 0.21016, 0.20076, 0.19098, 0.18082, 0.17023, 0.1592, 0.14768, 0.13566, 0.1231, 0.10996, 0.09624, 0.08188, 0.06688, 0.05121, 0.03485, 0.01778, 0, -0.0185, -0.03771, -0.05763, -0.07824, -0.09952, -0.12144, -0.14396, -0.16706, -0.19069, -0.21481, -0.23938, -0.26436, -0.28971, -0.31539, -0.34136, -0.36759, -0.39404, -0.42067, -0.44746, -0.47437, -0.50136, -0.52839, -0.55544, -0.58248, -0.60948, -0.63642, -0.66329, -0.6901, -0.71684, -0.74352, -0.77015, -0.79675, -0.82332, -0.84988, -0.87644, -0.90301, -0.92958, -0.95615, -0.98272, -1.00926, -1.03575, -1.06217, -1.08847, -1.11463, -1.1406, -1.16633, -1.19178, -1.2169, -1.24164, -1.26595, -1.28979, -1.31312, -1.3359, -1.35809, -1.37963, -1.4005, -1.42064, -1.44, -1.45853, -1.47616, -1.49285, -1.50853, -1.52313, -1.53659, -1.54886, -1.55986, -1.56955, -1.57788, -1.5848], pressure: [-0.01365, -206e-5, 0.01025, 0.02327, 0.03696, 0.05129, 0.06619, 0.08163, 0.09755, 0.11393, 0.1307, 0.14784, 0.16531, 0.18308, 0.20111, 0.21938, 0.23786, 0.25651, 0.2753, 0.29419, 0.31315, 0.33215, 0.35115, 0.37015, 0.38913, 0.40806, 0.42694, 0.44576, 0.46449, 0.48313, 0.50167, 0.5201, 0.53839, 0.55653, 0.57448, 0.59222, 0.60971, 0.62692, 0.6438, 0.66033, 0.67648, 0.69221, 0.70753, 0.72242, 0.73688, 0.75093, 0.76456, 0.77779, 0.79063, 0.80309, 0.81517, 0.82686, 0.83817, 0.84911, 0.85967, 0.86987, 0.87972, 0.88924, 0.89845, 0.90734, 0.91594, 0.92425, 0.93229, 0.94005, 0.94754, 0.95475, 0.96166, 0.96826, 0.97451, 0.9804, 0.98588, 0.99092, 0.99549, 0.99957, 0.99685, 0.99381, 0.99131, 0.98936, 0.98796, 0.98711, 0.98681, 0.98706, 0.98787, 0.98923, 0.99113, 0.99357, 0.99654, 1, 0.99607, 0.99171, 0.98695, 0.98181, 0.97634, 0.97057, 0.96452, 0.95824, 0.95175, 0.94506, 0.93818, 0.93113, 0.92389, 0.91647, 0.90887, 0.90109, 0.89314, 0.88501, 0.87672, 0.86831, 0.85978, 0.85119, 0.84256, 0.83393, 0.82533, 0.8168, 0.80836, 0.80002, 0.79181, 0.78374, 0.77582, 0.7681, 0.76059, 0.75331, 0.74629, 0.73955, 0.73311, 0.72697, 0.72116, 0.71568, 0.71054, 0.70572, 0.70121, 0.697, 0.69304, 0.68931, 0.68576, 0.68236, 0.67905, 0.67582, 0.67262, 0.66941, 0.66619, 0.66291, 0.65957, 0.65613, 0.65259, 0.64892, 0.6451, 0.6411, 0.6369, 0.63248, 0.62783, 0.62295, 0.61783, 0.61247, 0.60688, 0.60104, 0.59498, 0.58868, 0.58216, 0.57542, 0.56845, 0.56125, 0.5538, 0.5461, 0.53813, 0.52986, 0.52129, 0.51239, 0.50316, 0.49359, 0.4837, 0.47349, 0.46299, 0.45223, 0.44124, 0.43005, 0.41869, 0.40719, 0.39557, 0.38386, 0.37207, 0.36023, 0.34836, 0.33648, 0.32464, 0.31287, 0.30119, 0.28963, 0.27822, 0.26698, 0.25594, 0.2451, 0.23448, 0.22409, 0.21391, 0.20394, 0.19415, 0.18452, 0.17503, 0.16565, 0.15636, 0.14713, 0.13794, 0.1288, 0.11968, 0.11058, 0.10151, 0.09247, 0.08346, 0.07447, 0.06552, 0.05659, 0.0477, 0.03885, 0.03007, 0.02137, 0.01278, 433e-5, -393e-5, -0.012, -0.01983, -0.02738, -0.03463, -0.04155, -0.0481, -0.05429, -0.0601, -0.06553, -0.07057, -0.07524, -0.07954, -0.08347, -0.08703, -0.09022, -0.09303, -0.09544, -0.09744, -0.09898, -0.10004, -0.10059, -0.1006, -0.10005, -0.09892, -0.0972, -0.09487, -0.09192, -0.08833, -0.08409, -0.07918, -0.07357, -0.06724, -0.06019, -0.0524, -0.04386, -0.03455, -0.02448] }, { distance: [-3.46259, -3.47131, -3.47668, -3.47863, -3.47712, -3.4721, -3.46352, -3.45138, -3.43566, -3.41635, -3.39347, -3.36704, -3.33709, -3.30368, -3.26684, -3.22667, -3.18322, -3.1366, -3.08689, -3.0342, -2.97865, -2.92036, -2.85946, -2.79607, -2.73034, -2.66241, -2.59242, -2.52052, -2.44686, -2.37159, -2.29485, -2.2168, -2.13757, -2.05731, -1.97616, -1.89426, -1.81174, -1.72875, -1.64543, -1.56191, -1.47833, -1.39483, -1.3115, -1.22847, -1.14581, -1.06361, -0.98193, -0.90083, -0.82036, -0.74054, -0.66141, -0.583, -0.50532, -0.4284, -0.35228, -0.277, -0.20261, -0.12916, -0.05672, 0.01463, 0.08485, 0.15384, 0.22153, 0.28784, 0.35269, 0.41602, 0.47776, 0.53787, 0.59629, 0.653, 0.70799, 0.76123, 0.81274, 0.86253, 0.9106, 0.95698, 1.0017, 1.04477, 1.0862, 1.126, 1.16415, 1.20065, 1.23546, 1.26857, 1.29994, 1.32953, 1.35731, 1.38321, 1.40719, 1.42921, 1.44922, 1.46719, 1.48309, 1.49691, 1.50862, 1.51825, 1.52581, 1.53133, 1.53486, 1.53644, 1.53616, 1.53409, 1.53031, 1.52493, 1.51803, 1.50972, 1.50009, 1.48924, 1.47725, 1.46421, 1.45019, 1.43527, 1.4195, 1.40295, 1.38568, 1.36778, 1.34929, 1.3303, 1.31087, 1.29108, 1.27099, 1.25066, 1.23018, 1.2096, 1.18898, 1.16838, 1.14785, 1.12745, 1.10721, 1.08719, 1.06741, 1.04791, 1.02871, 1.00986, 0.99136, 0.97324, 0.95551, 0.93819, 0.92127, 0.90476, 0.88866, 0.87296, 0.85767, 0.84277, 0.82823, 0.81406, 0.80022, 0.7867, 0.77346, 0.76049, 0.74774, 0.73519, 0.72278, 0.71049, 0.69827, 0.68606, 0.67381, 0.66145, 0.64893, 0.63618, 0.62313, 0.60973, 0.5959, 0.5816, 0.56675, 0.5513, 0.53516, 0.51826, 0.50053, 0.4819, 0.46231, 0.44169, 0.42002, 0.39725, 0.37336, 0.34834, 0.32219, 0.2949, 0.2665, 0.23698, 0.20638, 0.17469, 0.14193, 0.10809, 0.07316, 0.03714, 0, -0.03827, -0.07772, -0.11836, -0.16022, -0.20332, -0.24768, -0.29332, -0.34024, -0.38844, -0.43788, -0.48854, -0.54036, -0.59329, -0.64724, -0.70211, -0.75782, -0.81425, -0.87128, -0.92881, -0.98674, -1.04498, -1.10346, -1.1621, -1.22086, -1.27969, -1.33854, -1.3974, -1.45625, -1.51511, -1.57396, -1.63283, -1.69173, -1.75067, -1.80968, -1.86875, -1.9279, -1.98712, -2.04639, -2.10568, -2.16495, -2.22416, -2.28322, -2.34208, -2.40063, -2.4588, -2.51647, -2.57354, -2.62989, -2.68543, -2.74002, -2.79357, -2.84597, -2.89711, -2.94689, -2.99521, -3.04195, -3.087, -3.13023, -3.17152, -3.21075, -3.24779, -3.28252, -3.3148, -3.34451, -3.37154, -3.39577, -3.41709, -3.43539, -3.45059], pressure: [0.87183, 0.87151, 0.87129, 0.87118, 0.87117, 0.87128, 0.87149, 0.87182, 0.87225, 0.8728, 0.87347, 0.87424, 0.87513, 0.87613, 0.87723, 0.87845, 0.87978, 0.88122, 0.88276, 0.88441, 0.88616, 0.88801, 0.88996, 0.892, 0.89414, 0.89637, 0.89868, 0.90108, 0.90356, 0.90611, 0.90874, 0.91144, 0.91421, 0.91704, 0.91993, 0.92287, 0.92587, 0.92892, 0.93201, 0.93514, 0.93831, 0.94151, 0.94474, 0.94799, 0.95126, 0.95456, 0.95786, 0.96118, 0.9645, 0.96783, 0.97116, 0.97448, 0.9778, 0.98111, 0.98441, 0.9877, 0.99096, 0.99421, 0.99742, 0.99938, 0.99622, 0.9931, 0.99001, 0.98697, 0.98397, 0.98101, 0.97811, 0.97526, 0.97246, 0.96972, 0.96703, 0.96441, 0.96185, 0.95935, 0.95691, 0.95455, 0.95225, 0.95002, 0.94786, 0.94577, 0.94376, 0.94182, 0.93995, 0.93817, 0.93646, 0.93483, 0.93328, 0.93181, 0.93042, 0.92911, 0.92788, 0.92673, 0.92566, 0.92467, 0.92376, 0.92293, 0.92217, 0.92149, 0.92088, 0.92034, 0.91987, 0.91947, 0.91913, 0.91886, 0.91864, 0.91849, 0.91838, 0.91833, 0.91834, 0.91839, 0.91849, 0.91863, 0.91883, 0.91907, 0.91935, 0.91968, 0.92005, 0.92046, 0.92092, 0.92142, 0.92195, 0.92253, 0.92314, 0.9238, 0.92449, 0.92521, 0.92598, 0.92677, 0.9276, 0.92847, 0.92936, 0.93029, 0.93125, 0.93224, 0.93325, 0.9343, 0.93537, 0.93646, 0.93758, 0.93872, 0.93988, 0.94106, 0.94225, 0.94346, 0.94469, 0.94593, 0.94718, 0.94844, 0.94971, 0.95098, 0.95226, 0.95354, 0.95482, 0.9561, 0.95738, 0.95867, 0.95995, 0.96122, 0.9625, 0.96377, 0.96504, 0.9663, 0.96757, 0.96883, 0.97009, 0.97135, 0.97261, 0.97387, 0.97513, 0.9764, 0.97767, 0.97895, 0.98023, 0.98153, 0.98284, 0.98416, 0.98549, 0.98684, 0.98821, 0.9896, 0.99101, 0.99244, 0.99389, 0.99537, 0.99688, 0.99842, 1, 0.99839, 0.99675, 0.99508, 0.99336, 0.99161, 0.98982, 0.98799, 0.98613, 0.98422, 0.98228, 0.98029, 0.97827, 0.97622, 0.97414, 0.97202, 0.96987, 0.9677, 0.96551, 0.9633, 0.96107, 0.95882, 0.95656, 0.9543, 0.95202, 0.94975, 0.94747, 0.94519, 0.94292, 0.94065, 0.93838, 0.93613, 0.93388, 0.93164, 0.92941, 0.9272, 0.92499, 0.9228, 0.92062, 0.91846, 0.91631, 0.91418, 0.91207, 0.90998, 0.90792, 0.90588, 0.90387, 0.90189, 0.89995, 0.89804, 0.89617, 0.89434, 0.89256, 0.89083, 0.88914, 0.88752, 0.88595, 0.88443, 0.88299, 0.88161, 0.8803, 0.87907, 0.87791, 0.87683, 0.87584, 0.87494, 0.87412, 0.8734, 0.87278, 0.87225] }, { distance: [0.39335, 0.43437, 0.47737, 0.52234, 0.56923, 0.61801, 0.66864, 0.72109, 0.7753, 0.83123, 0.88882, 0.94801, 1.00875, 1.07097, 1.13461, 1.1996, 1.26586, 1.33333, 1.40193, 1.47158, 1.54221, 1.61373, 1.68607, 1.75913, 1.83284, 1.90711, 1.98186, 2.05699, 2.13243, 2.20809, 2.28387, 2.35971, 2.4355, 2.51117, 2.58663, 2.66179, 2.73658, 2.81092, 2.88473, 2.95792, 3.03043, 3.10217, 3.17308, 3.24309, 3.31211, 3.3801, 3.44697, 3.51267, 3.57712, 3.64028, 3.70208, 3.76247, 3.8214, 3.87881, 3.93467, 3.98892, 4.04152, 4.09244, 4.14164, 4.18908, 4.23474, 4.27859, 4.32061, 4.36077, 4.39905, 4.43544, 4.46992, 4.50249, 4.53314, 4.56185, 4.58864, 4.61349, 4.63642, 4.65745, 4.67657, 4.69381, 4.7092, 4.72274, 4.73447, 4.74441, 4.75259, 4.75903, 4.76376, 4.76682, 4.76822, 4.768, 4.76618, 4.76279, 4.75786, 4.75142, 4.74348, 4.73409, 4.72326, 4.71102, 4.69739, 4.68241, 4.6661, 4.64849, 4.6296, 4.60948, 4.58816, 4.56567, 4.54204, 4.51732, 4.49154, 4.46473, 4.43694, 4.4082, 4.37854, 4.348, 4.31662, 4.28443, 4.25145, 4.21773, 4.1833, 4.14819, 4.11243, 4.07606, 4.03912, 4.00162, 3.96361, 3.92512, 3.88618, 3.84683, 3.80708, 3.76697, 3.72653, 3.68579, 3.64478, 3.60351, 3.56202, 3.52033, 3.47845, 3.43642, 3.39425, 3.35196, 3.30957, 3.2671, 3.22455, 3.18196, 3.13933, 3.09668, 3.05402, 3.01136, 2.96873, 2.92613, 2.88357, 2.84108, 2.79865, 2.75631, 2.71407, 2.67195, 2.62994, 2.58807, 2.54634, 2.50477, 2.46338, 2.42216, 2.38114, 2.34032, 2.29971, 2.25933, 2.21916, 2.17923, 2.13954, 2.10008, 2.06087, 2.02189, 1.98316, 1.94468, 1.90644, 1.86845, 1.83069, 1.79316, 1.75586, 1.71877, 1.68189, 1.6452, 1.60868, 1.57232, 1.53611, 1.50004, 1.46407, 1.4282, 1.39241, 1.35668, 1.321, 1.28535, 1.24972, 1.2141, 1.17849, 1.14286, 1.10723, 1.07158, 1.03593, 1.00028, 0.96464, 0.92902, 0.89344, 0.85793, 0.8225, 0.78719, 0.75203, 0.71705, 0.68231, 0.64784, 0.61369, 0.57991, 0.54656, 0.51368, 0.48134, 0.44959, 0.41849, 0.3881, 0.35848, 0.32967, 0.30174, 0.27474, 0.24872, 0.22373, 0.19982, 0.17702, 0.15539, 0.13497, 0.11579, 0.09791, 0.08137, 0.06621, 0.05248, 0.04022, 0.02948, 0.02029, 0.01271, 677e-5, 252e-5, 0, -76e-5, 27e-5, 314e-5, 788e-5, 0.01451, 0.02307, 0.03357, 0.04604, 0.0605, 0.07697, 0.09546, 0.11599, 0.13858, 0.16322, 0.18992, 0.21869, 0.24952, 0.28241, 0.31735, 0.35434], pressure: [0.95248, 0.95236, 0.95228, 0.95223, 0.95222, 0.95224, 0.95231, 0.95241, 0.95256, 0.95274, 0.95296, 0.95322, 0.95352, 0.95385, 0.95423, 0.95465, 0.9551, 0.9556, 0.95613, 0.9567, 0.95731, 0.95796, 0.95864, 0.95936, 0.96012, 0.96091, 0.96173, 0.96259, 0.96348, 0.9644, 0.96535, 0.96633, 0.96734, 0.96838, 0.96944, 0.97053, 0.97164, 0.97277, 0.97393, 0.9751, 0.97629, 0.9775, 0.97873, 0.97997, 0.98122, 0.98249, 0.98376, 0.98505, 0.98634, 0.98763, 0.98893, 0.99023, 0.99154, 0.99284, 0.99414, 0.99544, 0.99673, 0.99802, 0.9993, 0.99942, 0.99816, 0.99691, 0.99568, 0.99445, 0.99324, 0.99205, 0.99087, 0.98972, 0.98858, 0.98746, 0.98636, 0.98528, 0.98423, 0.9832, 0.98219, 0.98121, 0.98025, 0.97931, 0.9784, 0.97752, 0.97666, 0.97582, 0.97501, 0.97423, 0.97347, 0.97274, 0.97203, 0.97135, 0.9707, 0.97007, 0.96948, 0.9689, 0.96836, 0.96784, 0.96735, 0.96689, 0.96646, 0.96605, 0.96567, 0.96533, 0.965, 0.96471, 0.96445, 0.96421, 0.964, 0.96382, 0.96367, 0.96355, 0.96346, 0.96339, 0.96335, 0.96334, 0.96336, 0.9634, 0.96348, 0.96358, 0.9637, 0.96385, 0.96403, 0.96423, 0.96446, 0.96471, 0.96499, 0.96529, 0.96561, 0.96595, 0.96631, 0.96669, 0.96709, 0.96751, 0.96795, 0.9684, 0.96887, 0.96935, 0.96984, 0.97035, 0.97087, 0.9714, 0.97194, 0.97249, 0.97304, 0.97361, 0.97418, 0.97476, 0.97534, 0.97592, 0.97651, 0.97711, 0.9777, 0.9783, 0.9789, 0.9795, 0.9801, 0.9807, 0.9813, 0.9819, 0.9825, 0.98309, 0.98369, 0.98428, 0.98486, 0.98545, 0.98603, 0.98661, 0.98718, 0.98775, 0.98832, 0.98888, 0.98944, 0.99, 0.99056, 0.99112, 0.99167, 0.99223, 0.99279, 0.99335, 0.99392, 0.99449, 0.99507, 0.99565, 0.99624, 0.99684, 0.99745, 0.99807, 0.9987, 0.99934, 1, 0.99933, 0.99866, 0.99797, 0.99727, 0.99656, 0.99583, 0.9951, 0.99435, 0.99359, 0.99283, 0.99205, 0.99126, 0.99046, 0.98966, 0.98885, 0.98803, 0.9872, 0.98637, 0.98554, 0.9847, 0.98387, 0.98303, 0.98219, 0.98134, 0.9805, 0.97967, 0.97883, 0.978, 0.97717, 0.97634, 0.97552, 0.97471, 0.97389, 0.97309, 0.97229, 0.9715, 0.97071, 0.96993, 0.96915, 0.96838, 0.96762, 0.96687, 0.96612, 0.96539, 0.96466, 0.96395, 0.96324, 0.96255, 0.96187, 0.9612, 0.96055, 0.95991, 0.95929, 0.95869, 0.95811, 0.95754, 0.957, 0.95648, 0.95599, 0.95552, 0.95508, 0.95467, 0.95428, 0.95393, 0.9536, 0.95331, 0.95305, 0.95283, 0.95264] }, { distance: [2.85606, 2.86149, 2.86432, 2.8645, 2.862, 2.85686, 2.84912, 2.83886, 2.82618, 2.81117, 2.79393, 2.77456, 2.75314, 2.72975, 2.70447, 2.67734, 2.64844, 2.61784, 2.58564, 2.55196, 2.5169, 2.48057, 2.44305, 2.40438, 2.36462, 2.32383, 2.28208, 2.23943, 2.19591, 2.15153, 2.10628, 2.06016, 2.01321, 1.96548, 1.91702, 1.86793, 1.8183, 1.76829, 1.71803, 1.66767, 1.61737, 1.56726, 1.51746, 1.46803, 1.41902, 1.37044, 1.32228, 1.27452, 1.22716, 1.18023, 1.13376, 1.08781, 1.04244, 0.99769, 0.95357, 0.91003, 0.86701, 0.82447, 0.78238, 0.74069, 0.69938, 0.65836, 0.61758, 0.57699, 0.53656, 0.49627, 0.45611, 0.41611, 0.37632, 0.33683, 0.29776, 0.25924, 0.22141, 0.18441, 0.14839, 0.11346, 0.07972, 0.04727, 0.01619, -0.01348, -0.0417, -0.0684, -0.09351, -0.11698, -0.13875, -0.1588, -0.17713, -0.19381, -0.20889, -0.22242, -0.23444, -0.24501, -0.25421, -0.26216, -0.26897, -0.27473, -0.27951, -0.28336, -0.28631, -0.28836, -0.28948, -0.28963, -0.28873, -0.28673, -0.28355, -0.27916, -0.27354, -0.26673, -0.25878, -0.2498, -0.23992, -0.22929, -0.21802, -0.20623, -0.19398, -0.18134, -0.16836, -0.1551, -0.14163, -0.12809, -0.11461, -0.1013, -0.08826, -0.07557, -0.06335, -0.0517, -0.04077, -0.03065, -0.02143, -0.01321, -606e-5, 0, 496e-5, 888e-5, 0.01181, 0.01385, 0.01511, 0.0157, 0.01574, 0.01533, 0.01458, 0.01358, 0.0124, 0.01112, 979e-5, 851e-5, 738e-5, 65e-4, 6e-3, 596e-5, 646e-5, 754e-5, 924e-5, 0.01161, 0.01471, 0.01858, 0.02323, 0.02865, 0.03481, 0.04169, 0.0493, 0.05765, 0.06677, 0.07671, 0.08754, 0.09934, 0.11222, 0.12628, 0.14159, 0.15823, 0.17624, 0.19561, 0.21632, 0.23828, 0.26142, 0.28563, 0.31083, 0.33696, 0.36397, 0.39185, 0.42057, 0.4501, 0.48036, 0.51125, 0.54264, 0.5744, 0.60646, 0.63871, 0.67105, 0.70337, 0.73556, 0.76751, 0.79918, 0.83048, 0.86139, 0.8919, 0.92202, 0.95184, 0.98144, 1.01094, 1.04045, 1.0701, 1.10002, 1.13029, 1.16103, 1.1923, 1.22416, 1.25664, 1.28979, 1.32364, 1.35824, 1.39363, 1.42985, 1.4669, 1.50475, 1.54332, 1.58252, 1.62227, 1.6625, 1.70312, 1.744, 1.78501, 1.82598, 1.8668, 1.90734, 1.94754, 1.98732, 2.02666, 2.06555, 2.10402, 2.1421, 2.17985, 2.2173, 2.25448, 2.29139, 2.328, 2.36424, 2.4, 2.43515, 2.46955, 2.50309, 2.53565, 2.56717, 2.59761, 2.62692, 2.65505, 2.68191, 2.7074, 2.73138, 2.75375, 2.7744, 2.79324, 2.81017, 2.82504, 2.83772, 2.8481], pressure: [0.22758, 0.23641, 0.24578, 0.25568, 0.26609, 0.27699, 0.28835, 0.30016, 0.31237, 0.32495, 0.33789, 0.35113, 0.36466, 0.37843, 0.39241, 0.40658, 0.4209, 0.43535, 0.44989, 0.4645, 0.47916, 0.49385, 0.50853, 0.5232, 0.53784, 0.55243, 0.56696, 0.58141, 0.59578, 0.61004, 0.62419, 0.63821, 0.65209, 0.6658, 0.67934, 0.69268, 0.70582, 0.71873, 0.73139, 0.7438, 0.75594, 0.76779, 0.77935, 0.79061, 0.80156, 0.81221, 0.82254, 0.83258, 0.84231, 0.85176, 0.86091, 0.86978, 0.87837, 0.88669, 0.89473, 0.9025, 0.91, 0.91725, 0.92425, 0.931, 0.93752, 0.9438, 0.94985, 0.95566, 0.96124, 0.96658, 0.97168, 0.97652, 0.98109, 0.98539, 0.98939, 0.99309, 0.99646, 0.99949, 0.99783, 0.99552, 0.99361, 0.99209, 0.99098, 0.99029, 0.99003, 0.99019, 0.99079, 0.99181, 0.99324, 0.9951, 0.99735, 1, 0.99698, 0.99361, 0.98992, 0.98592, 0.98163, 0.97709, 0.97231, 0.96731, 0.96212, 0.95676, 0.95122, 0.94554, 0.93973, 0.93378, 0.92773, 0.92157, 0.91532, 0.90899, 0.90258, 0.89612, 0.88961, 0.88308, 0.87653, 0.87, 0.8635, 0.85705, 0.85068, 0.8444, 0.83823, 0.83219, 0.82628, 0.82052, 0.81493, 0.80952, 0.8043, 0.79929, 0.7945, 0.78994, 0.78561, 0.78151, 0.77765, 0.77402, 0.77062, 0.76742, 0.76443, 0.76161, 0.75896, 0.75645, 0.75406, 0.75175, 0.74951, 0.7473, 0.74511, 0.74289, 0.74064, 0.73833, 0.73592, 0.73341, 0.73078, 0.728, 0.72507, 0.72197, 0.71869, 0.71522, 0.71156, 0.70769, 0.70363, 0.69936, 0.69489, 0.69021, 0.68533, 0.68023, 0.67492, 0.66939, 0.66363, 0.65765, 0.65145, 0.64501, 0.63833, 0.63143, 0.62428, 0.61691, 0.60931, 0.60148, 0.59344, 0.58521, 0.57679, 0.5682, 0.55948, 0.55063, 0.54167, 0.53264, 0.52354, 0.51439, 0.50522, 0.49603, 0.48686, 0.47773, 0.46865, 0.45964, 0.45072, 0.44192, 0.43324, 0.42469, 0.41629, 0.40804, 0.39994, 0.392, 0.3842, 0.37655, 0.36903, 0.36164, 0.35437, 0.3472, 0.34012, 0.33312, 0.3262, 0.31933, 0.31251, 0.30574, 0.299, 0.2923, 0.28563, 0.27899, 0.27239, 0.26583, 0.25933, 0.25288, 0.24652, 0.24025, 0.2341, 0.22808, 0.22221, 0.21653, 0.21104, 0.20576, 0.20072, 0.19592, 0.19138, 0.18712, 0.18313, 0.17943, 0.17602, 0.17292, 0.17013, 0.16766, 0.16551, 0.16369, 0.16222, 0.1611, 0.16036, 0.16001, 0.16007, 0.16055, 0.16148, 0.16286, 0.16471, 0.16705, 0.16988, 0.17321, 0.17706, 0.18144, 0.18636, 0.19182, 0.19785, 0.20443, 0.21158, 0.2193] }, { distance: [-2.31317, -2.3191, -2.32189, -2.32154, -2.31811, -2.31174, -2.30254, -2.29062, -2.27609, -2.25904, -2.23954, -2.21767, -2.19355, -2.16732, -2.13907, -2.10885, -2.07672, -2.04268, -2.00677, -1.96911, -1.92985, -1.88914, -1.84713, -1.80397, -1.75979, -1.71467, -1.66864, -1.62171, -1.57395, -1.52546, -1.47625, -1.42628, -1.3755, -1.32384, -1.27131, -1.218, -1.16408, -1.10972, -1.05508, -1.00031, -0.94551, -0.89077, -0.83615, -0.7817, -0.72757, -0.6739, -0.62076, -0.56821, -0.51625, -0.46484, -0.41397, -0.36366, -0.314, -0.26506, -0.21689, -0.16957, -0.12316, -0.07766, -0.03301, 0.01085, 0.05399, 0.09643, 0.13827, 0.17967, 0.22079, 0.26176, 0.30265, 0.34342, 0.38397, 0.42414, 0.46381, 0.50285, 0.54115, 0.57863, 0.61524, 0.65093, 0.6856, 0.71914, 0.75153, 0.78275, 0.81283, 0.84182, 0.86972, 0.89651, 0.92208, 0.94634, 0.96919, 0.99052, 1.01025, 1.02835, 1.04484, 1.05976, 1.07309, 1.08479, 1.09492, 1.1036, 1.11096, 1.11714, 1.12224, 1.12627, 1.12916, 1.13083, 1.13125, 1.13036, 1.12816, 1.12466, 1.11992, 1.11397, 1.10677, 1.09827, 1.08849, 1.07746, 1.06527, 1.05203, 1.03786, 1.02283, 1.00695, 0.99025, 0.97279, 0.9546, 0.93573, 0.9163, 0.8965, 0.8765, 0.85647, 0.83652, 0.81687, 0.79775, 0.77939, 0.76199, 0.74568, 0.73049, 0.71635, 0.70316, 0.69082, 0.67925, 0.66834, 0.65804, 0.64831, 0.63911, 0.63032, 0.62184, 0.61363, 0.60564, 0.59788, 0.59036, 0.58308, 0.57597, 0.5689, 0.56177, 0.55447, 0.5469, 0.53896, 0.53062, 0.5219, 0.51283, 0.5034, 0.49355, 0.48335, 0.47287, 0.46223, 0.45154, 0.44085, 0.43012, 0.41923, 0.40805, 0.39648, 0.38441, 0.37176, 0.35849, 0.34458, 0.32999, 0.31461, 0.29833, 0.28109, 0.26288, 0.2437, 0.22361, 0.20265, 0.18082, 0.15807, 0.13434, 0.1096, 0.0838, 0.0569, 0.02894, 0, -0.0298, -0.0604, -0.09173, -0.12364, -0.15594, -0.18843, -0.22092, -0.25331, -0.28559, -0.31781, -0.35006, -0.38244, -0.41502, -0.44785, -0.48098, -0.5144, -0.54811, -0.58218, -0.61666, -0.65153, -0.68677, -0.72232, -0.75807, -0.79397, -0.83002, -0.86628, -0.90281, -0.93968, -0.97693, -1.01465, -1.05282, -1.09139, -1.13031, -1.16956, -1.20917, -1.24905, -1.28907, -1.32908, -1.36891, -1.40844, -1.44765, -1.48658, -1.52527, -1.56376, -1.60206, -1.64016, -1.67801, -1.71552, -1.75264, -1.78936, -1.8257, -1.86161, -1.89702, -1.93182, -1.96584, -1.99894, -2.03102, -2.06203, -2.0919, -2.12056, -2.14794, -2.17397, -2.19852, -2.22138, -2.24235, -2.26129, -2.27805, -2.29243, -2.30422], pressure: [0.9681, 0.97424, 0.98046, 0.98674, 0.99309, 0.9995, 0.99404, 0.98754, 0.981, 0.97444, 0.96785, 0.96124, 0.95462, 0.94801, 0.94139, 0.93479, 0.92822, 0.92167, 0.91515, 0.90868, 0.90225, 0.89589, 0.88959, 0.88336, 0.87722, 0.87115, 0.86519, 0.85932, 0.85356, 0.84792, 0.84239, 0.83699, 0.83173, 0.8266, 0.82162, 0.81679, 0.81211, 0.80759, 0.80324, 0.79906, 0.79505, 0.79121, 0.78756, 0.78409, 0.78081, 0.77771, 0.77481, 0.77211, 0.76959, 0.76728, 0.76516, 0.76324, 0.76153, 0.76001, 0.75869, 0.75757, 0.75665, 0.75593, 0.7554, 0.75507, 0.75493, 0.75498, 0.75523, 0.75565, 0.75627, 0.75706, 0.75803, 0.75917, 0.76049, 0.76197, 0.76361, 0.76541, 0.76737, 0.76947, 0.77172, 0.77409, 0.7766, 0.77923, 0.78198, 0.78484, 0.7878, 0.79086, 0.79401, 0.79724, 0.80055, 0.80394, 0.8074, 0.81092, 0.8145, 0.81813, 0.82182, 0.82556, 0.82934, 0.83317, 0.83703, 0.84093, 0.84487, 0.84884, 0.85284, 0.85687, 0.86094, 0.86503, 0.86915, 0.87329, 0.87746, 0.88166, 0.88587, 0.89011, 0.89436, 0.89863, 0.90291, 0.9072, 0.91149, 0.91579, 0.92009, 0.92438, 0.92867, 0.93295, 0.9372, 0.94144, 0.94566, 0.94985, 0.954, 0.95812, 0.96219, 0.96623, 0.97021, 0.97415, 0.97802, 0.98184, 0.9856, 0.9893, 0.99293, 0.9965, 1, 0.99657, 0.9932, 0.98991, 0.98668, 0.98352, 0.98042, 0.97738, 0.9744, 0.97148, 0.9686, 0.96577, 0.96298, 0.96023, 0.95751, 0.95482, 0.95214, 0.94949, 0.94684, 0.9442, 0.94156, 0.93892, 0.93627, 0.93361, 0.93094, 0.92825, 0.92555, 0.92284, 0.9201, 0.91735, 0.91458, 0.91179, 0.90899, 0.90616, 0.90332, 0.90047, 0.8976, 0.89472, 0.89183, 0.88893, 0.88603, 0.88314, 0.88024, 0.87735, 0.87448, 0.87162, 0.86878, 0.86597, 0.86319, 0.86044, 0.85774, 0.85508, 0.85247, 0.84993, 0.84744, 0.84503, 0.84269, 0.84042, 0.83825, 0.83616, 0.83417, 0.83227, 0.83048, 0.8288, 0.82724, 0.82578, 0.82445, 0.82324, 0.82215, 0.82119, 0.82037, 0.81967, 0.81911, 0.81868, 0.81839, 0.81824, 0.81823, 0.81835, 0.81862, 0.81903, 0.81957, 0.82026, 0.82109, 0.82206, 0.82317, 0.82443, 0.82583, 0.82737, 0.82906, 0.83089, 0.83287, 0.83499, 0.83726, 0.83968, 0.84223, 0.84494, 0.84778, 0.85077, 0.8539, 0.85717, 0.86058, 0.86412, 0.86781, 0.87163, 0.87559, 0.87968, 0.88391, 0.88826, 0.89275, 0.89737, 0.90211, 0.90698, 0.91198, 0.91709, 0.92233, 0.92768, 0.93315, 0.93873, 0.94441, 0.95019, 0.95607, 0.96205] }, { distance: [4.72925, 4.81721, 4.9037, 4.98859, 5.07177, 5.15311, 5.23249, 5.3098, 5.38491, 5.45772, 5.52811, 5.59598, 5.66122, 5.72375, 5.78346, 5.84028, 5.8941, 5.94486, 5.99248, 6.03689, 6.07803, 6.11584, 6.15028, 6.18128, 6.20882, 6.23285, 6.25336, 6.27031, 6.28369, 6.29348, 6.29969, 6.3023, 6.30133, 6.29678, 6.28867, 6.27703, 6.26187, 6.24324, 6.22116, 6.19567, 6.16683, 6.13468, 6.09928, 6.06068, 6.01896, 5.97417, 5.92639, 5.87569, 5.82217, 5.76589, 5.70696, 5.64545, 5.58147, 5.5151, 5.44644, 5.37559, 5.30265, 5.2277, 5.15085, 5.0722, 4.99184, 4.90987, 4.82639, 4.74151, 4.65533, 4.56794, 4.47945, 4.38996, 4.29959, 4.20843, 4.11658, 4.02416, 3.93125, 3.83796, 3.74437, 3.65057, 3.55666, 3.46272, 3.36884, 3.27509, 3.18155, 3.08831, 2.99545, 2.90303, 2.81114, 2.71984, 2.62922, 2.53933, 2.45026, 2.36207, 2.27484, 2.18862, 2.10349, 2.01951, 1.93675, 1.85528, 1.77515, 1.69644, 1.61919, 1.54348, 1.46935, 1.39685, 1.32605, 1.25698, 1.18967, 1.12417, 1.06049, 0.99863, 0.93862, 0.88044, 0.82408, 0.76953, 0.71676, 0.66574, 0.61644, 0.56882, 0.52282, 0.47841, 0.43553, 0.39413, 0.35414, 0.31551, 0.27817, 0.24206, 0.20712, 0.17328, 0.14048, 0.10866, 0.07776, 0.04772, 0.01848, -999e-5, -0.03776, -0.06487, -0.09134, -0.11721, -0.14251, -0.16725, -0.19144, -0.21509, -0.2382, -0.26076, -0.28275, -0.30416, -0.32496, -0.34511, -0.36459, -0.38334, -0.40134, -0.41852, -0.43485, -0.45026, -0.46471, -0.47815, -0.49052, -0.50179, -0.51189, -0.52081, -0.52849, -0.5349, -0.54003, -0.54383, -0.54627, -0.54734, -0.54702, -0.54528, -0.54211, -0.53752, -0.53149, -0.52403, -0.51515, -0.50487, -0.4932, -0.48015, -0.46575, -0.45001, -0.43297, -0.41463, -0.39503, -0.37419, -0.35213, -0.32887, -0.30443, -0.27885, -0.25214, -0.22432, -0.19541, -0.16544, -0.13442, -0.10235, -0.06926, -0.03514, 0, 0.03616, 0.07336, 0.11159, 0.15088, 0.19125, 0.23272, 0.27531, 0.31906, 0.36401, 0.41019, 0.45764, 0.5064, 0.55651, 0.60802, 0.66096, 0.71538, 0.77129, 0.82874, 0.88776, 0.94836, 1.01056, 1.07438, 1.13982, 1.20687, 1.27554, 1.34581, 1.41766, 1.49107, 1.56599, 1.64239, 1.72025, 1.79951, 1.88013, 1.96209, 2.04532, 2.12979, 2.21546, 2.30226, 2.39017, 2.47911, 2.56905, 2.65991, 2.75164, 2.84416, 2.93742, 3.03133, 3.12582, 3.2208, 3.31619, 3.41191, 3.50785, 3.60393, 3.70006, 3.79612, 3.89202, 3.98765, 4.08291, 4.17767, 4.27182, 4.36525, 4.45783, 4.54944, 4.63995], pressure: [0.30942, 0.30838, 0.30765, 0.30724, 0.30715, 0.30738, 0.30795, 0.30884, 0.31007, 0.31164, 0.31354, 0.31578, 0.31837, 0.32129, 0.32455, 0.32815, 0.33209, 0.33636, 0.34097, 0.34591, 0.35117, 0.35675, 0.36265, 0.36887, 0.37539, 0.38221, 0.38933, 0.39674, 0.40442, 0.41238, 0.4206, 0.42907, 0.43779, 0.44675, 0.45593, 0.46533, 0.47493, 0.48473, 0.49471, 0.50486, 0.51517, 0.52563, 0.53623, 0.54694, 0.55777, 0.5687, 0.57971, 0.59079, 0.60194, 0.61313, 0.62435, 0.6356, 0.64686, 0.65811, 0.66935, 0.68056, 0.69174, 0.70286, 0.71391, 0.72489, 0.73579, 0.74659, 0.75728, 0.76785, 0.7783, 0.7886, 0.79876, 0.80877, 0.81861, 0.82827, 0.83776, 0.84706, 0.85617, 0.86507, 0.87378, 0.88227, 0.89056, 0.89863, 0.90649, 0.91412, 0.92153, 0.92872, 0.93568, 0.94241, 0.94892, 0.95519, 0.96122, 0.96702, 0.97258, 0.97791, 0.98299, 0.98783, 0.99242, 0.99677, 0.99911, 0.99525, 0.99164, 0.98827, 0.98515, 0.98228, 0.97966, 0.97728, 0.97514, 0.97324, 0.97159, 0.97017, 0.96898, 0.96801, 0.96727, 0.96674, 0.96641, 0.96629, 0.96635, 0.96661, 0.96703, 0.96762, 0.96838, 0.96928, 0.97032, 0.97149, 0.97279, 0.9742, 0.97572, 0.97734, 0.97905, 0.98085, 0.98273, 0.98468, 0.98669, 0.98877, 0.99091, 0.99311, 0.99535, 0.99765, 1, 0.9976, 0.99516, 0.99267, 0.99014, 0.98755, 0.98491, 0.98222, 0.97947, 0.97666, 0.97378, 0.97083, 0.96781, 0.96471, 0.96153, 0.95826, 0.9549, 0.95144, 0.94787, 0.9442, 0.94042, 0.93651, 0.93249, 0.92834, 0.92407, 0.91966, 0.91512, 0.91045, 0.90564, 0.90069, 0.8956, 0.89037, 0.885, 0.87949, 0.87384, 0.86806, 0.86214, 0.85608, 0.84988, 0.84356, 0.83711, 0.83053, 0.82383, 0.81702, 0.81009, 0.80306, 0.79594, 0.78872, 0.78141, 0.77403, 0.76657, 0.75905, 0.75148, 0.74385, 0.73619, 0.72849, 0.72076, 0.71302, 0.70526, 0.69749, 0.68972, 0.68195, 0.67419, 0.66644, 0.65871, 0.65099, 0.64329, 0.63561, 0.62795, 0.62032, 0.61271, 0.60512, 0.59755, 0.59001, 0.58248, 0.57497, 0.56749, 0.56002, 0.55256, 0.54512, 0.5377, 0.5303, 0.52291, 0.51554, 0.50819, 0.50087, 0.49358, 0.48632, 0.4791, 0.47192, 0.4648, 0.45773, 0.45072, 0.44378, 0.43692, 0.43015, 0.42346, 0.41687, 0.41039, 0.40403, 0.39779, 0.39168, 0.38571, 0.37989, 0.37423, 0.36873, 0.36342, 0.35828, 0.35335, 0.34862, 0.34409, 0.3398, 0.33573, 0.3319, 0.32831, 0.32498, 0.32192, 0.31912, 0.3166, 0.31436, 0.31242, 0.31077] }] };

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/util.js
function e62(t68) {
  let e65 = null;
  for (const r62 of t68) {
    const t69 = r62.type;
    if (c56(r62)) {
      if (null == e65)
        e65 = t69;
      else if (e65 !== t69)
        return "uber";
    }
  }
  return null != e65 ? e65 : "uber";
}
function r60(e65) {
  let r62 = A6.INVISIBLE;
  for (const { material: n77 } of e65)
    if (o58(n77)) {
      if (n77.color[3] * n77.opacity < 1)
        return A6.TRANSPARENT;
      r62 = A6.OPAQUE;
    }
  return r62;
}
function n74(e65) {
  let r62 = A6.INVISIBLE;
  for (const { material: n77 } of e65)
    if (o58(n77)) {
      switch (n77.objectTransparency) {
        case A6.TRANSPARENT:
        case A6.INVISIBLE:
          return A6.TRANSPARENT;
        case A6.OPAQUE:
          if (n77.opacity < 1)
            return A6.TRANSPARENT;
      }
      r62 = A6.OPAQUE;
    }
  return r62;
}
function o58(t68) {
  return t68.size * t68.color[3] * t68.opacity > 0;
}
function c56(t68) {
  return t68.size * t68.color[3] > 0;
}
function f48(t68, e65, r62, n77) {
  for (let o61 = 0; o61 < t68.length; o61++) {
    const c58 = t68[o61].index, f49 = e65[o61], i60 = e65[o61 + 1];
    if (n77)
      for (let t69 = f49; t69 < i60; t69++) {
        const e66 = n77[t69];
        r62.set(e66, c58);
      }
    else
      for (let t69 = f49; t69 < i60; t69++)
        r62.set(t69, c58);
  }
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/EdgeView.js
var te5 = class extends m {
  constructor(e65) {
    super(e65), this._updatingHandles = new c5(), this._perObjectData = /* @__PURE__ */ new Map(), this._perObjectDataEvictionCache = /* @__PURE__ */ new Set(), this._renderers = /* @__PURE__ */ new Map(), this._gpuMemoryUsage = 0, this._workerAbort = new AbortController(), this._tmpModelPosition = n7(), this._localOrigins = new e60(new f17(e65.renderSR));
  }
  initialize() {
    this._worker = new a30(this.schedule), this._componentColorManager = new r57(this.rctx, 3);
    const e65 = e13.createBuffer(4);
    for (let t68 = 0; t68 < 4; t68++)
      e65.sideness.set(t68, 0, 0 === t68 || 3 === t68 ? 0 : 1), e65.sideness.set(t68, 1, 0 === t68 || 1 === t68 ? 0 : 1);
    this._verticesBufferObject = c12.createVertex(this.rctx, F6.STATIC_DRAW, e65.buffer);
  }
  destroy() {
    this.destroyed || (this._perObjectData.forEach((e65) => this._discardObjectEntry(e65)), this._perObjectData.clear(), this._strokesTexture = t2(this._strokesTexture), this._componentColorManager = l(this._componentColorManager), this._workerAbort.abort(), this._worker.destroy(), this._verticesBufferObject = t2(this._verticesBufferObject), this._renderers.clear(), this._updatingHandles.destroy(), this._set("schedule", fe4));
  }
  get updating() {
    return this._updatingHandles.updating;
  }
  get usedMemory() {
    return this._gpuMemoryUsage;
  }
  shouldRender() {
    return this._renderers.size > 0;
  }
  async addComponentObject(e65, t68, r62, s69, n77, o61, i60, a67) {
    if (this.hasObject(e65))
      return this.getObjectMemoryUsage(e65);
    let c58;
    const l63 = new ne7(new Promise((e66) => c58 = e66), r62.center, r62.radius);
    this._perObjectData.set(e65, l63);
    const d52 = await this._updatingHandles.addPromise(this._addComponentGeometry(t68, l63, s69, n77, o61, i60, a67));
    return this.setNeedsRender(), c58(), d52;
  }
  async addOrUpdateObject3D(e65, t68, r62, s69) {
    if (this.destroyed)
      return void s3.getLogger(this).warn("Attempt to add an object to a destroyed instance");
    const o61 = this._perObjectData.get(e65);
    let i60;
    (o61 == null ? void 0 : o61.renderables.length) > 0 && this._perObjectDataEvictionCache.add(o61);
    const a67 = e65.boundingVolumeWorldSpace.bounds, c58 = new ne7(new Promise((e66) => i60 = e66), z5(a67), k5(a67));
    this._perObjectData.set(e65, c58);
    const l63 = new Array();
    if (r62.mergeGeometries && e65.geometries.length > 1 && se7(e65))
      l63.push(this._addObjectMergedGeometries(e65, c58, t68, r62, s69));
    else
      for (let n77 = 0; n77 < e65.geometries.length; n77++) {
        const o62 = e65.geometries[n77];
        o62.material.supportsEdges && l63.push(this._addGeometry(e65, c58, o62, t68[0], r62, s69));
      }
    await this._updatingHandles.addPromise(Promise.all(l63)), this._perObjectDataEvictionCache.delete(c58), this._discardObjectEntry(o61), this.setNeedsRender(), i60();
  }
  _discardObjectEntry(e65) {
    e65 && (e65.renderables.length && (e65.renderables.forEach((e66) => this._removeRenderable(e66)), this.setNeedsRender()), e65.loaded = null);
  }
  hasObject(e65) {
    return this._perObjectData.has(e65);
  }
  async updateAllComponentOpacities(e65, t68) {
    const r62 = await this._updatingHandles.addPromise(this._getObjectEntry(e65));
    if (null == r62)
      return;
    const s69 = t68 instanceof Array ? (e66) => t68[e66] : () => t68;
    r62.renderables.forEach((e66) => {
      const t69 = e66.components.meta.length;
      for (let r63 = 0; r63 < t69; r63++) {
        const t70 = s69(r63), n77 = e66.components.meta[r63], o61 = n77.index;
        n77.material.opacity = t70, e66.components.buffer.textureBuffer.setDataElement(o61, 1, 3, 255 * t70);
      }
      this._updateTransparency(e66);
    }), this.setNeedsRender();
  }
  async getObjectMemoryUsage(e65) {
    const t68 = await this._getObjectEntry(e65);
    return null != t68 ? t68.renderables.reduce((e66, t69) => e66 + t69.statistics.gpuMemoryUsage, 0) : 0;
  }
  async updateAllComponentMaterials(e65, t68, r62, s69) {
    const n77 = e65 instanceof V4, o61 = !!r62.hasSlicePlane, i60 = e62(t68), a67 = b25.getKey(i60, o61, n77), c58 = await this._updatingHandles.addPromise(this._getObjectEntry(e65));
    null != c58 && (c58.renderables.forEach((e66) => {
      if (a67 !== e66.rendererKey) {
        const t69 = this._renderers.get(e66.rendererKey), r63 = this._acquireRenderer(i60, o61, n77);
        t69.removeRenderable(e66), --t69.refCount, e66.rendererKey = a67, r63.addRenderable(e66);
      }
      for (let r63 = 0; r63 < t68.length; r63++)
        e66.components.meta[r63].material = t68[r63];
      s69 && this._updateComponentBuffer(e66.components), this._updateTransparency(e66);
    }), this.setNeedsRender());
  }
  async updateAllVerticalOffsets(e65, t68) {
    const r62 = await this._updatingHandles.addPromise(this._getObjectEntry(e65));
    null != r62 && (r62.renderables.forEach((e66) => {
      const r63 = e66.components.meta;
      for (let s69 = 0; s69 < r63.length; s69++)
        e66.components.meta[s69].verticalOffset = (t68 == null ? void 0 : t68[s69]) ?? 0;
      this._updateComponentBuffer(e66.components);
    }), this.setNeedsRender());
  }
  async updateObjectVisibility(e65, t68) {
    const r62 = await this._updatingHandles.addPromise(this._getObjectEntry(e65));
    null != r62 && (r62.renderables.forEach((e66) => e66.visible = t68), this.setNeedsRender());
  }
  removeObject(e65) {
    const t68 = this._perObjectData.get(e65);
    t68 && (this._perObjectData.delete(e65), this._discardObjectEntry(t68));
  }
  async _getObjectEntry(e65) {
    const t68 = this._perObjectData.get(e65);
    if (!t68)
      throw new Error("no object");
    return await t68.loaded, null == t68.loaded ? null : t68;
  }
  render(e65, t68) {
    if (null == this._componentColorManager)
      return;
    this._localOrigins.updateViewMatrices(e65.camera.viewMatrix);
    const r62 = e65.camera.viewInverseTransposeMatrix, s69 = n7(), n77 = new c49();
    let o61 = 0, i60 = 0;
    if (this._renderers.forEach((r63) => {
      if (0 === r63.refCount)
        this._renderers.delete(r63.key), r63.dispose();
      else {
        let s70 = true, n78 = true;
        r63.forEachRenderable((t69) => {
          t69.visible && (o61 += t69.statistics.averageEdgeLength, i60++, s70 && t69.regular && (r63.updateTechnique(e65, false), s70 = false), n78 && t69.silhouette && (r63.updateTechnique(e65, true), n78 = false));
        }, t68);
      }
    }), this._componentColorManager.garbageCollect(), this._componentColorManager.updateTextures(), 0 === i60)
      return;
    const a67 = new a64(40 * o61 / i60, t68);
    o2(s69, r62[3], r62[7], r62[11]), n77.set(s69), r5(a67.transformWorldFromViewTH, n77.high), r5(a67.transformWorldFromViewTL, n77.low), a13(a67.transformViewFromCameraRelativeRS, e65.camera.viewMatrix), o12(pe5, a67.transformViewFromCameraRelativeRS), u5(a67.transformNormalViewFromGlobal, pe5), a67.transformProjFromView = e65.camera.projectionMatrix, this._updateObjectCameraDistances(e65), this._renderers.forEach((t69) => {
      this._renderRegularEdges(t69, e65, a67), this._renderSilhouetteEdges(t69, e65, a67);
    });
  }
  _updateTransparency(e65) {
    const t68 = r60(e65.components.meta), r62 = n74(e65.components.meta);
    t68 === e65.edgeTransparency && r62 === e65.objectTransparency || (e65.edgeTransparency = t68, e65.objectTransparency = r62, this._renderers.get(e65.rendererKey).setRenderablesDirty());
  }
  _computeModelTransformWithLocalOrigin(e65, t68, r62) {
    e65.getCombinedShaderTransformation(t68, r62);
    const s69 = null != t68.localOrigin ? this._localOrigins.register(t68.localOrigin) : this._localOrigins.acquire(o2(this._tmpModelPosition, r62[12], r62[13], r62[14]));
    return t68.localOrigin = s69.origin, n72(s69.origin.vec3, r62), s69;
  }
  _updateComponentBuffer(e65) {
    const { meta: t68, buffer: r62 } = e65, s69 = new Uint8Array(4);
    for (let n77 = 0; n77 < t68.length; n77++) {
      const e66 = t68[n77].material, i60 = t68[n77].index, a67 = i3(Math.round(e66.size * m41), 0, 255), c58 = i3(e66.extensionLength, -g33, 255 - g33) + g33, l63 = "solid" === e66.type ? u4.SOLID : u4.SKETCH, d52 = 255 * e66.opacity, u51 = e66.color, h46 = 255 * u51[0], m44 = 255 * u51[1], g36 = 255 * u51[2], p54 = 255 * u51[3];
      r62.textureBuffer.setData(i60, 0, h46, m44, g36, p54), r62.textureBuffer.setData(i60, 1, a67, c58, l63, d52), C10(t68[n77].verticalOffset, s69), r62.textureBuffer.setData(i60, 2, s69[0], s69[1], s69[2], s69[3]);
    }
  }
  _createComponentBuffers(e65) {
    if (null == this._componentColorManager)
      return null;
    const t68 = new Array(), r62 = this._componentColorManager.getBuffer(e65.length);
    for (let n77 = 0; n77 < e65.length; n77++) {
      const s70 = e65[n77], o61 = r62.acquireIndex();
      t68.push({ index: o61, verticalOffset: 0, material: s70 });
    }
    const s69 = new oe8(r62, t68);
    return this._updateComponentBuffer(s69), s69;
  }
  _extractEdges(e65, t68, r62, s69, n77, o61 = n77.length) {
    return this._worker.process({ data: t68, indices: n77, indicesLength: o61, writerSettings: e65, skipDeduplicate: r62 }, this._workerAbort.signal, s69);
  }
  _createRenderable(e65, t68, r62, s69, n77) {
    const o61 = (t69) => null != this._verticesBufferObject ? new ie8(new r26(this.rctx, o10, { vertices: T4, instances: t69 === F14.REGULAR ? d8.glLayout : w6.glLayout }, { vertices: this._verticesBufferObject, instances: c12.createVertex(this.rctx, F6.STATIC_DRAW, t69 === F14.REGULAR ? e65.regular.instancesData.buffer : e65.silhouette.instancesData.buffer) }), t69 === F14.REGULAR ? e65.regular.lodInfo : e65.silhouette.lodInfo) : null, i60 = e65.regular.lodInfo.lengths.length > 0 ? o61(F14.REGULAR) : null, a67 = e65.silhouette.lodInfo.lengths.length > 0 ? o61(F14.SILHOUETTE) : null, c58 = ((i60 == null ? void 0 : i60.vao.memoryEstimate) ?? 0) + ((a67 == null ? void 0 : a67.vao.memoryEstimate) ?? 0);
    return new ce8(i60, a67, { gpuMemoryUsage: c58, externalMemoryUsage: n77, averageEdgeLength: e65.averageEdgeLength }, r62, r60(t68.meta), n74(t68.meta), t68, s69);
  }
  async _addGeometry(e65, t68, r62, s69, n77, o61) {
    const i60 = r62.vertexAttributes.get(O3.POSITION), a67 = r62.indices.get(O3.POSITION), c58 = e15(), l63 = this._computeModelTransformWithLocalOrigin(e65, r62, c58), d52 = new ge4(i60, a67, c58, l63);
    return this._addPositionData(t68, d52, r62.edgeIndicesLength, s69, n77, o61);
  }
  async _addPositionData(e65, t68, r62, s69, n77, o61 = false) {
    if (null == e65.loaded)
      return;
    const i60 = this._createComponentBuffers([s69]);
    if (null == i60 || r62 <= 0)
      return;
    const a67 = this._acquireRenderer(s69.type, !!n77.hasSlicePlane, true), { modelTransform: c58, origin: l63 } = t68, d52 = t68.indices, u51 = t68.position, h46 = u51.data.length / u51.size, m44 = A5.createBuffer(h46);
    for (let f49 = 0; f49 < h46; f49++)
      m44.position.set(f49, 0, u51.data[f49 * u51.size]), m44.position.set(f49, 1, u51.data[f49 * u51.size + 1]), m44.position.set(f49, 2, u51.data[f49 * u51.size + 2]);
    f48(i60.meta, [0, m44.componentIndex.count], m44.componentIndex);
    const g36 = await this._updatingHandles.addPromise(this._extractEdges(a67.writerSettings, m44, false, o61, d52, r62));
    if (null == e65.loaded)
      return;
    const p54 = this._createRenderable(g36, i60, new ae7(c58, l63), a67.key, false);
    e65.renderables.push(p54), a67.addRenderable(p54), this._gpuMemoryUsage += p54.statistics.gpuMemoryUsage;
  }
  async _addComponentGeometry(e65, t68, r62, s69, n77, o61, i60) {
    if (null == t68.loaded)
      return 0;
    const a67 = this._createComponentBuffers(o61);
    if (null == a67)
      return 0;
    const c58 = e62(o61), l63 = this._acquireRenderer(c58, i60.hasSlicePlane || false, false), d52 = A5.createBuffer(r62.length / 3);
    t12(d52.position.typedBuffer, r62, d52.position.typedBufferStride, 3), f48(a67.meta, n77, d52.componentIndex, s69);
    const u51 = true, h46 = l63.writerSettings, m44 = await this._updatingHandles.addPromise(this._extractEdges(h46, d52, u51, false, s69));
    if (null == t68.loaded)
      return 0;
    const g36 = this._createRenderable(m44, a67, e65, l63.key, true);
    return t68.renderables.push(g36), l63.addRenderable(g36), g36.statistics.gpuMemoryUsage;
  }
  async _addObjectMergedGeometries(e65, t68, r62, s69, n77) {
    const o61 = /* @__PURE__ */ new Map();
    let i60 = 0, a67 = null, c58 = 0;
    for (let g36 = 0; g36 < e65.geometries.length; g36++) {
      const t69 = e65.geometries[g36];
      if (!t69.material.supportsEdges)
        continue;
      !a67 && t69.localOrigin && (a67 = t69);
      const r63 = t69.vertexAttributes.get(O3.POSITION);
      c58 += r63.data.length / r63.size, i60 += t69.edgeIndicesLength;
    }
    const l63 = c58 >= 65536 ? Uint32Array : Uint16Array, d52 = i60 ? new l63(i60) : null, u51 = [];
    let h46 = 0;
    for (let g36 = 0; g36 < e65.geometries.length; g36++) {
      const t69 = e65.geometries[g36];
      if (!t69.material.supportsEdges)
        continue;
      const r63 = t69.vertexAttributes.get(O3.POSITION), s70 = t69.indices.get(O3.POSITION);
      let n78 = o61.get(r63.data);
      if (null == n78) {
        n78 = u51.length / 3;
        for (let e66 = 0; e66 < r63.data.length; e66 += r63.size)
          u51.push(r63.data[e66]), u51.push(r63.data[e66 + 1]), u51.push(r63.data[e66 + 2]);
        o61.set(r63.data, n78);
      }
      if (s70)
        for (let e66 = 0; e66 < t69.edgeIndicesLength; e66++)
          d52[h46++] = n78 + s70[e66];
    }
    const m44 = a67 || e65.geometries[0], p54 = e15(), f49 = this._computeModelTransformWithLocalOrigin(e65, m44, p54);
    for (let g36 = 0; g36 < e65.geometries.length; g36++)
      e65.geometries[g36].localOrigin = f49.origin;
    const _33 = new ge4({ data: u51, size: 3 }, d52, p54, f49);
    await this._updatingHandles.addPromise(this._addPositionData(t68, _33, d52.length, r62[0], s69, n77));
  }
  _acquireRenderer(e65, t68, r62) {
    const s69 = b25.getKey(e65, t68, r62);
    let n77 = this._renderers.get(s69);
    return null == this._strokesTexture && (this._strokesTexture = n73(this.rctx)), n77 || (n77 = new b25(this.rctx, this.techniqueRepository, { type: e65, hasSlicePlane: t68, strokesTexture: this._strokesTexture, legacy: r62, spherical: this.viewingMode === l13.Global }), this._renderers.set(s69, n77)), ++n77.refCount, n77;
  }
  _removeRenderable(e65) {
    re7(e65.regular), re7(e65.silhouette);
    const t68 = this._renderers.get(e65.rendererKey);
    if (t68) {
      t68.removeRenderable(e65), --t68.refCount, "origin" in e65.transform && this._localOrigins.release(e65.transform.origin), this._gpuMemoryUsage -= e65.statistics.externalMemoryUsage ? 0 : e65.statistics.gpuMemoryUsage;
      for (const t69 of e65.components.meta)
        e65.components.buffer.releaseIndex(t69.index);
    }
  }
  _updateObjectCameraDistances(e65) {
    const t68 = e65.camera.eye, r62 = e65.camera.viewForward, s69 = n7(), n77 = (e66) => {
      J(s69, e66.center, t68);
      const n78 = P(s69, r62), o61 = e66.radius, i60 = n78 < -o61 ? 1 / 0 : n78 < o61 ? 0 : n78 - o61;
      e66.renderables.forEach((e67) => e67.distanceToCamera = i60);
    };
    this._perObjectData.forEach(n77), this._perObjectDataEvictionCache.forEach(n77);
  }
  _renderRegularEdges(e65, t68, r62) {
    const s69 = e65.bindRegularEdges(r62, t68), n77 = r62.transparency, o61 = t68.camera.perScreenPixelRatio;
    e65.forEachRenderable((n78) => {
      if (!de5(n78) || !n78.visible)
        return;
      const i60 = me5(n78.regular.lod.lengths, n78.distanceToCamera, o61);
      e65.renderRegularEdges(s69, n78, r62, t68, i60);
    }, n77);
  }
  _renderSilhouetteEdges(e65, t68, r62) {
    const s69 = e65.bindSilhouetteEdges(r62, t68), n77 = r62.transparency, o61 = t68.camera.perScreenPixelRatio;
    e65.forEachRenderable((n78) => {
      if (!he7(n78) || !n78.visible)
        return;
      const i60 = me5(n78.silhouette.lod.lengths, n78.distanceToCamera, o61);
      e65.renderSilhouetteEdges(s69, n78, r62, t68, i60);
    }, n77);
  }
  get test() {
    return { hasRenderedPrimitives: (e65) => {
      let t68 = false;
      const r62 = e65.perScreenPixelRatio, s69 = (e66, s70) => e66.forEachRenderable((e67) => {
        e67.visible && !t68 && (de5(e67) && (t68 = me5(e67.regular.lod.lengths, e67.distanceToCamera, r62) > 0), !t68 && he7(e67) && (t68 = me5(e67.silhouette.lod.lengths, e67.distanceToCamera, r62) > 0));
      }, s70);
      return this._renderers.forEach((e66) => {
        t68 || (s69(e66, A6.OPAQUE), s69(e66, A6.TRANSPARENT));
      }), t68;
    } };
  }
};
function re7(e65) {
  null != e65 && (e65.vao.vertexBuffers.instances.dispose(), e65.vao.disposeVAOOnly(), e65.vao = null);
}
function se7(e65) {
  let t68 = null, s69 = null;
  for (let n77 = 0; n77 < e65.geometries.length; n77++) {
    const o61 = e65.geometries[n77];
    if (o61.material.supportsEdges) {
      if (t68) {
        if (!s(t68, o61.transformation))
          return false;
      } else
        t68 = o61.transformation;
      if (s69 || null == o61.localOrigin) {
        if (s69 && null != s69.localOrigin && null != o61.localOrigin && s69.localOrigin.id !== o61.localOrigin.id)
          return false;
      } else
        s69 = o61;
    }
  }
  return true;
}
e([y2({ constructOnly: true })], te5.prototype, "rctx", void 0), e([y2({ constructOnly: true })], te5.prototype, "renderSR", void 0), e([y2({ constructOnly: true })], te5.prototype, "viewingMode", void 0), e([y2({ constructOnly: true })], te5.prototype, "techniqueRepository", void 0), e([y2({ constructOnly: true })], te5.prototype, "setNeedsRender", void 0), e([y2({ constructOnly: true })], te5.prototype, "schedule", void 0), e([y2({ readOnly: true })], te5.prototype, "_updatingHandles", void 0), e([y2({ readOnly: true })], te5.prototype, "updating", null), te5 = e([a4("esri.views.3d.webgl-engine.lib.edgeRendering.EdgeView")], te5);
var ne7 = class {
  constructor(e65, t68, r62) {
    this.center = t68, this.radius = r62, this.renderables = new Array(), this.loaded = e65, this.loaded.then(() => {
      null != this.loaded && (this.loaded = true);
    });
  }
};
var oe8 = class {
  constructor(e65, t68) {
    this.buffer = e65, this.meta = t68;
  }
};
var ie8 = class {
  constructor(e65, t68) {
    this.vao = e65, this.lod = t68;
  }
};
var ae7 = class {
  constructor(e65, t68) {
    this.modelMatrix = e65, this.origin = t68;
  }
};
var ce8 = class {
  constructor(e65, t68, r62, s69, n77, o61, i60, a67) {
    this.regular = e65, this.silhouette = t68, this.statistics = r62, this.transform = s69, this.edgeTransparency = n77, this.objectTransparency = o61, this.components = i60, this.rendererKey = a67, this.distanceToCamera = 0, this.visible = true;
  }
};
function de5(e65) {
  return null != e65.regular;
}
function he7(e65) {
  return null != e65.silhouette;
}
function me5(e65, t68, r62) {
  const n77 = t68 * r62, o61 = x(e65, n77, true);
  return -1 === o61 ? n77 < e65[0] ? e65.length : 0 : e65.length - o61;
}
var ge4 = class {
  constructor(e65, t68, r62, s69) {
    this.position = e65, this.indices = t68, this.modelTransform = r62, this.origin = s69;
  }
};
var pe5 = e14();
var fe4 = () => Promise.reject();

// node_modules/@arcgis/core/views/webgl/TimerPool.js
function e63(t68, e65) {
  const u51 = t68.capabilities.disjointTimerQuery;
  return null == u51 ? null : new r61(u51, e65);
}
var r61 = class {
  constructor(t68, e65) {
    this._timer = t68, this._queryPool = new Array(), this._queryResults = /* @__PURE__ */ new Map(), this._currentQuery = null, e65.forEach((t69) => {
      const e66 = this._timer.createQuery(), r62 = this._timer.createQuery();
      this._queryPool.push(e66, r62), this._queryResults.set(t69, null);
    });
  }
  start() {
    E15 || (this._currentQuery = this._queryPool.pop(), null != this._currentQuery && (this._timer.disjoint(), this._timer.beginTimeElapsed(this._currentQuery)));
  }
  stop(t68) {
    if (this._timer.disjoint() || null == this._currentQuery || !this._queryResults.has(t68))
      return this.abort(), null;
    this._timer.endTimeElapsed();
    const e65 = this._queryResults.get(t68);
    if (null == e65)
      return this._queryResults.set(t68, this._currentQuery), this._currentQuery = null, null;
    if (!this._timer.resultAvailable(e65))
      return this._queryPool.unshift(this._currentQuery), this._currentQuery = null, null;
    const r62 = this._timer.getResult(e65) / 1e6;
    return this._queryPool.unshift(e65), this._queryResults.set(t68, this._currentQuery), this._currentQuery = null, r62;
  }
  abort() {
    null != this._currentQuery && (this._timer.deleteQuery(this._currentQuery), this._queryPool.unshift(this._timer.createQuery()), this._currentQuery = null);
  }
  dispose() {
    null != this._currentQuery && this._timer.deleteQuery(this._currentQuery), this._queryPool.forEach((t68) => {
      this._timer.deleteQuery(t68);
    }), this._queryResults.forEach((t68) => {
      null != t68 && this._timer.deleteQuery(t68);
    });
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/statistics/RendererPerformanceInfo.js
var a66;
!function(e65) {
  e65.OVERLAY = "overlay", e65.PREPARE = "prepare", e65.SHADOW_MAP = "shadow map", e65.LINEAR_DEPTH = "linear depth", e65.ACCUMULATED_SHADOWS = "accumulated shadows", e65.NORMALS = "normals", e65.OBJECT_AND_LAYER_ID_COLOR = "object/layer id color", e65.SSAO = "SSAO", e65.OPAQUE = "opaque", e65.OPAQUE_EDGES = "opaque edges", e65.VOXEL = "voxel", e65.TRANSPARENT = "transparent", e65.TRANSPARENT_EDGES = "transparent edges", e65.HUD_VISIBILITY = "HUD visibility", e65.TRANSPARENT_TERRAIN = "transparent terrain", e65.ENVIRONMENT = "environment", e65.LASER_LINE = "laser line", e65.OCCLUDED = "occluded", e65.ANTIALIASING = "antialiasing", e65.HIGHLIGHTS = "highlights", e65.HUD = "HUD", e65.HUD_OCCLUDED = "HUD occluded", e65.FINISH = "finish";
}(a66 || (a66 = {}));
var s67 = "Total";
var m42 = class {
  constructor(e65) {
    this._rctx = e65, this._startTimeStampCPU = n4(0), this._lastTimeStampCPU = n4(0), this._totalCPUTime = new s5(s67), this._cpuTimeSamplers = new Map(Object.values(a66).map((e66) => [e66, new s5(e66)])), this._enableGPUTimer = 0, this._totalGPUTime = new s5("GPU"), this._gpuTimeSamplers = new Map(Object.values(a66).map((e66) => [e66, new s5(e66)])), this._totalTime = n4(0), this._totalFrameCount = 0;
  }
  get totalCPUTimeSampler() {
    return this._totalCPUTime;
  }
  get cpuTimeSamplers() {
    return Array.from(this._cpuTimeSamplers.values());
  }
  get totalGPUTimeSampler() {
    return this._totalGPUTime;
  }
  get gpuTimeSamplers() {
    return Array.from(this._gpuTimeSamplers.values());
  }
  get gpuSamplingEnabled() {
    return null != this._gpuTimerPool;
  }
  get totalTime() {
    return this._totalTime;
  }
  get totalFrameCount() {
    return this._totalFrameCount;
  }
  get elapsedTime() {
    return n4(performance.now() - this._startTimeStampCPU);
  }
  enableGPUPerformanceInfo() {
    if (null == this._gpuTimerPool) {
      const e65 = [...Object.values(a66), s67];
      this._gpuTimerPool = e63(this._rctx, e65);
    }
    return null == this._gpuTimerPool ? { hasGPUTimerSupport: false, remove: () => {
    } } : (++this._enableGPUTimer, { hasGPUTimerSupport: true, remove: h2(() => {
      --this._enableGPUTimer, 0 === this._enableGPUTimer && (this._gpuTimerPool = t2(this._gpuTimerPool));
    }) });
  }
  startFrame() {
    this._startTimeStampCPU = this._lastTimeStampCPU = n4(performance.now()), null != this._gpuTimerPool && this._gpuTimerPool.start();
  }
  advance(e65) {
    const t68 = n4(performance.now());
    if (this._cpuTimeSamplers.get(e65).record(t68 - this._lastTimeStampCPU), this._lastTimeStampCPU = t68, null != this._gpuTimerPool) {
      const t69 = this._gpuTimerPool.stop(e65);
      this._gpuTimeSamplers.get(e65).record(t69), this._gpuTimerPool.start();
    }
  }
  finishFrame() {
    if (null != this._gpuTimerPool) {
      const e66 = this._gpuTimerPool.stop(a66.FINISH);
      this._gpuTimeSamplers.get(a66.FINISH).record(e66);
    }
    const e65 = n4(performance.now() - this._startTimeStampCPU);
    this._totalTime = n4(this._totalTime + e65), this._totalCPUTime.record(e65), null != this._gpuTimerPool && this._totalGPUTime.record(this.gpuTimeSamplers.reduce((e66, t68) => e66 + (t68.last || 0), 0)), ++this._totalFrameCount;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Renderer.js
var oe9 = class extends m {
  get _bindParameters() {
    return this._renderContext.bindParameters;
  }
  updateRenderFeature(e65 = null, r62 = !has("disable-feature:high-quality-idle")) {
    this._renderStateFeatures = t34(r62, e65), this.notifyChange("_renderStateFeatures"), this._requestRender();
  }
  isFeatureEnabled(e65, r62 = this._state) {
    var _a;
    return ((_a = this._renderStateFeatures) == null ? void 0 : _a.get(r62, e65)) ?? false;
  }
  setFeatureEnabled(e65, r62, t68) {
    var _a;
    (_a = this._renderStateFeatures) == null ? void 0 : _a.set(r62, e65, t68), this.notifyChange("_renderStateFeatures"), this._requestRender();
  }
  get _antialiasing() {
    return this._antialiasingEnabled || this.isFeatureEnabled(o34.Antialiasing);
  }
  get _highQualityTransparency() {
    return this._highQualityTransparencyEnabled || this.isFeatureEnabled(o34.HighQualityTransparency);
  }
  get hasReflections() {
    return this.hasWater && (this._ssrEnabled || this.isFeatureEnabled(o34.WaterReflection));
  }
  get hasWater() {
    return this._hasWater || this._hasOverlayWater;
  }
  constructor(e65, r62, t68, i60, a67, n77, h46, p54) {
    super({}), this._stage = e65, this._materialRepository = r62, this._techniqueRepository = i60, this._rctx = a67, this._compositingHelper = n77, this._magnifierHelper = h46, this._requestRender = p54, this._materialRenderers = new l2(), this._needsTransparentPass = false, this._hasHUDElements = false, this._hasHighlights = false, this._hasWater = false, this._hasOverlayWater = false, this._renderOverlay = (e66) => {
    }, this._isRendering = false, this._fallbackDepthStencilTexture = null, this._sliceHelper = new n71(), this._state = I2.IDLE, this._renderStateFeatures = null, this._antialiasingEnabled = true, this._highQualityTransparencyEnabled = true, this._terrainRenderingEnabled = true, this._terrainTransparency = ne6.Opaque, this._ssrEnabled = false, this._ssaoEnabled = false, this._hasAnimations = false, this._animationTimestep = new e59(), this._handles = new t3(), this._renderHiddenTransparentEdges = () => {
    }, this._oitUsed = false, this.updateRenderFeature(e65.view.qualityProfile), this._smaaPass = new A32(this._rctx, i60), p54(), this._offscreen = new n70(this._rctx, this._compositingHelper), this.performanceInfo = new m42(this._rctx), this._shadowMap = new J4(this._rctx, e65.viewingMode), this._ssaoHelper = new w10(e65.view, i60, this._rctx, p54), this._highlight = new F28(i60, this._rctx), this._shadowHighlight = new w28(this._rctx, e65.viewingMode), this._shadowAccumulator = new M20(this._rctx, i60, e65, (e66) => {
      const r63 = this.shadowsEnabled;
      this._shadowMap.enabled = true, this._prepare(e66.camera, e66.contentCamera), this._renderPlugins.prepareRender(), this._shadowMap.enabled = r63;
    }, (e66, r63, t69) => {
      e66.shadowMap.start(e66.camera, r63, t69, true, this._stage.view.qualitySettings.maximumPixelRatio), this._renderShadowCascades(h10.Shadow, e66.shadowMap), e66.camera.setGLViewport(this._rctx), this._prepare(e66.camera, e66.contentCamera);
    }, p54), this._renderContext = new n31(this._rctx, this._offscreen, this._shadowMap, this._ssaoHelper, this._sliceHelper), this._renderPlugins = new d50({ renderContext: this._renderContext, techniqueRepository: i60, textureRepository: t68, materialRepository: this._materialRepository, requestRender: p54, controller: e65 }), this.renderPassManager = new w27(this._rctx, this._techniqueRepository), this._renderPlugins.add(this.renderPassManager.slots(), this.renderPassManager), this._handles.add([l6(() => this._stage.view.state.camera, () => p54(), w3), l6(() => t19.EDGES_SHOW_HIDDEN_TRANSPARENT_EDGES, (e66) => {
      this._renderHiddenTransparentEdges = e66 ? () => this._renderEdges(A6.TRANSPARENT) : () => {
      }, p54();
    }, h3), l6(() => this._ssaoEnabled || this.isFeatureEnabled(o34.SSAO), (e66) => this._ssaoHelper.enabled = e66, w3)]);
  }
  normalizeCtorArgs() {
    return {};
  }
  destroy() {
    this._handles.destroy(), this._smaaPass.dispose(), this._gpuTimerHandle = o(this._gpuTimerHandle), this._materialRenderers.forAll((e65) => e65.dispose()), this._materialRenderers.clear(), this._offscreen.dispose(), this._fallbackDepthStencilTexture = t2(this._fallbackDepthStencilTexture), this._shadowMap.dispose(), this._ssaoHelper.destroy(), this._highlight.dispose(), this._shadowHighlight.dispose(), this._shadowAccumulator.dispose(), this._edgeView = l(this._edgeView), this.renderPassManager.destroy(), o15.prune();
  }
  disposeOffscreenBuffers() {
    this._offscreen.dispose(), this._shadowMap.disposeOffscreenBuffers(), this._smaaPass.disable(), this._ssaoHelper.disposeOffscreenBuffers();
  }
  get updating() {
    return this._antialiasing && this._smaaPass.updating || null != this._edgeView && this._edgeView.updating || this._shadowAccumulator.running || this._renderPlugins.updating || !this.isCameraFinal;
  }
  ensureEdgeView() {
    if (null == this._edgeView) {
      const e65 = this._stage.view.resourceController;
      this._edgeView = new te5({ rctx: this._rctx, renderSR: this._stage.view.renderSpatialReference, viewingMode: this._stage.viewingMode, techniqueRepository: this._techniqueRepository, setNeedsRender: () => this._requestRender(), schedule: ue5(e65) }), this._handles.add(l6(() => n(this._edgeView, (e66) => e66.updating), () => this._requestRender(), U3)), this._requestRender();
    }
    return this._edgeView;
  }
  get edgeView() {
    return this._edgeView;
  }
  get isCameraFinal() {
    return C3(this._bindParameters.ssr.reprojectionMatrix, o11);
  }
  set _reprojectionMatrix(e65) {
    h(this._bindParameters.ssr.reprojectionMatrix, e65) && this.notifyChange("isCameraFinal");
  }
  get shadowsEnabled() {
    var _a;
    return !!((_a = this._shadowMap) == null ? void 0 : _a.enabled);
  }
  setParameters(e65) {
    var _a, _b;
    const { _shadowMap: r62, _bindParameters: t68 } = this;
    if (void 0 !== ((_a = e65.qualitySettings) == null ? void 0 : _a.reflections) && this._ssrEnabled !== e65.qualitySettings.reflections && (this._ssrEnabled = e65.qualitySettings.reflections, this._requestRender()), void 0 !== ((_b = e65.qualitySettings) == null ? void 0 : _b.ambientOcclusion) && this._ssaoEnabled !== e65.qualitySettings.ambientOcclusion && (this._ssaoEnabled = e65.qualitySettings.ambientOcclusion, this._requestRender()), void 0 !== e65.shadowMap && this._shadowMap.enabled !== e65.shadowMap && (this._shadowMap.enabled = e65.shadowMap, this._requestRender()), void 0 !== e65.shadowMapMaxCascades && r62.maxCascades !== e65.shadowMapMaxCascades && (r62.maxCascades = e65.shadowMapMaxCascades, this._requestRender()), null != e65.environment) {
      null != e65.environment.weather && (this._bindParameters.weather = e65.environment.weather, this._bindParameters.weatherVisible = !!e65.weatherVisible);
      const r63 = "virtual" !== e65.environment.lighting.type;
      t68.enableFillLights !== r63 && (t68.enableFillLights = r63, this._requestRender());
    }
    e65.background && this._offscreen.background !== e65.background && (this._offscreen.background = e65.background, this._requestRender()), void 0 !== e65.antialiasingEnabled && this._antialiasingEnabled !== e65.antialiasingEnabled && (this._antialiasingEnabled = e65.antialiasingEnabled, this._requestRender()), void 0 !== e65.highQualityTransparency && this._highQualityTransparencyEnabled !== e65.highQualityTransparency && (this._highQualityTransparencyEnabled = e65.highQualityTransparency, this._requestRender()), void 0 !== e65.defaultHighlightOptions && (this._highlight.setDefaultOptions(e65.defaultHighlightOptions), this._shadowHighlight.setDefaultOptions(e65.defaultHighlightOptions), this._requestRender()), void 0 !== e65.overlays && this._bindParameters.overlays !== e65.overlays && (this._bindParameters.overlays = e65.overlays, this._requestRender()), void 0 !== e65.hasOverlayWater && this._hasOverlayWater !== e65.hasOverlayWater && (this._hasOverlayWater = e65.hasOverlayWater, this._requestRender()), void 0 !== e65.renderOverlay && this._renderOverlay !== e65.renderOverlay && (this._renderOverlay = e65.renderOverlay, this._requestRender()), void 0 !== e65.slicePlane && this._sliceHelper.plane !== e65.slicePlane && (this._sliceHelper.plane = e65.slicePlane, this._requestRender()), void 0 !== e65.terrainRenderingEnabled && this._terrainRenderingEnabled !== e65.terrainRenderingEnabled && (this._terrainRenderingEnabled = e65.terrainRenderingEnabled, this._requestRender()), void 0 !== e65.terrainTransparency && this._terrainTransparency !== e65.terrainTransparency && (this._terrainTransparency = e65.terrainTransparency, this._requestRender()), void 0 !== e65.shadowCastOptions && this._shadowAccumulator.setOptions(e65.shadowCastOptions);
  }
  get hasSlicePlane() {
    return !!this._sliceHelper.plane;
  }
  get renderPlugins() {
    return this._renderPlugins;
  }
  get _hasOITSupport() {
    return this._rctx.driverTest.floatBufferBlend.result;
  }
  get _oitEnabled() {
    return this._highQualityTransparency && this._hasOITSupport;
  }
  modify(e65, r62) {
    this._isRendering && console.warn("Renderer.modify called while rendering");
    const { adds: t68, removes: s69, updates: i60 } = e65;
    if (0 === t68.length && 0 === s69.length && 0 === i60.length)
      return;
    const a67 = r31(e65);
    let n77 = false;
    a67.forEach((t69, s70) => {
      if (r62.done)
        return;
      let i61 = this._materialRenderers.find((e66) => e66.material === s70);
      null == i61 && t69.adds.length > 0 && (i61 = new E14(this._rctx, this._materialRepository, s70), this._materialRenderers.push(i61)), i61 && (i61.modify(t69), i61.isEmpty && (n77 = true)), t69.removes.forEach((r63) => e65.removes.removeUnordered(r63)), t69.adds.forEach((r63) => e65.adds.removeUnordered(r63)), t69.updates.forEach((r63) => e65.updates.removeUnordered(r63)), r62.madeProgress();
    }), n77 && this._materialRenderers.filterInPlace((e66) => !e66.isEmpty || (e66.dispose(), false)), this._hasHighlights = this._materialRenderers.some((e66) => e66.hasHighlights), this._bindParameters.hasOccludees = this._materialRenderers.some((e66) => e66.hasOccludees), this._hasWater = this._materialRenderers.some((e66) => e66.hasWater), this._hasHUDElements = this._materialRenderers.some((e66) => e66.requiresSlot(E8.LINE_CALLOUTS_HUD_DEPTH, h10.Color) || e66.requiresSlot(E8.HUD_MATERIAL, h10.Color) || e66.requiresSlot(E8.LABEL_MATERIAL, h10.Color)), this._requestRender();
  }
  updateAnimation(e65) {
    const r62 = this._hasAnimations;
    return this._hasAnimations = false, this._materialRenderers.forAll((r63) => this._hasAnimations = r63.updateAnimation(e65) || this._hasAnimations), this._hasAnimations = this._renderPlugins.updateAnimation(e65) || this._hasAnimations, this._hasAnimations !== r62 && (this._gpuTimerHandle = r62 ? o(this._gpuTimerHandle) : this.performanceInfo.enableGPUPerformanceInfo()), this._hasAnimations;
  }
  get animationTimestep() {
    return this._animationTimestep.value;
  }
  get animationTimeDilation() {
    return this._animationTimestep.timeDilation;
  }
  resetAnimation() {
    this._animationTimestep.clear();
  }
  render(e65, r62, t68, s69, i60) {
    this._isRendering = true, this._oitUsed = false, this.performanceInfo.startFrame();
    const { camera: a67, contentCamera: n77, mode: h46, alignPixelEnabled: o61 } = t68;
    this._state = h46, this._renderOverlay(i60), this.performanceInfo.advance(a66.OVERLAY), this._renderContext.time = i60, this._bindParameters.transparencyPassType = o20.NONE, this._bindParameters.alignPixelEnabled = o61;
    const d52 = this._offscreen;
    d52.setupRenderTarget(this.hasReflections);
    const l63 = W5(this._sliceHelper.plane);
    s69 === s19.OFF && (this._sliceHelper.plane = null), this._rctx.bindFramebuffer(e65), a67.setGLViewport(this._rctx), this._prepare(a67, n77), this._renderPlugins.prepareRender(), this.performanceInfo.advance(a66.PREPARE);
    const _33 = this._computeDepthRange(a67);
    this._renderShadowMap(e65, a67, this._bindParameters.lighting.mainLight.direction, _33), this.performanceInfo.advance(a66.SHADOW_MAP), d52.initializeFrame(a67), this._ensureBindParameters(a67, n77);
    const p54 = this._terrainRenderingEnabled && (this._terrainTransparency === ne6.Semitransparent || this._terrainTransparency === ne6.TransparentWithDraped), c58 = this._highQualityTransparency && p54, m44 = this._needsTransparentPass || this._renderPlugins.needsTransparentPass;
    this._prepareShaders(c58, m44), this._renderLinearDepth(), this.performanceInfo.advance(a66.LINEAR_DEPTH), this._accumulateShadows(_33, a67, n77), this.performanceInfo.advance(a66.ACCUMULATED_SHADOWS), this._renderNormal(), this.performanceInfo.advance(a66.NORMALS), this._ensureBindParametersSSR(i60), this._renderSSAO(i60), this.performanceInfo.advance(a66.SSAO), this._renderContext.output = h10.Color, d52.bindFramebuffer(), this._renderOpaqueGeometry(), this.performanceInfo.advance(a66.OPAQUE), this._renderTerrainLinearDepth(c58), this._setMultipassTerrain(c58), this._renderEdges(A6.OPAQUE), this.performanceInfo.advance(a66.OPAQUE_EDGES), this._offscreen.bindTarget(this._offscreen.currentColorTarget, this._offscreen.mainDepth), this._renderSlot(E8.VOXEL), this.performanceInfo.advance(a66.VOXEL), this._renderHiddenTransparentEdges(), m44 && (this._oitEnabled ? this._renderOITPass(de6.Geometry) : this._renderTransparentGeometry()), this.performanceInfo.advance(a66.TRANSPARENT), this._renderGeometryLinearDepth(c58);
    const u51 = this._renderHUDVisibility(c58);
    c58 || this._renderInternalSlot(E8.LINE_CALLOUTS), this.performanceInfo.advance(a66.HUD_VISIBILITY), this._renderObjectAndLayerIdColor(r62), this.performanceInfo.advance(a66.OBJECT_AND_LAYER_ID_COLOR), this._renderEdges(A6.TRANSPARENT, c58), this.performanceInfo.advance(a66.TRANSPARENT_EDGES), this._renderTransparentTerrain(), p54 && u51 && (c58 ? this._renderLineCallouts(c17.Occluded) : d52.compositeTransparentTerrainOntoHUDVisibility(this._bindParameters), this._renderHUD(c17.Occluded, d52.framebuffer), this.performanceInfo.advance(a66.HUD_OCCLUDED)), this.performanceInfo.advance(a66.TRANSPARENT_TERRAIN), this._setTerrainCulling(false), p54 && (d52.compositeTransparentTerrainOntoMain(this._bindParameters), c58 && (this._renderEdges(A6.OPAQUE), this.performanceInfo.advance(a66.OPAQUE_EDGES), m44 && (this._oitEnabled ? this._renderOITPass(de6.Geometry) : this._renderTransparentGeometry()), this.performanceInfo.advance(a66.TRANSPARENT), this._renderEdges(A6.TRANSPARENT), this.performanceInfo.advance(a66.TRANSPARENT_EDGES))), c58 && this._renderLineCallouts(c17.NotOccluded), this._setMultipassEnabled(false), this._shadowAccumulator.render(this._bindParameters), d52.renderToTargets(() => {
      this._renderInternalSlot(E8.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL), this._renderSlot(E8.POSTPROCESSING_ENVIRONMENT_TRANSPARENT), this._renderSlot(E8.LASERLINES);
    }, d52.currentColorTarget, d52.mainDepth), this.performanceInfo.advance(a66.ENVIRONMENT), this._renderPlugins.needsLaserlineWithContrastControl && d52.renderTmpAndCompositeToMain(() => this._renderSlot(E8.LASERLINES_CONTRAST_CONTROL), this._bindParameters, a57.PremultipliedAlpha), this.performanceInfo.advance(a66.LASER_LINE), this._renderOccluded(), this.performanceInfo.advance(a66.OCCLUDED);
    const f49 = s69 === s19.ON && this._magnifierHelper.enabled, T29 = f49 && null == e65 ? this._offscreen.getFramebuffer(this._offscreen.tmpColor, this._offscreen.tmpDepth) : e65;
    this._rctx.bindFramebuffer(T29);
    const g36 = this._offscreen.colorTexture;
    this._renderAntiAliasing(g36) || null == g36 || this._compositingHelper.composite(this._bindParameters, g36, a57.None), this.performanceInfo.advance(a66.ANTIALIASING), this._renderHUD(c17.NotOccluded, T29), this.performanceInfo.advance(a66.HUD), this._renderHighlights(T29, this._bindParameters), this.performanceInfo.advance(a66.HIGHLIGHTS), f49 && this._magnifierHelper.render(this._rctx, this._bindParameters), T29 !== e65 && (this._rctx.bindFramebuffer(e65), this._compositingHelper.composite(this._bindParameters, this._offscreen.tmpColorTexture, a57.None)), this._disposeOITBuffers(), this._renderContext.lastFrameCamera.copyFrom(this._bindParameters.camera), this._sliceHelper.plane = l63, this._isRendering = false, this.onPostRender && this.onPostRender(), this.performanceInfo.finishFrame();
  }
  _prepareShaders(e65, r62) {
    this._renderContext.output = h10.Color, this._prepareOpaqueGeometrySlots(), this._setMultipassTerrain(e65), this._prepareSlots(E8.TRANSPARENT_TERRAIN), this._setMultipassTerrain(false), e65 || this._prepareInternalSlots(this._materialRenderers, E8.LINE_CALLOUTS), r62 && this._prepareTransparencySlots(), this._prepareInternalSlots(this._materialRenderers, E8.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL), this._prepareSlots(E8.POSTPROCESSING_ENVIRONMENT_TRANSPARENT, E8.LASERLINES), this._rctx.gl.flush();
  }
  _renderObjectAndLayerIdColor(e65) {
    if (null != e65 && has("enable-feature:objectAndLayerId-rendering")) {
      const r62 = this._renderContext.output;
      this._rctx.bindFramebuffer(e65), this._offscreen.renderToFBO(() => this._renderGeometryAndTransparentTerrainPass(h10.ObjectAndLayerIdColor), [0, 0, 0, 0], true, true), this._rctx.bindFramebuffer(e65), this._offscreen.renderToFBO(() => {
        this._bindParameters.renderTransparentlyOccludedHUD = c17.NotOccluded, this._renderInternalSlot(E8.HUD_MATERIAL);
      }, void 0, true, true), this._renderContext.output = r62;
    }
  }
  finish(e65) {
    this._hasAnimations || this._animationTimestep.clear();
    const r62 = this.performanceInfo.gpuSamplingEnabled, t68 = e65 === O4.BACKGROUND;
    if (t68 || r62) {
      const e66 = t68 ? this.performanceInfo.elapsedTime : 0, s69 = r62 ? this.performanceInfo.totalGPUTimeSampler.last : this._rctx.gl.getError(), i60 = Math.max(e66, s69);
      this._animationTimestep.frame(i60, t68);
    }
  }
  readDepthPixels(e65, r62, t68) {
    const s69 = this._offscreen.bindTarget(this._offscreen.linearDepth, this._offscreen.tmpDepth);
    if (!this._needsLinearDepth) {
      this._ensureBindParameters(e65, e65), this._bindParameters.camera.setGLViewport(this._rctx), this._rctx.setClearColor(0, 0, 0, 0);
      const r63 = _3.COLOR_BUFFER_BIT | _3.DEPTH_BUFFER_BIT | _3.STENCIL_BUFFER_BIT;
      this._rctx.clearSafe(r63), this._renderGeometryAndTransparentTerrainPass(h10.Depth);
    }
    s69.readPixels(r62[0], r62[1], r62[2], r62[3], G5.RGBA, U4.UNSIGNED_BYTE, t68);
  }
  readHUDVisibility(e65, r62, t68, s69, i60) {
    this._offscreen.bindTarget(this._offscreen.hudVisibility).readPixels(e65, r62, t68, s69, G5.RGBA, U4.UNSIGNED_BYTE, i60);
  }
  readAccumulatedShadow(e65) {
    return this._shadowAccumulator.readAccumulatedShadow(e65[0], e65[1]);
  }
  _setMultipassTerrain(e65) {
    this._setMultipassEnabled(e65), this._setTerrainCulling(e65);
  }
  _setMultipassEnabled(e65) {
    this._bindParameters.multipassTerrain.enabled = this._bindParameters.multipassGeometry.enabled = e65;
  }
  _setTerrainCulling(e65) {
    this._bindParameters.multipassTerrain.cullAboveGround = e65;
  }
  _prepareSlots(...e65) {
    this._renderPlugins.prepareSlots(e65);
  }
  _renderSlot(e65) {
    this._bindParameters.slot = e65, this._renderPlugins.render();
  }
  _renderEdges(e65, r62 = false) {
    const t68 = this._edgeView;
    null != t68 && t68.shouldRender() && this._offscreen.renderTmpAndCompositeToMain(() => t68.render(this._bindParameters, e65), this._bindParameters, a57.Alpha, r62);
  }
  _renderShadowMap(e65, r62, t68, s69) {
    const i60 = this._shadowMap;
    i60.enabled && (i60.start(r62, t68, s69, this.isFeatureEnabled(o34.HighResolutionShadows), this._stage.view.qualitySettings.maximumPixelRatio), this._shadowHighlight.updateParameters(r62, t68), this._needsShadowHighlight ? (this._renderShadowCascades(h10.ShadowHighlight, this._shadowMap, (e66) => i60.takeCascadeSnapshotTo(e66, X3.Highlight)), i60.clear(), this._renderShadowCascades(h10.ShadowExcludeHighlight, this._shadowMap, (e66) => {
      i60.takeCascadeSnapshotTo(e66, X3.Default), this._renderGeometryAndTransparentTerrainPass(h10.ShadowHighlight);
    })) : this._renderShadowCascades(h10.Shadow), i60.finish(e65), r62.setGLViewport(this._rctx));
  }
  _renderShadowCascades(e65, r62 = this._shadowMap, t68 = (e66) => {
  }) {
    for (const s69 of r62.cascades)
      s69.camera.setGLViewport(this._rctx), this._prepare(s69.camera, s69.camera), this._renderGeometryAndTransparentTerrainPass(e65), t68(s69);
  }
  get _needsLinearDepth() {
    return this._ssaoHelper.active || this._renderPlugins.needsLinearDepth || this.hasReflections || this._needsShadowHighlight || this._needsShadowCast;
  }
  _renderLinearDepth() {
    this._needsLinearDepth ? this._offscreen.renderToTargets(() => this._renderGeometryAndTransparentTerrainPass(h10.Depth), this._offscreen.linearDepth, this._offscreen.tmpDepth, [0, 0, 0, 0], true, true) : this._offscreen.disposeTarget(this._offscreen.linearDepth), this._bindParameters.linearDepthTexture = this._offscreen.linearDepthTexture;
  }
  _renderTerrainLinearDepth(e65) {
    if (e65) {
      const e66 = this._renderContext.output;
      this._renderContext.output = h10.Depth, this._offscreen.renderToTargets(() => this._renderTransparentTerrain(), this._offscreen.terrainLinearDepth, this._offscreen.tmpDepth, [-1e10, -1e10, -1e10, 1], true, true), this._renderContext.output = e66;
    } else
      this._offscreen.disposeTarget(this._offscreen.terrainLinearDepth);
    this._bindParameters.multipassTerrain.linearDepthTexture = this._offscreen.terrainLinearDepthTexture;
  }
  _renderGeometryLinearDepth(e65) {
    if (e65) {
      const e66 = this._renderContext.output;
      this._offscreen.renderToTargets(() => this._renderGeometryPass(h10.Depth), this._offscreen.geometryLinearDepth, this._offscreen.tmpDepth, [1, 1, 1, 1], true, true), this._renderContext.output = e66;
    } else
      this._offscreen.disposeTarget(this._offscreen.geometryLinearDepth);
    this._bindParameters.multipassGeometry.linearDepthTexture = this._offscreen.geometryLinearDepthTexture;
  }
  get _needsNormal() {
    return this._ssaoHelper.active;
  }
  _renderNormal() {
    this._needsNormal ? this._offscreen.renderToTargets(() => {
      this._renderGeometryAndTransparentTerrainPass(h10.Normal);
    }, this._offscreen.normal, this._offscreen.tmpDepth, [0, 0, 0, 0], true, true) : this._offscreen.disposeTarget(this._offscreen.normal);
  }
  get _needsDepthRange() {
    return this._shadowMap.enabled || this._needsShadowCast;
  }
  _computeDepthRange(e65) {
    if (!this._needsDepthRange)
      return f44;
    const r62 = B19(e65, this._materialRenderers, this._stage.layers);
    return e54(r62, this.renderPlugins.queryDepthRange(e65)), r62.near = Math.max(e65.near, r62.near), r62.far = Math.min(e65.far, r62.far), r62;
  }
  _renderGeometryAndTransparentTerrainPass(e65) {
    this._renderContext.output = e65, this._prepareSlots(E8.TRANSPARENT_TERRAIN), this._renderGeometryPass(e65), this._renderTransparentTerrain();
  }
  _renderGeometryPass(e65) {
    this._renderContext.output = e65, this._prepareSlots(E8.TRANSPARENT_MATERIAL), this._renderOpaqueGeometry(), this._renderTransparentGeometry();
  }
  _renderSSAO(e65) {
    this._ssaoHelper.render(this._bindParameters, e65, this._offscreen.linearDepthTexture, this._offscreen.normalTexture);
  }
  _prepareOpaqueGeometrySlots() {
    this._prepareSlots(E8.INTEGRATED_MESH, E8.OPAQUE_TERRAIN, E8.OPAQUE_MATERIAL, E8.POSTPROCESSING_ENVIRONMENT_OPAQUE), this._prepareInternalSlots(this._materialRenderers, E8.OPAQUE_MATERIAL);
  }
  _renderOpaqueGeometry() {
    this._renderSlot(E8.INTEGRATED_MESH), this._renderSlot(E8.OPAQUE_TERRAIN), this._renderInternalSlot(E8.OPAQUE_MATERIAL), this._renderSlot(E8.OPAQUE_MATERIAL), this._renderSlot(E8.POSTPROCESSING_ENVIRONMENT_OPAQUE);
  }
  _renderTransparentGeometry() {
    this._renderInternalSlot(E8.TRANSPARENT_MATERIAL), this._renderSlot(E8.TRANSPARENT_MATERIAL);
  }
  _renderTransparentTerrain() {
    this._renderSlot(E8.TRANSPARENT_TERRAIN);
  }
  _renderHUDVisibility(e65) {
    let r62 = false;
    return this._renderContext.offscreenRenderingHelper && this._renderContext.offscreenRenderingHelper.renderHUDVisibility(() => {
      this._bindParameters.hudVisibilityTexture = this._renderContext.offscreenRenderingHelper.hudVisibilityTexture, r62 = this._renderInternalSlot(E8.OCCLUSION_PIXELS);
    }, e65), r62;
  }
  _renderLineCallouts(e65) {
    this._bindParameters.renderTransparentlyOccludedHUD = e65, e65 === c17.Occluded ? this._offscreen.renderToTargets(() => this._renderInternalSlot(E8.LINE_CALLOUTS), this._offscreen.currentColorTarget, this._offscreen.tmpDepth, void 0, true, true) : this._renderInternalSlot(E8.LINE_CALLOUTS);
  }
  _renderHUD(e65, r62) {
    this._hasHUDElements && (this._oitEnabled ? (this._renderOITPass(de6.HUD, e65), this._rctx.bindFramebuffer(r62), this._compositingHelper.composite(this._bindParameters, this._offscreen.hudColorTexture, a57.PremultipliedAlpha)) : e65 === c17.Occluded ? this._offscreen.renderToTargets(() => this._renderHUDElements(c17.Occluded), this._offscreen.currentColorTarget, this._offscreen.tmpDepth, void 0, true, true) : this._renderHUDElements(e65));
  }
  _renderHUDElements(e65) {
    this._bindParameters.renderTransparentlyOccludedHUD = e65, this._prepareInternalSlots(this._materialRenderers, E8.LINE_CALLOUTS_HUD_DEPTH, E8.HUD_MATERIAL, E8.LABEL_MATERIAL), this._renderInternalSlot(E8.LINE_CALLOUTS_HUD_DEPTH), this._renderInternalSlot(E8.HUD_MATERIAL), this._renderInternalSlot(E8.LABEL_MATERIAL);
  }
  get _needsHighlight() {
    return this._hasHighlights || this._renderPlugins.needsHighlight;
  }
  get _needsShadowHighlight() {
    return this._shadowMap.enabled && this._shadowHighlight.isVisible && this._needsHighlight;
  }
  _renderHighlights(e65, r62) {
    if (!this._needsHighlight)
      return void this._offscreen.disposeTarget(this._offscreen.highlight);
    const t68 = this._highlight, s69 = this._offscreen.renderToTargets(() => {
      this._renderGeometryAndTransparentTerrainPass(h10.Highlight), this._rctx.clearSafe(_3.DEPTH_BUFFER_BIT), this._renderHUDElements(c17.Both);
    }, this._offscreen.highlight, this._offscreen.tmpDepth, [0, 0, 0, 0], true, true);
    this._bindParameters.highlightColorTexture = s69.colorTexture, this._needsShadowHighlight && this._shadowHighlight.render(r62, e65), t68.render(this._bindParameters, s69, e65);
  }
  get _needsShadowCast() {
    return this._shadowAccumulator.isAccumulating;
  }
  _accumulateShadows(e65, r62, t68) {
    this._needsShadowCast && null != this._offscreen.linearDepthTexture && this._shadowAccumulator.renderAccumulation(this._offscreen.linearDepthTexture, e65, r62, t68);
  }
  _prepareTransparencySlots() {
    this._renderContext.output = h10.Alpha, this._bindParameters.transparencyPassType = o20.Alpha, this._prepareInternalSlots(this._materialRenderers, E8.TRANSPARENT_MATERIAL), this._prepareSlots(E8.TRANSPARENT_MATERIAL), this._renderContext.output = h10.Color, this._bindParameters.transparencyPassType = o20.Color, this._prepareInternalSlots(this._materialRenderers, E8.TRANSPARENT_MATERIAL), this._prepareSlots(E8.TRANSPARENT_MATERIAL), this._bindParameters.transparencyPassType = o20.FrontFace, this._prepareInternalSlots(this._materialRenderers, E8.TRANSPARENT_MATERIAL), this._prepareSlots(E8.TRANSPARENT_MATERIAL), this._bindParameters.transparencyPassType = o20.NONE;
  }
  _renderOITPass(e65, r62 = c17.Both) {
    const t68 = e65 === de6.HUD, s69 = t68 ? () => this._renderHUDElements(r62) : () => this._renderTransparentGeometry(), i60 = (e66) => {
      this._bindParameters.transparencyPassType = e66, this._offscreen.renderOITPass(s69, e66, t68);
    }, a67 = this._renderContext.output;
    this._renderContext.output = h10.Alpha, i60(o20.Alpha), this._renderContext.output = h10.Color, i60(o20.Color), i60(o20.FrontFace), this._offscreen.compositeTransparentOntoOpaque(this._bindParameters, t68), this._bindParameters.transparencyPassType = o20.NONE, this._renderContext.output = a67, this._oitUsed = true;
  }
  _disposeOITBuffers() {
    this._oitUsed || (this._offscreen.disposeTarget(this._offscreen.alphaFloatTarget), this._offscreen.disposeTarget(this._offscreen.colorFloatTarget), this._offscreen.disposeTarget(this._offscreen.frontFaceTarget));
  }
  _renderOccluded() {
    let e65 = 0;
    _e3.clear(), this._materialRenderers.forAll((r63) => {
      r63.material && r63.material.isVisible() && r63.material.renderOccluded === o19.OccludeAndTransparentStencil && (e65 |= r63.material.renderOccluded, _e3.push(r63));
    });
    const r62 = this._offscreen, t68 = (t69, s70, i61, a67, n77) => {
      0 != (e65 & s70) && (r62.renderToTargets(i61, r62.tmpColor, r62.mainDepth, [0, 0, 0, 0], a67, n77), r62.compositeOccludedOntoMain(this._bindParameters, t69));
    };
    0 !== _e3.length && (this._prepareInternalSlots(_e3, E8.OCCLUDER_MATERIAL, E8.TRANSPARENT_OCCLUDER_MATERIAL), this._renderInternalSlot(E8.OCCLUDER_MATERIAL, _e3), t68(0.5, o19.OccludeAndTransparentStencil, () => this._renderInternalSlot(E8.TRANSPARENT_OCCLUDER_MATERIAL, _e3), false, false)), _e3.clear(), this._materialRenderers.forAll((r63) => {
      r63.material && r63.material.isVisible() && (r63.material.renderOccluded === o19.OccludeAndTransparent || r63.material.renderOccluded === o19.Transparent || r63.material.renderOccluded === o19.Opaque) && (e65 |= r63.material.renderOccluded, _e3.push(r63));
    });
    const s69 = this._renderPlugins.renderOccludedFlags;
    if (e65 |= s69, !e65)
      return;
    const i60 = (e66) => {
      this._renderContext.renderOccludedMask = e66, this._prepareInternalSlots(_e3, E8.OPAQUE_MATERIAL, E8.TRANSPARENT_MATERIAL, E8.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL), s69 > o19.Occlude && this._renderSlot(E8.OCCLUDED_TERRAIN), this._renderInternalSlot(E8.OPAQUE_MATERIAL, _e3), this._renderInternalSlot(E8.TRANSPARENT_MATERIAL, _e3), this._renderInternalSlot(E8.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL, _e3), this._renderContext.resetRenderOccludedMask();
    };
    this._renderContext.output = h10.Color, t68(0.5, o19.OccludeAndTransparent, () => i60(o19.OccludeAndTransparent), true, a17.OutlineVisualElementMask), t68(0.5, o19.Transparent, () => i60(o19.Transparent), true, a17.OutlineVisualElementMask), t68(1, o19.Opaque, () => i60(o19.Opaque), true, a17.OutlineVisualElementMask), _e3.clear();
  }
  _renderAntiAliasing(e65) {
    if (this._antialiasing) {
      if (this._smaaPass.enable(() => this._requestRender()) && null != e65)
        return this._smaaPass.render(e65), true;
    } else
      this._smaaPass.disable();
    return false;
  }
  _prepare(e65, r62) {
    this._needsTransparentPass = this._materialRenderers.some((e66) => e66.requiresSlot(E8.TRANSPARENT_MATERIAL, h10.Color)), this._bindParameters.camera = e65, this._bindParameters.contentCamera = r62;
  }
  _ensureBindParameters(e65, r62) {
    this._bindParameters.camera = e65, this._bindParameters.contentCamera = r62;
    const t68 = this._renderContext.offscreenRenderingHelper;
    this._bindParameters.hudVisibilityTexture = t68.hudVisibilityTexture, this._bindParameters.mainColorTexture = t68.mainColorTexture, this._bindParameters.highlightDepthTexture = t68.depthTexture ?? this._getFallbackDepthTexture();
  }
  _ensureBindParametersSSR(e65) {
    if (this._bindParameters.ssr.enabled = this.hasReflections, this._bindParameters.ssr.enabled) {
      null == this._ssrEnableTime && (this._ssrEnableTime = e65), this._renderContext.lastFrameCamera.equals(this._bindParameters.camera) ? this._reprojectionMatrix = o11 : (h5(ce9, this._bindParameters.camera.viewMatrix), h5(pe6, this._bindParameters.camera.projectionMatrix), c3(me6, ce9, pe6), c3(me6, this._renderContext.lastFrameCamera.viewMatrix, me6), c3(me6, this._renderContext.lastFrameCamera.projectionMatrix, me6), this._reprojectionMatrix = me6), this._bindParameters.ssr.lastFrameColorTexture = this._offscreen.lastFrameColorTexture;
      const r62 = this._stage.view.qualitySettings.fadeDuration;
      this._bindParameters.ssr.fadeFactor = r62 > 0 ? Math.min(r62, e65 - this._ssrEnableTime) / r62 : 1, this._bindParameters.ssr.fadeFactor < 1 && this._requestRender();
    } else
      this._reprojectionMatrix = o11, this._bindParameters.ssr.lastFrameColorTexture = null, this._ssrEnableTime = null;
  }
  _prepareInternalSlots(e65, ...r62) {
    for (const t68 of r62)
      this._bindParameters.slot = t68, e65.forAll((e66) => {
        e66.material.shouldRender(this._renderContext) && e66.prepareTechnique(this._renderContext);
      });
  }
  _renderInternalSlot(e65, r62 = this._materialRenderers) {
    let t68 = false;
    return this._bindParameters.slot = e65, r62.forAll((e66) => {
      if (e66.material.shouldRender(this._renderContext)) {
        const r63 = e66.prepareTechnique(this._renderContext);
        null != r63 && (e66.render(this._renderContext, r63), t68 = true);
      }
    }), t68;
  }
  _getFallbackDepthTexture() {
    return this._fallbackDepthStencilTexture || (this._fallbackDepthStencilTexture = g8(this._rctx)), this._fallbackDepthStencilTexture;
  }
  get gpuMemoryUsage() {
    var _a, _b, _c, _d, _e4;
    return { offscreen: ((_a = this._offscreen) == null ? void 0 : _a.gpuMemoryUsage) ?? 0, highlights: (((_b = this._highlight) == null ? void 0 : _b.gpuMemoryUsage) ?? 0) + (((_c = this._shadowHighlight) == null ? void 0 : _c.gpuMemoryUsage) ?? 0), shadows: ((_d = this._shadowMap) == null ? void 0 : _d.gpuMemoryUsage) ?? 0, ssao: ((_e4 = this._ssaoHelper) == null ? void 0 : _e4.gpuMemoryUsage) ?? 0 };
  }
  get test() {
    const e65 = this;
    return { offscreen: this._offscreen, shadowMap: this._shadowMap, ssao: this._ssaoHelper, highlight: this._highlight, lighting: this._bindParameters.lighting, materialRenderers: this._materialRenderers, shadowAccumulator: this._shadowAccumulator, weatherIsFading: this._bindParameters.cloudsFade.isFading, resetRenderStateFeatures: () => {
      e65._renderStateFeatures = t34();
    }, getFramebufferTexture: (r62) => {
      switch (r62) {
        case le7.Color:
          return e65._offscreen.colorTexture;
        case le7.LinearDepth:
          return e65._offscreen.linearDepthTexture;
        case le7.Normals:
          return e65._offscreen.normalTexture;
        case le7.ShadowMap:
          return e65._shadowMap.depthTexture;
        case le7.HudVisibility:
          return e65._offscreen.hudVisibilityTexture;
        case le7.Highlight:
          return e65._offscreen.highlightTexture;
      }
    } };
  }
};
var de6;
var le7;
e([y2()], oe9.prototype, "_renderPlugins", void 0), e([y2()], oe9.prototype, "_shadowAccumulator", void 0), e([y2()], oe9.prototype, "_state", void 0), e([y2()], oe9.prototype, "_renderStateFeatures", void 0), e([y2()], oe9.prototype, "_antialiasingEnabled", void 0), e([y2({ readOnly: true })], oe9.prototype, "_antialiasing", null), e([y2()], oe9.prototype, "_ssaoEnabled", void 0), e([y2()], oe9.prototype, "_smaaPass", void 0), e([y2({ autoDestroy: true })], oe9.prototype, "_edgeView", void 0), e([y2()], oe9.prototype, "updating", null), e([y2()], oe9.prototype, "isCameraFinal", null), oe9 = e([a4("esri.views.3d.webgl-engine.lib.Renderer")], oe9), function(e65) {
  e65[e65.Geometry = 0] = "Geometry", e65[e65.HUD = 1] = "HUD";
}(de6 || (de6 = {})), function(e65) {
  e65[e65.Color = 0] = "Color", e65[e65.LinearDepth = 1] = "LinearDepth", e65[e65.Normals = 2] = "Normals", e65[e65.ShadowMap = 3] = "ShadowMap", e65[e65.HudVisibility = 4] = "HudVisibility", e65[e65.Highlight = 5] = "Highlight";
}(le7 || (le7 = {}));
var _e3 = new l2();
var pe6 = e15();
var ce9 = e15();
var me6 = e15();
function ue5(e65) {
  return (r62) => e65.immediate.schedule(r62);
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/RenderingContext.js
var s68 = class extends P8 {
  constructor(e65, r62, s69) {
    super(e65, r62), this.newCache = s69, this._refCount = 1, this._appleAmdDriverHelper = null;
  }
  destroy() {
    --this._refCount > 0 || this.dispose();
  }
  ref() {
    ++this._refCount;
  }
  dispose() {
    var _a;
    super.dispose(), (_a = this._appleAmdDriverHelper) == null ? void 0 : _a.dispose();
  }
  bindTechnique(e65, r62, s69, t68) {
    return this.useProgram(e65.program), e65.bindPipelineState(this, s69 == null ? void 0 : s69.slot, !!t68), e65.program.bindPass(r62, s69), e65.program;
  }
  get appleAmdDriverHelper() {
    return this.driverTest.drawArraysRequiresIndicesTypeReset.result ? (this._appleAmdDriverHelper = this._appleAmdDriverHelper ?? new n38(this), this._appleAmdDriverHelper) : null;
  }
  get test() {
    return this.programCache.test;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureRepository.js
var m43 = class extends m {
  constructor(e65, t68, s69) {
    super({}), this._stage = e65, this._techniqueRepository = t68, this._rctx = s69, this._textures = /* @__PURE__ */ new Map(), this._loadingCount = 0, this._frameUpdates = /* @__PURE__ */ new Map(), this.events = new n8(), this._frameTask = e65.view.resourceController.scheduler.registerTask(I3.TEXTURE_UNLOAD);
  }
  normalizeCtorArgs() {
    return {};
  }
  destroy() {
    this._frameTask.remove(), this._stage.forEachOfType(e19.Texture, (e65) => e65.unload());
  }
  get updating() {
    return this._loadingCount > 0 || this._frameTask.updating;
  }
  get textureTechnique() {
    return null == this._textureTechnique && (this._textureTechnique = this._techniqueRepository.acquire(m9, new r32())), this._textureTechnique;
  }
  acquire(e65) {
    const t68 = this._textures.get(e65);
    return t68 ? (t68.ref(), t68.loadingPromise ?? t68) : this._createNewRef(e65);
  }
  update() {
    let e65 = false;
    this._frameUpdates.forEach((t68) => {
      const r62 = t68.texture.frameUpdate(t68.previousToken);
      r62 >= 0 && r62 !== t68.previousToken && (t68.previousToken = r62, e65 = true);
    }), e65 && this.events.emit("changed", O4.BACKGROUND);
  }
  _createNewRef(e65) {
    const t68 = this._stage.getObject(e65);
    if (null == t68)
      return s18(void 0 !== t68), null;
    const r62 = t68.events.on("unloaded", () => {
      r62.remove(), this._onTextureUnloaded(e65);
    }), n77 = new _32(e65, () => {
      this._frameTask.schedule(() => {
        n77.isUnreferenced && t68.unload();
      });
    });
    return this._textures.set(e65, n77), n77.ref(), null != t68.glTexture ? (this._updateGLTexture(n77, t68.glTexture), t68.requiresFrameUpdates && this._frameUpdates.set(e65, { texture: t68, previousToken: -1 }), n77) : (this._loadingCount++, n77.loadingPromise = this._stage.schedule(() => {
      const r63 = t68.load(this._rctx), u51 = (r64) => (this._loadingCount--, n77.loadingPromise = null, this._updateGLTexture(n77, r64), t68.requiresFrameUpdates && this._frameUpdates.set(e65, { texture: t68, previousToken: -1 }), n77), a67 = (e66) => (this._loadingCount--, n77.loadingPromise = null, d(e66) || s3.getLogger(this).error(e66), null);
      return T(r63) ? r63.then(u51, a67) : u51(r63);
    }), n77.loadingPromise);
  }
  _updateGLTexture(e65, t68) {
    e65.glTexture = t68, this.events.emit("changed", O4.UPDATE);
  }
  _onTextureUnloaded(e65) {
    this._textures.delete(e65), this._frameUpdates.delete(e65);
  }
};
e([y2()], m43.prototype, "_loadingCount", void 0), e([y2()], m43.prototype, "_frameTask", void 0), e([y2()], m43.prototype, "updating", null), m43 = e([a4("esri.views.3d.webgl-engine.lib.TextureRepository")], m43);
var _32 = class {
  constructor(e65, t68) {
    this.id = e65, this._release = t68, this._refCount = 0;
  }
  get isUnreferenced() {
    return 0 === this._refCount;
  }
  ref() {
    ++this._refCount;
  }
  release() {
    --this._refCount, this._refCount > 0 || (0 !== this._refCount ? (s3.getLogger("esri.views.3d.webgl-engine.lib.TextureRepository.RefCountedTextureImpl").error("Cannot dereference texture that has no references!"), this._refCount = 0) : this._release());
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/markerTextureRepository.js
function o59(o61, t68) {
  return new t24((e65) => f16(e65, o61), (r62) => r62, t68);
}

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/internal/WaterTextureRepository.js
var c57 = class extends m {
  constructor() {
    super(...arguments), this._passParameters = new g34(), this._loading = 0;
  }
  get passParameters() {
    return this._passParameters;
  }
  destroy() {
    this._passParameters.waveNormal = t2(this._passParameters.waveNormal), this._passParameters.wavePertubation = t2(this._passParameters.wavePertubation);
  }
  get updating() {
    return this._loading > 0;
  }
  ensureResources(e65) {
    if (this._loading > 0)
      return N2.LOADING;
    if (null != this._passParameters.waveNormal && null != this._passParameters.wavePertubation)
      return N2.LOADED;
    const t68 = new e20();
    return t68.samplingMode = L.LINEAR_MIPMAP_LINEAR, t68.hasMipmap = true, t68.maxAnisotropy = 8, ++this._loading, t15(a9("esri/images/materials/water/normals.jpg")).then((r62) => this._passParameters.waveNormal = new T8(e65, { ...t68, width: r62.width, height: r62.height }, r62)).catch((e66) => s3.getLogger(this).error("Failed to load water material normal texture.", e66)).finally(() => --this._loading), ++this._loading, t15(a9("esri/images/materials/water/perturbation.jpg")).then((r62) => this._passParameters.wavePertubation = new T8(e65, { ...t68, width: r62.width, height: r62.height }, r62)).catch((e66) => s3.getLogger(this).error("Failed to load water material pertubation texture.", e66)).finally(() => --this._loading), N2.LOADING;
  }
};
e([y2()], c57.prototype, "_loading", void 0), e([y2({ type: Boolean, readOnly: true })], c57.prototype, "updating", null), c57 = e([a4("esri.views.3d.webgl-engine.materials.internal.WaterTextureRepository")], c57);
var g34 = class extends n21 {
};

// node_modules/@arcgis/core/views/3d/webgl-engine/parts/contextCache.js
var n75 = /* @__PURE__ */ new Map();
function t66() {
  return n75;
}

// node_modules/@arcgis/core/views/3d/webgl-engine/parts/ScreenshotManager.js
var p52 = class {
  constructor(e65, t68) {
    this.parameters = e65, this.frameHasDecorations = t68;
  }
};
var g35 = class {
  constructor(e65, t68, r62, s69) {
    this._rctx = e65, this._renderFunctions = t68, this._forceCameraHook = r62, this._disposeOffscreenBuffers = s69, this.supersample = true, this._screenshotQueue = new Array();
  }
  destroy() {
    this._rctx = null;
  }
  async takeScreenshot(e65) {
    await this._renderFunctions.prepareOverlay(), this._renderFunctions.requestRenderScene(O4.BACKGROUND);
    const r62 = C();
    return this._screenshotQueue.push({ settings: e65, resolver: r62 }), r62.promise;
  }
  update(e65, t68) {
    for (const r62 of this._screenshotQueue) {
      if (null == this._rctx) {
        r62.resolver.reject();
        continue;
      }
      const s69 = { ...r62.settings, pixelRatio: r62.settings.pixelRatio * e65.parameters.camera.pixelRatio }, i60 = this._renderScreenshot(e65, s69, t68);
      r62.resolver(i60);
    }
    this._screenshotQueue.length = 0;
  }
  _renderScreenshotOverlay(e65, t68, r62) {
    e65.width = t68.width, e65.height = t68.height;
    const s69 = e65.getContext("2d"), i60 = r62.pixelRatio;
    return s69.save(), s69.translate(0, t68.height), s69.scale(1, -1), r62.region && s69.translate(-r62.region.x, -r62.region.y), s69.scale(i60, i60), t68 = this._renderFunctions.renderOverlay(e65, t68), s69.restore(), t68;
  }
  _readbackScreenshot(e65, t68) {
    return e65.resample ? this._readbackScreenshotResampled({ ...e65, resample: e65.resample }, t68) : this._readbackScreenshotImmediate(e65, t68);
  }
  _readbackScreenshotResampled(e65, t68) {
    const { framebufferWidth: r62, framebufferHeight: s69, region: i60, resample: n77 } = e65, c58 = this._ensureScreenshotEncodeCanvas();
    let l63 = e17(r62, s69, c58);
    this._rctx.gl.readPixels(0, 0, r62, s69, G5.RGBA, C5.UNSIGNED_BYTE, new Uint8Array(l63.data.buffer)), t68(), l63 = this._renderScreenshotOverlay(c58, l63, { ...e65, region: void 0 });
    const d52 = e17(i60.width, i60.height, c58);
    return w17(l63, d52, true, n77.region.x, s69 - (n77.region.y + n77.region.height), n77.region.width, n77.region.height);
  }
  _readbackScreenshotImmediate(e65, t68) {
    const { framebufferHeight: r62, region: s69 } = e65, i60 = this._ensureScreenshotEncodeCanvas(), n77 = e17(s69.width, s69.height, i60);
    return this._rctx.gl.readPixels(s69.x, r62 - (s69.y + s69.height), s69.width, s69.height, G5.RGBA, C5.UNSIGNED_BYTE, new Uint8Array(n77.data.buffer)), t68(), this._renderScreenshotOverlay(i60, n77, e65);
  }
  _renderScreenshot(t68, s69, o61) {
    let a67 = null;
    const h46 = t68.parameters.camera, u51 = { width: s69.framebufferWidth, height: s69.framebufferHeight };
    R7(u51, Math.min(this._rctx.parameters.maxTextureSize, this._rctx.parameters.maxRenderbufferSize));
    let p54 = false;
    const g36 = s69.disableDecorations && t68.frameHasDecorations, _33 = u51.width !== h46.fullWidth || u51.height !== h46.fullHeight, b26 = s69.ignorePadding && h46.pixelRatio !== s69.pixelRatio, x34 = _33 || g36 || b26 || s69.objectAndLayerIdColor, w29 = s69.objectAndLayerIdColor ? new x11(this._rctx, new e20(u51.width, u51.height), new i15(B2.DEPTH_STENCIL, u51.width, u51.height)) : null;
    if (x34) {
      const e65 = h46.clone();
      if (s69.ignorePadding) {
        const t70 = t8(e65.padding);
        for (let r62 = 0; r62 < 4; r62++)
          t70[r62] = Math.round(t70[r62] / e65.pixelRatio * s69.pixelRatio);
        e65.padding = t70;
      }
      e65.fullWidth = u51.width, e65.fullHeight = u51.height, e65.pixelRatio = s69.pixelRatio;
      const t69 = h46.fovX - e65.fovX, l63 = h46.fovY - e65.fovY;
      t69 < 0 && t69 < l63 ? e65.fovX = h46.fovX : l63 < 0 && l63 < t69 && (e65.fovY = h46.fovY);
      const g37 = { camera: e65, contentCamera: e65, mode: I2.IDLE, alignPixelEnabled: true, contentPixelRatio: e65.pixelRatio };
      this._forceCameraHook(g37), p54 = true, a67 = new x11(this._rctx, new e20(u51.width, u51.height), new i15(B2.DEPTH_STENCIL, u51.width, u51.height));
      const _34 = s69.disableDecorations ? s19.OFF : s19.ON;
      this._renderFunctions.renderScene(a67, w29, g37, _34, o61), this._disposeOffscreenBuffers();
    }
    const v37 = () => {
      this._rctx.bindFramebuffer(null), t2(a67);
    }, S25 = this._readbackScreenshot(s69, v37);
    v37();
    let R21 = null;
    if (s69.objectAndLayerIdColor) {
      const t69 = () => {
        this._rctx.bindFramebuffer(null), t2(w29);
      };
      this._rctx.bindFramebuffer(w29), R21 = this._readbackScreenshot(s69, t69), this._rctx.bindFramebuffer(null), t69();
    }
    if (x34 && !this._rctx.contextAttributes.alpha)
      for (let e65 = 3; e65 < S25.data.length; e65 += 4)
        S25.data[e65] = 255;
    if (R21 && !this._rctx.contextAttributes.alpha)
      for (let e65 = 3; e65 < R21.data.length; e65 += 4)
        R21.data[e65] = 255;
    return p54 && this._forceCameraHook(t68.parameters), [S25, R21];
  }
  _ensureScreenshotEncodeCanvas() {
    return this._screenshotEncodeCanvas || (this._screenshotEncodeCanvas = document.createElement("canvas")), this._screenshotEncodeCanvas;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/parts/testUtils.js
var o60 = { enabled: false, disposeContextCache: () => {
  const o61 = t66();
  o61.forEach((e65) => e65.dispose()), o61.clear();
} };

// node_modules/@arcgis/core/views/3d/webgl-engine/parts/RenderView.js
var M21 = class extends m {
  constructor(e65) {
    super({}), this.events = new n8(), this.waterTextureRepository = new c57(), this._magnifierHelper = new M19(), this.objectAndLayerIdRenderHelper = has("enable-feature:objectAndLayerId-rendering") ? new o54() : null, this._needsUpdate = true, this._needsRender = true, this._idleSuspend = true, this._needsWaterReflectionUpdate = false, this._lastAnimationUpdate = 0, this._container = e65.container, this._viewingMode = e65.viewingMode, this._initializeContext(e65), this.addHandles([l6(() => {
      var _a;
      return (_a = this.waterTextureRepository) == null ? void 0 : _a.updating;
    }, () => this.requestRender(), h3), l6(() => e65.view.qualityProfile, (e66) => {
      var _a;
      return (_a = this.renderer) == null ? void 0 : _a.updateRenderFeature(e66);
    }, w3), this._magnifierHelper.events.on("request-render", () => this.requestRender())]);
    const { memoryController: t68 } = e65.view.resourceController;
    this.stippleTextureRepository = a29(this._rctx, t68), this.markerTextureRepository = o59(this._rctx, t68), this._shaderTechniqueRepository = new r29({ rctx: this._rctx, viewingMode: e65.viewingMode, stippleTextureRepository: this.stippleTextureRepository, waterTextureRepository: this.waterTextureRepository, markerTextureRepository: this.markerTextureRepository }), this._textureRepository = new m43(e65, this._shaderTechniqueRepository, this._rctx), this.addHandles(this._textureRepository.events.on("changed", (e66) => this.requestRender(e66))), this._materialRepository = new s28(this._textureRepository, this._shaderTechniqueRepository, () => this.requestRender(), () => this.requestRender()), this._compositingHelper = new d49(this._rctx, this._shaderTechniqueRepository), this.renderer = new oe9(e65, this._materialRepository, this._textureRepository, this._shaderTechniqueRepository, this._rctx, this._compositingHelper, this._magnifierHelper, (e66) => this.requestRender(e66));
    const i60 = { renderScene: (e66, t69, r62, i61, s69) => this.renderer.render(e66, t69, r62, i61, s69), requestRenderScene: (e66) => this.requestRender(e66), prepareOverlay: () => e65.options.screenshot.prepareOverlay(), renderOverlay: (t69, r62) => e65.options.screenshot.renderOverlay(t69, r62) };
    this._screenshotManager = new g35(this._rctx, i60, (e66) => this.events.emit("force-camera-for-screenshot", e66), () => this.renderer.disposeOffscreenBuffers()), this._registerFrameTask(e65);
  }
  normalizeCtorArgs() {
    return {};
  }
  destroy() {
    this._container.contains(this._canvas) && this._container.removeChild(this._canvas), this._frameTask = o(this._frameTask), this._shaderTechniqueRepository = l(this._shaderTechniqueRepository);
  }
  requestRender(e65 = O4.UPDATE) {
    this._needsRender = true, e65 === O4.UPDATE && (this._needsUpdate = true);
  }
  get updating() {
    return this._needsUpdate || this._needsWaterReflectionUpdate || this.renderer.updating || this._textureRepository.updating || this.waterTextureRepository.updating || this._magnifierHelper.updating;
  }
  get textureRepository() {
    return this._textureRepository;
  }
  get compositingHelper() {
    return this._compositingHelper;
  }
  set magnifier(e65) {
    this._magnifierHelper.magnifier = e65;
  }
  setIdleSuspend(e65) {
    this._idleSuspend !== e65 && (this._idleSuspend = e65, this.requestRender());
  }
  get renderingContext() {
    return this._rctx;
  }
  get capabilities() {
    return this._rctx.capabilities;
  }
  get canvas() {
    return this._canvas;
  }
  takeScreenshot(e65) {
    return this._screenshotManager.takeScreenshot(e65).then((e66) => e66[0]);
  }
  takeScreenshotWithOID(e65) {
    return e65.objectAndLayerIdColor = true, this._screenshotManager.takeScreenshot(e65);
  }
  getAlpha() {
    return !!this._rctx.contextAttributes.alpha;
  }
  getMinimalDepthForArea(e65, t68, r62, i60, s69, o61 = s69) {
    const n77 = i60.constrainWindowSize(t68, r62, s69 * i60.pixelRatio, o61 * i60.pixelRatio), a67 = this._ensureDepthBuffer(n77);
    this.renderer.readDepthPixels(i60, n77, a67);
    let p54 = Number.MAX_VALUE;
    for (let h46 = 0; h46 < n77[2] * n77[3]; h46++) {
      const e66 = A31(4 * h46, a67, i60.nearFar);
      p54 > e66 && e66 !== i60.nearFar[0] && e66 !== i60.nearFar[1] && (p54 = e66);
    }
    if (null != e65) {
      const s70 = e65.pickDepth(t68 * i60.pixelRatio, r62 * i60.pixelRatio, i60);
      null != s70 && p54 > s70 && s70 !== i60.nearFar[0] && s70 !== i60.nearFar[1] && (p54 = s70);
    }
    return p54 === Number.MAX_VALUE ? void 0 : p54;
  }
  _ensureDepthBuffer(e65) {
    const t68 = 4 * e65[2] * e65[3];
    return (null == this._tmpDepthBuffer || this._tmpDepthBuffer.byteLength < t68) && (this._tmpDepthBuffer = new Uint8Array(t68)), this._tmpDepthBuffer;
  }
  async reloadShaders() {
    e47(), await this._shaderTechniqueRepository.reloadAll(), this.requestRender();
  }
  _registerFrameTask(e65) {
    const t68 = e65.view.state;
    let r62 = false, i60 = O4.BACKGROUND, s69 = false;
    const o61 = { preRender: ({ time: s70 }) => {
      r62 = this.updating, i60 = this._needsUpdate ? O4.UPDATE : O4.BACKGROUND, e65.commitSyncLayers();
      const o62 = n4(s70 - this._lastAnimationUpdate);
      if (o62 > this.renderer.animationTimestep || null != t68.forcedAnimationTime || r62 || this._needsRender) {
        const e66 = n4(o62 / this.renderer.animationTimeDilation), r63 = new h11(t68.camera, e66, t68.forcedAnimationTime);
        this.renderer.updateAnimation(r63) && this.requestRender(O4.BACKGROUND), this._lastAnimationUpdate = s70;
      }
    }, render: ({ time: e66 }) => {
      if ((this._needsRender || !this._idleSuspend || !this.renderer.isCameraFinal || this._needsWaterReflectionUpdate) && t68.camera.fullWidth > 0 && t68.camera.fullHeight > 0) {
        const r63 = this._needsUpdate && this._idleSuspend && this.renderer.isCameraFinal;
        this._needsRender = false, this._needsUpdate = false, this._needsWaterReflectionUpdate = false, this.renderer.render(null, null, t68, s19.ON, e66), s69 = true, r63 && this.renderer.hasReflections && (this.requestRender(O4.BACKGROUND), this._needsWaterReflectionUpdate = true);
      }
    }, update: ({ time: e66 }) => {
      const r63 = new p52(t68, this.renderer.hasSlicePlane || this._magnifierHelper.enabled);
      this._textureRepository.update(), this._screenshotManager.update(r63, e66);
    }, finish: () => {
      s69 && (this.renderer.finish(t68.mode === I2.IDLE ? i60 : O4.UPDATE), s69 = false);
    } };
    this._frameTask = A(o61);
  }
  _initializeContext(e65) {
    const t68 = e65.options;
    this._canvas = t68.canvas, this._canvas || (this._canvas = document.createElement("canvas")), this._canvas.setAttribute("style", "width: 100%; height:100%; display:block;");
    const r62 = { alpha: t68.alpha || false, premultipliedAlpha: true, antialias: false, depth: true, stencil: t68.stencil ?? true, powerPreference: "high-performance", preserveDrawingBuffer: t68.preserveDrawingBuffer ?? false }, s69 = o16("3d", this._canvas, r62);
    null != s69 ? (this._rctx = this._newRenderingContext(s69, e65), this._loadShaderOnlyExtensions(), !t68.alpha && this._rctx.contextAttributes.alpha && s3.getLogger(this).error("WebGL context has alpha channel even though no alpha channel was requested"), !this._rctx.contextAttributes.alpha && has("safari") >= 11 && (this._container.style.backgroundColor = "black"), this._container.appendChild(this._canvas)) : s3.getLogger(this).error("A WebGL2 context could not be created.");
  }
  _newRenderingContext(e65, t68) {
    const r62 = { disabledExtensions: t68.options.deactivatedWebGLExtensions || {}, debugWebGLExtensions: t68.options.debugWebGLExtensions || {}, maxAnisotropy: 8 }, i60 = (e66, r63) => t68.view.resourceController.memoryController.newCache(e66, r63);
    if (o60.enabled) {
      let t69 = E38.get(e65);
      return t69 ? (t69.configure(r62), t69.newCache = i60, t69.ref(), t69) : (t69 = new s68(e65, r62, i60), E38.set(e65, t69), t69.ref(), t69);
    }
    return new s68(e65, r62, i60);
  }
  _loadShaderOnlyExtensions() {
    this._rctx.capabilities.enable("textureFloat");
  }
  getObjectAndLayerIdColor(e65) {
    return null != this.objectAndLayerIdRenderHelper ? this.objectAndLayerIdRenderHelper.getObjectAndLayerIdColor(e65) : null;
  }
  get componentObjectCollection() {
    return null == this._componentObjectCollection && (this._componentObjectCollection = new Q13(this.renderer.renderPassManager, this._viewingMode)), this._componentObjectCollection;
  }
  set componentObjectCollection(e65) {
    this._componentObjectCollection = e65;
  }
};
e([y2({ type: Boolean, readOnly: true })], M21.prototype, "updating", null), e([y2({ autoDestroy: true })], M21.prototype, "_rctx", void 0), e([y2({ autoDestroy: true })], M21.prototype, "_container", void 0), e([y2({ autoDestroy: true })], M21.prototype, "_canvas", void 0), e([y2({ autoDestroy: true })], M21.prototype, "stippleTextureRepository", void 0), e([y2({ autoDestroy: true })], M21.prototype, "markerTextureRepository", void 0), e([y2({ autoDestroy: true })], M21.prototype, "waterTextureRepository", void 0), e([y2({ autoDestroy: true })], M21.prototype, "_magnifierHelper", void 0), e([y2({ readOnly: true })], M21.prototype, "objectAndLayerIdRenderHelper", void 0), e([y2({ autoDestroy: true })], M21.prototype, "_textureRepository", void 0), e([y2({ autoDestroy: true })], M21.prototype, "_compositingHelper", void 0), e([y2({ autoDestroy: true, readOnly: true })], M21.prototype, "renderer", void 0), e([y2({ autoDestroy: true })], M21.prototype, "_screenshotManager", void 0), e([y2()], M21.prototype, "componentObjectCollection", null), e([y2({ autoDestroy: true })], M21.prototype, "_componentObjectCollection", void 0), e([y2()], M21.prototype, "_needsUpdate", void 0), e([y2()], M21.prototype, "_needsWaterReflectionUpdate", void 0), M21 = e([a4("esri.views.3d.webgl-engine.parts.RenderView")], M21);
var E38 = t66();

// node_modules/@arcgis/core/views/3d/webgl-engine/Stage.js
var u50 = class extends m {
  constructor(e65) {
    super(e65), this._model = new l55(), this._layers = new l2(), this._asyncChangeSet = new s29(), this._syncChangeSet = new s29(), this._layerSyncSet = /* @__PURE__ */ new Set();
  }
  initialize() {
    this._set("renderView", new M21(this)), this._frameTask = this.view.resourceController.scheduler.registerTask(I3.STAGE, this), this.addHandles(this._frameTask);
  }
  destroy() {
    this.removeAllHandles();
  }
  get viewingMode() {
    return this.view.state.viewingMode;
  }
  get updating() {
    return this.running || this.renderView.updating || this._frameTask.updating;
  }
  get renderer() {
    var _a;
    return (_a = this.renderView) == null ? void 0 : _a.renderer;
  }
  add(e65) {
    this._model.add(e65), n28(e65) && this._addLayer(e65), this.renderView.requestRender();
  }
  remove(e65) {
    null == e65 || this.destroyed || (this._model.remove(e65), n28(e65) && this._removeLayer(e65), this.renderView.requestRender());
  }
  addMany(e65) {
    null != e65 && (this._model.addMany(e65), this.renderView.requestRender());
  }
  removeMany(e65) {
    var _a, _b;
    null != e65 && ((_a = this._model) == null ? void 0 : _a.removeMany(e65), (_b = this.renderView) == null ? void 0 : _b.requestRender());
  }
  async load(e65, r62) {
    null != e65 && (Array.isArray(e65) || (e65 = [e65]), await Promise.all(e65.filter((e66) => null == e66.glTexture).map((e66) => this.schedule(() => this._model.has(e66) ? e66.load(this.renderView.renderingContext) : null), r62)));
  }
  loadImmediate(e65) {
    return e65.load(this.renderView.renderingContext);
  }
  forEachOfType(e65, r62) {
    this._model.forEachOfType(e65, r62);
  }
  handleEvent(e65, r62) {
    this.destroyed || (this._model.dirtySet[e65](r62), this.renderView.requestRender());
  }
  get running() {
    return this._model.dirtySet.dirty || !this._asyncChangeSet.empty;
  }
  runTask(e65) {
    this._frameTask.processQueue(e65), this._commit(e65);
  }
  _commit(e65) {
    const r62 = this._model.dirtySet;
    this._asyncChangeSet.empty || e65.done || (this.renderer.modify(this._asyncChangeSet, e65), this.renderView.requestRender(), e65.madeProgress()), this._layers.forAll((t68) => {
      if (e65.done)
        return;
      const s69 = this._layerSyncSet.has(t68.id) || t68.updatePolicy === C9.SYNC, i60 = s69 ? this._syncChangeSet : this._asyncChangeSet;
      r62.commitLayer(t68.id, i60), this._layerSyncSet.delete(t68.id), i60.empty || (this.renderer.modify(i60, s69 ? C4 : e65), this.renderView.requestRender(), e65.madeProgress());
    }), this._syncChangeSet.empty || (this.renderer.modify(this._syncChangeSet, C4), this.renderView.requestRender(), e65.madeProgress()), this._layers.forAll((t68) => {
      e65.done || this._layerSyncSet.has(t68.id) || t68.updatePolicy !== C9.ASYNC || (r62.commitLayer(t68.id, this._asyncChangeSet), this._asyncChangeSet.empty || (this.renderer.modify(this._asyncChangeSet, e65), this.renderView.requestRender(), e65.madeProgress()));
    }), this._layerSyncSet.clear(), this.notifyChange("running");
  }
  commitSyncLayers() {
    const e65 = this._model.dirtySet;
    this._layers.forAll((r62) => {
      (this._layerSyncSet.has(r62.id) || r62.updatePolicy === C9.SYNC) && (e65.commitLayer(r62.id, this._syncChangeSet), this._layerSyncSet.delete(r62.id));
    });
    for (const r62 of this._layerSyncSet)
      e65.commitLayer(r62, this._syncChangeSet);
    this._layerSyncSet.clear(), this._syncChangeSet.empty || (this.renderer.modify(this._syncChangeSet, C4), this.renderView.requestRender());
  }
  _commitLayer(e65) {
    this._model.dirtySet.commitLayer(e65.id, this._syncChangeSet), this._layerSyncSet.delete(e65.id), this._syncChangeSet.empty || (this.renderer.modify(this._syncChangeSet, C4), this.renderView.requestRender());
  }
  schedule(e65, r62) {
    return this._frameTask.schedule(e65, r62);
  }
  reschedule(e65, r62) {
    return this._frameTask.reschedule(e65, r62);
  }
  syncLayer(e65) {
    this._layerSyncSet.add(e65), this.renderView.requestRender();
  }
  getObject(e65) {
    return this._model.getObject(e65);
  }
  get layers() {
    return this._layers;
  }
  _addLayer(e65) {
    this._layers.includes(e65) || this._layers.push(e65);
  }
  _removeLayer(e65) {
    this._commitLayer(e65), null != this._layers.removeUnordered(e65) && (this._model.dirtySet.getResidentRenderGeometries(e65.id, this._syncChangeSet.removes), this.renderer.modify(this._syncChangeSet, C4));
  }
  addRenderPlugin(e65, r62, t68) {
    const i60 = this.renderer.renderPlugins.add(e65, r62, t68), n77 = () => {
      E30(r62) && this.view.sceneIntersectionHelper.addIntersectionHandler(r62);
    };
    if (T(i60))
      return i60.then(n77);
    n77();
  }
  removeRenderPlugin(e65) {
    this.destroyed || (E30(e65) && this.view.sceneIntersectionHelper.removeIntersectionHandler(e65), this.renderer.renderPlugins.remove(e65));
  }
  get performanceInfo() {
    return { renderer: this.renderer.performanceInfo, model: this._model.getStats() };
  }
  get test() {
    const e65 = this;
    return { getCount: (r62) => e65._model.test.content.filter((e66) => e66.type === r62).length, model: e65._model };
  }
};
u50.DebugSettings = { endFrameContentValidation: false }, e([y2({ constructOnly: true })], u50.prototype, "view", void 0), e([y2({ constructOnly: true })], u50.prototype, "options", void 0), e([y2({ readOnly: true })], u50.prototype, "viewingMode", null), e([y2({ constructOnly: true })], u50.prototype, "container", void 0), e([y2({ readOnly: true })], u50.prototype, "updating", null), e([y2({ constructOnly: true })], u50.prototype, "_model", void 0), e([y2({ autoDestroy: true })], u50.prototype, "renderView", void 0), e([y2({ readOnly: true })], u50.prototype, "renderer", null), e([y2({ readOnly: true })], u50.prototype, "running", null), u50 = e([a4("esri.views.3d.webgl-engine.Stage")], u50);

// node_modules/@arcgis/core/views/support/hitTestSelectUtils.js
async function t67(t68, e65) {
  if ("2d" === t68.type)
    return t68.hitTest(e65);
  const r62 = await t68.hitTest(e65);
  if (0 === r62.results.length)
    return r62;
  const s69 = (r62.results[0].distance ?? 0) * (1 + n76), i60 = r62.results.findIndex((t69) => (t69.distance ?? 0) > s69);
  return -1 !== i60 && (r62.results = r62.results.slice(0, i60)), r62;
}
var n76 = 0.05;

// node_modules/@arcgis/core/views/ui/3d/DefaultUI3D.js
var e64 = class extends h19 {
  constructor(o61) {
    super(o61), this.components = ["attribution", "zoom", "navigation-toggle", "compass"];
  }
};
e([y2()], e64.prototype, "components", void 0), e64 = e([a4("esri.views.ui.3d.DefaultUI3D")], e64);
var p53 = e64;

// node_modules/@arcgis/core/views/SceneView.js
var nt4 = class extends w11(w12(C7(z6))) {
  constructor(e65) {
    super(e65), this._userClippingArea = null, this._clippingArea = null, this._initialDefaultSpatialReference = null, this._defaults = {}, this._externallySet = { environment: false }, this._createGraphicsViewController = null, this._resolveWhenReady = [], this._propertiesPool = new o25({ slicePlane: G6 }, this), this._resourceController = T23(this), this._defaultToMapOptions = { include: /* @__PURE__ */ new Set() }, this._defaultHitTestOptions = { exclude: /* @__PURE__ */ new Set() }, this.deconflictor = new _24({ view: this }), this.labeler = new F12({ view: this, deconflictor: this.deconflictor.labels }), this.sharedSymbolResources = null, this.analyses = new t21(), this.basemapTerrain = null, this.elevationProvider = null, this.canvas = null, this.constraints = new c24(), this.environmentManager = new k9(), this.floors = new V2(), this.fullOpacity = 1, this.graphicsView = null, this.analysisViewManager = new v13({ view: this }), this.groundView = null, this.map = null, this.screenSizePerspectiveEnabled = true, this.state = new f35(), this.spatialReference = null, this.alphaCompositingEnabled = false, this.preserveDrawingBufferEnabled = false, this.supersampleScreenshotsEnabled = true, this.type = "3d", this.ui = new p53(), this._numUpdating = 0, this._lastUpdateTime = 0, this.updatingProgress = 0.5, this.highlightOptions = new f36(), this.voxelWasm = null, this.voxelWasmPromise = null, c8(), e65 && e65.environment || (this._defaults.environment = new f24(), this.environment = this._defaults.environment);
    const t68 = (e66 = null) => {
      null != e66 && e66.type === E3.MOVE || (this._updatingChanged(), this.map && this.map.allLayers.forEach(async (e67) => {
        try {
          await e67.when();
        } catch {
        }
        this._updatingChanged();
      }));
    };
    this.addHandles([a8(() => {
      var _a;
      return (_a = this.map) == null ? void 0 : _a.allLayers;
    }, "after-changes", (e66) => t68(e66), { onListenerAdd: () => t68(), onListenerRemove: () => t68(), sync: true }), this.allLayerViews.on("after-changes", (e66) => this._updateUpdatingMonitors(e66)), l6(() => this.map, (e66) => {
      e66 && "load" in e66 && e66.load && e66.load().catch(() => {
      });
    })]), this.inputManager = new N12({ view: this }), this.stateManager = new J9({ view: this });
  }
  initialize() {
    this.groundView = new d26({ view: this }), this._updateUpdatingMonitors();
    const e65 = () => this._updateDefaultToMapOptions();
    this.addHandles(a8(() => {
      var _a;
      return (_a = this.map) == null ? void 0 : _a.allLayers;
    }, "after-changes", e65, { onListenerAdd: e65, onListenerRemove: e65 })), this.updatingHandles.add(() => this.qualitySettings.memoryLimit, (e66) => {
      this.resourceController && (this.resourceController.memoryController.maxMemory = e66);
    }, h3), this.updatingHandles.add(() => this.qualitySettings.additionalCacheMemory, (e66) => {
      this.resourceController && (this.resourceController.memoryController.additionalCacheMemory = e66);
    }, h3), this.updatingHandles.add(() => this.qualitySettings.frameRate ?? 0, (e66) => F(e66 > 0 ? 1e3 / Math.ceil(e66) : 0), h3), this.updatingHandles.add(() => {
      var _a;
      return (_a = this.map) == null ? void 0 : _a.ground;
    }, e65, w3), this.updatingHandles.add(() => {
      var _a, _b;
      return (_b = (_a = this.map) == null ? void 0 : _a.ground) == null ? void 0 : _b.opacity;
    }, () => this._updateDefaultHitTestOptions(), w3), this.addHandles(l6(() => this.spatialReference, () => this.notifyChange("clippingArea"), U3));
  }
  destroy() {
    var _a;
    this.destroyed || (this.updatingHandles.removeAll(), this.removeAllHandles(), this.invalidate(), this.activeTool = null, this.layerViewManager.clear(), this._exitSurface(), this._disposeGraphicsView(), this.sharedSymbolResources = l(this.sharedSymbolResources), this._set("labeler", l(this.labeler)), this._set("deconflictor", l(this.deconflictor)), this._resourceController = l(this._resourceController), this._set("stateManager", l(this.stateManager)), this._set("inputManager", l(this.inputManager)), this.state.destroy(), this._propertiesPool.destroy(), this.removeHandles("updatingMonitors"), this._set("environmentManager", l(this.environmentManager)), this.groundView = l(this.groundView), this._exitBasemapTerrain(), (_a = this._stage) == null ? void 0 : _a.destroy(), this.removeAllHandles(), this.updatingHandles.removeAll(), this.handles.removeAll());
  }
  get renderSpatialReference() {
    return this.renderCoordsHelper && this.renderCoordsHelper.spatialReference;
  }
  get basemapSpatialReference() {
    var _a;
    return (_a = this.basemapTerrain) == null ? void 0 : _a.spatialReference;
  }
  get animation() {
    var _a;
    return (_a = this.state) == null ? void 0 : _a.animation;
  }
  get camera() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.camera;
  }
  set camera(e65) {
    this.stateManager && (this.stateManager.camera = e65);
  }
  get contentCamera() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.contentCamera;
  }
  set contentCamera(e65) {
    this.stateManager && (this.stateManager.contentCamera = e65);
  }
  installContentCameraReset(e65 = { sticky: false }) {
    return this.stateManager.installContentCameraReset(e65);
  }
  get center() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.center;
  }
  set center(e65) {
    this.stateManager && (this.stateManager.center = e65);
  }
  get clippingArea() {
    var _a;
    if ("global" === this.viewingMode)
      return null;
    let e65 = this._userClippingArea || ("clippingArea" in this.map ? (_a = this.map) == null ? void 0 : _a.clippingArea : void 0);
    return !this._userClippingArea && !this.get("map.clippingEnabled") || null == e65 ? (this._clippingArea = null, null) : e65 instanceof M2 ? this.spatialReference && (e65 = lt4(e65, this.spatialReference), null == e65) ? (s3.getLogger(this).error("#clippingArea", "setting clippingArea with incompatible SpatialReference"), this._clippingArea) : (e65 = e65.clone(), null == e65.intersection(this._groundAndLayersExtent) && (e65.xmin = e65.xmax, e65.ymin = e65.ymax), e65.zmin = void 0, e65.zmax = void 0, e65.equals(this._clippingArea) || (this._clippingArea = e65), this._clippingArea) : (s3.getLogger(this).error("#clippingArea", "only clippingArea geometries of type Extent are supported"), this._clippingArea);
  }
  set clippingArea(e65) {
    this.ready && "global" === this.viewingMode && null != e65 ? s3.getLogger(this).error("#clippingArea=", "Clipping area is only supported in local viewingMode") : this._userClippingArea = e65;
  }
  get renderDataExtent() {
    if (this.state.viewingMode === l13.Global)
      return null;
    const e65 = this.renderSpatialReference, t68 = this.dataExtent;
    return null == t68 || null == e65 || t68.spatialReference.equals(e65) ? t68 : lt4(t68, e65);
  }
  get dataExtent() {
    let e65 = this._groundAndLayersExtent;
    const t68 = this.spatialReference || f3.WGS84, i60 = lt4(this.clippingArea, t68);
    null != i60 && (e65 = null != e65 ? e65.intersection(i60) : i60);
    const r62 = this._get("dataExtent");
    return null != e65 && e65.equals(r62) ? r62 : e65;
  }
  get _groundAndLayersExtent() {
    const e65 = this.spatialReference || f3.WGS84;
    let t68;
    const i60 = (i61) => {
      const r63 = lt4(i61, e65);
      null != r63 && (null != t68 ? t68.union(r63) : t68 = r63.clone());
    }, r62 = this.basemapTerrain;
    if (r62 == null ? void 0 : r62.spatialReference) {
      const e66 = r62.groundExtent;
      i60(new M2({ xmin: e66[0], ymin: e66[1], zmin: 0, xmax: e66[2], ymax: e66[3], zmax: 0, spatialReference: r62.spatialReference }));
    }
    if (this.map) {
      const e66 = (e67) => {
        null == e67.fullExtent || "graphics" === e67.type && e67.internal || i60(e67.fullExtent);
      };
      this.map.allLayers.forEach((t69) => e66(t69));
    }
    if (null == t68)
      return null;
    t68.hasZ ? (t68.zmin = Math.min(0, t68.zmin ?? 0), t68.zmax = Math.max(0, t68.zmax ?? 0)) : (t68.zmin = 0, t68.zmax = 0);
    const s69 = this._get("_groundAndLayersExtent");
    return t68.equals(s69) ? s69 : t68;
  }
  set environment(e65) {
    e65 !== this._defaults.environment && (this._externallySet.environment = true), this._set("environment", e65);
  }
  castEnvironment(e65) {
    return e65 ? e65 instanceof f24 ? e65 : e65 instanceof j8 ? null != this.environment ? this.environment.cloneWithWebsceneEnvironment(e65) : f24.fromWebsceneEnvironment(e65) : d2(f24, e65) : new f24();
  }
  get extent() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.extent;
  }
  set extent(e65) {
    this.stateManager && (this.stateManager.extent = e65);
  }
  get screenCenter() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.screenCenter;
  }
  get frustum() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.frustum;
  }
  get initialExtentRequired() {
    return this.stateManager && !this.stateManager.hasInitialView;
  }
  get _defaultsFromMapSettings() {
    return { required: { tileInfo: false, heightModelInfo: true, extent: false } };
  }
  get interacting() {
    var _a;
    return this.navigating || (((_a = this.toolViewManager) == null ? void 0 : _a.interacting) ?? false);
  }
  get stationary() {
    return !this.animation && !this.resizing && (null == this.state || this.state.stationary);
  }
  get navigating() {
    var _a;
    return ((_a = this.state) == null ? void 0 : _a.navigating) ?? false;
  }
  get padding() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.padding;
  }
  set padding(e65) {
    this.stateManager && (this.stateManager.padding = e65);
  }
  set qualityProfile(e65) {
    o48.isValidProfile(e65) && (o48.apply(e65, this.qualitySettings), this._set("qualityProfile", e65));
  }
  get qualityProfile() {
    return this._get("qualityProfile") || o48.getDefaultProfile();
  }
  set slicePlane(e65) {
    if (null != this._stage && this._stage.renderer.setParameters({ slicePlane: e65 }), null == e65)
      return void this._set("slicePlane", null);
    const t68 = this._propertiesPool.get("slicePlane");
    Z2(e65, t68), this._set("slicePlane", t68);
  }
  get typeSpecificPreconditionsReady() {
    return !!this.viewingMode;
  }
  get resolution() {
    return null != this.spatialReference ? r27(this.scale, this.spatialReference) : 0;
  }
  get scale() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.scale;
  }
  set scale(e65) {
    this.stateManager && (this.stateManager.scale = e65);
  }
  get heightModelInfo() {
    const e65 = this.getDefaultHeightModelInfo();
    return null != e65 ? v6.deriveUnitFromSR(e65, this.spatialReference) : null;
  }
  get updating() {
    var _a, _b, _c;
    if (this.destroyed)
      return false;
    let e65 = 0, t68 = this.layerViewManager.updating, i60 = t68 ? this.layerViewManager.updatingRemaining : 0;
    this.allLayerViews.forEach((r63) => {
      if (r63.isFulfilled()) {
        if (r63.updating) {
          if (t68 = true, r63.suspended || N3(r63))
            return;
          ++i60, e65 += r63.updatingProgress;
        }
      } else
        ++i60;
    });
    for (const s69 of this._updatingObjects)
      if (null != s69 && s69.updating) {
        const t69 = 0.1;
        i60 += t69, e65 += 0.5 * t69;
      }
    for (const s69 of this._updatingObjectsWithProgress)
      null != s69 && s69.updating && (++i60, e65 += s69.updatingProgress);
    const r62 = !this.stateManager.test.updatingIgnoreRenderState && this.state.updating;
    if (t68 = !!(t68 || i60 > 0 || this.updatingHandles.updating || !this.ready || !this.stationary || r62 || this._createGraphicsViewController || ((_a = this.inputManager) == null ? void 0 : _a.updating) || ((_c = (_b = this.map) == null ? void 0 : _b.allLayers) == null ? void 0 : _c.some((e66) => !e66.isFulfilled()))), t68 ? (this._numUpdating = Math.max(i60, this._numUpdating), e65 += this._numUpdating - i60) : this._numUpdating = 0, this._numUpdating > 0 ? e65 /= this._numUpdating : e65 = t68 ? 0 : 1, this._get("updatingProgress") !== e65) {
      const i61 = performance.now();
      if (e65 < 1) {
        const t69 = Math.min((i61 - this._lastUpdateTime) / 2e3, 1);
        e65 = this.updatingProgress * (1 - t69) + e65 * t69;
      }
      this._set("updatingProgress", e65), this._lastUpdateTime = t68 && e65 < 1 ? i61 : 0;
    }
    return t68;
  }
  get _updatingObjects() {
    return [this.graphicsView, this.basemapView, this._resourceController, this._stage, this.featureTiles, this.pointsOfInterest, this.environmentManager, this.overlay, this._featureTreeDebugger, this.toolViewManager, this.analysisViewManager];
  }
  get _updatingObjectsWithProgress() {
    return [this.deconflictor, this.labeler, this.basemapTerrain];
  }
  get viewingMode() {
    var _a;
    const e65 = this._predeterminedViewingMode;
    if (null != e65)
      return a18(e65);
    const t68 = this.spatialReference;
    return t68 ? null != ((_a = this.defaultsFromMap) == null ? void 0 : _a.viewingMode) && t68.equals(this.defaultsFromMap.spatialReference) ? a18(this.defaultsFromMap.viewingMode) : r46(t68, l13.Global) ? "global" : "local" : "global";
  }
  set viewingMode(e65) {
    this.ready ? s3.getLogger(this).error("#viewingMode", "viewingMode cannot be set once view is ready") : this._overrideIfSome("viewingMode", e65);
  }
  get viewpoint() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.viewpoint;
  }
  set viewpoint(e65) {
    this.stateManager && (this.stateManager.viewpoint = e65);
  }
  get zoom() {
    return this.stateManager.zoom;
  }
  set zoom(e65) {
    this.stateManager && (this.stateManager.zoom = e65);
  }
  get resourceController() {
    return this._resourceController;
  }
  get performanceInfo() {
    return new s55(this);
  }
  on(e65, t68, i60, r62) {
    const s69 = this.viewEvents.on(e65, t68, i60, r62);
    return s69 || super.on(e65, t68);
  }
  hasEventListener(e65) {
    return super.hasEventListener(e65) || this.viewEvents.hasHandler(e65);
  }
  toMap(e65, t68) {
    if (!this.ready)
      return s3.getLogger(this).error("#toMap()", "Scene view cannot be used before it is ready"), null;
    const i60 = t68 ? this.externalToInternalIntersectOptions(t68) : this._defaultToMapOptions, r62 = null != i60.graphics && (null != i60.graphics.include || null != i60.graphics.exclude), s69 = o26(e65) ? r28(this, e65) : e65, n77 = d6(s69);
    i60.enableDraped = i60.include && !i60.include.has(L4) || i60.exclude && i60.exclude.has(L4);
    const a67 = this.sceneIntersectionHelper, o61 = A14(this.state.viewingMode);
    if (o61.options.selectionMode = true, o61.options.store = r62 ? t25.ALL : t25.MIN, a67.intersectIntersectorScreen(n77, o61, i60), r62) {
      for (const e66 of o61.results.all) {
        const t69 = d17(e66, this);
        if (null == t69)
          return this._intersectResultToMapPoint(e66);
        if ("graphic" !== t69.type || this._testGraphicUidFilter(i60.graphics, t69.graphic))
          return this._intersectResultToMapPoint(e66);
      }
      return null;
    }
    return this._intersectResultToMapPoint(o61.results.min);
  }
  toScreen(e65) {
    if (!this.ready)
      return s3.getLogger(this).error("#toScreen()", "Scene view cannot be used before it is ready"), null;
    const t68 = (null == e65.z ? a28(this.elevationProvider, e65) : null) ?? 0;
    return In(e65, ht4, this.renderSpatialReference, t68), this.state.camera.projectToScreen(ht4, dt3), c4(dt3[0], dt3[1]);
  }
  pixelSizeAt(e65) {
    return this.ready ? e65 ? (In(e65, ht4, this.renderSpatialReference), this.state.camera.computeScreenPixelSizeAt(ht4)) : 0 : (s3.getLogger(this).error("#pixelSizeAt()", "Scene view cannot be used before it is ready"), null);
  }
  overlayPixelSizeInMapUnits(e65) {
    const t68 = this.basemapTerrain.overlayManager;
    return t68 ? t68.overlayPixelSizeInMapUnits(e65) : 1;
  }
  hitTest(e65, t68) {
    if (!this.ready)
      return s3.getLogger(this).error("#hitTest()", "Scene view cannot be used before it is ready"), null;
    const i60 = o26(e65) ? r28(this, e65) : e65, r62 = i8(i60.x, i60.y), s69 = t68 ? this.externalToInternalIntersectOptions(t68) : this._defaultHitTestOptions;
    s69.requiresGroundFeedback = true, s69.enableDraped = true;
    const n77 = A14(this.state.viewingMode);
    n77.options.selectionMode = true, n77.options.store = t25.ALL, this.sceneIntersectionHelper.intersectIntersectorScreen(r62, n77, s69);
    const a67 = this._intersectResultsToHits(n77.results.all, s69.graphics), o61 = n77.results.ground, l63 = f18(o61, this), p54 = null != l63 && "type" in l63 && "integrated-mesh" === l63.type ? l63 : null, h46 = { screenPoint: i60, results: a67, ground: { mapPoint: this._intersectResultToMapPoint(o61), distance: o28(o61) ? o61.distanceInRenderSpace : 0, layer: p54 } };
    return t19.SCENEVIEW_HITTEST_RETURN_INTERSECTOR && (h46.intersector = n77), Promise.resolve(h46);
  }
  async popupHitTest(e65) {
    const { results: t68, ground: i60 } = await t67(this, e65);
    let r62 = null;
    return !(0 === t68.length || Math.abs((t68[0].distance ?? 0) - i60.distance) < 1e-5) || i60.layer && "integrated-mesh" === i60.layer.type || (r62 = i60.mapPoint), { results: t68, screenPoint: e65, mapPoint: r62 };
  }
  goTo(e65, t68) {
    return this.updatingHandles.addPromise(this.stateManager.goTo(e65, t68));
  }
  async whenAnalysisView(e65) {
    if (null == e65.parent)
      throw new s4("view:no-analysisview-for-analysis", "The analysis has not been added to view.analyses", { analysis: e65 });
    switch (e65.parent.type) {
      case "line-of-sight":
      case "dimension":
        return (await this.whenLayerView(e65.parent)).whenAnalysisView();
      default:
        return this.analysisViewManager.whenAnalysisView(e65);
    }
  }
  whenLayerView(e65) {
    return super.whenLayerView(e65);
  }
  async takeScreenshot(e65) {
    const t68 = this._completeSettings(e65);
    await this.whenReady();
    const i60 = await this._stage.renderView.takeScreenshot(t68);
    return a34(i60, t68, this._pixelFormat());
  }
  async _takeScreenshot(e65) {
    const t68 = this._completeSettings(e65);
    await this.whenReady();
    const i60 = await this._stage.renderView.takeScreenshot(t68);
    return r39(i60, this._pixelFormat());
  }
  async _takeScreenshotWithObjectAndLayerId(e65) {
    const t68 = this._completeSettings(e65);
    await this.whenReady();
    const i60 = await this._stage.renderView.takeScreenshotWithOID(t68);
    return [r39(i60[0], this._pixelFormat()), r39(i60[1], this._pixelFormat())];
  }
  _completeSettings(e65) {
    const t68 = n39(e65, this);
    return t68.pixelRatio /= this.state.pixelRatio, M6(t68, this.supersampleScreenshotsEnabled, this.padding);
  }
  _pixelFormat() {
    return { flipY: true, premultipliedAlpha: this._stage.renderView.getAlpha() };
  }
  get test() {
    return { takeScreenshot: (e65) => this._takeScreenshot(e65), takeScreenshotWithObjectAndLayerId: (e65) => this._takeScreenshotWithObjectAndLayerId(e65) };
  }
  async takeScreenshotWithObjectAndLayerId(e65) {
    if (!has("enable-feature:objectAndLayerId-rendering"))
      throw new Error("has enable-feature:objectAndLayerId-rendering must be true");
    const t68 = this._completeSettings(e65);
    await this.whenReady();
    const i60 = await this._stage.renderView.takeScreenshotWithOID(t68), r62 = a34(i60[0], t68, this._pixelFormat()), s69 = this._completeSettings(e65);
    s69.format = "png";
    return [r62, a34(i60[1], s69, this._pixelFormat())];
  }
  getColorToObjectAndLayerIdMapping() {
    if (null == this._stage.renderView.objectAndLayerIdRenderHelper)
      throw new Error("has enable-feature:objectAndLayerId-rendering must be true");
    return this._stage.renderView.objectAndLayerIdRenderHelper.getColorToObjectAndLayerIdMapping();
  }
  addUpdatingPromise(e65) {
    return this.updatingHandles.addPromise(e65);
  }
  importLayerView(e65) {
    return l27.importLayerView(e65);
  }
  hasLayerViewModule(e65) {
    return l27.hasLayerViewModule(e65);
  }
  forceDOMReadyCycle() {
    this.forceReadyCycle();
  }
  getDefaultSpatialReference() {
    var _a, _b, _c, _d;
    return this.map && "initialViewProperties" in this.map && ((_b = (_a = this.map) == null ? void 0 : _a.initialViewProperties) == null ? void 0 : _b.spatialReference) || ((_c = this.defaultsFromMap) == null ? void 0 : _c.spatialReference) || ((_d = this.defaultsFromMap) == null ? void 0 : _d.ready) && this._initialDefaultSpatialReference || null;
  }
  async validate() {
    let e65 = i30(this.type);
    const t68 = has("safari");
    if (t68 && t68 < 9 && (e65 = new s4("sceneview:browser-not-supported", "This browser is not supported by SceneView (Safari < 9)", { type: "safari", requiredVersion: 9, detectedVersion: t68 })), null != e65)
      throw s3.getLogger(this).warn("#validate()", e65.message), e65;
  }
  get _predeterminedViewingMode() {
    var _a;
    const e65 = this._isOverridden("viewingMode") ? this._get("viewingMode") : (this.map && "initialViewProperties" in this.map ? (_a = this.map.initialViewProperties) == null ? void 0 : _a.viewingMode : null) ?? null;
    return null != e65 ? o14(e65) : null;
  }
  getSpatialReferenceSupport({ spatialReference: e65, layer: t68 }) {
    const i60 = this._predeterminedViewingMode;
    if (null != i60)
      return this._validateSpatialReferenceForViewingMode(e65, t68, i60) ? { constraints: this._makeSpatialReferenceConstraints(e65, t68, i60) } : null;
    const r62 = this._validateSpatialReferenceForViewingMode(e65, t68, l13.Local), s69 = this._validateSpatialReferenceForViewingMode(e65, t68, l13.Global);
    return r62 || s69 ? r62 && s69 ? { constraints: this._makeSpatialReferenceConstraints(e65, t68, null) } : r62 ? { constraints: this._makeSpatialReferenceConstraints(e65, t68, l13.Local) } : { constraints: this._makeSpatialReferenceConstraints(e65, t68, l13.Global) } : null;
  }
  _validateSpatialReferenceForViewingMode(e65, t68, i60) {
    return !!r46(e65, i60) && (null == t68 || (!!f7(t68) || (!s15(t68) || null != b3(t68, e65, i60)) && (!l7(t68) || i60 !== l13.Global)));
  }
  _makeSpatialReferenceConstraints(e65, t68, i60) {
    if (null == t68)
      return [{ spatialReference: e65, viewingMode: i60 }];
    const r62 = e65.isWebMercator, s69 = e65.isWGS84;
    if (f7(t68) && (r62 || s69)) {
      return !s69 || i60 === l13.Local || null === C8(t68.tileInfo, t68.fullExtent, e65, l13.Global) ? [{ spatialReference: e65, viewingMode: i60 }, { spatialReference: f3.WebMercator, viewingMode: i60 }] : [{ spatialReference: r62 ? f3.WGS84 : f3.WebMercator, viewingMode: i60 }];
    }
    return s15(t68) || l7(t68) || !r62 && !s69 ? s15(t68) && r62 && i60 !== l13.Global ? [{ spatialReference: e65, viewingMode: i60 }, { spatialReference: f3.WGS84, viewingMode: l13.Local }] : [{ spatialReference: e65, viewingMode: i60 }] : [{ spatialReference: e65, viewingMode: i60 }, { spatialReference: r62 ? f3.WGS84 : f3.WebMercator, viewingMode: i60 }];
  }
  _validateSpatialReference(e65) {
    const t68 = null != this.getSpatialReferenceSupport({ spatialReference: e65 }), i60 = this._predeterminedViewingMode;
    return t68 || (null != i60 ? s3.getLogger(this).warnOnce(`Spatial reference defined on view not supported in ${a18(i60)} viewing mode.`) : e65.isGeographic && s3.getLogger(this).warnOnce("Spatial reference is geographic but not supported.")), t68;
  }
  whenReady() {
    return new Promise((e65) => {
      this.ready ? e65(this) : this._resolveWhenReady.push(e65);
    });
  }
  computeMapPointFromVec3d(e65, t68) {
    let i60 = this.spatialReference || f3.WGS84;
    return Hn(e65, this.renderSpatialReference, e65, i60) || (i60 = f3.WGS84, Hn(e65, this.renderSpatialReference, e65, i60)), t68 ? (t68.x = e65[0], t68.y = e65[1], t68.z = e65[2], t68.spatialReference = i60) : t68 = new x4(e65, i60), t68;
  }
  trackGraphicState(e65) {
    if (!e65.graphic)
      return s3.getLogger(this).error("trackGraphicState", "GraphicState.graphic must not be null or undefined to start tracking"), null;
    const t68 = this.getViewForGraphic(e65.graphic);
    let i60 = null, r62 = false;
    const s69 = (t69) => {
      var _a;
      !r62 && null != t69 && "processor" in t69 && "graphics-3d" === ((_a = t69.processor) == null ? void 0 : _a.type) && t69.processor.graphicsCore && (i60 = t69.processor.graphicsCore.trackGraphicState(e65));
    };
    return null != t68 ? s69(t68) : this.whenViewForGraphic(e65.graphic, { waitForLayer: true }).then((e66) => s69(e66), () => {
    }).catch(() => {
    }), { remove: () => {
      r62 = true, null != i60 && (i60.remove(), i60 = null);
    } };
  }
  highlight(e65) {
    if (Array.isArray(e65))
      return n2(e65.map((e66) => this.highlight(e66)));
    if (V2.isCollection(e65))
      return n2(e65.toArray().map((e66) => this.highlight(e66)));
    const t68 = this.getViewForGraphic(e65);
    return t68 && "highlight" in t68 ? t68.highlight(e65) : e3();
  }
  maskOccludee(e65) {
    if (!e65)
      return s3.getLogger(this).error("maskOccludee", "GraphicState.graphic must not be null or undefined to mask an occludee"), null;
    const t68 = this.getViewForGraphic(e65);
    let i60 = null, r62 = false;
    const s69 = (t69) => {
      !r62 && null != t69 && e25(t69) && (i60 = t69.maskOccludee(e65));
    };
    return null != t68 ? s69(t68) : this.whenViewForGraphic(e65, { waitForLayer: true }).then((e66) => s69(e66), () => {
    }).catch(() => {
    }), { remove: () => {
      r62 = true, null != i60 && (i60.remove(), i60 = null);
    } };
  }
  getViewForGraphic(e65) {
    return e65.layer === this.graphics ? this.graphicsView : e65.layer ? this.allLayerViews.find((t68) => t68.layer === e65.layer) : null;
  }
  graphicChanged(e65) {
    null != this.graphicsView && this.graphicsView.graphicChanged(e65);
  }
  async whenViewForGraphic(e65, t68) {
    if (e65.layer === this)
      return await j4(() => this.graphicsView), this.graphicsView;
    if (!e65.layer || !this.map)
      throw new s4("no-view-for-graphic");
    return t68 && t68.waitForLayer && !this.map.allLayers.includes(e65.layer) ? new Promise((t69, i60) => {
      const r62 = this.map.allLayers.on("change", (s69) => {
        s69.added.includes(e65.layer) && (r62.remove(), this.whenLayerView(e65.layer).then(t69, i60));
      });
    }) : this.whenLayerView(e65.layer);
  }
  externalToInternalIntersectOptions(e65) {
    const t68 = this._externalToInternalRenderItems(e65.include, pt3.INCLUDE), i60 = this._externalToInternalRenderItems(e65.exclude, pt3.EXCLUDE);
    return { include: t68.layerUids, exclude: i60.layerUids, graphics: { include: t68.graphicUids, exclude: i60.graphicUids } };
  }
  _intersectResultToMapPoint(e65, t68) {
    return e65.getIntersectionPoint(ht4) ? (t68 = this.computeMapPointFromVec3d(ht4, t68), e65.intersector === i20.TERRAIN && this.basemapTerrain && (t68.z = a28(this.basemapTerrain, t68) ?? 0), t68) : null;
  }
  _intersectResultsToHits(e65, t68) {
    const i60 = new Array();
    let r62 = null;
    for (let s69 = 0; s69 < e65.length; s69++) {
      const n77 = e65[s69], a67 = f18(n77, this);
      if (null != a67 && (a67 === this.map.ground || "type" in a67 && "integrated-mesh" === a67.type))
        break;
      const o61 = d17(n77, this);
      if (null == o61)
        continue;
      if ("graphic" === o61.type) {
        if (null == r62 && s69 !== e65.length - 1 && (r62 = /* @__PURE__ */ new Set()), null != r62) {
          const e66 = this._getGraphicFilterUid(o61.graphic);
          if (r62.has(e66))
            continue;
          r62.add(e66);
        }
        if (!this._testGraphicUidFilter(t68, o61.graphic))
          continue;
      }
      const l63 = this._intersectResultToMapPoint(n77), p54 = n77.distanceInRenderSpace;
      i60.push({ ...o61, mapPoint: l63, distance: p54 });
    }
    return i60;
  }
  _getGraphicFilterUid(e65) {
    var _a;
    const t68 = e65.sourceLayer, i60 = e65.layer, r62 = t68 && "objectIdField" in t68 ? t68 : i60 && "objectIdField" in i60 ? i60 : t68;
    if (r62) {
      const t69 = r62.objectIdField ?? o24, i61 = (_a = e65.attributes) == null ? void 0 : _a[t69];
      if (i61)
        return `o-${r62.id}-${i61}`;
    }
    return `u-${e65.uid}`;
  }
  _testGraphicUidFilter(e65, t68) {
    const i60 = this._getGraphicFilterUid(t68);
    return null == e65 || (null == e65.include || e65.include.has(i60)) && (null == e65.exclude || !e65.exclude.has(i60));
  }
  _externalToInternalRenderItems(e65, t68, r62 = { layerUids: void 0, graphicUids: void 0 }) {
    if (!e65)
      return r62;
    if (e65 instanceof h14)
      ot5(r62, this._getGraphicFilterUid(e65)), t68 === pt3.INCLUDE && (null != this.graphicsView && e65.layer === this ? at4(r62, this.graphicsView.processor.layer.id) : e65.layer && at4(r62, e65.layer.uid));
    else if (t(e65))
      for (const i60 of e65)
        i60 === this.graphics && null != this.graphicsView ? at4(r62, this.graphicsView.processor.layer.id) : i60 === this.map.ground ? at4(r62, L4) : this._externalToInternalRenderItems(i60, t68, r62);
    else
      "uid" in e65 && at4(r62, e65.uid);
    return r62;
  }
  _initBasemapTerrain() {
    this._set("basemapTerrain", new lt3({ view: this })), this._set("elevationProvider", new c43({ view: this })), this.elevationProvider.register("ground", this.basemapTerrain);
  }
  _exitBasemapTerrain() {
    this.basemapTerrain && (this.elevationProvider.unregister(this.basemapTerrain), this.elevationProvider.destroy(), this._set("elevationProvider", null), this.basemapTerrain.destroy(), this._set("basemapTerrain", null));
  }
  _initGlobe() {
    this._initCoordinateSystem(), this.state.createInitialCamera(), this._initBasemapTerrain(), this._set("pointsOfInterest", new P21({ view: this })), this._set("featureTiles", new x26({ renderCoordsHelper: this.renderCoordsHelper, cameraOnSurface: this.pointsOfInterest.cameraOnSurface, focus: this.pointsOfInterest.focus, tilingSchemeOwner: this.basemapTerrain, viewState: this.state, scheduler: this._resourceController.scheduler, terrain: this.basemapTerrain }));
    const e65 = () => {
      var _a;
      const e66 = (_a = this.basemapTerrain) == null ? void 0 : _a.extent;
      if (this.clippingArea || e66)
        if (e66 && this.basemapTerrain.spatialReference) {
          const e67 = null != this.basemapTerrain.extent && null != this.basemapTerrain.spatialReference ? nn(c2(this.basemapTerrain.extent, this.basemapTerrain.spatialReference), this.spatialReference) : null;
          null != this.clippingArea ? this.featureTiles.filterExtent = this.clippingArea.intersection(e67) : this.featureTiles.filterExtent = e67;
        } else
          this.featureTiles.filterExtent = this.clippingArea;
      else
        this.featureTiles.filterExtent = null;
    };
    this.addHandles([this.updatingHandles.add(() => t19.FEATURE_TILE_TREE_SHOW_TILES, (e66) => {
      e66 && this.featureTiles && !this._featureTreeDebugger ? this.updatingHandles.addPromise(import("./FeatureTileTree3DDebugger-QRATP4R6.js")).then(({ FeatureTileTree3DDebugger: e67 }) => {
        !this._featureTreeDebugger && t19.FEATURE_TILE_TREE_SHOW_TILES && (this._featureTreeDebugger = new e67({ view: this }));
      }) : e66 || !this._featureTreeDebugger || t19.FEATURE_TILE_TREE_SHOW_TILES || (this._featureTreeDebugger.destroy(), this._featureTreeDebugger = null);
    }, w3), this.updatingHandles.add(() => this.clippingArea, e65, w3), this.updatingHandles.add(() => this.basemapTerrain.extent, e65, w3)], "feature-tiles"), this.stateManager.init();
  }
  _exitGlobe() {
    this.state && (this.stateManager.exit(), this.removeHandles("render-coords-helper"), this.removeHandles("feature-tiles"), this.featureTiles.destroy(), this._set("featureTiles", null), this.pointsOfInterest.destroy(), this._set("pointsOfInterest", null), this._exitBasemapTerrain(), this.state.exit(), this._exitCoordinateSystem());
  }
  _initCoordinateSystem() {
    if (this.spatialReference) {
      const e65 = this.spatialReference;
      this.mapCoordsHelper && this.mapCoordsHelper.spatialReference.equals(e65) || this._set("mapCoordsHelper", new a50(this.map, e65));
      const t68 = this.state.isGlobal, i60 = F10(t68, e65);
      i60 !== this.renderSpatialReference && (this._set("renderCoordsHelper", U7.create(this.state.viewingMode, i60)), t68 || this.addHandles(l6(() => {
        var _a;
        return (_a = this.basemapTerrain) == null ? void 0 : _a.extent;
      }, (e66) => {
        const t69 = this.renderCoordsHelper.spatialReference;
        null == e66 || 0 === e66[0] && 0 === e66[1] && 0 === e66[2] && 0 === e66[3] || !kn(e66, this.basemapTerrain.spatialReference, ct4, t69) || (this.renderCoordsHelper.extent = ct4);
      }, U3), "render-coords-helper"), this.sceneIntersectionHelper && this.sceneIntersectionHelper.setTolerance(w14 / this.renderCoordsHelper.unitInMeters));
    } else
      this._set("mapCoordsHelper", null), this._set("renderCoordsHelper", null);
  }
  _exitCoordinateSystem() {
    this.mapCoordsHelper && (this.removeHandles("render-coords-helper"), this._set("renderCoordsHelper", null), this._set("mapCoordsHelper", null));
  }
  _updatingChanged() {
    this.notifyChange("updating");
  }
  _updateUpdatingMonitors(e65 = null) {
    null != e65 && e65.type === E3.MOVE || (this.removeHandles("updatingMonitors"), this.allLayerViews.forEach((e66) => {
      e66.destroyed || (this.addHandles(l6(() => [e66.updating, e66.updatingProgress], () => this._updatingChanged(), U3), "updatingMonitors"), e66.when(() => this._updatingChanged(), () => this._updatingChanged()));
    }), this._updatingChanged());
  }
  async _prepareScreenshotOverlay() {
    this.overlay && await this.overlay.prepare();
  }
  _renderScreenshotOverlay(e65, t68) {
    if (!this.overlay || !this.overlay.hasVisibleItems)
      return t68;
    const i60 = e65.getContext("2d");
    return i60.putImageData(t68, 0, 0), this.overlay.renderCanvas(e65), i60.getImageData(0, 0, t68.width, t68.height);
  }
  _initStage() {
    const e65 = { deactivatedWebGLExtensions: this.deactivatedWebGLExtensions, debugWebGLExtensions: this.debugWebGLExtensions, alpha: this.alphaCompositingEnabled, preserveDrawingBuffer: this.preserveDrawingBufferEnabled, canvas: this.renderCanvas, screenshot: { prepareOverlay: () => this._prepareScreenshotOverlay(), renderOverlay: (e66, t69) => this._renderScreenshotOverlay(e66, t69) } }, t68 = new b19(this.state.viewingMode, (e66) => this._stage.layers.forAll(e66), this);
    this._set("sceneIntersectionHelper", t68);
    const i60 = e10(this.surface);
    this._stage = new u50({ view: this, options: e65, container: i60 }), this._stage.renderer.setParameters({ slicePlane: this.slicePlane }), this.addHandles([this.updatingHandles.add(() => this.qualitySettings.antialiasingEnabled, () => this._stage.renderer.setParameters({ antialiasingEnabled: this.qualitySettings.antialiasingEnabled }), h3), this.updatingHandles.add(() => this.qualitySettings.highQualityTransparency, (e66) => this._stage.renderer.setParameters({ highQualityTransparency: e66 }), h3), l6(() => this.magnifier, (e66) => this._stage.renderView.magnifier = e66, w3), this.on("pointer-move", () => {
      var _a;
      return (_a = this._stage) == null ? void 0 : _a.renderer.resetAnimation();
    }), r2(this._stage.renderView.canvas, "webglcontextlost", (e66) => this.fatalError = new s4("webgl-context-lost", e66.statusMessage))], "stage");
    const r62 = () => {
      this._stage.renderer.setParameters({ defaultHighlightOptions: f36.toEngineOptions(this.highlightOptions) });
    };
    this.addHandles(this.updatingHandles.add(() => [this.highlightOptions.color, this.highlightOptions.haloColor, this.highlightOptions.haloOpacity, this.highlightOptions.fillOpacity, this.highlightOptions.shadowOpacity, this.highlightOptions.shadowColor, this.highlightOptions.shadowDifference], r62), "stage"), r62(), this.renderCoordsHelper && this.sceneIntersectionHelper.setTolerance(w14 / this.renderCoordsHelper.unitInMeters), this._set("canvas", this._stage.renderView.canvas);
  }
  _exitStage() {
    this._set("sceneIntersectionHelper", null), this._stage = l(this._stage), this.removeHandles("stage"), this._set("canvas", null);
  }
  _initSurface(e65) {
    this._exitSurface(), this.state.init(e65, this.spatialReference), this._initStage(), this._initGlobe(), this.sharedSymbolResources = new S18({ view: this, viewingMode: e65, resourceController: this._resourceController, pointsOfInterest: this.pointsOfInterest, viewState: this.state });
  }
  _exitSurface() {
    this.sharedSymbolResources && (this.sharedSymbolResources.objectResourceCache.destroy(), this.sharedSymbolResources.destroy(), this.sharedSymbolResources = null, this._exitGlobe(), this._exitStage());
  }
  _createGraphicsViewIfNeeded() {
    if (this.graphicsView || this._createGraphicsViewController)
      return;
    if (0 === this.graphics.length)
      return;
    this.removeHandles("graphics-view"), this._createGraphicsViewController = new AbortController();
    const e65 = () => {
      this._createGraphicsViewController = null, this._updatingChanged();
    };
    this._createGraphicsViewAsync(this._createGraphicsViewController.signal).then(e65, e65), this._updatingChanged();
  }
  async _createGraphicsViewAsync(e65) {
    const t68 = (await import("./GraphicsView3D-HLIV5JWM.js")).default;
    s6(e65), await j4(() => {
      var _a;
      return (_a = this.basemapTerrain) == null ? void 0 : _a.ready;
    }, e65), this._set("graphicsView", new t68({ view: this }));
  }
  _disposeGraphicsView() {
    this._createGraphicsViewController && (this._createGraphicsViewController.abort(), this._createGraphicsViewController = null), this.removeHandles("graphics-view"), null != this.graphicsView && (this.removeHandles(this.graphicsView.processor.layer.id), this.graphicsView.destroy(), this._set("graphicsView", null));
  }
  _startup() {
    const e65 = o14(this.viewingMode);
    if (e65 === l13.Global && (this._clippingArea = null), this._initSurface(e65), this._set("ready", true), this.addHandles(a8(() => this.graphics, "after-changes", () => this._createGraphicsViewIfNeeded()), "graphics-view"), this._createGraphicsViewIfNeeded(), !this._externallySet.environment) {
      const e66 = this.get("map.initialViewProperties.environment");
      e66 && (this.environment = e66);
    }
    this.labeler.setup(), this.environmentManager.connectView(this), this.inputManager.connect();
    const t68 = this._resolveWhenReady;
    this._resolveWhenReady = [], t68.forEach((e66) => e66(this));
  }
  _teardown() {
    this._initialDefaultSpatialReference = null, this.inputManager.disconnect(), this.environmentManager.disconnectView(), this.labeler.dispose(), this._disposeGraphicsView(), this.removeHandles("graphics-view"), this._exitSurface(), this._set("ready", false);
  }
  _updateDefaultToMapOptions() {
    if (this._defaultToMapOptions.include.clear(), this.map) {
      this.map.ground && this._defaultToMapOptions.include.add(L4);
      for (const e65 of this.map.allLayers.items)
        "integrated-mesh" === e65.type && this._defaultToMapOptions.include.add(e65.uid);
    }
  }
  _updateDefaultHitTestOptions() {
    if (this._defaultHitTestOptions.exclude.clear(), this.map) {
      this.map.ground && this.map.ground.opacity < 1 && this._defaultHitTestOptions.exclude.add(L4);
      for (const e65 of this.map.allLayers.items)
        "integrated-mesh" === e65.type && e65.opacity < 1 && this._defaultHitTestOptions.exclude.add(e65.uid);
    }
  }
  addVoxelLayerViewToWasm(e65) {
    return null == this.voxelWasm ? (null == this.voxelWasmPromise && (this.voxelWasmPromise = import("./VoxelWasmPerSceneView-FJVK7RUA.js").then((e66) => (this.voxelWasm = new e66.default(this), this.voxelWasm))), this.voxelWasmPromise.then((t68) => t68.addVoxelLayer(e65))) : this.voxelWasm.addVoxelLayer(e65);
  }
  removeVoxelLayerViewFromWasm(e65) {
    if (null != this.voxelWasm) {
      this.voxelWasm.removeVoxelLayer(e65) < 1 && (this.voxelWasm = null, this.voxelWasmPromise = null);
    }
  }
};
function at4(e65, t68) {
  e65.layerUids || (e65.layerUids = /* @__PURE__ */ new Set()), e65.layerUids.add(t68);
}
function ot5(e65, t68) {
  e65.graphicUids || (e65.graphicUids = /* @__PURE__ */ new Set()), e65.graphicUids.add(t68);
}
function lt4(e65, t68) {
  return null != e65 && Cn(e65.spatialReference, t68) ? nn(e65, t68) : null;
}
var pt3;
nt4.type = "3d", e([y2()], nt4.prototype, "_userClippingArea", void 0), e([y2()], nt4.prototype, "_resourceController", void 0), e([y2()], nt4.prototype, "_stage", void 0), e([y2({ readOnly: true })], nt4.prototype, "deconflictor", void 0), e([y2({ readOnly: true })], nt4.prototype, "labeler", void 0), e([y2(p10(t21, "analyses"))], nt4.prototype, "analyses", void 0), e([y2({ type: a25, readOnly: true })], nt4.prototype, "animation", null), e([y2({ readOnly: true })], nt4.prototype, "basemapTerrain", void 0), e([y2({ readOnly: true })], nt4.prototype, "elevationProvider", void 0), e([y2()], nt4.prototype, "camera", null), e([y2({ type: d4 })], nt4.prototype, "contentCamera", null), e([y2({ readOnly: true })], nt4.prototype, "canvas", void 0), e([y2({ type: x4 })], nt4.prototype, "center", null), e([y2({ type: M2 })], nt4.prototype, "clippingArea", null), e([y2({ type: c24 })], nt4.prototype, "constraints", void 0), e([y2({ type: M2, readOnly: true })], nt4.prototype, "renderDataExtent", null), e([y2({ type: M2, readOnly: true })], nt4.prototype, "dataExtent", null), e([y2({ type: M2, readOnly: true })], nt4.prototype, "_groundAndLayersExtent", null), e([y2({ value: null, type: f24 })], nt4.prototype, "environment", null), e([s11("environment")], nt4.prototype, "castEnvironment", null), e([y2({ readOnly: true })], nt4.prototype, "environmentManager", void 0), e([y2({ type: M2 })], nt4.prototype, "extent", null), e([y2()], nt4.prototype, "floors", void 0), e([y2()], nt4.prototype, "screenCenter", null), e([y2()], nt4.prototype, "frustum", null), e([y2({ type: Number, readOnly: true })], nt4.prototype, "fullOpacity", void 0), e([y2({ readOnly: true })], nt4.prototype, "graphicsView", void 0), e([y2({ readOnly: true })], nt4.prototype, "analysisViewManager", void 0), e([y2()], nt4.prototype, "groundView", void 0), e([y2({ type: Boolean })], nt4.prototype, "initialExtentRequired", null), e([y2()], nt4.prototype, "_defaultsFromMapSettings", null), e([y2()], nt4.prototype, "interacting", null), e([y2()], nt4.prototype, "stationary", null), e([y2()], nt4.prototype, "navigating", null), e([y2()], nt4.prototype, "map", void 0), e([y2({ readOnly: true })], nt4.prototype, "mapCoordsHelper", void 0), e([y2()], nt4.prototype, "padding", null), e([y2({ type: P21, readOnly: true })], nt4.prototype, "pointsOfInterest", void 0), e([y2({ type: x26, readOnly: true })], nt4.prototype, "featureTiles", void 0), e([y2()], nt4.prototype, "_featureTreeDebugger", void 0), e([y2({ type: Boolean })], nt4.prototype, "screenSizePerspectiveEnabled", void 0), e([y2({ constructOnly: true })], nt4.prototype, "deactivatedWebGLExtensions", void 0), e([y2({ constructOnly: true })], nt4.prototype, "debugWebGLExtensions", void 0), e([y2({ constructOnly: true })], nt4.prototype, "renderCanvas", void 0), e([y2({ constructOnly: true })], nt4.prototype, "state", void 0), e([y2({ readOnly: true })], nt4.prototype, "inputManager", void 0), e([y2({ readOnly: true })], nt4.prototype, "stateManager", void 0), e([y2({ type: ["low", "medium", "high"] })], nt4.prototype, "qualityProfile", null), e([y2({ type: u37, get() {
  let e65 = this._get("qualitySettings");
  return e65 || (e65 = new u37(), o48.apply(this.qualityProfile, e65)), e65;
} })], nt4.prototype, "qualitySettings", void 0), e([y2()], nt4.prototype, "slicePlane", null), e([y2({ readOnly: true })], nt4.prototype, "typeSpecificPreconditionsReady", null), e([y2({ readOnly: true })], nt4.prototype, "renderCoordsHelper", void 0), e([y2({ readOnly: true })], nt4.prototype, "sceneIntersectionHelper", void 0), e([y2({ type: Number, dependsOn: ["scale", "spatialReference"], readOnly: true })], nt4.prototype, "resolution", null), e([y2({ type: Number })], nt4.prototype, "scale", null), e([y2()], nt4.prototype, "heightModelInfo", null), e([y2()], nt4.prototype, "spatialReference", void 0), e([y2({ type: Boolean, constructOnly: true })], nt4.prototype, "alphaCompositingEnabled", void 0), e([y2({ constructOnly: true })], nt4.prototype, "preserveDrawingBufferEnabled", void 0), e([y2({ type: Boolean })], nt4.prototype, "supersampleScreenshotsEnabled", void 0), e([y2({ readOnly: true })], nt4.prototype, "type", void 0), e([y2(), s11((e65) => e65 instanceof h19 ? e65 : v2(p53, e65))], nt4.prototype, "ui", void 0), e([y2({ type: Boolean, readOnly: true, dependsOn: ["graphicsView.updating", "basemapView.updating", "basemapTerrain.updating", "layerViewManager.updating", "layerViewManager.updatingRemaining", "_resourceController.updating", "_stage.updating", "featureTiles.updating", "pointsOfInterest.updating", "environmentManager.updating", "overlay.updating", "updatingHandles.updating", "featureTreeDebugger.updating", "labeler.updating", "deconflictor.updating", "ready", "stationary", "inputManager.updating", "toolViewManager.updating", "analysisViewManager.updating", "state.updating"] })], nt4.prototype, "updating", null), e([y2()], nt4.prototype, "_updatingObjects", null), e([y2()], nt4.prototype, "_updatingObjectsWithProgress", null), e([y2({ type: Number, readOnly: true, dependsOn: ["updating"] })], nt4.prototype, "updatingProgress", void 0), e([y2({ type: ["global", "local"] })], nt4.prototype, "viewingMode", null), e([y2({ type: l17 })], nt4.prototype, "viewpoint", null), e([y2({ type: Number })], nt4.prototype, "zoom", null), e([y2({ type: f36 })], nt4.prototype, "highlightOptions", void 0), nt4 = e([a4("esri.views.SceneView")], nt4), function(e65) {
  e65[e65.INCLUDE = 0] = "INCLUDE", e65[e65.EXCLUDE = 1] = "EXCLUDE";
}(pt3 || (pt3 = {}));
var ht4 = n7();
var dt3 = i8();
var ct4 = i5();
var ut4 = nt4;
export {
  ut4 as default
};
//# sourceMappingURL=@arcgis_core_views_SceneView__js.js.map
